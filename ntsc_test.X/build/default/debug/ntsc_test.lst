MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  13:34:39         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001     include p12f1572.inc
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Sep 13 2016
                      00005 ;  MPASM PIC12F1572 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2016 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01601         LIST
                      00002     
                      00003     radix dec
                      00004     errorlevel 0, -302, -305
                      00005     
8007   3FE7           00006     __config _CONFIG1, _FOSC_ECH&_WDTE_OFF
8008   1EFF           00007     __config _CONFIG2, _PLLEN_OFF&_LVP_OFF 
                      00008 
  01312D00            00009 FOSC equ 20000000 ; 20Mhz
  00000032            00010 TC equ 50 ; nanosecondes 
  004C4B40            00011 FCY equ FOSC/4    ; 5Mhz
  000000C8            00012 TCY equ 200 ; nanoseconds
                      00013 
                      00014 
  00000030            00015 XSIZE equ 48  ; horizontal pixels
  00000020            00016 YSIZE equ 32  ; vertical pixels
  00000006            00017 BPL equ XSIZE/8 ; bytes per line 
  000000C0            00018 BUFFER_SIZE equ  YSIZE*BPL  ; video buffer size
  00002030            00019 VIDEO_BUFFER equ 0x2000+(3*80-BUFFER_SIZE) ; buffer address
  00000028            00020 VERT_DLY equ 40
  0000003C            00021 FIRST_VIDEO equ VERT_DLY+20  ; first video output line
  000000BB            00022 LAST_VIDEO equ FIRST_VIDEO+4*YSIZE-1  ; last video output line
  0000019A            00023 PIXEL_TXREG equ TXREG
  00000011            00024 TX_PIR equ PIR1
  00000050            00025 HORZ_DLY equ 16*5  ; there is 5 TCY/µsec
                      00026  
  00000001            00027 VIDEO_OUT equ RA1
  0000010C            00028 VIDEO_LAT equ LATA
  00000002            00029 SYNC_OUT equ RA2 
  00000DB3            00030 SYNC_PWMDCL equ PWM3DCL ; duty cycle low byte
  00000DB4            00031 SYNC_PWMDCH equ PWM3DCH ; high byte    
  00000DB5            00032 SYNC_PWMPRL equ PWM3PRL ; pwm period low byte
  00000DB6            00033 SYNC_PWMPRH equ PWM3PRH ; high byte 
  00000DB1            00034 SYNC_PWMPH equ PWM3PH ; pwm phase
  00000DB7            00035 SYNC_PWMOF equ PWM3OF ; pwm offset
  00000DB9            00036 SYNC_PWMTMR equ PWM3TMR ; timer
  00000DBB            00037 SYNC_PWMCON equ PWM3CON ; control SFR
  00000DBE            00038 SYNC_PWMCLKCON equ PWM3CLKCON  ; clock control SFR
  00000DC0            00039 SYNC_PWMOFCON equ PWM3OFCON ; offset control SFR
  00000DBF            00040 SYNC_PWMLDCON equ PWM3LDCON ; load control SFR
  00000006            00041 SYNC_IE equ PWM3IE  ; interrupt enable bit
  00000006            00042 SYNC_IF equ PWM3IF  ; interrupt flag bit
  00000093            00043 SYNC_PIE equ PIE3 ; interrupt enable SFR
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  13:34:39         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000013            00044 SYNC_PIR equ PIR3 ; interrupt flag SFR 
  00000DBC            00045 SYNC_PWMINTE equ PWM3INTE
  00000DBD            00046 SYNC_PWMINTF equ PWM3INTF
                      00047  
  000004F5            00048 HORZ_PERIOD equ FOSC/15748-1 ; 15748 hertz
  0000005E            00049 HORZ_PULSE equ 4700/TC ; 4.7µsec 
  00000106            00050 LAST_LINE equ 262
                      00051 
                      00052 ; game pad resource
                      00053 ; use ADC 
  00000004            00054 PAD_PIN equ ANSA4
  00000003            00055 PAD_CHS equ 3 
  00000000            00056 BTN_UP equ 0
  00000001            00057 BTN_DN equ 1
  00000002            00058 BTN_LT equ 2
  00000003            00059 BTN_RT equ 3
  00000004            00060 BTN_A equ 4
  00000005            00061 BTN_B equ 5
                      00062 ; threshold level for each button
                      00063 ; lower_btn_thr >= BTN_? < btn_thr
                      00064 ; exemple: BTN_UP if RT_THR<=Vadc<UP_THR  
  00000400            00065 VDD equ 1024
  000000D8            00066 DN_THR equ 216 ;(VDD*(6/7+5/6)/2)>>2
  000000D1            00067 LT_THR equ 209 ; (VDD*(5/6+4/5)/2)>>2
  000000C6            00068 UP_THR equ 198 ;(VDD*(4/5+3/4)/2)>>2
  000000B5            00069 RT_THR equ 181 ;(VDD*(3/4+2/3)/2)>>2
  00000095            00070 B_THR  equ 149 ; (VDD*(2/3+1/2)/2)>>2
  00000040            00071 A_THR  equ 64 ;(VDD/4)>>2
                      00072  
                      00073 try_button macro btn, label 
                      00074     movlw btn
                      00075     subwf ADRESH,W
                      00076     skpnc
                      00077     bra label
                      00078     endm
                      00079     
                      00080 ;boolean flags 
  00000000            00081 F_VSYNC equ 0 ; vertical sync active
  00000001            00082 F_EVEN equ 1  ; even field
  00000002            00083 F_MUTEX equ 2 ; video routine lock out
  00000003            00084 F_GTMR equ 3  ; game timer active
  00000004            00085 F_GSTOP equ 4 ; game stopped
  00000005            00086 F_SND equ 5 ; sound timer active 
                      00087  
  000000B4            00088 LFSR_TAPS equ 0xB4 ; xor mask
                      00089  
                      00090 disable_video macro ; lockout video_serialize
                      00091     bsf flags, F_MUTEX
                      00092     endm
                      00093     
                      00094 enable_video macro ; unlock video_serialize
                      00095     bcf flags, F_MUTEX
                      00096     endm
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  13:34:39         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00097     
                      00098 tcyDelay macro n ; delay in TCY cycles  5TCY per µsec.  
                      00099     variable r=n%5
                      00100     variable q=n/5
                      00101     while r>1
                      00102     bra $+1
                      00103 r-=2
                      00104     endw
                      00105     if r==1
                      00106     nop
                      00107     endif
                      00108     if q
                      00109     movlw q
                      00110     bra $+1
                      00111     decfsz WREG
                      00112     bra $-2
                      00113     endif
                      00114     endm
                      00115 
                      00116 case macro n, label
                      00117     xorlw n
                      00118     skpnz
                      00119     bra label
                      00120     xorlw n
                      00121     endm
                      00122  
                      00123 ldpmadr macro addr ; load PMADR register
                      00124     movlw low(addr)
                      00125     movwf PMADRL
                      00126     movlw high(addr)
                      00127     movwf PMADRH
                      00128     endm
                      00129     
                      00130 addpmadr macro value ; add value to PMADR
                      00131     movlw value
                      00132     addwf PMADRL
                      00133     clrw
                      00134     addwfc PMADRH
                      00135     endm
                      00136     
                      00137 start_timer macro value ; start game timer
                      00138     movlw value
                      00139     movwf gtimer
                      00140     bsf flags, F_GTMR
                      00141     endm
                      00142     
                      00143 wait_timer macro ; wait timer expiration
                      00144     btfsc flags, F_GTMR
                      00145     bra $-1
                      00146     endm
                      00147     
                      00148 pause macro value ; suspend execution (busy loop)
                      00149     start_timer value
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  13:34:39         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00150     wait_timer
                      00151     endm
                      00152     
                      00153 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00154 ; software stack for arguments passing
                      00155 ; SP is Stack Pointer
                      00156 ; T is Top Of Stack
                      00157 #define SP FSR1
                      00158 #define T INDF1
  00000020            00159 STACK_SIZE equ 32
                      00160  
  0000001F            00161 S0 equ 0x1F ; stack base address - 1
                      00162 
                      00163 pstack_init macro ; initialise stack pointer
                      00164     clrf FSR1H
                      00165     movlw S0
                      00166     movwf FSR1L
                      00167     endm
                      00168     
                      00169 push macro   ; ( -- n ) push WREG on stack
                      00170     movwi ++SP
                      00171     endm
                      00172 
                      00173 pop macro   ; ( n -- )  pop T in WREG
                      00174     moviw SP--
                      00175     endm
                      00176     
                      00177 drop macro  ; ( n -- ) ; discard T
                      00178    addfsr SP,-1
                      00179    endm
                      00180 
                      00181 drop_n macro n  ; discard n elements  n<32
                      00182     addfsr SP,-n
                      00183     endm
                      00184     
                      00185 lit macro  n ; ( -- n ) ; push a literal
                      00186    movlw n
                      00187    movwi ++SP 
                      00188    endm
                      00189 
                      00190 dup macro ; ( n -- n n ) duplicate T
                      00191     movfw T
                      00192     movwi ++SP
                      00193     endm
                      00194     
                      00195 over macro ; ( n1 n2 -- n1 n2 n1 )
                      00196     moviw -1[SP]
                      00197     push
                      00198     endm
                      00199     
                      00200 swap macro ; exchange WREG and T
                      00201     xorwf T
                      00202     xorwf T,W
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  13:34:39         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00203     xorwf T
                      00204     endm
                      00205  
                      00206 store macro var ; ( n -- ) pop T in variable
                      00207    moviw SP--
                      00208    movwf var
                      00209    endm
                      00210    
                      00211 fetch macro var  ; ( -- n ) push var on stack
                      00212    movfw var
                      00213    movwi ++SP
                      00214    endm
                      00215 
                      00216 pick macro n  ; pick nth element of stack to WREG
                      00217     moviw -n[SP]
                      00218     endm
                      00219 
                      00220 insert macro n ;  insert WREG at position n on stack
                      00221    movwi -n[SP]
                      00222    endm
                      00223    
                      00224 movtw macro ; ( n -- n ) overwrite WREG with T
                      00225    movfw T
                      00226    endm
                      00227    
                      00228 movwt macro ; ( n1 -- n2 ) overwrite T with WREG
                      00229     movwf T
                      00230     endm
                      00231     
                      00232 add macro  ; add WREG to T result on T
                      00233     addwf T,F
                      00234    endm
                      00235    
                      00236 sub macro  ; substract WREG from T result on T
                      00237    subwf T,F
                      00238    endm
                      00239 
                      00240 inc_n macro n ; increament nth element of stack
                      00241     moviw -n[SP]
                      00242     incf WREG,F
                      00243     movwi -n[SP]
                      00244     endm
                      00245     
                      00246 dec_n macro n ; decreament nth element of stack
                      00247     moviw -n[SP]
                      00248     decf WREG,F
                      00249     movwi -n[SP]
                      00250     endm
                      00251     
                      00252 zbranch macro label ; branch if T == 0
                      00253     pop
                      00254     skpnz
                      00255     bra label
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  13:34:39         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00256     endm
                      00257     
                      00258 tbranch macro label ; branch if T != 0
                      00259     pop
                      00260     skpz
                      00261     bra label
                      00262     endm
                      00263     
                      00264 reserve macro n ; reserve n bytes on stack for local variables
                      00265     addfsr SP, n 
                      00266     endm
                      00267  
                      00268 rot macro ; ( n1 n2 n3 -- n2 n3 n1 )
                      00269     pick 2
                      00270     push        ; n1 n2 n3 n1
                      00271     pick 2
                      00272     insert 3   ;  n2 n2 n3 n1
                      00273     pick 1
                      00274     insert 2   ; n2 n3 n3 n1
                      00275     pop        ; n2 n3 n3 
                      00276     movwf T    ; n2 n3 n1
                      00277     endm
                      00278  
                      00279 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00280 ; parameter stack section    
                      00281 dstack udata 0x20
0020                  00282 _stack res 32
                      00283 ; game variables section 
                      00284 game_var udata 0x40 
                      00285 ; tetris game state
0040                  00286 tetrim res 1 ; active tretriminos 
0041                  00287 angle res 1 ; tetriminos rotatation angle in multiple of 90degr. {0:3}
0042                  00288 tx  res 1 ; x coordinate
0043                  00289 ty  res 1 ; y coordinate
0044                  00290 scoreL res 1 ; game score  16 bits
0045                  00291 scoreH res 1 
0046                  00292 dropped res 1 ; dropped lines
                      00293 
                      00294 ; These 3 sections are used for video pixels buffering
                      00295 ; with indirect access using FSR0
                      00296 ; to form a contiguous address space. 
                      00297 vb_b0    udata 0x50
0050                  00298 video_buffer_b0 res 32
                      00299 vb_b1    udata 0xA0
00A0                  00300 video_buffer_b2 res 80
                      00301 vb_b2    udata 0x120
0120                  00302 video_buffer_b3 res 80
                      00303  
                      00304  
                      00305     udata_shr
                      00306 ;scan lines counter 16 bits
0000                  00307 lcountL res 1
0001                  00308 lcountH res 1
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  13:34:39         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00309 ; boolean flags 
0002                  00310 flags res 1
                      00311 ; game timer
0003                  00312 gtimer res 1 
                      00313 ; lfsr PRNG register
0004                  00314 randL res 1 
0005                  00315 randH res 1 
                      00316 ; loop counter
0006                  00317 rcount res 1
                      00318 ; arithmetic accumulator A 24 bits
0007                  00319 accaL res 1
0008                  00320 accaH res 1
                      00321 ; arithmetic accumulator B 16 bits
0009                  00322 accbL res 1
000A                  00323 accbH res 1
                      00324 ; game pad buttons state
000B                  00325 buttons res 1
                      00326 ; flash reader next nibble {0-3}
000C                  00327 nibble res 1
                      00328  
                      00329 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
000D                  00330 rst: 
                      00331     org 0
0000   0023           00332     banksel ANSELA
0001   018C           00333     clrf ANSELA
0002   160C           00334     bsf ANSELA,PAD_PIN
0003   2???           00335     goto init
                      00336     
                      00337     org 4
0004                  00338 isr:
0004   003B           00339     banksel SYNC_PWMINTF
0005   103D           00340     bcf SYNC_PWMINTF,PRIF
0006   1800           00341     btfsc lcountH,0
0007   3???           00342     bra gt_255 ; lcount > 255
0008   08??           00343     movfw lcountL
0009   1903           00344     skpnz
000A   3???           00345     bra vsync_start
000B   3A03           00346     xorlw 3
000C   1903           00347     skpnz
000D   3???           00348     bra vsync_end
000E                  00349 lt_256: ; lcount < 256
000E   1900           00350     btfsc flags, F_MUTEX
000F   3???           00351     bra isr_exit
0010   08??           00352     movfw lcountL
0011   3C3B           00353     sublw FIRST_VIDEO-1
0012   1803           00354     skpnc
0013   3???           00355     bra isr_exit
0014   08??           00356     movfw lcountL
0015   3CBB           00357     sublw LAST_VIDEO
0016   1C03           00358     skpc
0017   3???           00359     bra isr_exit
0018   2???           00360     call video_serialize
0019   3???           00361     bra isr_exit    
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  13:34:39         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001A                  00362 vsync_start: ; scanline 0 start vertical sync pulse
001A   003B           00363     banksel SYNC_PWMDCL
001B   3097           00364     movlw (HORZ_PERIOD-HORZ_PULSE)&0xff
001C   00B3           00365     movwf SYNC_PWMDCL
001D   3004           00366     movlw (HORZ_PERIOD-HORZ_PULSE)>>8
001E   00B4           00367     movwf SYNC_PWMDCH
001F   17BF           00368     bsf SYNC_PWMLDCON,7
0020   1400           00369     bsf flags, F_VSYNC
0021   3???           00370     bra isr_exit
0022                  00371 vsync_end: ; scanline 3 end vertical sync pulse
0022   003B           00372     banksel SYNC_PWMDCL
0023   305E           00373     movlw HORZ_PULSE&0xff
0024   00B3           00374     movwf SYNC_PWMDCL
0025   3000           00375     movlw HORZ_PULSE>>8
0026   00B4           00376     movwf SYNC_PWMDCH
0027   17BF           00377     bsf SYNC_PWMLDCON,7
0028   1000           00378     bcf flags, F_VSYNC
0029   3???           00379     bra isr_exit
002A                  00380 gt_255: ; lcount>255
002A   3006           00381     movlw LAST_LINE&0xff
002B   1C80           00382     btfss flags,F_EVEN
002C   3E01           00383     addlw 1
002D   06??           00384     xorwf lcountL,W
002E   1D03           00385     skpz
002F   3???           00386     bra tasks
0030   01??           00387     clrf lcountL
0031   01??           00388     clrf lcountH
0032   3002           00389     movlw 1<<F_EVEN
0033   06??           00390     xorwf flags,F
0034   0009           00391     retfie
                      00392 ; round robin task scheduler
                      00393 ; each task execute once every 1/60th sec.
                      00394 ; condition:    
                      00395 ;   Task must complete inside
                      00396 ;   horizontal period.
0035                  00397 tasks:
0035   08??           00398     movfw lcountL
                      00399     case 1, task1
0036   3A01               M     xorlw 1
0037   1903               M     skpnz
0038   3???               M     bra task1
0039   3A01               M     xorlw 1
                      00400     case 2, task2
003A   3A02               M     xorlw 2
003B   1903               M     skpnz
003C   3???               M     bra task2
003D   3A02               M     xorlw 2
003E   3???           00401     bra isr_exit
003F                  00402 task1:   
                      00403 ; decrement game timer    
003F   08??           00404     movf gtimer,F ; 
0040   1903           00405     skpnz
0041   3???           00406     bra isr_exit
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  13:34:39         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0042   03??           00407     decf gtimer,F ; 
0043   1903           00408     skpnz
0044   1180           00409     bcf flags, F_GTMR
0045   3???           00410     bra isr_exit ;
0046                  00411 task2:
                      00412 ; rotate lfsr
0046   36??           00413     lsrf randH
0047   0C??           00414     rrf randL
0048   1803           00415     skpnc
0049   30B4           00416     movlw LFSR_TAPS
004A   06??           00417     xorwf randH
004B   3???           00418     bra isr_exit 
004C                  00419 isr_exit:
004C   0A??           00420     incf lcountL
004D   1903           00421     skpnz
004E   0A??           00422     incf lcountH
004F   0009           00423     retfie
                      00424 
                      00425 ;divsion by 10    
                      00426 ;needed to convert binary to BCD
                      00427 ; input:
                      00428 ;   acca dividend  16 bits
                      00429 ; output:
                      00430 ;   acca: quotient
                      00431 ;   accbL: remainder    
0050                  00432 div10:
                      00433     disable_video
0050   1500               M     bsf flags, F_MUTEX
0051   3011           00434     movlw 17
0052   00??           00435     movwf rcount
0053   01??           00436     clrf accbL
0054                  00437 div10_loop:
0054   300A           00438     movlw 10
0055   02??           00439     subwf accbL,W
0056   1803           00440     skpnc
0057   00??           00441     movwf accbL
0058   0D??           00442     rlf accaL
0059   0D??           00443     rlf accaH
005A   0D??           00444     rlf accbL
005B   0B??           00445     decfsz rcount
005C   3???           00446     bra div10_loop
005D   36??           00447     lsrf accbL
                      00448     enable_video
005E   1100               M     bcf flags, F_MUTEX
005F   0008           00449     return
                      00450     
                      00451     
                      00452 ; WREG*6  because BPL=6
                      00453 ; WREG*6=WREG*4+WREG*2    
0060                  00454 mult6: 
0060   00??           00455     movwf accbH
0061   35??           00456     lslf accbH    ; accbH=2*WREG
0062   35??           00457     lslf accbH,W  ; WREG=4*WREG
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  13:34:39         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0063   07??           00458     addwf accbH,W ; WREG=6*WREG
0064   0008           00459     return
                      00460 
                      00461 ;read game pad
                      00462 ; store value in
                      00463 ; buttons
                      00464 ; a button is accepted if
                      00465 ; the Vadc value is below its threshold
0065                  00466 read_pad:
0065   0021           00467     banksel ADCON0
0066   141D           00468     bsf ADCON0,ADON
0067   149D           00469     bsf ADCON0,GO
0068   189D           00470     btfsc ADCON0,NOT_DONE
0069   3???           00471     bra $-1
006A   101D           00472     bcf ADCON0,ADON
                      00473 ; try each button from lower to upper
006B                  00474 try_all:
006B   01??           00475     clrf buttons
006C                  00476 try_a:    
                      00477     try_button A_THR, try_b
006C   3040               M     movlw A_THR
006D   021C               M     subwf ADRESH,W
006E   1803               M     skpnc
006F   3???               M     bra try_b
0070   1600           00478     bsf buttons,BTN_A
0071   0008           00479     return
0072                  00480 try_b:
                      00481     try_button B_THR, try_rt
0072   3095               M     movlw B_THR
0073   021C               M     subwf ADRESH,W
0074   1803               M     skpnc
0075   3???               M     bra try_rt
0076   1680           00482     bsf buttons,BTN_B
0077   0008           00483     return
0078                  00484 try_rt:
                      00485     try_button RT_THR, try_up
0078   30B5               M     movlw RT_THR
0079   021C               M     subwf ADRESH,W
007A   1803               M     skpnc
007B   3???               M     bra try_up
007C   1580           00486     bsf buttons,BTN_RT
007D   0008           00487     return
007E                  00488 try_up:
                      00489     try_button UP_THR, try_lt
007E   30C6               M     movlw UP_THR
007F   021C               M     subwf ADRESH,W
0080   1803               M     skpnc
0081   3???               M     bra try_lt
0082   1400           00490     bsf buttons,BTN_UP
0083   0008           00491     return
0084                  00492 try_lt:
                      00493     try_button LT_THR, try_dn
0084   30D1               M     movlw LT_THR
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  13:34:39         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0085   021C               M     subwf ADRESH,W
0086   1803               M     skpnc
0087   3???               M     bra try_dn
0088   1500           00494     bsf buttons,BTN_LT
0089   0008           00495     return
008A                  00496 try_dn:
                      00497     try_button DN_THR, no_button
008A   30D8               M     movlw DN_THR
008B   021C               M     subwf ADRESH,W
008C   1803               M     skpnc
008D   3???               M     bra no_button
008E   1480           00498     bsf buttons,BTN_DN
008F                  00499 no_button:
008F   0008           00500     return
                      00501     
                      00502     
                      00503 ; serialise video pixels to scan line
                      00504 ; due to timing constrain use specialized 
                      00505 ; division and multiplication    
0090                  00506 video_serialize: 
0090   0804           00507     movfw FSR0L
                      00508     push
0091   001C               M     movwi ++SP
0092   0805           00509     movfw FSR0H
                      00510     push
0093   001C               M     movwi ++SP
                      00511     lit 0 ; ( x )
0094   3000               M    movlw 0
0095   001C               M    movwi ++SP 
                      00512     tcyDelay HORZ_DLY
  0000                    M     variable r=HORZ_DLY%5
  0010                    M     variable q=HORZ_DLY/5
                          M     while r>1
                          M     bra $+1
                          M r-=2
                          M     endw
                          M     if r==1
                          M     nop
                          M     endif
                          M     if q
0096   3010               M     movlw q
0097   3???               M     bra $+1
0098   0B89               M     decfsz WREG
0099   3???               M     bra $-2
                          M     endif
009A   3030           00513     movlw VIDEO_BUFFER&0xff
009B   0084           00514     movwf FSR0L
009C   3020           00515     movlw VIDEO_BUFFER>>8
009D   0085           00516     movwf FSR0H
009E   303C           00517     movlw FIRST_VIDEO
009F   02??           00518     subwf lcountL,W
00A0   3689           00519     lsrf WREG
00A1   3689           00520     lsrf WREG
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  13:34:39         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00A2   2???           00521     call mult6
00A3   0784           00522     addwf FSR0L
00A4   0103           00523     clrw
00A5   3D85           00524     addwfc FSR0H
00A6   3006           00525     movlw XSIZE/8
00A7   00??           00526     movwf rcount
00A8   0023           00527     banksel RCSTA
00A9   179D           00528     bsf RCSTA,SPEN
00AA                  00529 pixels_loop:    
00AA   0012           00530     moviw FSR0++
00AB   0023           00531     banksel PIXEL_TXREG
00AC   009A           00532     movwf PIXEL_TXREG
00AD   0020           00533     banksel TX_PIR
00AE   1E11           00534     btfss TX_PIR,TXIF
00AF   3???           00535     bra $-1
00B0   0B??           00536     decfsz rcount
00B1   3???           00537     bra pixels_loop
00B2   0023           00538     banksel PIXEL_TXREG
00B3   019A           00539     clrf PIXEL_TXREG
00B4   0020           00540     banksel TX_PIR
00B5   1E11           00541     btfss TX_PIR,TXIF
00B6   3???           00542     bra $-1
00B7   0023           00543     banksel RCSTA
00B8   139D           00544     bcf RCSTA, SPEN
                      00545     pop
00B9   0017               M     moviw SP--
00BA   0085           00546     movwf FSR0H
                      00547     pop
00BB   0017               M     moviw SP--
00BC   0084           00548     movwf FSR0L
00BD   0008           00549     return
                      00550 
                      00551 ; fill_buffer
                      00552 ; fill screen buffer with WREG value    
00BE                  00553 fill_buffer: ; ( c -- )
                      00554     disable_video
00BE   1500               M     bsf flags, F_MUTEX
00BF   3020           00555     movlw high(VIDEO_BUFFER)
00C0   0085           00556     movwf FSR0H
00C1   3030           00557     movlw low(VIDEO_BUFFER)
00C2   0084           00558     movwf FSR0L
00C3   30C0           00559     movlw BUFFER_SIZE
                      00560     push    ; c size
00C4   001C               M     movwi ++SP
                      00561     pick 1
00C5   3F7F               M     moviw -1[SP]
00C6                  00562 fill_loop:    
00C6   001A           00563     movwi FSR0++
00C7   0B81           00564     decfsz T
00C8   3???           00565     bra fill_loop
                      00566     drop_n 2
00C9   317E               M     addfsr SP,-2
                      00567     enable_video
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  13:34:39         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00CA   1100               M     bcf flags, F_MUTEX
00CB   0008           00568     return
                      00569 
                      00570 ;set video pointer at 
                      00571 ; byte that contain pixel {x,y}
                      00572 ; output:
                      00573 ;   WREG = pixel offset, 0 left, 7 right  
                      00574 ;   Z=0 if offset==0    
00CC                  00575 set_video_ptr:  ; ( x y -- )
00CC   3020           00576     movlw high(VIDEO_BUFFER)
00CD   0085           00577     movwf FSR0H
00CE   3030           00578     movlw low(VIDEO_BUFFER)
00CF   0084           00579     movwf FSR0L
                      00580 ; buffer_addr+y*BPL
                      00581     pop         ; ( x y -- x )
00D0   0017               M     moviw SP--
00D1   2???           00582     call mult6
00D2   0784           00583     addwf FSR0L
00D3   0103           00584     clrw
00D4   3D85           00585     addwfc FSR0H
                      00586 ; buffer_addr+x/8
00D5   3601           00587     lsrf T,W   
00D6   3689           00588     lsrf WREG
00D7   3689           00589     lsrf WREG
00D8   0784           00590     addwf FSR0L
00D9   0103           00591     clrw
00DA   3D85           00592     addwfc FSR0H
                      00593     pop            
00DB   0017               M     moviw SP--
00DC   3907           00594     andlw 7
00DD   0008           00595     return
                      00596 
                      00597 ;inverse le pixel    
                      00598 ; inputs:
                      00599 ;   {x,y} coordinates
                      00600 ; output:
                      00601 ;   WREG=collision flag    
00DE                  00602 xor_pixel: ; ( x y -- f )
                      00603     disable_video
00DE   1500               M     bsf flags, F_MUTEX
                      00604     pick 1
00DF   3F7F               M     moviw -1[SP]
                      00605     push
00E0   001C               M     movwi ++SP
                      00606     pick 1
00E1   3F7F               M     moviw -1[SP]
                      00607     push        ; x y x y
00E2   001C               M     movwi ++SP
00E3   0804           00608     movfw FSR0L
                      00609     insert 3
00E4   3FFD               M    movwi -3[SP]
00E5   0805           00610     movfw FSR0H
                      00611     insert 2    ; FSR0L FSR0H x y 
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  13:34:39         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00E6   3FFE               M    movwi -2[SP]
00E7   2???           00612     call set_video_ptr  ;FSR0L FSR0H 
                      00613     push        ; FSR0L FSR0H bit
00E8   001C               M     movwi ++SP
00E9   3001           00614     movlw 0x1
00EA   1903           00615     skpnz
00EB   3???           00616     bra xorp01
00EC                  00617 xorp00:
00EC   3589           00618     lslf WREG
00ED   0B81           00619     decfsz T
00EE   3???           00620     bra xorp00
00EF                  00621 xorp01:
00EF   0680           00622     xorwf INDF0
00F0   0500           00623     andwf INDF0,W ; on screen bit value 0|1 for collision detection
00F1   0081           00624     movwf T
                      00625     pick 1  
00F2   3F7F               M     moviw -1[SP]
00F3   0085           00626     movwf FSR0H
                      00627     pick 2
00F4   3F7E               M     moviw -2[SP]
00F5   0084           00628     movwf FSR0L
                      00629     pop  ; collistion flag 0 -> no collision
00F6   0017               M     moviw SP--
                      00630     drop_n 2
00F7   317E               M     addfsr SP,-2
                      00631     push ; return collision flag
00F8   001C               M     movwi ++SP
                      00632     enable_video
00F9   1100               M     bcf flags, F_MUTEX
00FA   0008           00633     return
                      00634 
                      00635 ; draw row of pixels
                      00636 ; draw up to 8 pixels.
                      00637 ; stop when r==0    
                      00638 ; input:
                      00639 ;   {x,y} left coordinates
                      00640 ;   r pixels to draw
                      00641 ;   f collision flag to be modified    
                      00642 ; output:
                      00643 ;   f=collision flag, return modified value   
00FB                  00644 xor_row: ; ( f r x y -- f )
                      00645     pick 2 ; check if r==0
00FB   3F7E               M     moviw -2[SP]
00FC   1903           00646     skpnz
00FD   3???           00647     bra xor_row_done ; r==0 done
00FE   3589           00648     lslf WREG
                      00649     insert 2  ; save shifted r
00FF   3FFE               M    movwi -2[SP]
0100   1C03           00650     skpc
0101   3???           00651     bra xor_row02 ; bit==0 no draw
                      00652     over ; f r x y x 
0102   3F7F               M     moviw -1[SP]
                          M     push
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  13:34:39         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0103   001C               M     movwi ++SP
                      00653     over ; f r x y x y
0104   3F7F               M     moviw -1[SP]
                          M     push
0105   001C               M     movwi ++SP
0106   2???           00654     call xor_pixel ; f r x y fn
                      00655     pick 4 ; pick flag
0107   3F7C               M     moviw -4[SP]
0108   0481           00656     iorwf T
                      00657     pop     
0109   0017               M     moviw SP--
                      00658     insert 3 ; store modified flag
010A   3FFD               M    movwi -3[SP]
010B                  00659 xor_row02:
                      00660     inc_n 1  ; x+=1
010B   3F7F               M     moviw -1[SP]
010C   0A89               M     incf WREG,F
010D   3FFF               M     movwi -1[SP]
010E   3???           00661     bra xor_row
010F                  00662 xor_row_done: ; f r x y
                      00663     drop_n 3  ; only keep f
010F   317D               M     addfsr SP,-3
0110   0008           00664     return
                      00665 
                      00666 ; read flash memory word
                      00667 ; input:
                      00668 ;   lo is low byte of address
                      00669 ;   hi is high byte of address
                      00670 ;   ofs offset in table (limited to 255 )    
                      00671 ; output:
                      00672 ;   PMDATH: PMDAL
                      00673 ;reset <nibble> variable    
0111                  00674 get_flash_word: ; ( ofs lo hi -- )
0111   0023           00675     banksel PMADR
                      00676     pop
0112   0017               M     moviw SP--
0113   0092           00677     movwf PMADRH
                      00678     pop
0114   0017               M     moviw SP--
0115   0091           00679     movwf PMADRL
                      00680     pop
0116   0017               M     moviw SP--
0117   0791           00681     addwf PMADRL
0118   0103           00682     clrw 
0119   3D92           00683     addwfc PMADRH
011A                  00684 read_flash:    
011A   1315           00685     bcf PMCON1,CFGS
011B   1415           00686     bsf PMCON1, RD
011C   0000           00687     nop
011D   0000           00688     nop
011E   01??           00689     clrf nibble
011F   0008           00690     return
                      00691 
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  13:34:39         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00692 ; increament pointer 
                      00693 ; and read next flash word    
0120                  00694 next_flash_word:
0120   0A91           00695     incf PMADRL
0121   1903           00696     skpnz
0122   0A92           00697     incf PMADRH
0123   3???           00698     bra read_flash
                      00699     
                      00700 ;get nibble from PMDAT
                      00701 ; output:
                      00702 ;   stack nibble in bits 7:4
                      00703 ; increment nibble variable    
0124                  00704 get_nibble: ; ( -- nibble )
0124   3003           00705     movlw 3
0125   06??           00706     xorwf nibble,W
0126   1903           00707     skpnz ; if set all nibbles of this word read
0127   2???           00708     call next_flash_word
0128   08??           00709     movfw nibble
0129   1903           00710     skpnz
012A   3???           00711     bra row0
012B   0B89           00712     decfsz WREG
012C   3???           00713     bra row2
012D                  00714 row1:    
012D   0813           00715     movfw PMDATL
012E   3???           00716     bra nibble_mask
012F                  00717 row2:
012F   0E13           00718     swapf PMDATL,W
0130   3???           00719     bra nibble_mask
0131                  00720 row0:    
0131   0E14           00721     swapf PMDATH,W
0132                  00722 nibble_mask:
0132   39F0           00723     andlw 0xf0
                      00724     push
0133   001C               M     movwi ++SP
0134   0A??           00725     incf nibble,F ; advance nibble pointer
0135   0008           00726     return
                      00727 
                      00728 ; print 4 pixels row
                      00729 ; inputs:
                      00730 ;   x,y left coordinates
                      00731 ;   f  collision flag
                      00732 ;   r  row index {0-2}
                      00733 ; advance y coordinate for next row    
0136                  00734 print_row: ; ( x y f -- x y f )     
0136   2???           00735     call get_nibble ; -- x y f n 
                      00736     pick 3 
0137   3F7D               M     moviw -3[SP]
                      00737     push    ; x y f n x
0138   001C               M     movwi ++SP
                      00738     pick 3
0139   3F7D               M     moviw -3[SP]
                      00739     push      ; x y f n x y
013A   001C               M     movwi ++SP
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  13:34:39         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

013B   2???           00740     call xor_row ; -- x y f
                      00741     inc_n 1 ; y+=1
013C   3F7F               M     moviw -1[SP]
013D   0A89               M     incf WREG,F
013E   3FFF               M     movwi -1[SP]
013F   0008           00742     return
                      00743     
                      00744 ; draw character 
                      00745 ; input:
                      00746 ;   x,y left/top coordinates
                      00747 ;   c   character to print    
0140                  00748 print_char: ; ( x y c -- )
0140   3581           00749     lslf T ; 2 words per digit
                      00750     lit low(digits)
0141   30??               M    movlw low(digits)
0142   001C               M    movwi ++SP 
                      00751     lit high(digits) ; x y ofs adrL adrH
0143   30??               M    movlw high(digits)
0144   001C               M    movwi ++SP 
0145   2???           00752     call get_flash_word  ; x y
                      00753     lit 0   ; x y f=0
0146   3000               M    movlw 0
0147   001C               M    movwi ++SP 
0148   2???           00754     call print_row
0149   2???           00755     call print_row
014A   2???           00756     call print_row 
014B   2???           00757     call print_row 
014C   2???           00758     call print_row 
                      00759     drop_n 3  ; ( x y f -- )
014D   317D               M     addfsr SP,-3
014E   0008           00760     return
                      00761 
                      00762 ; print a tetriminos
                      00763 ; input:
                      00764 ;   f collision flag
                      00765 ;   x,y  left/top coordinate
                      00766 ;   t tetriminos identifier
                      00767 ; output:
                      00768 ;   collision flag,  0 if no collision    
014F                  00769 print_tetrim: ; ( x y t  -- f )
014F   3018           00770     movlw 24
0150   0201           00771     subwf T,W
0151   1803           00772     skpnc
0152   3???           00773     bra ti ; I tetrominos
0153   30??           00774     movlw low(tetriminos)
                      00775     push
0154   001C               M     movwi ++SP
0155   30??           00776     movlw high(tetriminos)
                      00777     push
0156   001C               M     movwi ++SP
0157   3???           00778     bra prt01
0158                  00779 ti: ; special treatment for I tetriminos
0158   0081           00780     movwf T
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  13:34:39         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0159   3581           00781     lslf T,F
015A   30??           00782     movlw low(I0)
                      00783     push
015B   001C               M     movwi ++SP
015C   30??           00784     movlw high(I0)
                      00785     push
015D   001C               M     movwi ++SP
015E                  00786 prt01:    
015E   2???           00787     call get_flash_word
                      00788     lit 0
015F   3000               M    movlw 0
0160   001C               M    movwi ++SP 
0161   2???           00789     call print_row ; x y f -- x y+1 f
0162   2???           00790     call print_row
0163   2???           00791     call print_row
0164   0023           00792     banksel PMDAT
0165   3030           00793     movlw 0x30
0166   0514           00794     andwf PMDATH,W
0167   1903           00795     skpnz
0168   2???           00796     call print_row
0169   0801           00797     movfw T
                      00798     insert 2
016A   3FFE               M    movwi -2[SP]
                      00799     drop_n 2  ; -- f
016B   317E               M     addfsr SP,-2
016C   0008           00800     return
                      00801     
                      00802 ;print a text line store in flash
                      00803 ; text terminated by 0xff
                      00804 ; input: 
                      00805 ;  x, y left coordinates
                      00806 ;  idx  index of message    
016D                  00807 print_label: ; ( x y idx -- )
                      00808     lit 0    ; x y idx i
016D   3000               M    movlw 0
016E   001C               M    movwi ++SP 
016F                  00809 prt_lbl_loop:
                      00810     dup      ; x y idx i i
016F   0801               M     movfw T
0170   001C               M     movwi ++SP
                      00811     pick 2   ; WREG=idx
0171   3F7E               M     moviw -2[SP]
0172   2???           00812     call labels ; x y idx i i -- x y idx i  
0173   1B89           00813     btfsc WREG,7
0174   3???           00814     bra prt_lbl_done
                      00815     push ; x y idx i c
0175   001C               M     movwi ++SP
                      00816     pick 4
0176   3F7C               M     moviw -4[SP]
                      00817     push    ; x y idx i c x 
0177   001C               M     movwi ++SP
                      00818     pick 4
0178   3F7C               M     moviw -4[SP]
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  13:34:39         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00819     push    ; x y idx i c x y
0179   001C               M     movwi ++SP
                      00820     rot     ; x y idx i x y c
                          M     pick 2
017A   3F7E               M     moviw -2[SP]
                          M     push        ; n1 n2 n3 n1
017B   001C               M     movwi ++SP
                          M     pick 2
017C   3F7E               M     moviw -2[SP]
                          M     insert 3   ;  n2 n2 n3 n1
017D   3FFD               M    movwi -3[SP]
                          M     pick 1
017E   3F7F               M     moviw -1[SP]
                          M     insert 2   ; n2 n3 n3 n1
017F   3FFE               M    movwi -2[SP]
                          M     pop        ; n2 n3 n3 
0180   0017               M     moviw SP--
0181   0081               M     movwf T    ; n2 n3 n1
0182   2???           00821     call print_char ; -- x y idx i 
0183   0A81           00822     incf T
                      00823     pick 3    ; x
0184   3F7D               M     moviw -3[SP]
0185   3E04           00824     addlw 4   ; x+=4
                      00825     insert 3  
0186   3FFD               M    movwi -3[SP]
0187   3???           00826     bra prt_lbl_loop
0188                  00827 prt_lbl_done:
                      00828     drop_n 4
0188   317C               M     addfsr SP,-4
0189   0008           00829     return
                      00830 
                      00831 ;print an integer
                      00832 ;from right to left ( least first)
                      00833 ; input:    
                      00834 ;   x,y  coordinate right end
                      00835 ;   number to print in acca    
                      00836 ;   accbL contain digit after div10 call    
018A                  00837 print_int: ; ( x y -- )
018A   08??           00838     movfw accaH
018B   04??           00839     iorwf accaL,W
018C   1903           00840     skpnz
018D   3???           00841     bra print_last
                      00842     over
018E   3F7F               M     moviw -1[SP]
                          M     push
018F   001C               M     movwi ++SP
                      00843     over    ; x y x y
0190   3F7F               M     moviw -1[SP]
                          M     push
0191   001C               M     movwi ++SP
0192   2???           00844     call div10
0193   08??           00845     movfw accbL ; remainder of division
                      00846     push   ; x y x y d
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  13:34:39         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0194   001C               M     movwi ++SP
0195   2???           00847     call print_char ; -- x y 
                      00848     pick 1
0196   3F7F               M     moviw -1[SP]
                      00849     push
0197   001C               M     movwi ++SP
0198   3004           00850     movlw 4
0199   0281           00851     subwf T
                      00852     pop
019A   0017               M     moviw SP--
                      00853     insert 1
019B   3FFF               M    movwi -1[SP]
019C   3???           00854     bra print_int
019D                  00855 print_last:
                      00856     pick 1
019D   3F7F               M     moviw -1[SP]
019E   3A2B           00857     xorlw 43
019F   1D03           00858     skpz
01A0   3???           00859     bra no_zero
                      00860     push
01A1   001C               M     movwi ++SP
01A2   3???           00861     bra print_char
01A3                  00862 no_zero:
                      00863     drop_n 2
01A3   317E               M     addfsr SP,-2
01A4   0008           00864     return
                      00865     
                      00866 ; draw horizontal line ( length  y x -- )
                      00867 ; inputs:
                      00868 ;   length of line
                      00869 ;   {x,y} left coordinates       
01A5                  00870 hline:
                      00871     pick 2
01A5   3F7E               M     moviw -2[SP]
01A6   1903           00872     skpnz
01A7   3???           00873     bra hline_done
01A8   0389           00874     decf WREG
                      00875     insert 2
01A9   3FFE               M    movwi -2[SP]
                      00876     dup     ; len y x x
01AA   0801               M     movfw T
01AB   001C               M     movwi ++SP
                      00877     pick 2
01AC   3F7E               M     moviw -2[SP]
                      00878     push    ; len y x x y
01AD   001C               M     movwi ++SP
01AE   2???           00879     call xor_pixel
                      00880     drop
01AF   317F               M    addfsr SP,-1
01B0   0A81           00881     incf T  ; len y x+1
01B1   3???           00882     bra hline
01B2                  00883 hline_done:    
                      00884     drop_n 3
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  13:34:39         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01B2   317D               M     addfsr SP,-3
01B3   0008           00885     return
                      00886 
                      00887 ;draw vertical line ( length x y -- )
                      00888 ; inputs:
                      00889 ;   length of line
                      00890 ;   {x,y} top coordinate
01B4                  00891 vline:  ; len y x
                      00892     pick 2 
01B4   3F7E               M     moviw -2[SP]
01B5   1903           00893     skpnz
01B6   3???           00894     bra vline_done
01B7   0389           00895     decf WREG
                      00896     insert 2
01B8   3FFE               M    movwi -2[SP]
                      00897     pick 1      
01B9   3F7F               M     moviw -1[SP]
                      00898     push    ; len x y x
01BA   001C               M     movwi ++SP
                      00899     pick 1
01BB   3F7F               M     moviw -1[SP]
                      00900     push    ; len x y x y
01BC   001C               M     movwi ++SP
01BD   2???           00901     call xor_pixel
                      00902     drop
01BE   317F               M    addfsr SP,-1
01BF   0A81           00903     incf T
01C0   3???           00904     bra vline
01C1                  00905 vline_done:
                      00906     drop_n 3
01C1   317D               M     addfsr SP,-3
01C2   0008           00907     return
                      00908     
  0000000A            00909 WELL_WIDTH equ 10
  00000016            00910 WELL_DEPTH equ 22 
01C3                  00911 game_init:
                      00912     lit 0   ; lit 0 to clear screen black
01C3   3000               M    movlw 0
01C4   001C               M    movwi ++SP 
01C5   2???           00913     call fill_buffer ; clear screen black
                      00914     lit WELL_DEPTH
01C6   3016               M    movlw WELL_DEPTH
01C7   001C               M    movwi ++SP 
                      00915     lit 0
01C8   3000               M    movlw 0
01C9   001C               M    movwi ++SP 
                      00916     lit 0
01CA   3000               M    movlw 0
01CB   001C               M    movwi ++SP 
01CC   2???           00917      call vline
                      00918     lit WELL_DEPTH
01CD   3016               M    movlw WELL_DEPTH
01CE   001C               M    movwi ++SP 
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  13:34:39         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00919     lit WELL_WIDTH+1
01CF   300B               M    movlw WELL_WIDTH+1
01D0   001C               M    movwi ++SP 
                      00920     lit 0
01D1   3000               M    movlw 0
01D2   001C               M    movwi ++SP 
01D3   2???           00921     call vline
                      00922     lit WELL_WIDTH+2
01D4   300C               M    movlw WELL_WIDTH+2
01D5   001C               M    movwi ++SP 
                      00923     lit WELL_DEPTH
01D6   3016               M    movlw WELL_DEPTH
01D7   001C               M    movwi ++SP 
                      00924     lit 0
01D8   3000               M    movlw 0
01D9   001C               M    movwi ++SP 
01DA   2???           00925     call hline
                      00926     lit WELL_WIDTH+3 ; x
01DB   300D               M    movlw WELL_WIDTH+3
01DC   001C               M    movwi ++SP 
                      00927     lit 0            ; y
01DD   3000               M    movlw 0
01DE   001C               M    movwi ++SP 
                      00928     lit LBL_SCORE            ; message index
01DF   3000               M    movlw LBL_SCORE
01E0   001C               M    movwi ++SP 
01E1   2???           00929     call print_label
                      00930     lit WELL_WIDTH+3 ; x
01E2   300D               M    movlw WELL_WIDTH+3
01E3   001C               M    movwi ++SP 
                      00931     lit 12           ; y
01E4   300C               M    movlw 12
01E5   001C               M    movwi ++SP 
                      00932     lit LBL_LINES       ; message index
01E6   3001               M    movlw LBL_LINES
01E7   001C               M    movwi ++SP 
01E8   2???           00933     call print_label
                      00934     ; print score
01E9                  00935 score_loop:
                      00936     pause 20
                          M     start_timer 20
01E9   3014               M     movlw 20
01EA   00??               M     movwf gtimer
01EB   1580               M     bsf flags, F_GTMR
                          M     wait_timer
01EC   1980               M     btfsc flags, F_GTMR
01ED   3???               M     bra $-1
01EE   08??           00937     movfw scoreL
01EF   00??           00938     movwf accaL
01F0   08??           00939     movfw scoreH
01F1   00??           00940     movwf accaH
                      00941     lit 43
01F2   302B               M    movlw 43
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  13:34:39         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01F3   001C               M    movwi ++SP 
                      00942     lit 6
01F4   3006               M    movlw 6
01F5   001C               M    movwi ++SP 
01F6   2???           00943     call print_int
                      00944     pause 20
                          M     start_timer 20
01F7   3014               M     movlw 20
01F8   00??               M     movwf gtimer
01F9   1580               M     bsf flags, F_GTMR
                          M     wait_timer
01FA   1980               M     btfsc flags, F_GTMR
01FB   3???               M     bra $-1
01FC   08??           00945     movfw scoreL
01FD   00??           00946     movwf accaL
01FE   08??           00947     movfw scoreH
01FF   00??           00948     movwf accaH
                      00949     lit 43
0200   302B               M    movlw 43
0201   001C               M    movwi ++SP 
                      00950     lit 6
0202   3006               M    movlw 6
0203   001C               M    movwi ++SP 
0204   2???           00951     call print_int
0205   0A??           00952     incf scoreL,F
0206   1903           00953     skpnz
0207   0A??           00954     incf scoreH,F
0208   3???           00955     bra score_loop
                      00956 ;    call read_pad
                      00957 ;    movfw buttons
                      00958 ;    movwf scoreL
                      00959 ;    clrf scoreH
                      00960 ;    bra test_loop 
                      00961     ;print dropped line
0209   08??           00962     movfw dropped
020A   00??           00963     movwf accaL
020B   01??           00964     clrf accaH
                      00965     lit 43
020C   302B               M    movlw 43
020D   001C               M    movwi ++SP 
                      00966     lit 18
020E   3012               M    movlw 18
020F   001C               M    movwi ++SP 
0210   2???           00967     call print_int
                      00968 ; variables initialization
0211   0020           00969     banksel 0
0212   3002           00970     movlw 2
0213   00??           00971     movwf tx
0214   01??           00972     clrf ty
0215   01??           00973     clrf tetrim
0216   01??           00974     clrf angle
0217   01??           00975     clrf scoreL
0218   01??           00976     clrf scoreH
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  13:34:39         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0219   01??           00977     clrf dropped
021A   01??           00978     clrf buttons
021B   1600           00979     bsf flags,F_GSTOP
021C   0008           00980     return
                      00981     
021D                  00982 tetris:
                      00983 ; test print_tetrim
                      00984     lit 0 ; tetrimino id
021D   3000               M    movlw 0
021E   001C               M    movwi ++SP 
021F                  00985 test_loop:    
                      00986     lit 4 ; x
021F   3004               M    movlw 4
0220   001C               M    movwi ++SP 
                      00987     lit 0 ; y
0221   3000               M    movlw 0
0222   001C               M    movwi ++SP 
                      00988     pick 2
0223   3F7E               M     moviw -2[SP]
                      00989     push    ; -- t x y t 
0224   001C               M     movwi ++SP
0225   2???           00990     call print_tetrim
                      00991     drop ; flag
0226   317F               M    addfsr SP,-1
                      00992     pause  60
                          M     start_timer 60
0227   303C               M     movlw 60
0228   00??               M     movwf gtimer
0229   1580               M     bsf flags, F_GTMR
                          M     wait_timer
022A   1980               M     btfsc flags, F_GTMR
022B   3???               M     bra $-1
                      00993     lit 4 ; x
022C   3004               M    movlw 4
022D   001C               M    movwi ++SP 
                      00994     lit 0 ; y
022E   3000               M    movlw 0
022F   001C               M    movwi ++SP 
                      00995     pick 2
0230   3F7E               M     moviw -2[SP]
                      00996     push
0231   001C               M     movwi ++SP
0232   2???           00997     call print_tetrim
                      00998     drop ; flag
0233   317F               M    addfsr SP,-1
0234   0A81           00999     incf T
0235   301C           01000     movlw 28
0236   0201           01001     subwf T,W
0237   1C03           01002     skpc
0238   3???           01003     bra test_loop
0239   0181           01004     clrf T
023A   3???           01005     bra test_loop
023B   0008           01006     return
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  13:34:39         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01007     
023C                  01008 init:
                      01009     pstack_init
023C   0187               M     clrf FSR1H
023D   301F               M     movlw S0
023E   0086               M     movwf FSR1L
                      01010 ; ADC configuration
023F   0021           01011     banksel ADCON0
0240   300C           01012     movlw (PAD_CHS<<CHS0)
0241   009D           01013     movwf ADCON0
0242   3020           01014     movlw (2<<ADCS0)
0243   009E           01015     movwf ADCON1
                      01016 ;;;;;;;;;;;;;;;;;;;;;    
0244   0021           01017     banksel TRISA
0245   110C           01018     bcf TRISA, SYNC_OUT
0246   108C           01019     bcf TRISA, VIDEO_OUT
0247   0022           01020     banksel VIDEO_LAT
0248   108C           01021     bcf VIDEO_LAT,VIDEO_OUT
                      01022 ;configure EUSART in sychronsous mode
                      01023 ;to use as pixel serializer
0249   0023           01024     banksel SPBRG
024A   3001           01025     movlw 1
024B   009B           01026     movwf SPBRGL
024C   019C           01027     clrf SPBRGH
024D   019A           01028     clrf TXREG
024E   30B0           01029     movlw (1<<SYNC)|(1<<CSRC)|(1<<TXEN)
024F   009E           01030     movwf TXSTA
0250   179D           01031     bsf RCSTA, SPEN
0251   30CF           01032     movlw ~((1<<CREN)|(1<<SREN))
0252   059D           01033     andwf RCSTA
                      01034 ; configure pwm video sync for horizontal period
0253   003B           01035     banksel SYNC_PWMDCH
0254   01B1           01036     clrf SYNC_PWMPH
0255   01B2           01037     clrf SYNC_PWMPH+1
0256   01BF           01038     clrf SYNC_PWMLDCON
0257   30F5           01039     movlw HORZ_PERIOD&0XFF
0258   00B5           01040     movwf SYNC_PWMPRL
0259   3004           01041     movlw HORZ_PERIOD>>8
025A   00B6           01042     movwf SYNC_PWMPRH
025B   01BE           01043     clrf SYNC_PWMCLKCON
025C   30D0           01044     movlw (3<<OE)|(1<<POL)
025D   00BB           01045     movwf SYNC_PWMCON
025E   305E           01046     movlw HORZ_PULSE&0xff
025F   00B3           01047     movwf SYNC_PWMDCL
0260   3000           01048     movlw HORZ_PULSE>>8
0261   00B4           01049     movwf SYNC_PWMDCH
0262   17BF           01050     bsf SYNC_PWMLDCON,7
                      01051    ;enable video interrupt on period match
0263   103D           01052     bcf SYNC_PWMINTF,PRIF
0264   143C           01053     bsf SYNC_PWMINTE,PRIE
                      01054     ; enable peripheral interrupt
0265   0021           01055     banksel SYNC_PIE
0266   1713           01056     bsf SYNC_PIE,SYNC_IE
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  13:34:39         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01057     ;enable interrupts
0267   30C0           01058     movlw (1<<GIE)|(1<<PEIE)
0268   008B           01059     movwf INTCON
0269   01??           01060     clrf lcountL
026A   01??           01061     clrf lcountH
026B   01??           01062     clrf flags
                      01063     ; seed lfsr PRNG
026C   30AC           01064     movlw 0xAC
026D   00??           01065     movwf randL
026E   30E1           01066     movlw 0xE1
026F   00??           01067     movwf randH
                      01068 
                      01069     
0270                  01070 main:
0270   2???           01071     call game_init
0271   2???           01072     call tetris
0272   3???           01073     bra $
0273   3???           01074     bra main
                      01075   
                      01076 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      01077 ;   data tables
                      01078 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      01079 
                      01080 ; **************** encoding ************************************************
                      01081 ; enhanced PIC instructions are coded on 14 bits
                      01082 ; these 14 bits can be read as data using flash memory
                      01083 ; writing/reading mechanism, see datasheet chapter 10 for detail.
                      01084 ; the 'dw' assembler directive encode data in those 14 bits contrary to 'dt'
                      01085 ; directive which encode a single byte as a RETLW instruction.
                      01086 ; So we get a 50% compression by encoding 3 nibbles/flash word. 
                      01087 ; the encoding used in the following tables is as follow:    
                      01088 ; bits 13:12  number of nibbles where 0 means there is more than 3 nibbles
                      01089 ; in this data chunk so 1 or more other words follow this one.    
                      01090 ; other 12 bits are sliced in 4 bits nibbles.
                      01091 ;****************************************************************************
                      01092 
0274                  01093 digits: ; each digit is 5 rows
0274   0EAA 2AE0      01094     dw 0x0EAA,0x2AE0 ; 0
0276   04C4 24E0      01095     dw 0x04C4,0x24E0 ; 1
0278   0E2E 28E0      01096     dw 0x0E2E,0x28E0 ; 2
027A   0E2E 22E0      01097     dw 0x0E2E,0x22E0 ; 3
027C   0AAE 2220      01098     dw 0x0AAE,0x2220 ; 4
027E   0E8E 22E0      01099     dw 0x0E8E,0x22E0 ; 5
0280   088E 2AE0      01100     dw 0x088E,0x2AE0 ; 6
0282   0E22 2220      01101     dw 0x0E22,0x2220 ; 7
0284   0EAE 2AE0      01102     dw 0x0EAE,0x2AE0 ; 8
0286   0EAE 2220      01103     dw 0x0EAE,0x2220 ; 9
                      01104 ; letters needed for 'SCORE' and 'LINES" labels
0288   3688 2860      01105     dw 0x3688,0x2860 ; C  code 10
028A   3E8E 28E0      01106     dw 0x3E8E,0x28E0 ; E  code 11
028C   3E44 24E0      01107     dw 0x3E44,0x24E0 ; I  code 12
028E   3888 28E0      01108     dw 0x3888,0x28E0 ; L  code 13
0290   38CA 2AA0      01109     dw 0x38CA,0x2AA0 ; N  code 14
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  13:34:39         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0292   34AA 2A40      01110     dw 0x34AA,0x2A40 ; O  code 15
0294   38EA 2880      01111     dw 0x38EA,0x2880 ; R  code 16
0296   368C 22C0      01112     dw 0x368C,0x22C0 ; S  code 17
0298   3040 2400      01113     dw 0x3040,0x2400 ; :  code 18
                      01114 
                      01115 ; comments notation: Rn clockwise rotation n*90 degr.    
                      01116 ; note that vertical I as 4 rows so it needs 2 words    
029A                  01117 tetriminos: 
029A   3446           01118     dw 0x3446 ; L R0
029B   2E80           01119     dw 0x2E80 ; L R1
029C   3622           01120     dw 0x3622 ; L R2
029D   22E0           01121     dw 0x22E0 ; L R3
029E   3226           01122     dw 0x3226 ; J R0
029F   28E0           01123     dw 0x28E0 ; J R1
02A0   3644           01124     dw 0x3644 ; J R2
02A1   2E20           01125     dw 0x2E20 ; J R3
02A2   2660           01126     dw 0x2660 ; O R0 
02A3   2660           01127     dw 0x2660 ; O R1
02A4   2660           01128     dw 0x2660 ; O R2
02A5   2660           01129     dw 0x2660 ; O R3
02A6   2360           01130     dw 0x2360 ; S R0
02A7   3462           01131     dw 0x3462 ; S R1
02A8   2360           01132     dw 0x2360 ; S R2
02A9   3462           01133     dw 0x3462 ; S R3
02AA   2E40           01134     dw 0x2E40 ; T R0
02AB   34C4           01135     dw 0x34c4 ; T R1
02AC   24E0           01136     dw 0x24E0 ; T R2
02AD   3464           01137     dw 0x3464 ; T R3
02AE   2C60           01138     dw 0x2C60 ; Z R0
02AF   3264           01139     dw 0x3264 ; Z R1
02B0   2C60           01140     dw 0x2C60 ; Z R3
02B1   3264           01141     dw 0x3264 ; Z R4
                      01142 ; annoying! I tetriminos need a special treatment 
                      01143 ; because vertical I need 2 words for encoding.   
02B2   0222 1200      01144 I0: dw 0x0222,0x1200 ; I R0  
02B4   1F00 1000      01145     dw 0x1F00,0x1000 ; I R1  second word is filling for alignment
02B6   0222 1200      01146     dw 0x0222,0x1200 ; I R2
02B8   1F00 1000      01147     dw 0x1F00,0x1000 ; I R3  
                      01148 
  00000000            01149 LBL_SCORE equ 0
  00000001            01150 LBL_LINES equ 1
                      01151  
02BA                  01152 labels:
02BA   000B           01153     brw
02BB   3???           01154     bra txt_score
02BC   3???           01155     bra txt_lines
                      01156     
02BD                  01157 txt_score:
                      01158     pop
02BD   0017               M     moviw SP--
02BE   000B           01159     brw
02BF   3411 340A 340F 01160     dt 17,10,15,16,11,18,255
       3410 340B 3412 
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  13:34:39         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

       34FF 
                      01161     
02C6                  01162 txt_lines:
                      01163     pop
02C6   0017               M     moviw SP--
02C7   000B           01164     brw
02C8   340D 340C 340E 01165     dt 13,12,14,11,17,18,255
       340B 3411 3412 
       34FF 
                      01166 
                      01167     
3FE7 1EFF             01168     end
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  13:34:39         PAGE 29


SYMBOL TABLE
  LABEL                             VALUE 

ABDEN                             00000000
ABDOVF                            00000007
ADCON0                            0000009D
ADCON1                            0000009E
ADCON2                            0000009F
ADCS0                             00000004
ADCS1                             00000005
ADCS2                             00000006
ADDEN                             00000003
ADFM                              00000007
ADFVR0                            00000000
ADFVR1                            00000001
ADGO                              00000001
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADPREF0                           00000000
ADPREF1                           00000001
ADRES                             0000009B
ADRESH                            0000009C
ADRESL                            0000009B
ANSA0                             00000000
ANSA1                             00000001
ANSA2                             00000002
ANSA4                             00000004
ANSELA                            0000018C
APFCON                            0000011D
APFCON0                           0000011D
A_THR                             00000040
BAUDCON                           0000019F
BORCON                            00000116
BORFS                             00000006
BORRDY                            00000000
BPL                               00000006
BRG16                             00000003
BRGH                              00000002
BSR                               00000008
BSR0                              00000000
BSR1                              00000001
BSR2                              00000002
BSR3                              00000003
BSR4                              00000004
BSR_SHAD                          00000FE6
BTN_A                             00000004
BTN_B                             00000005
BTN_DN                            00000001
BTN_LT                            00000002
BTN_RT                            00000003
BTN_UP                            00000000
BUFFER_SIZE                       000000C0
B_THR                             00000095
C                                 00000000
C1HYS                             00000001
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  13:34:39         PAGE 30


SYMBOL TABLE
  LABEL                             VALUE 

C1IE                              00000005
C1IF                              00000005
C1INTN                            00000006
C1INTP                            00000007
C1NCH0                            00000000
C1NCH1                            00000001
C1NCH2                            00000002
C1OE                              00000005
C1ON                              00000007
C1OUT                             00000006
C1PCH0                            00000004
C1PCH1                            00000005
C1POL                             00000004
C1SP                              00000002
C1SYNC                            00000000
CDAFVR0                           00000002
CDAFVR1                           00000003
CFGS                              00000006
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CHS4                              00000006
CM1CON0                           00000111
CM1CON1                           00000112
CMOUT                             00000115
CREN                              00000004
CS0                               00000000
CS1                               00000001
CSRC                              00000007
CWG1CON0                          00000693
CWG1CON1                          00000694
CWG1CON2                          00000695
CWG1DBF                           00000692
CWG1DBF0                          00000000
CWG1DBF1                          00000001
CWG1DBF2                          00000002
CWG1DBF3                          00000003
CWG1DBF4                          00000004
CWG1DBF5                          00000005
CWG1DBR                           00000691
CWG1DBR0                          00000000
CWG1DBR1                          00000001
CWG1DBR2                          00000002
CWG1DBR3                          00000003
CWG1DBR4                          00000004
CWG1DBR5                          00000005
CWGASEL                           00000006
CWGBSEL                           00000005
C_SHAD                            00000000
DACCON0                           00000118
DACCON1                           00000119
DACEN                             00000007
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  13:34:39         PAGE 31


SYMBOL TABLE
  LABEL                             VALUE 

DACLPS                            00000006
DACOE                             00000005
DACPSS0                           00000002
DACPSS1                           00000003
DACR0                             00000000
DACR1                             00000001
DACR2                             00000002
DACR3                             00000003
DACR4                             00000004
DC                                00000001
DCIE                              00000001
DCIF                              00000001
DC_SHAD                           00000001
DN_THR                            000000D8
EN                                00000007
F                                 00000001
FCY                               004C4B40
FERR                              00000002
FIRST_VIDEO                       0000003C
FOSC                              01312D00
FREE                              00000004
FSR0                              00000004
FSR0H                             00000005
FSR0H_SHAD                        00000FE9
FSR0L                             00000004
FSR0L_SHAD                        00000FE8
FSR0_SHAD                         00000FE8
FSR1                              00000006
FSR1H                             00000007
FSR1H_SHAD                        00000FEB
FSR1L                             00000006
FSR1L_SHAD                        00000FEA
FSR1_SHAD                         00000FEA
FVRCON                            00000117
FVREN                             00000007
FVRRDY                            00000006
F_EVEN                            00000001
F_GSTOP                           00000004
F_GTMR                            00000003
F_MUTEX                           00000002
F_SND                             00000005
F_VSYNC                           00000000
G1ARSEN                           00000006
G1ASDLA0                          00000004
G1ASDLA1                          00000005
G1ASDLB0                          00000006
G1ASDLB1                          00000007
G1ASDSC1                          00000002
G1ASDSFLT                         00000001
G1ASE                             00000007
G1CS0                             00000000
G1EN                              00000007
G1IS0                             00000000
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  13:34:39         PAGE 32


SYMBOL TABLE
  LABEL                             VALUE 

G1IS1                             00000001
G1IS2                             00000002
G1OEA                             00000005
G1OEB                             00000006
G1POLA                            00000003
G1POLB                            00000004
GIE                               00000007
GO                                00000001
GO_NOT_DONE                       00000001
HFIOFL                            00000003
HFIOFR                            00000004
HFIOFS                            00000000
HORZ_DLY                          00000050
HORZ_PERIOD                       000004F5
HORZ_PULSE                        0000005E
I0                                000002B2
INDF0                             00000000
INDF1                             00000001
INLVLA                            0000038C
INLVLA0                           00000000
INLVLA1                           00000001
INLVLA2                           00000002
INLVLA3                           00000003
INLVLA4                           00000004
INLVLA5                           00000005
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IOCAF                             00000393
IOCAF0                            00000000
IOCAF1                            00000001
IOCAF2                            00000002
IOCAF3                            00000003
IOCAF4                            00000004
IOCAF5                            00000005
IOCAN                             00000392
IOCAN0                            00000000
IOCAN1                            00000001
IOCAN2                            00000002
IOCAN3                            00000003
IOCAN4                            00000004
IOCAN5                            00000005
IOCAP                             00000391
IOCAP0                            00000000
IOCAP1                            00000001
IOCAP2                            00000002
IOCAP3                            00000003
IOCAP4                            00000004
IOCAP5                            00000005
IOCIE                             00000003
IOCIF                             00000000
IRCF0                             00000003
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  13:34:39         PAGE 33


SYMBOL TABLE
  LABEL                             VALUE 

IRCF1                             00000004
IRCF2                             00000005
IRCF3                             00000006
LAST_LINE                         00000106
LAST_VIDEO                        000000BB
LATA                              0000010C
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA4                             00000004
LATA5                             00000005
LBL_LINES                         00000001
LBL_SCORE                         00000000
LDA                               00000007
LDS0                              00000000
LDS1                              00000001
LDT                               00000006
LFIOFR                            00000001
LFSR_TAPS                         000000B4
LT_THR                            000000D1
LWLO                              00000005
MC1OUT                            00000000
MFIOFR                            00000002
MODE0                             00000002
MODE1                             00000003
MPWM1EN                           00000000
MPWM1LD                           00000000
MPWM1OUT                          00000000
MPWM2EN                           00000001
MPWM2LD                           00000001
MPWM2OUT                          00000001
MPWM3EN                           00000002
MPWM3LD                           00000002
MPWM3OUT                          00000002
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RI                            00000002
NOT_RMCLR                         00000003
NOT_RWDT                          00000004
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_WPUEN                         00000007
ODA0                              00000000
ODA1                              00000001
ODA2                              00000002
ODA4                              00000004
ODA5                              00000005
ODCONA                            0000028C
OE                                00000006
OERR                              00000001
OFIE                              00000003
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  13:34:39         PAGE 34


SYMBOL TABLE
  LABEL                             VALUE 

OFIF                              00000003
OFM0                              00000005
OFM1                              00000006
OFO                               00000004
OFS0                              00000000
OFS1                              00000001
OPTION_REG                        00000095
OSCCON                            00000099
OSCSTAT                           0000009A
OSCTUNE                           00000098
OSTS                              00000005
OUT                               00000005
P1SEL                             00000000
P2SEL                             00000001
PAD_CHS                           00000003
PAD_PIN                           00000004
PCL                               00000002
PCLATH                            0000000A
PCLATH_SHAD                       00000FE7
PCON                              00000096
PEIE                              00000006
PHIE                              00000002
PHIF                              00000002
PIE1                              00000091
PIE2                              00000092
PIE3                              00000093
PIR1                              00000011
PIR2                              00000012
PIR3                              00000013
PIXEL_TXREG                       0000019A
PLLR                              00000006
PMADR                             00000191
PMADRH                            00000192
PMADRL                            00000191
PMCON1                            00000195
PMCON2                            00000196
PMDAT                             00000193
PMDATH                            00000194
PMDATL                            00000193
POL                               00000004
PORTA                             0000000C
PR2                               0000001B
PRIE                              00000000
PRIF                              00000000
PS0_OPTION_REG                    00000000
PS0_PWM1CLKCON                    00000004
PS0_PWM2CLKCON                    00000004
PS0_PWM3CLKCON                    00000004
PS1_OPTION_REG                    00000001
PS1_PWM1CLKCON                    00000005
PS1_PWM2CLKCON                    00000005
PS1_PWM3CLKCON                    00000005
PS2_OPTION_REG                    00000002
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  13:34:39         PAGE 35


SYMBOL TABLE
  LABEL                             VALUE 

PS2_PWM1CLKCON                    00000006
PS2_PWM2CLKCON                    00000006
PS2_PWM3CLKCON                    00000006
PSA                               00000003
PWM1CLKCON                        00000D9E
PWM1CON                           00000D9B
PWM1CS0                           00000000
PWM1CS1                           00000001
PWM1DC                            00000D93
PWM1DCH                           00000D94
PWM1DCH0                          00000000
PWM1DCH1                          00000001
PWM1DCH2                          00000002
PWM1DCH3                          00000003
PWM1DCH4                          00000004
PWM1DCH5                          00000005
PWM1DCH6                          00000006
PWM1DCH7                          00000007
PWM1DCIE                          00000001
PWM1DCIF                          00000001
PWM1DCL                           00000D93
PWM1DCL0                          00000000
PWM1DCL1                          00000001
PWM1DCL2                          00000002
PWM1DCL3                          00000003
PWM1DCL4                          00000004
PWM1DCL5                          00000005
PWM1DCL6                          00000006
PWM1DCL7                          00000007
PWM1EN                            00000007
PWM1EN_A                          00000000
PWM1IE                            00000004
PWM1IF                            00000004
PWM1INTCON                        00000D9C
PWM1INTE                          00000D9C
PWM1INTF                          00000D9D
PWM1INTFLG                        00000D9D
PWM1LD                            00000007
PWM1LDA_A                         00000000
PWM1LDCON                         00000D9F
PWM1LDM                           00000006
PWM1LDS0                          00000000
PWM1LDS1                          00000001
PWM1MODE0                         00000002
PWM1MODE1                         00000003
PWM1OE                            00000006
PWM1OF                            00000D97
PWM1OFCON                         00000DA0
PWM1OFH                           00000D98
PWM1OFH0                          00000000
PWM1OFH1                          00000001
PWM1OFH2                          00000002
PWM1OFH3                          00000003
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  13:34:39         PAGE 36


SYMBOL TABLE
  LABEL                             VALUE 

PWM1OFH4                          00000004
PWM1OFH5                          00000005
PWM1OFH6                          00000006
PWM1OFH7                          00000007
PWM1OFIE                          00000003
PWM1OFIF                          00000003
PWM1OFL                           00000D97
PWM1OFL0                          00000000
PWM1OFL1                          00000001
PWM1OFL2                          00000002
PWM1OFL3                          00000003
PWM1OFL4                          00000004
PWM1OFL5                          00000005
PWM1OFL6                          00000006
PWM1OFL7                          00000007
PWM1OFM0                          00000005
PWM1OFM1                          00000006
PWM1OFMC                          00000004
PWM1OFS0                          00000000
PWM1OFS1                          00000001
PWM1OUT                           00000005
PWM1OUT_A                         00000000
PWM1PH                            00000D91
PWM1PHH                           00000D92
PWM1PHH0                          00000000
PWM1PHH1                          00000001
PWM1PHH2                          00000002
PWM1PHH3                          00000003
PWM1PHH4                          00000004
PWM1PHH5                          00000005
PWM1PHH6                          00000006
PWM1PHH7                          00000007
PWM1PHIE                          00000002
PWM1PHIF                          00000002
PWM1PHL                           00000D91
PWM1PHL0                          00000000
PWM1PHL1                          00000001
PWM1PHL2                          00000002
PWM1PHL3                          00000003
PWM1PHL4                          00000004
PWM1PHL5                          00000005
PWM1PHL6                          00000006
PWM1PHL7                          00000007
PWM1POL                           00000004
PWM1PR                            00000D95
PWM1PRH                           00000D96
PWM1PRH0                          00000000
PWM1PRH1                          00000001
PWM1PRH2                          00000002
PWM1PRH3                          00000003
PWM1PRH4                          00000004
PWM1PRH5                          00000005
PWM1PRH6                          00000006
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  13:34:39         PAGE 37


SYMBOL TABLE
  LABEL                             VALUE 

PWM1PRH7                          00000007
PWM1PRIE                          00000000
PWM1PRIF                          00000000
PWM1PRL                           00000D95
PWM1PRL0                          00000000
PWM1PRL1                          00000001
PWM1PRL2                          00000002
PWM1PRL3                          00000003
PWM1PRL4                          00000004
PWM1PRL5                          00000005
PWM1PRL6                          00000006
PWM1PRL7                          00000007
PWM1PS0                           00000004
PWM1PS1                           00000005
PWM1PS2                           00000006
PWM1TMR                           00000D99
PWM1TMRH                          00000D9A
PWM1TMRH0                         00000000
PWM1TMRH1                         00000001
PWM1TMRH2                         00000002
PWM1TMRH3                         00000003
PWM1TMRH4                         00000004
PWM1TMRH5                         00000005
PWM1TMRH6                         00000006
PWM1TMRH7                         00000007
PWM1TMRL                          00000D99
PWM1TMRL0                         00000000
PWM1TMRL1                         00000001
PWM1TMRL2                         00000002
PWM1TMRL3                         00000003
PWM1TMRL4                         00000004
PWM1TMRL5                         00000005
PWM1TMRL6                         00000006
PWM1TMRL7                         00000007
PWM2CLKCON                        00000DAE
PWM2CON                           00000DAB
PWM2CS0                           00000000
PWM2CS1                           00000001
PWM2DC                            00000DA3
PWM2DCH                           00000DA4
PWM2DCH0                          00000000
PWM2DCH1                          00000001
PWM2DCH2                          00000002
PWM2DCH3                          00000003
PWM2DCH4                          00000004
PWM2DCH5                          00000005
PWM2DCH6                          00000006
PWM2DCH7                          00000007
PWM2DCIE                          00000001
PWM2DCIF                          00000001
PWM2DCL                           00000DA3
PWM2DCL0                          00000000
PWM2DCL1                          00000001
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  13:34:39         PAGE 38


SYMBOL TABLE
  LABEL                             VALUE 

PWM2DCL2                          00000002
PWM2DCL3                          00000003
PWM2DCL4                          00000004
PWM2DCL5                          00000005
PWM2DCL6                          00000006
PWM2DCL7                          00000007
PWM2EN                            00000007
PWM2EN_A                          00000001
PWM2IE                            00000005
PWM2IF                            00000005
PWM2INTCON                        00000DAC
PWM2INTE                          00000DAC
PWM2INTF                          00000DAD
PWM2INTFLG                        00000DAD
PWM2LD                            00000007
PWM2LDA_A                         00000001
PWM2LDCON                         00000DAF
PWM2LDM                           00000006
PWM2LDS0                          00000000
PWM2LDS1                          00000001
PWM2MODE0                         00000002
PWM2MODE1                         00000003
PWM2OE                            00000006
PWM2OF                            00000DA7
PWM2OFCON                         00000DB0
PWM2OFH                           00000DA8
PWM2OFH0                          00000000
PWM2OFH1                          00000001
PWM2OFH2                          00000002
PWM2OFH3                          00000003
PWM2OFH4                          00000004
PWM2OFH5                          00000005
PWM2OFH6                          00000006
PWM2OFH7                          00000007
PWM2OFIE                          00000003
PWM2OFIF                          00000003
PWM2OFL                           00000DA7
PWM2OFL0                          00000000
PWM2OFL1                          00000001
PWM2OFL2                          00000002
PWM2OFL3                          00000003
PWM2OFL4                          00000004
PWM2OFL5                          00000005
PWM2OFL6                          00000006
PWM2OFL7                          00000007
PWM2OFM0                          00000005
PWM2OFM1                          00000006
PWM2OFMC                          00000004
PWM2OFS0                          00000000
PWM2OFS1                          00000001
PWM2OUT                           00000005
PWM2OUT_A                         00000001
PWM2PH                            00000DA1
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  13:34:39         PAGE 39


SYMBOL TABLE
  LABEL                             VALUE 

PWM2PHH                           00000DA2
PWM2PHH0                          00000000
PWM2PHH1                          00000001
PWM2PHH2                          00000002
PWM2PHH3                          00000003
PWM2PHH4                          00000004
PWM2PHH5                          00000005
PWM2PHH6                          00000006
PWM2PHH7                          00000007
PWM2PHIE                          00000002
PWM2PHIF                          00000002
PWM2PHL                           00000DA1
PWM2PHL0                          00000000
PWM2PHL1                          00000001
PWM2PHL2                          00000002
PWM2PHL3                          00000003
PWM2PHL4                          00000004
PWM2PHL5                          00000005
PWM2PHL6                          00000006
PWM2PHL7                          00000007
PWM2POL                           00000004
PWM2PR                            00000DA5
PWM2PRH                           00000DA6
PWM2PRH0                          00000000
PWM2PRH1                          00000001
PWM2PRH2                          00000002
PWM2PRH3                          00000003
PWM2PRH4                          00000004
PWM2PRH5                          00000005
PWM2PRH6                          00000006
PWM2PRH7                          00000007
PWM2PRIE                          00000000
PWM2PRIF                          00000000
PWM2PRL                           00000DA5
PWM2PRL0                          00000000
PWM2PRL1                          00000001
PWM2PRL2                          00000002
PWM2PRL3                          00000003
PWM2PRL4                          00000004
PWM2PRL5                          00000005
PWM2PRL6                          00000006
PWM2PRL7                          00000007
PWM2PS0                           00000004
PWM2PS1                           00000005
PWM2PS2                           00000006
PWM2TMR                           00000DA9
PWM2TMRH                          00000DAA
PWM2TMRH0                         00000000
PWM2TMRH1                         00000001
PWM2TMRH2                         00000002
PWM2TMRH3                         00000003
PWM2TMRH4                         00000004
PWM2TMRH5                         00000005
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  13:34:39         PAGE 40


SYMBOL TABLE
  LABEL                             VALUE 

PWM2TMRH6                         00000006
PWM2TMRH7                         00000007
PWM2TMRL                          00000DA9
PWM2TMRL0                         00000000
PWM2TMRL1                         00000001
PWM2TMRL2                         00000002
PWM2TMRL3                         00000003
PWM2TMRL4                         00000004
PWM2TMRL5                         00000005
PWM2TMRL6                         00000006
PWM2TMRL7                         00000007
PWM3CLKCON                        00000DBE
PWM3CON                           00000DBB
PWM3CS0                           00000000
PWM3CS1                           00000001
PWM3DC                            00000DB3
PWM3DCH                           00000DB4
PWM3DCH0                          00000000
PWM3DCH1                          00000001
PWM3DCH2                          00000002
PWM3DCH3                          00000003
PWM3DCH4                          00000004
PWM3DCH5                          00000005
PWM3DCH6                          00000006
PWM3DCH7                          00000007
PWM3DCIE                          00000001
PWM3DCIF                          00000001
PWM3DCL                           00000DB3
PWM3DCL0                          00000000
PWM3DCL1                          00000001
PWM3DCL2                          00000002
PWM3DCL3                          00000003
PWM3DCL4                          00000004
PWM3DCL5                          00000005
PWM3DCL6                          00000006
PWM3DCL7                          00000007
PWM3EN                            00000007
PWM3EN_A                          00000002
PWM3IE                            00000006
PWM3IF                            00000006
PWM3INTCON                        00000DBC
PWM3INTE                          00000DBC
PWM3INTF                          00000DBD
PWM3INTFLG                        00000DBD
PWM3LD                            00000007
PWM3LDA_A                         00000002
PWM3LDCON                         00000DBF
PWM3LDM                           00000006
PWM3LDS0                          00000000
PWM3LDS1                          00000001
PWM3MODE0                         00000002
PWM3MODE1                         00000003
PWM3OE                            00000006
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  13:34:39         PAGE 41


SYMBOL TABLE
  LABEL                             VALUE 

PWM3OF                            00000DB7
PWM3OFCON                         00000DC0
PWM3OFH                           00000DB8
PWM3OFH0                          00000000
PWM3OFH1                          00000001
PWM3OFH2                          00000002
PWM3OFH3                          00000003
PWM3OFH4                          00000004
PWM3OFH5                          00000005
PWM3OFH6                          00000006
PWM3OFH7                          00000007
PWM3OFIE                          00000003
PWM3OFIF                          00000003
PWM3OFL                           00000DB7
PWM3OFL0                          00000000
PWM3OFL1                          00000001
PWM3OFL2                          00000002
PWM3OFL3                          00000003
PWM3OFL4                          00000004
PWM3OFL5                          00000005
PWM3OFL6                          00000006
PWM3OFL7                          00000007
PWM3OFM0                          00000005
PWM3OFM1                          00000006
PWM3OFMC                          00000004
PWM3OFS0                          00000000
PWM3OFS1                          00000001
PWM3OUT                           00000005
PWM3OUT_A                         00000002
PWM3PH                            00000DB1
PWM3PHH                           00000DB2
PWM3PHH0                          00000000
PWM3PHH1                          00000001
PWM3PHH2                          00000002
PWM3PHH3                          00000003
PWM3PHH4                          00000004
PWM3PHH5                          00000005
PWM3PHH6                          00000006
PWM3PHH7                          00000007
PWM3PHIE                          00000002
PWM3PHIF                          00000002
PWM3PHL                           00000DB1
PWM3PHL0                          00000000
PWM3PHL1                          00000001
PWM3PHL2                          00000002
PWM3PHL3                          00000003
PWM3PHL4                          00000004
PWM3PHL5                          00000005
PWM3PHL6                          00000006
PWM3PHL7                          00000007
PWM3POL                           00000004
PWM3PR                            00000DB5
PWM3PRH                           00000DB6
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  13:34:39         PAGE 42


SYMBOL TABLE
  LABEL                             VALUE 

PWM3PRH0                          00000000
PWM3PRH1                          00000001
PWM3PRH2                          00000002
PWM3PRH3                          00000003
PWM3PRH4                          00000004
PWM3PRH5                          00000005
PWM3PRH6                          00000006
PWM3PRH7                          00000007
PWM3PRIE                          00000000
PWM3PRIF                          00000000
PWM3PRL                           00000DB5
PWM3PRL0                          00000000
PWM3PRL1                          00000001
PWM3PRL2                          00000002
PWM3PRL3                          00000003
PWM3PRL4                          00000004
PWM3PRL5                          00000005
PWM3PRL6                          00000006
PWM3PRL7                          00000007
PWM3PS0                           00000004
PWM3PS1                           00000005
PWM3PS2                           00000006
PWM3TMR                           00000DB9
PWM3TMRH                          00000DBA
PWM3TMRH0                         00000000
PWM3TMRH1                         00000001
PWM3TMRH2                         00000002
PWM3TMRH3                         00000003
PWM3TMRH4                         00000004
PWM3TMRH5                         00000005
PWM3TMRH6                         00000006
PWM3TMRH7                         00000007
PWM3TMRL                          00000DB9
PWM3TMRL0                         00000000
PWM3TMRL1                         00000001
PWM3TMRL2                         00000002
PWM3TMRL3                         00000003
PWM3TMRL4                         00000004
PWM3TMRL5                         00000005
PWM3TMRL6                         00000006
PWM3TMRL7                         00000007
PWMEN                             00000D8E
PWMLD                             00000D8F
PWMOUT                            00000D90
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  13:34:39         PAGE 43


SYMBOL TABLE
  LABEL                             VALUE 

RCREG                             00000199
RCSTA                             0000019D
RD                                00000000
RT_THR                            000000B5
RX9                               00000006
RX9D                              00000000
RXDTSEL                           00000007
S0                                0000001F
SBOREN                            00000007
SCKP                              00000004
SCS0                              00000000
SCS1                              00000001
SENDB                             00000003
SLRA0                             00000000
SLRA1                             00000001
SLRA2                             00000002
SLRA4                             00000004
SLRA5                             00000005
SLRCONA                           0000030C
SP                                FSR1
SPBRG                             0000019B
SPBRGH                            0000019C
SPBRGL                            0000019B
SPEN                              00000007
SPLLEN                            00000007
SREN                              00000005
STACK_SIZE                        00000020
STATUS                            00000003
STATUS_SHAD                       00000FE4
STKOVF                            00000007
STKPTR                            00000FED
STKUNF                            00000006
SWDTEN                            00000000
SYNC                              00000004
SYNC_IE                           00000006
SYNC_IF                           00000006
SYNC_OUT                          00000002
SYNC_PIE                          00000093
SYNC_PIR                          00000013
SYNC_PWMCLKCON                    00000DBE
SYNC_PWMCON                       00000DBB
SYNC_PWMDCH                       00000DB4
SYNC_PWMDCL                       00000DB3
SYNC_PWMINTE                      00000DBC
SYNC_PWMINTF                      00000DBD
SYNC_PWMLDCON                     00000DBF
SYNC_PWMOF                        00000DB7
SYNC_PWMOFCON                     00000DC0
SYNC_PWMPH                        00000DB1
SYNC_PWMPRH                       00000DB6
SYNC_PWMPRL                       00000DB5
SYNC_PWMTMR                       00000DB9
T                                 INDF1
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  13:34:39         PAGE 44


SYMBOL TABLE
  LABEL                             VALUE 

T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000018
T1GCON                            00000019
T1GGO                             00000003
T1GGO_NOT_DONE                    00000003
T1GPOL                            00000006
T1GSEL                            00000003
T1GSPM                            00000004
T1GSS0                            00000000
T1GSS1                            00000001
T1GTM                             00000005
T1GVAL                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             0000001C
T2OUTPS0                          00000003
T2OUTPS1                          00000004
T2OUTPS2                          00000005
T2OUTPS3                          00000006
TC                                00000032
TCY                               000000C8
TMR0                              00000015
TMR0CS                            00000005
TMR0IE                            00000005
TMR0IF                            00000002
TMR0SE                            00000004
TMR1                              00000016
TMR1CS0                           00000006
TMR1CS1                           00000007
TMR1GE                            00000007
TMR1GIE                           00000007
TMR1GIF                           00000007
TMR1H                             00000017
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             00000016
TMR1ON                            00000000
TMR2                              0000001A
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOS                               00000FEE
TOSH                              00000FEF
TOSL                              00000FEE
TRIGSEL0                          00000004
TRIGSEL1                          00000005
TRIGSEL2                          00000006
TRIGSEL3                          00000007
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  13:34:39         PAGE 45


SYMBOL TABLE
  LABEL                             VALUE 

TRISA                             0000008C
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRMT                              00000001
TSEN                              00000005
TSRNG                             00000004
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TUN5                              00000005
TX9                               00000006
TX9D                              00000000
TXCKSEL                           00000002
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             0000019A
TXSTA                             0000019E
TX_PIR                            00000011
UP_THR                            000000C6
VDD                               00000400
VERT_DLY                          00000028
VIDEO_BUFFER                      00002030
VIDEO_LAT                         0000010C
VIDEO_OUT                         00000001
VREGCON                           00000197
VREGPM                            00000001
W                                 00000000
WDTCON                            00000097
WDTPS0                            00000001
WDTPS1                            00000002
WDTPS2                            00000003
WDTPS3                            00000004
WDTPS4                            00000005
WELL_DEPTH                        00000016
WELL_WIDTH                        0000000A
WPUA                              0000020C
WPUA0                             00000000
WPUA1                             00000001
WPUA2                             00000002
WPUA3                             00000003
WPUA4                             00000004
WPUA5                             00000005
WR                                00000001
WREG                              00000009
WREG_SHAD                         00000FE5
WREN                              00000002
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  13:34:39         PAGE 46


SYMBOL TABLE
  LABEL                             VALUE 

WRERR                             00000003
WUE                               00000001
XSIZE                             00000030
YSIZE                             00000020
Z                                 00000002
Z_SHAD                            00000002
_.org_1_0069                      00000069
_.org_1_0097                      00000097
_.org_1_0099                      00000099
_.org_1_00AF                      000000AF
_.org_1_00B6                      000000B6
_.org_1_01ED                      000001ED
_.org_1_01FB                      000001FB
_.org_1_022B                      0000022B
_.org_1_0272                      00000272
_BOREN_NSLEEP                     00003DFF
_BOREN_OFF                        000039FF
_BOREN_ON                         00003FFF
_BOREN_SBODEN                     00003BFF
_BORV_19                          00003FFF
_BORV_HI                          00003BFF
_BORV_LO                          00003FFF
_CLKOUTEN_OFF                     00003FFF
_CLKOUTEN_ON                      000037FF
_CONFIG1                          00008007
_CONFIG2                          00008008
_CP_OFF                           00003FFF
_CP_ON                            00003F7F
_DEVID1                           00008006
_FOSC_ECH                         00003FFF
_FOSC_ECL                         00003FFD
_FOSC_ECM                         00003FFE
_FOSC_INTOSC                      00003FFC
_IDLOC0                           00008000
_IDLOC1                           00008001
_IDLOC2                           00008002
_IDLOC3                           00008003
_LPBOREN_OFF                      00003FFF
_LPBOREN_ON                       000037FF
_LVP_OFF                          00001FFF
_LVP_ON                           00003FFF
_MCLRE_OFF                        00003FBF
_MCLRE_ON                         00003FFF
_PLLEN_OFF                        00003EFF
_PLLEN_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FDF
_STVREN_OFF                       00003DFF
_STVREN_ON                        00003FFF
_WDTE_NSLEEP                      00003FF7
_WDTE_OFF                         00003FE7
_WDTE_ON                          00003FFF
_WDTE_SWDTEN                      00003FEF
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  13:34:39         PAGE 47


SYMBOL TABLE
  LABEL                             VALUE 

_WRT_ALL                          00003FFC
_WRT_BOOT                         00003FFE
_WRT_HALF                         00003FFD
_WRT_OFF                          00003FFF
__12F1572                         00000001
__DEBUG                           
__MPLAB_DEBUGGER_SIMULATOR        1
_stack                            00000020
accaH                             00000008
accaL                             00000007
accbH                             0000000A
accbL                             00000009
add                               
addpmadr                          
angle                             00000041
buttons                           0000000B
case                              
dec_n                             
digits                            00000274
disable_video                     
div10                             00000050
div10_loop                        00000054
drop                              
drop_n                            
dropped                           00000046
dup                               
enable_video                      
fetch                             
fill_buffer                       000000BE
fill_loop                         000000C6
flags                             00000002
game_init                         000001C3
get_flash_word                    00000111
get_nibble                        00000124
gt_255                            0000002A
gtimer                            00000003
hline                             000001A5
hline_done                        000001B2
inc_n                             
init                              0000023C
insert                            
isr                               00000004
isr_exit                          0000004C
labels                            000002BA
lcountH                           00000001
lcountL                           00000000
ldpmadr                           
lit                               
lt_256                            0000000E
main                              00000270
movtw                             
movwt                             
mult6                             00000060
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  13:34:39         PAGE 48


SYMBOL TABLE
  LABEL                             VALUE 

next_flash_word                   00000120
nibble                            0000000C
nibble_mask                       00000132
no_button                         0000008F
no_zero                           000001A3
over                              
pause                             
pick                              
pixels_loop                       000000AA
pop                               
print_char                        00000140
print_int                         0000018A
print_label                       0000016D
print_last                        0000019D
print_row                         00000136
print_tetrim                      0000014F
prt01                             0000015E
prt_lbl_done                      00000188
prt_lbl_loop                      0000016F
pstack_init                       
push                              
q                                 00000010
r                                 00000000
randH                             00000005
randL                             00000004
rcount                            00000006
read_flash                        0000011A
read_pad                          00000065
reserve                           
rot                               
row0                              00000131
row1                              0000012D
row2                              0000012F
rst                               0000000D
scoreH                            00000045
scoreL                            00000044
score_loop                        000001E9
set_video_ptr                     000000CC
start_timer                       
store                             
sub                               
swap                              
task1                             0000003F
task2                             00000046
tasks                             00000035
tbranch                           
tcyDelay                          
test_loop                         0000021F
tetrim                            00000040
tetriminos                        0000029A
tetris                            0000021D
ti                                00000158
try_a                             0000006C
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  13:34:39         PAGE 49


SYMBOL TABLE
  LABEL                             VALUE 

try_all                           0000006B
try_b                             00000072
try_button                        
try_dn                            0000008A
try_lt                            00000084
try_rt                            00000078
try_up                            0000007E
tx                                00000042
txt_lines                         000002C6
txt_score                         000002BD
ty                                00000043
video_buffer_b0                   00000050
video_buffer_b2                   000000A0
video_buffer_b3                   00000120
video_serialize                   00000090
vline                             000001B4
vline_done                        000001C1
vsync_end                         00000022
vsync_start                       0000001A
wait_timer                        
xor_pixel                         000000DE
xor_row                           000000FB
xor_row02                         0000010B
xor_row_done                      0000010F
xorp00                            000000EC
xorp01                            000000EF
zbranch                           

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,   102 suppressed

