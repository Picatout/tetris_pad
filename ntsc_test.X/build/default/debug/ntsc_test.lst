MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:00:20         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001     include p12f1572.inc
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Sep 13 2016
                      00005 ;  MPASM PIC12F1572 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2016 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01601         LIST
                      00002     
                      00003     radix dec
                      00004     errorlevel 0, -302, -305
                      00005     
8007   3FE7           00006     __config _CONFIG1, _FOSC_ECH&_WDTE_OFF
8008   1EFF           00007     __config _CONFIG2, _PLLEN_OFF&_LVP_OFF 
                      00008 
  01312D00            00009 FOSC equ 20000000 ; 20Mhz
  00000032            00010 TC equ 50 ; nanosecondes 
  004C4B40            00011 FCY equ FOSC/4    ; 5Mhz
  000000C8            00012 TCY equ 200 ; nanoseconds
                      00013 
                      00014 
  00000030            00015 XSIZE equ 48  ; horizontal pixels
  00000020            00016 YSIZE equ 32  ; vertical pixels
  00000006            00017 BPL equ XSIZE/8 ; bytes per line 
  000000C0            00018 BUFFER_SIZE equ  YSIZE*BPL  ; video buffer size
  00002030            00019 VIDEO_BUFFER equ 0x2000+(3*80-BUFFER_SIZE) ; buffer address
  00000028            00020 VERT_DLY equ 40
  0000003C            00021 FIRST_VIDEO equ VERT_DLY+20  ; first video output line
  000000BB            00022 LAST_VIDEO equ FIRST_VIDEO+4*YSIZE-1  ; last video output line
  0000019A            00023 PIXEL_TXREG equ TXREG
  00000011            00024 TX_PIR equ PIR1
  00000050            00025 HORZ_DLY equ 16*5  ; there is 5 TCY/µsec
                      00026  
  00000001            00027 VIDEO_OUT equ RA1
  0000010C            00028 VIDEO_LAT equ LATA
  00000002            00029 SYNC_OUT equ RA2 
  00000DB3            00030 SYNC_PWMDCL equ PWM3DCL ; duty cycle low byte
  00000DB4            00031 SYNC_PWMDCH equ PWM3DCH ; high byte    
  00000DB5            00032 SYNC_PWMPRL equ PWM3PRL ; pwm period low byte
  00000DB6            00033 SYNC_PWMPRH equ PWM3PRH ; high byte 
  00000DB1            00034 SYNC_PWMPH equ PWM3PH ; pwm phase
  00000DB7            00035 SYNC_PWMOF equ PWM3OF ; pwm offset
  00000DB9            00036 SYNC_PWMTMR equ PWM3TMR ; timer
  00000DBB            00037 SYNC_PWMCON equ PWM3CON ; control SFR
  00000DBE            00038 SYNC_PWMCLKCON equ PWM3CLKCON  ; clock control SFR
  00000DC0            00039 SYNC_PWMOFCON equ PWM3OFCON ; offset control SFR
  00000DBF            00040 SYNC_PWMLDCON equ PWM3LDCON ; load control SFR
  00000006            00041 SYNC_IE equ PWM3IE  ; interrupt enable bit
  00000006            00042 SYNC_IF equ PWM3IF  ; interrupt flag bit
  00000093            00043 SYNC_PIE equ PIE3 ; interrupt enable SFR
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:00:20         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000013            00044 SYNC_PIR equ PIR3 ; interrupt flag SFR 
  00000DBC            00045 SYNC_PWMINTE equ PWM3INTE
  00000DBD            00046 SYNC_PWMINTF equ PWM3INTF
                      00047  
  000004F5            00048 HORZ_PERIOD equ FOSC/15748-1 ; 15748 hertz
  0000005E            00049 HORZ_PULSE equ 4700/TC ; 4.7µsec 
  00000106            00050 LAST_LINE equ 262
                      00051 
                      00052 ; game pad resource
                      00053 ; use ADC 
  00000004            00054 PAD_PIN equ ANSA4
  00000003            00055 PAD_CHS equ 3 
  00000000            00056 BTN_UP equ 0
  00000001            00057 BTN_DN equ 1
  00000002            00058 BTN_LT equ 2
  00000003            00059 BTN_RT equ 3
  00000004            00060 BTN_A equ 4
  00000005            00061 BTN_B equ 5
                      00062 ; threshold level for each button
                      00063 ; lower_btn_thr >= BTN_? < btn_thr
                      00064 ; exemple: BTN_UP if RT_THR<=Vadc<UP_THR  
  00000400            00065 VDD equ 1024
  000000D8            00066 DN_THR equ 216 ;(VDD*(6/7+5/6)/2)>>2
  000000D1            00067 LT_THR equ 209 ; (VDD*(5/6+4/5)/2)>>2
  000000C6            00068 UP_THR equ 198 ;(VDD*(4/5+3/4)/2)>>2
  000000B5            00069 RT_THR equ 181 ;(VDD*(3/4+2/3)/2)>>2
  00000095            00070 B_THR  equ 149 ; (VDD*(2/3+1/2)/2)>>2
  00000040            00071 A_THR  equ 64 ;(VDD/4)>>2
                      00072  
                      00073 try_button macro btn, label 
                      00074     movlw btn
                      00075     subwf ADRESH,W
                      00076     skpnc
                      00077     bra label
                      00078     endm
                      00079     
                      00080 ;boolean flags 
  00000000            00081 F_VSYNC equ 0 ; vertical sync active
  00000001            00082 F_EVEN equ 1  ; even field
  00000002            00083 F_MUTEX equ 2 ; video routine lock out
  00000003            00084 F_GTMR equ 3  ; game timer active
  00000004            00085 F_GSTOP equ 4 ; game stopped
  00000005            00086 F_SND equ 5 ; sound timer active 
                      00087  
  000000B4            00088 LFSR_TAPS equ 0xB4 ; xor mask
                      00089  
                      00090 disable_video macro ; lockout video_serialize
                      00091     bsf flags, F_MUTEX
                      00092     endm
                      00093     
                      00094 enable_video macro ; unlock video_serialize
                      00095     bcf flags, F_MUTEX
                      00096     endm
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:00:20         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00097     
                      00098 tcyDelay macro n ; delay in TCY cycles  5TCY per µsec.  
                      00099     variable r=n%5
                      00100     variable q=n/5
                      00101     while r>1
                      00102     bra $+1
                      00103 r-=2
                      00104     endw
                      00105     if r==1
                      00106     nop
                      00107     endif
                      00108     if q
                      00109     movlw q
                      00110     bra $+1
                      00111     decfsz WREG
                      00112     bra $-2
                      00113     endif
                      00114     endm
                      00115 
                      00116 case macro n, label
                      00117     xorlw n
                      00118     skpnz
                      00119     bra label
                      00120     xorlw n
                      00121     endm
                      00122  
                      00123 ldpmadr macro addr ; load PMADR register
                      00124     movlw low(addr)
                      00125     movwf PMADRL
                      00126     movlw high(addr)
                      00127     movwf PMADRH
                      00128     endm
                      00129     
                      00130 addpmadr macro value ; add value to PMADR
                      00131     movlw value
                      00132     addwf PMADRL
                      00133     clrw
                      00134     addwfc PMADRH
                      00135     endm
                      00136     
                      00137 start_timer macro value ; start game timer
                      00138     movlw value
                      00139     movwf gtimer
                      00140     bsf flags, F_GTMR
                      00141     endm
                      00142     
                      00143 wait_timer macro ; wait timer expiration
                      00144     btfsc flags, F_GTMR
                      00145     bra $-1
                      00146     endm
                      00147     
                      00148 pause macro value ; suspend execution (busy loop)
                      00149     start_timer value
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:00:20         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00150     wait_timer
                      00151     endm
                      00152     
                      00153 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00154 ; software stack for arguments passing
                      00155 ; SP is Stack Pointer
                      00156 ; T is Top Of Stack
                      00157 #define SP FSR1
                      00158 #define T INDF1
  00000020            00159 STACK_SIZE equ 32
                      00160  
  0000001F            00161 S0 equ 0x1F ; stack base address - 1
                      00162 
                      00163 pstack_init macro ; initialise stack pointer
                      00164     clrf FSR1H
                      00165     movlw S0
                      00166     movwf FSR1L
                      00167     endm
                      00168     
                      00169 push macro   ; ( -- n ) push WREG on stack
                      00170     movwi ++SP
                      00171     endm
                      00172 
                      00173 pop macro   ; ( n -- )  pop T in WREG
                      00174     moviw SP--
                      00175     endm
                      00176     
                      00177 drop macro  ; ( n -- ) ; discard T
                      00178    addfsr SP,-1
                      00179    endm
                      00180 
                      00181 drop_n macro n  ; discard n elements  n<32
                      00182     addfsr SP,-n
                      00183     endm
                      00184     
                      00185 lit macro  n ; ( -- n ) ; push a literal
                      00186    movlw n
                      00187    movwi ++SP 
                      00188    endm
                      00189 
                      00190 dup macro ; ( n -- n n ) duplicate T
                      00191     movfw T
                      00192     movwi ++SP
                      00193     endm
                      00194     
                      00195 over macro ; ( n1 n2 -- n1 n2 n1 )
                      00196     moviw -1[SP]
                      00197     push
                      00198     endm
                      00199     
                      00200 swap macro ; exchange WREG and T
                      00201     xorwf T
                      00202     xorwf T,W
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:00:20         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00203     xorwf T
                      00204     endm
                      00205  
                      00206 store macro var ; ( n -- ) pop T in variable
                      00207    moviw SP--
                      00208    movwf var
                      00209    endm
                      00210    
                      00211 fetch macro var  ; ( -- n ) push var on stack
                      00212    movfw var
                      00213    movwi ++SP
                      00214    endm
                      00215 
                      00216 pick macro n  ; pick nth element of stack to WREG
                      00217     moviw -n[SP]
                      00218     endm
                      00219 
                      00220 insert macro n ;  insert WREG at position n on stack
                      00221    movwi -n[SP]
                      00222    endm
                      00223    
                      00224 movtw macro ; ( n -- n ) overwrite WREG with T
                      00225    movfw T
                      00226    endm
                      00227    
                      00228 movwt macro ; ( n1 -- n2 ) overwrite T with WREG
                      00229     movwf T
                      00230     endm
                      00231     
                      00232 add macro  ; add WREG to T result on T
                      00233     addwf T,F
                      00234    endm
                      00235    
                      00236 sub macro  ; substract WREG from T result on T
                      00237    subwf T,F
                      00238    endm
                      00239 
                      00240 inc_n macro n ; increament nth element of stack
                      00241     moviw -n[SP]
                      00242     incf WREG,F
                      00243     movwi -n[SP]
                      00244     endm
                      00245     
                      00246 dec_n macro n ; decreament nth element of stack
                      00247     moviw -n[SP]
                      00248     decf WREG,F
                      00249     movwi -n[SP]
                      00250     endm
                      00251     
                      00252 zbranch macro label ; branch if T == 0
                      00253     pop
                      00254     skpnz
                      00255     bra label
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:00:20         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00256     endm
                      00257     
                      00258 tbranch macro label ; branch if T != 0
                      00259     pop
                      00260     skpz
                      00261     bra label
                      00262     endm
                      00263     
                      00264 reserve macro n ; reserve n bytes on stack for local variables
                      00265     addfsr SP, n 
                      00266     endm
                      00267  
                      00268 rot macro ; ( n1 n2 n3 -- n2 n3 n1 )
                      00269     pick 2
                      00270     push        ; n1 n2 n3 n1
                      00271     pick 2
                      00272     insert 3   ;  n2 n2 n3 n1
                      00273     pick 1
                      00274     insert 2   ; n2 n3 n3 n1
                      00275     pop        ; n2 n3 n3 
                      00276     movwf T    ; n2 n3 n1
                      00277     endm
                      00278  
                      00279 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00280 ; parameter stack section    
                      00281 dstack udata 0x20
0020                  00282 _stack res 32
                      00283 ; game variables section 
                      00284 game_var udata 0x40 
                      00285 ; tetris game state
0040                  00286 tetrim res 1 ; active tretriminos 
0041                  00287 angle res 1 ; tetriminos rotatation angle in multiple of 90degr. {0:3}
0042                  00288 tx  res 1 ; x coordinate
0043                  00289 ty  res 1 ; y coordinate
0044                  00290 scoreL res 1 ; game score  16 bits
0045                  00291 scoreH res 1 
0046                  00292 dropped res 1 ; dropped lines
                      00293 
                      00294 ; These 3 sections are used for video pixels buffering
                      00295 ; with indirect access using FSR0
                      00296 ; to form a contiguous address space. 
                      00297 vb_b0    udata 0x50
0050                  00298 video_buffer_b0 res 32
                      00299 vb_b1    udata 0xA0
00A0                  00300 video_buffer_b2 res 80
                      00301 vb_b2    udata 0x120
0120                  00302 video_buffer_b3 res 80
                      00303  
                      00304  
                      00305     udata_shr
                      00306 ;scan lines counter 16 bits
0000                  00307 lcountL res 1
0001                  00308 lcountH res 1
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:00:20         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00309 ; boolean flags 
0002                  00310 flags res 1
                      00311 ; game timer
0003                  00312 gtimer res 1 
                      00313 ; lfsr PRNG register
0004                  00314 randL res 1 
0005                  00315 randH res 1 
                      00316 ; loop counter
0006                  00317 rcount res 1
                      00318 ; arithmetic accumulator A 16 bits
0007                  00319 accaL res 1
0008                  00320 accaH res 1
                      00321 ; arithmetic accumulator B 16 bits
0009                  00322 accbL res 1
000A                  00323 accbH res 1
                      00324 ; game pad buttons state
000B                  00325 buttons res 1
                      00326 ; flash reader next nibble {0-3}
000C                  00327 nibble res 1
                      00328  
                      00329 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
000D                  00330 rst: 
                      00331     org 0
0000   0023           00332     banksel ANSELA
0001   018C           00333     clrf ANSELA
0002   160C           00334     bsf ANSELA,PAD_PIN
0003   2???           00335     goto init
                      00336     
                      00337     org 4
0004                  00338 isr:
0004   003B           00339     banksel SYNC_PWMINTF
0005   103D           00340     bcf SYNC_PWMINTF,PRIF
0006   1C00           00341     btfss flags, F_VSYNC
0007   3???           00342     bra isr01
0008   08??           00343     movfw lcountL
0009   3A03           00344     xorlw 3
000A   1D03           00345     skpz
000B   3???           00346     bra isr_exit
000C                  00347 vsync_end:
000C   003B           00348     banksel SYNC_PWMDCL
000D   305E           00349     movlw HORZ_PULSE&0xff
000E   00B3           00350     movwf SYNC_PWMDCL
000F   3000           00351     movlw HORZ_PULSE>>8
0010   00B4           00352     movwf SYNC_PWMDCH
0011   17BF           00353     bsf SYNC_PWMLDCON,7
0012   1000           00354     bcf flags, F_VSYNC
0013   3???           00355     bra isr_exit
0014                  00356 isr01:    
0014   08??           00357     movfw lcountL
0015   07??           00358     addwf lcountH,W
0016   1D03           00359     skpz
0017   3???           00360     bra isr02
0018                  00361 vsync_start:
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:00:20         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0018   003B           00362     banksel SYNC_PWMDCL
0019   3097           00363     movlw (HORZ_PERIOD-HORZ_PULSE)&0xff
001A   00B3           00364     movwf SYNC_PWMDCL
001B   3004           00365     movlw (HORZ_PERIOD-HORZ_PULSE)>>8
001C   00B4           00366     movwf SYNC_PWMDCH
001D   17BF           00367     bsf SYNC_PWMLDCON,7
001E   1400           00368     bsf flags, F_VSYNC
001F   3???           00369     bra isr_exit
0020                  00370 isr02:
0020   1C00           00371     btfss lcountH,0
0021   3???           00372     bra lt_256
0022                  00373 gt_255: ; lcount>255
0022   3006           00374     movlw LAST_LINE&0xff
0023   1C80           00375     btfss flags,F_EVEN
0024   3E01           00376     addlw 1
0025   06??           00377     xorwf lcountL,W
0026   1D03           00378     skpz
0027   3???           00379     bra tasks
0028   01??           00380     clrf lcountL
0029   01??           00381     clrf lcountH
002A   3002           00382     movlw 1<<F_EVEN
002B   06??           00383     xorwf flags
002C   3???           00384     bra isr_exit
                      00385 ; round robin task scheduler
                      00386 ; each task execute once every 1/60th sec.
                      00387 ; condition:    
                      00388 ;   Task must complete inside
                      00389 ;   horizontal period.
002D                  00390 tasks:
002D   08??           00391     movfw lcountL
                      00392     case 1, task1
002E   3A01               M     xorlw 1
002F   1903               M     skpnz
0030   3???               M     bra task1
0031   3A01               M     xorlw 1
                      00393     case 2, task2
0032   3A02               M     xorlw 2
0033   1903               M     skpnz
0034   3???               M     bra task2
0035   3A02               M     xorlw 2
0036   3???           00394     bra isr_exit
0037                  00395 task1:   
                      00396 ; decrement game timer    
0037   08??           00397     movf gtimer,F ; 
0038   1903           00398     skpnz
0039   3???           00399     bra isr_exit
003A   03??           00400     decf gtimer,F ; 
003B   1903           00401     skpnz
003C   1180           00402     bcf flags, F_GTMR
003D   3???           00403     bra isr_exit ;
003E                  00404 task2:
                      00405 ; rotate lfsr
003E   36??           00406     lsrf randH
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:00:20         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

003F   0C??           00407     rrf randL
0040   1803           00408     skpnc
0041   30B4           00409     movlw LFSR_TAPS
0042   06??           00410     xorwf randH
0043   3???           00411     bra isr_exit 
0044                  00412 lt_256:
0044   1900           00413     btfsc flags, F_MUTEX
0045   3???           00414     bra isr_exit
0046   08??           00415     movfw lcountL
0047   3C3B           00416     sublw FIRST_VIDEO-1
0048   1803           00417     skpnc
0049   3???           00418     bra isr_exit
004A   08??           00419     movfw lcountL
004B   3CBB           00420     sublw LAST_VIDEO
004C   1C03           00421     skpc
004D   3???           00422     bra isr_exit
004E   2???           00423     call video_serialize
004F                  00424 isr_exit:
004F   0A??           00425     incf lcountL
0050   1903           00426     skpnz
0051   0A??           00427     incf lcountH
0052   0009           00428     retfie
                      00429 
                      00430 ; WREG*6  because BPL=6
                      00431 ; WREG*6=WREG*4+WREG*2    
0053                  00432 mult6: 
0053   00??           00433     movwf accaL
0054   35??           00434     lslf accaL    ; accaL=2*WREG
0055   35??           00435     lslf accaL,W  ; WREG=4*WREG
0056   07??           00436     addwf accaL,W ; WREG=6*WREG
0057   0008           00437     return
                      00438 
                      00439 ;read game pad
                      00440 ; store value in
                      00441 ; buttons
                      00442 ; a button is accepted if
                      00443 ; the Vadc value is below its threshold
0058                  00444 read_pad:
0058   0021           00445     banksel ADCON0
0059   141D           00446     bsf ADCON0,ADON
005A   149D           00447     bsf ADCON0,GO
005B   189D           00448     btfsc ADCON0,NOT_DONE
005C   3???           00449     bra $-1
005D   101D           00450     bcf ADCON0,ADON
                      00451 ; try each button from lower to upper
005E                  00452 try_all:
005E   01??           00453     clrf buttons
005F                  00454 try_a:    
                      00455     try_button A_THR, try_b
005F   3040               M     movlw A_THR
0060   021C               M     subwf ADRESH,W
0061   1803               M     skpnc
0062   3???               M     bra try_b
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:00:20         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0063   1600           00456     bsf buttons,BTN_A
0064   0008           00457     return
0065                  00458 try_b:
                      00459     try_button B_THR, try_rt
0065   3095               M     movlw B_THR
0066   021C               M     subwf ADRESH,W
0067   1803               M     skpnc
0068   3???               M     bra try_rt
0069   1680           00460     bsf buttons,BTN_B
006A   0008           00461     return
006B                  00462 try_rt:
                      00463     try_button RT_THR, try_up
006B   30B5               M     movlw RT_THR
006C   021C               M     subwf ADRESH,W
006D   1803               M     skpnc
006E   3???               M     bra try_up
006F   1580           00464     bsf buttons,BTN_RT
0070   0008           00465     return
0071                  00466 try_up:
                      00467     try_button UP_THR, try_lt
0071   30C6               M     movlw UP_THR
0072   021C               M     subwf ADRESH,W
0073   1803               M     skpnc
0074   3???               M     bra try_lt
0075   1400           00468     bsf buttons,BTN_UP
0076   0008           00469     return
0077                  00470 try_lt:
                      00471     try_button LT_THR, try_dn
0077   30D1               M     movlw LT_THR
0078   021C               M     subwf ADRESH,W
0079   1803               M     skpnc
007A   3???               M     bra try_dn
007B   1500           00472     bsf buttons,BTN_LT
007C   0008           00473     return
007D                  00474 try_dn:
                      00475     try_button DN_THR, no_button
007D   30D8               M     movlw DN_THR
007E   021C               M     subwf ADRESH,W
007F   1803               M     skpnc
0080   3???               M     bra no_button
0081   1480           00476     bsf buttons,BTN_DN
0082                  00477 no_button:
0082   0008           00478     return
                      00479     
                      00480     
                      00481 ; serialise video pixels to scan line
                      00482 ; due to timing constrain use specialized 
                      00483 ; division and multiplication    
0083                  00484 video_serialize: 
0083   0804           00485     movfw FSR0L
                      00486     push
0084   001C               M     movwi ++SP
0085   0805           00487     movfw FSR0H
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:00:20         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00488     push
0086   001C               M     movwi ++SP
                      00489     lit 0 ; ( x )
0087   3000               M    movlw 0
0088   001C               M    movwi ++SP 
                      00490     tcyDelay HORZ_DLY
  0000                    M     variable r=HORZ_DLY%5
  0010                    M     variable q=HORZ_DLY/5
                          M     while r>1
                          M     bra $+1
                          M r-=2
                          M     endw
                          M     if r==1
                          M     nop
                          M     endif
                          M     if q
0089   3010               M     movlw q
008A   3???               M     bra $+1
008B   0B89               M     decfsz WREG
008C   3???               M     bra $-2
                          M     endif
008D   3030           00491     movlw VIDEO_BUFFER&0xff
008E   0084           00492     movwf FSR0L
008F   3020           00493     movlw VIDEO_BUFFER>>8
0090   0085           00494     movwf FSR0H
0091   303C           00495     movlw FIRST_VIDEO
0092   02??           00496     subwf lcountL,W
0093   3689           00497     lsrf WREG
0094   3689           00498     lsrf WREG
0095   2???           00499     call mult6
0096   0784           00500     addwf FSR0L
0097   0103           00501     clrw
0098   3D85           00502     addwfc FSR0H
0099   3006           00503     movlw XSIZE/8
009A   00??           00504     movwf rcount
009B   0023           00505     banksel RCSTA
009C   179D           00506     bsf RCSTA,SPEN
009D                  00507 pixels_loop:    
009D   0012           00508     moviw FSR0++
009E   0023           00509     banksel PIXEL_TXREG
009F   009A           00510     movwf PIXEL_TXREG
00A0   0020           00511     banksel TX_PIR
00A1   1E11           00512     btfss TX_PIR,TXIF
00A2   3???           00513     bra $-1
00A3   0B??           00514     decfsz rcount
00A4   3???           00515     bra pixels_loop
00A5   0023           00516     banksel PIXEL_TXREG
00A6   019A           00517     clrf PIXEL_TXREG
00A7   0020           00518     banksel TX_PIR
00A8   1E11           00519     btfss TX_PIR,TXIF
00A9   3???           00520     bra $-1
00AA   0023           00521     banksel RCSTA
00AB   139D           00522     bcf RCSTA, SPEN
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:00:20         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00523     pop
00AC   0017               M     moviw SP--
00AD   0085           00524     movwf FSR0H
                      00525     pop
00AE   0017               M     moviw SP--
00AF   0084           00526     movwf FSR0L
00B0   0008           00527     return
                      00528 
                      00529 ; fill_buffer
                      00530 ; fill screen buffer with WREG value    
00B1                  00531 fill_buffer: ; ( c -- )
                      00532     disable_video
00B1   1500               M     bsf flags, F_MUTEX
00B2   3020           00533     movlw high(VIDEO_BUFFER)
00B3   0085           00534     movwf FSR0H
00B4   3030           00535     movlw low(VIDEO_BUFFER)
00B5   0084           00536     movwf FSR0L
00B6   30C0           00537     movlw BUFFER_SIZE
                      00538     push    ; c size
00B7   001C               M     movwi ++SP
                      00539     pick 1
00B8   3F7F               M     moviw -1[SP]
00B9                  00540 fill_loop:    
00B9   001A           00541     movwi FSR0++
00BA   0B81           00542     decfsz T
00BB   3???           00543     bra fill_loop
                      00544     drop_n 2
00BC   317E               M     addfsr SP,-2
                      00545     enable_video
00BD   1100               M     bcf flags, F_MUTEX
00BE   0008           00546     return
                      00547 
                      00548 ;set video pointer at 
                      00549 ; byte that contain pixel {x,y}
                      00550 ; output:
                      00551 ;   WREG = pixel offset, 0 left, 7 right  
                      00552 ;   Z=0 if offset==0    
00BF                  00553 set_video_ptr:  ; ( x y -- )
00BF   3020           00554     movlw high(VIDEO_BUFFER)
00C0   0085           00555     movwf FSR0H
00C1   3030           00556     movlw low(VIDEO_BUFFER)
00C2   0084           00557     movwf FSR0L
                      00558 ; buffer_addr+y*BPL
                      00559     pop         ; ( x y -- x )
00C3   0017               M     moviw SP--
00C4   2???           00560     call mult6
00C5   0784           00561     addwf FSR0L
00C6   0103           00562     clrw
00C7   3D85           00563     addwfc FSR0H
                      00564 ; buffer_addr+x/8
00C8   3601           00565     lsrf T,W   
00C9   3689           00566     lsrf WREG
00CA   3689           00567     lsrf WREG
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:00:20         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00CB   0784           00568     addwf FSR0L
00CC   0103           00569     clrw
00CD   3D85           00570     addwfc FSR0H
                      00571     pop            
00CE   0017               M     moviw SP--
00CF   3907           00572     andlw 7
00D0   0008           00573     return
                      00574 
                      00575 ;inverse le pixel    
                      00576 ; inputs:
                      00577 ;   {x,y} coordinates
                      00578 ; output:
                      00579 ;   WREG=collision flag    
00D1                  00580 xor_pixel: ; ( x y -- f )
                      00581     disable_video
00D1   1500               M     bsf flags, F_MUTEX
                      00582     pick 1
00D2   3F7F               M     moviw -1[SP]
                      00583     push
00D3   001C               M     movwi ++SP
                      00584     pick 1
00D4   3F7F               M     moviw -1[SP]
                      00585     push        ; x y x y
00D5   001C               M     movwi ++SP
00D6   0804           00586     movfw FSR0L
                      00587     insert 3
00D7   3FFD               M    movwi -3[SP]
00D8   0805           00588     movfw FSR0H
                      00589     insert 2    ; FSR0L FSR0H x y 
00D9   3FFE               M    movwi -2[SP]
00DA   2???           00590     call set_video_ptr  ;FSR0L FSR0H 
                      00591     push        ; FSR0L FSR0H bit
00DB   001C               M     movwi ++SP
00DC   3001           00592     movlw 0x1
00DD   1903           00593     skpnz
00DE   3???           00594     bra xorp01
00DF                  00595 xorp00:
00DF   3589           00596     lslf WREG
00E0   0B81           00597     decfsz T
00E1   3???           00598     bra xorp00
00E2                  00599 xorp01:
00E2   0680           00600     xorwf INDF0
00E3   0500           00601     andwf INDF0,W ; on screen bit value 0|1 for collision detection
00E4   0081           00602     movwf T
                      00603     pick 1  
00E5   3F7F               M     moviw -1[SP]
00E6   0085           00604     movwf FSR0H
                      00605     pick 2
00E7   3F7E               M     moviw -2[SP]
00E8   0084           00606     movwf FSR0L
                      00607     pop  ; collistion flag 0 -> no collision
00E9   0017               M     moviw SP--
                      00608     drop_n 2
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:00:20         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00EA   317E               M     addfsr SP,-2
                      00609     push ; return collision flag
00EB   001C               M     movwi ++SP
                      00610     enable_video
00EC   1100               M     bcf flags, F_MUTEX
00ED   0008           00611     return
                      00612 
                      00613 ; draw row of pixels
                      00614 ; draw up to 8 pixels.
                      00615 ; stop when r==0    
                      00616 ; input:
                      00617 ;   {x,y} left coordinates
                      00618 ;   r pixels to draw
                      00619 ;   f collision flag to be modified    
                      00620 ; output:
                      00621 ;   f=collision flag, return modified value   
00EE                  00622 xor_row: ; ( f r x y -- f )
                      00623     pick 2 ; check if r==0
00EE   3F7E               M     moviw -2[SP]
00EF   1903           00624     skpnz
00F0   3???           00625     bra xor_row_done ; r==0 done
00F1   3589           00626     lslf WREG
                      00627     insert 2  ; save shifted r
00F2   3FFE               M    movwi -2[SP]
00F3   1C03           00628     skpc
00F4   3???           00629     bra xor_row02 ; bit==0 no draw
                      00630     over ; f r x y x 
00F5   3F7F               M     moviw -1[SP]
                          M     push
00F6   001C               M     movwi ++SP
                      00631     over ; f r x y x y
00F7   3F7F               M     moviw -1[SP]
                          M     push
00F8   001C               M     movwi ++SP
00F9   2???           00632     call xor_pixel ; f r x y fn
                      00633     pick 4 ; pick flag
00FA   3F7C               M     moviw -4[SP]
00FB   0481           00634     iorwf T
                      00635     pop     
00FC   0017               M     moviw SP--
                      00636     insert 3 ; store modified flag
00FD   3FFD               M    movwi -3[SP]
00FE                  00637 xor_row02:
                      00638     inc_n 1  ; x+=1
00FE   3F7F               M     moviw -1[SP]
00FF   0A89               M     incf WREG,F
0100   3FFF               M     movwi -1[SP]
0101   3???           00639     bra xor_row
0102                  00640 xor_row_done: ; f r x y
                      00641     drop_n 3  ; only keep f
0102   317D               M     addfsr SP,-3
0103   0008           00642     return
                      00643 
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:00:20         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00644 ; read flash memory word
                      00645 ; input:
                      00646 ;   lo is low byte of address
                      00647 ;   hi is high byte of address
                      00648 ;   ofs offset in table (limited to 255 )    
                      00649 ; output:
                      00650 ;   PMDATH: PMDAL
                      00651 ;reset <nibble> variable    
0104                  00652 get_flash_word: ; ( ofs lo hi -- )
0104   0023           00653     banksel PMADR
                      00654     pop
0105   0017               M     moviw SP--
0106   0092           00655     movwf PMADRH
                      00656     pop
0107   0017               M     moviw SP--
0108   0091           00657     movwf PMADRL
                      00658     pop
0109   0017               M     moviw SP--
010A   0791           00659     addwf PMADRL
010B   0103           00660     clrw 
010C   3D92           00661     addwfc PMADRH
010D                  00662 read_flash:    
010D   1315           00663     bcf PMCON1,CFGS
010E   1415           00664     bsf PMCON1, RD
010F   0000           00665     nop
0110   0000           00666     nop
0111   01??           00667     clrf nibble
0112   0008           00668     return
                      00669 
                      00670 ; increament pointer 
                      00671 ; and read next flash word    
0113                  00672 next_flash_word:
0113   0A91           00673     incf PMADRL
0114   1903           00674     skpnz
0115   0A92           00675     incf PMADRH
0116   3???           00676     bra read_flash
                      00677     
                      00678 ;get nibble from PMDAT
                      00679 ; output:
                      00680 ;   stack nibble in bits 7:4
                      00681 ; increment nibble variable    
0117                  00682 get_nibble: ; ( -- nibble )
0117   3003           00683     movlw 3
0118   06??           00684     xorwf nibble,W
0119   1903           00685     skpnz ; if set all nibbles of this word read
011A   2???           00686     call next_flash_word
011B   08??           00687     movfw nibble
011C   1903           00688     skpnz
011D   3???           00689     bra row0
011E   0B89           00690     decfsz WREG
011F   3???           00691     bra row2
0120                  00692 row1:    
0120   0813           00693     movfw PMDATL
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:00:20         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0121   3???           00694     bra nibble_mask
0122                  00695 row2:
0122   0E13           00696     swapf PMDATL,W
0123   3???           00697     bra nibble_mask
0124                  00698 row0:    
0124   0E14           00699     swapf PMDATH,W
0125                  00700 nibble_mask:
0125   39F0           00701     andlw 0xf0
                      00702     push
0126   001C               M     movwi ++SP
0127   0A??           00703     incf nibble,F ; advance nibble pointer
0128   0008           00704     return
                      00705 
                      00706 ; print 4 pixels row
                      00707 ; inputs:
                      00708 ;   x,y left coordinates
                      00709 ;   f  collision flag
                      00710 ;   r  row index {0-2}
                      00711 ; advance y coordinate for next row    
0129                  00712 print_row: ; ( x y f -- x y f )     
0129   2???           00713     call get_nibble ; -- x y f n 
                      00714     pick 3 
012A   3F7D               M     moviw -3[SP]
                      00715     push    ; x y f n x
012B   001C               M     movwi ++SP
                      00716     pick 3
012C   3F7D               M     moviw -3[SP]
                      00717     push      ; x y f n x y
012D   001C               M     movwi ++SP
012E   2???           00718     call xor_row ; -- x y f
                      00719     inc_n 1 ; y+=1
012F   3F7F               M     moviw -1[SP]
0130   0A89               M     incf WREG,F
0131   3FFF               M     movwi -1[SP]
0132   0008           00720     return
                      00721     
                      00722 ; draw character 
                      00723 ; input:
                      00724 ;   x,y left/top coordinates
                      00725 ;   c   character to print    
0133                  00726 print_char: ; ( x y c -- )
0133   3581           00727     lslf T ; 2 words per digit
                      00728     lit low(digits)
0134   30??               M    movlw low(digits)
0135   001C               M    movwi ++SP 
                      00729     lit high(digits) ; x y ofs adrL adrH
0136   30??               M    movlw high(digits)
0137   001C               M    movwi ++SP 
0138   2???           00730     call get_flash_word  ; x y
                      00731     lit 0   ; x y f=0
0139   3000               M    movlw 0
013A   001C               M    movwi ++SP 
013B   2???           00732     call print_row
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:00:20         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

013C   2???           00733     call print_row
013D   2???           00734     call print_row 
013E   2???           00735     call print_row 
013F   2???           00736     call print_row 
                      00737     drop_n 3  ; ( x y f -- )
0140   317D               M     addfsr SP,-3
0141   0008           00738     return
                      00739 
                      00740 ; print a tetriminos
                      00741 ; input:
                      00742 ;   f collision flag
                      00743 ;   x,y  left/top coordinate
                      00744 ;   t tetriminos identifier
                      00745 ; output:
                      00746 ;   collision flag,  0 if no collision    
0142                  00747 print_tetrim: ; ( x y t  -- f )
0142   3018           00748     movlw 24
0143   0201           00749     subwf T,W
0144   1803           00750     skpnc
0145   3???           00751     bra ti ; I tetrominos
0146   30??           00752     movlw low(tetriminos)
                      00753     push
0147   001C               M     movwi ++SP
0148   30??           00754     movlw high(tetriminos)
                      00755     push
0149   001C               M     movwi ++SP
014A   3???           00756     bra prt01
014B                  00757 ti: ; special treatment for I tetriminos
014B   0081           00758     movwf T
014C   3581           00759     lslf T,F
014D   30??           00760     movlw low(I0)
                      00761     push
014E   001C               M     movwi ++SP
014F   30??           00762     movlw high(I0)
                      00763     push
0150   001C               M     movwi ++SP
0151                  00764 prt01:    
0151   2???           00765     call get_flash_word
                      00766     lit 0
0152   3000               M    movlw 0
0153   001C               M    movwi ++SP 
0154   2???           00767     call print_row ; x y f -- x y+1 f
0155   2???           00768     call print_row
0156   2???           00769     call print_row
0157   0023           00770     banksel PMDAT
0158   3030           00771     movlw 0x30
0159   0513           00772     andwf PMDAT,W
015A   1903           00773     skpnz
015B   2???           00774     call print_row
015C   0801           00775     movfw T
                      00776     insert 2
015D   3FFE               M    movwi -2[SP]
                      00777     drop_n 2  ; -- f
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:00:20         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

015E   317E               M     addfsr SP,-2
015F   0008           00778     return
                      00779     
                      00780 ;print a text line store in flash
                      00781 ; text terminated by 0xff
                      00782 ; input: 
                      00783 ;  x, y left coordinates
                      00784 ;  idx  index of message    
0160                  00785 print_label: ; ( x y idx -- )
                      00786     lit 0    ; x y idx i
0160   3000               M    movlw 0
0161   001C               M    movwi ++SP 
0162                  00787 prt_lbl_loop:
                      00788     dup      ; x y idx i i
0162   0801               M     movfw T
0163   001C               M     movwi ++SP
                      00789     pick 2   ; WREG=idx
0164   3F7E               M     moviw -2[SP]
0165   2???           00790     call labels ; x y idx i i -- x y idx i  
0166   1B89           00791     btfsc WREG,7
0167   3???           00792     bra prt_lbl_done
                      00793     push ; x y idx i c
0168   001C               M     movwi ++SP
                      00794     pick 4
0169   3F7C               M     moviw -4[SP]
                      00795     push    ; x y idx i c x 
016A   001C               M     movwi ++SP
                      00796     pick 4
016B   3F7C               M     moviw -4[SP]
                      00797     push    ; x y idx i c x y
016C   001C               M     movwi ++SP
                      00798     rot     ; x y idx i x y c
                          M     pick 2
016D   3F7E               M     moviw -2[SP]
                          M     push        ; n1 n2 n3 n1
016E   001C               M     movwi ++SP
                          M     pick 2
016F   3F7E               M     moviw -2[SP]
                          M     insert 3   ;  n2 n2 n3 n1
0170   3FFD               M    movwi -3[SP]
                          M     pick 1
0171   3F7F               M     moviw -1[SP]
                          M     insert 2   ; n2 n3 n3 n1
0172   3FFE               M    movwi -2[SP]
                          M     pop        ; n2 n3 n3 
0173   0017               M     moviw SP--
0174   0081               M     movwf T    ; n2 n3 n1
0175   2???           00799     call print_char ; -- x y idx i 
0176   0A81           00800     incf T
                      00801     pick 3    ; x
0177   3F7D               M     moviw -3[SP]
0178   3E04           00802     addlw 4   ; x+=4
                      00803     insert 3  
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:00:20         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0179   3FFD               M    movwi -3[SP]
017A   3???           00804     bra prt_lbl_loop
017B                  00805 prt_lbl_done:
                      00806     drop_n 4
017B   317C               M     addfsr SP,-4
017C   0008           00807     return
                      00808     
                      00809     
                      00810 ; draw horizontal line ( length  y x -- )
                      00811 ; inputs:
                      00812 ;   length of line
                      00813 ;   {x,y} left coordinates       
017D                  00814 hline:
                      00815     pick 2
017D   3F7E               M     moviw -2[SP]
017E   1903           00816     skpnz
017F   3???           00817     bra hline_done
0180   0389           00818     decf WREG
                      00819     insert 2
0181   3FFE               M    movwi -2[SP]
                      00820     dup     ; len y x x
0182   0801               M     movfw T
0183   001C               M     movwi ++SP
                      00821     pick 2
0184   3F7E               M     moviw -2[SP]
                      00822     push    ; len y x x y
0185   001C               M     movwi ++SP
0186   2???           00823     call xor_pixel
                      00824     drop
0187   317F               M    addfsr SP,-1
0188   0A81           00825     incf T  ; len y x+1
0189   3???           00826     bra hline
018A                  00827 hline_done:    
                      00828     drop_n 3
018A   317D               M     addfsr SP,-3
018B   0008           00829     return
                      00830 
                      00831 ;draw vertical line ( length x y -- )
                      00832 ; inputs:
                      00833 ;   length of line
                      00834 ;   {x,y} top coordinate
018C                  00835 vline:  ; len y x
                      00836     pick 2 
018C   3F7E               M     moviw -2[SP]
018D   1903           00837     skpnz
018E   3???           00838     bra vline_done
018F   0389           00839     decf WREG
                      00840     insert 2
0190   3FFE               M    movwi -2[SP]
                      00841     pick 1      
0191   3F7F               M     moviw -1[SP]
                      00842     push    ; len x y x
0192   001C               M     movwi ++SP
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:00:20         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00843     pick 1
0193   3F7F               M     moviw -1[SP]
                      00844     push    ; len x y x y
0194   001C               M     movwi ++SP
0195   2???           00845     call xor_pixel
                      00846     drop
0196   317F               M    addfsr SP,-1
0197   0A81           00847     incf T
0198   3???           00848     bra vline
0199                  00849 vline_done:
                      00850     drop_n 3
0199   317D               M     addfsr SP,-3
019A   0008           00851     return
                      00852     
  0000000A            00853 WELL_WIDTH equ 10
  00000016            00854 WELL_DEPTH equ 22 
019B                  00855 game_init:
                      00856     lit 0   ; lit 0 to clear screen black
019B   3000               M    movlw 0
019C   001C               M    movwi ++SP 
019D   2???           00857     call fill_buffer ; clear screen black
                      00858     lit WELL_DEPTH
019E   3016               M    movlw WELL_DEPTH
019F   001C               M    movwi ++SP 
                      00859     lit 0
01A0   3000               M    movlw 0
01A1   001C               M    movwi ++SP 
                      00860     lit 0
01A2   3000               M    movlw 0
01A3   001C               M    movwi ++SP 
01A4   2???           00861      call vline
                      00862     lit WELL_DEPTH
01A5   3016               M    movlw WELL_DEPTH
01A6   001C               M    movwi ++SP 
                      00863     lit WELL_WIDTH+1
01A7   300B               M    movlw WELL_WIDTH+1
01A8   001C               M    movwi ++SP 
                      00864     lit 0
01A9   3000               M    movlw 0
01AA   001C               M    movwi ++SP 
01AB   2???           00865     call vline
                      00866     lit WELL_WIDTH+2
01AC   300C               M    movlw WELL_WIDTH+2
01AD   001C               M    movwi ++SP 
                      00867     lit WELL_DEPTH
01AE   3016               M    movlw WELL_DEPTH
01AF   001C               M    movwi ++SP 
                      00868     lit 0
01B0   3000               M    movlw 0
01B1   001C               M    movwi ++SP 
01B2   2???           00869     call hline
                      00870     lit WELL_WIDTH+3 ; x
01B3   300D               M    movlw WELL_WIDTH+3
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:00:20         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01B4   001C               M    movwi ++SP 
                      00871     lit 0            ; y
01B5   3000               M    movlw 0
01B6   001C               M    movwi ++SP 
                      00872     lit LBL_SCORE            ; message index
01B7   3000               M    movlw LBL_SCORE
01B8   001C               M    movwi ++SP 
01B9   2???           00873     call print_label
                      00874     lit WELL_WIDTH+3 ; x
01BA   300D               M    movlw WELL_WIDTH+3
01BB   001C               M    movwi ++SP 
                      00875     lit 12           ; y
01BC   300C               M    movlw 12
01BD   001C               M    movwi ++SP 
                      00876     lit LBL_LINES       ; message index
01BE   3001               M    movlw LBL_LINES
01BF   001C               M    movwi ++SP 
01C0   2???           00877     call print_label
                      00878     lit WELL_WIDTH+11 ; x
01C1   3015               M    movlw WELL_WIDTH+11
01C2   001C               M    movwi ++SP 
                      00879     lit 6            ; y
01C3   3006               M    movlw 6
01C4   001C               M    movwi ++SP 
                      00880     lit LBL_ZEROS       ; message index
01C5   3002               M    movlw LBL_ZEROS
01C6   001C               M    movwi ++SP 
01C7   2???           00881     call print_label
                      00882     lit WELL_WIDTH+11 ; x
01C8   3015               M    movlw WELL_WIDTH+11
01C9   001C               M    movwi ++SP 
                      00883     lit 18           ; y
01CA   3012               M    movlw 18
01CB   001C               M    movwi ++SP 
                      00884     lit LBL_ZEROS       ; message index
01CC   3002               M    movlw LBL_ZEROS
01CD   001C               M    movwi ++SP 
01CE   2???           00885     call print_label
                      00886     
                      00887 ; variables initialization
01CF   0020           00888     banksel 0
01D0   3002           00889     movlw 2
01D1   00??           00890     movwf tx
01D2   01??           00891     clrf ty
01D3   01??           00892     clrf tetrim
01D4   01??           00893     clrf angle
01D5   01??           00894     clrf scoreL
01D6   01??           00895     clrf scoreH
01D7   01??           00896     clrf dropped
01D8   01??           00897     clrf buttons
01D9   1600           00898     bsf flags,F_GSTOP
01DA   0008           00899     return
                      00900     
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:00:20         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01DB                  00901 tetris:
                      00902 ; test print_tetrim
                      00903     pause 60
                          M     start_timer 60
01DB   303C               M     movlw 60
01DC   00??               M     movwf gtimer
01DD   1580               M     bsf flags, F_GTMR
                          M     wait_timer
01DE   1980               M     btfsc flags, F_GTMR
01DF   3???               M     bra $-1
                      00904     lit 0 ; tetrimino id
01E0   3000               M    movlw 0
01E1   001C               M    movwi ++SP 
01E2                  00905 test_loop:    
                      00906     lit 4 ; x
01E2   3004               M    movlw 4
01E3   001C               M    movwi ++SP 
                      00907     lit 0 ; y
01E4   3000               M    movlw 0
01E5   001C               M    movwi ++SP 
                      00908     pick 2
01E6   3F7E               M     moviw -2[SP]
                      00909     push    ; -- t x y t 
01E7   001C               M     movwi ++SP
01E8   2???           00910     call print_tetrim
                      00911     drop ; flag
01E9   317F               M    addfsr SP,-1
                      00912     pause  30
                          M     start_timer 30
01EA   301E               M     movlw 30
01EB   00??               M     movwf gtimer
01EC   1580               M     bsf flags, F_GTMR
                          M     wait_timer
01ED   1980               M     btfsc flags, F_GTMR
01EE   3???               M     bra $-1
                      00913     lit 4 ; x
01EF   3004               M    movlw 4
01F0   001C               M    movwi ++SP 
                      00914     lit 0 ; y
01F1   3000               M    movlw 0
01F2   001C               M    movwi ++SP 
                      00915     pick 2
01F3   3F7E               M     moviw -2[SP]
                      00916     push
01F4   001C               M     movwi ++SP
01F5   2???           00917     call print_tetrim
                      00918     drop ; flag
01F6   317F               M    addfsr SP,-1
01F7   0A81           00919     incf T
01F8   301C           00920     movlw 28
01F9   0201           00921     subwf T,W
01FA   1C03           00922     skpc
01FB   3???           00923     bra test_loop
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:00:20         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01FC   0181           00924     clrf T
01FD   3???           00925     bra test_loop
01FE   0008           00926     return
                      00927     
01FF                  00928 init:
                      00929     pstack_init
01FF   0187               M     clrf FSR1H
0200   301F               M     movlw S0
0201   0086               M     movwf FSR1L
                      00930 ; ADC configuration
0202   0021           00931     banksel ADCON0
0203   300C           00932     movlw (PAD_CHS<<CHS0)
0204   009D           00933     movwf ADCON0
0205   3020           00934     movlw (2<<ADCS0)
0206   009E           00935     movwf ADCON1
                      00936 ;;;;;;;;;;;;;;;;;;;;;    
0207   0021           00937     banksel TRISA
0208   110C           00938     bcf TRISA, SYNC_OUT
0209   108C           00939     bcf TRISA, VIDEO_OUT
020A   0022           00940     banksel VIDEO_LAT
020B   108C           00941     bcf VIDEO_LAT,VIDEO_OUT
                      00942 ;configure EUSART in sychronsous mode
                      00943 ;to use as pixel serializer
020C   0023           00944     banksel SPBRG
020D   3001           00945     movlw 1
020E   009B           00946     movwf SPBRGL
020F   019C           00947     clrf SPBRGH
0210   019A           00948     clrf TXREG
0211   30B0           00949     movlw (1<<SYNC)|(1<<CSRC)|(1<<TXEN)
0212   009E           00950     movwf TXSTA
0213   179D           00951     bsf RCSTA, SPEN
0214   30CF           00952     movlw ~((1<<CREN)|(1<<SREN))
0215   059D           00953     andwf RCSTA
                      00954 ; configure pwm video sync for horizontal period
0216   003B           00955     banksel SYNC_PWMDCH
0217   01B1           00956     clrf SYNC_PWMPH
0218   01B2           00957     clrf SYNC_PWMPH+1
0219   01BF           00958     clrf SYNC_PWMLDCON
021A   30F5           00959     movlw HORZ_PERIOD&0XFF
021B   00B5           00960     movwf SYNC_PWMPRL
021C   3004           00961     movlw HORZ_PERIOD>>8
021D   00B6           00962     movwf SYNC_PWMPRH
021E   01BE           00963     clrf SYNC_PWMCLKCON
021F   30D0           00964     movlw (3<<OE)|(1<<POL)
0220   00BB           00965     movwf SYNC_PWMCON
0221   305E           00966     movlw HORZ_PULSE&0xff
0222   00B3           00967     movwf SYNC_PWMDCL
0223   3000           00968     movlw HORZ_PULSE>>8
0224   00B4           00969     movwf SYNC_PWMDCH
0225   17BF           00970     bsf SYNC_PWMLDCON,7
                      00971    ;enable video interrupt on period match
0226   103D           00972     bcf SYNC_PWMINTF,PRIF
0227   143C           00973     bsf SYNC_PWMINTE,PRIE
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:00:20         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00974     ; enable peripheral interrupt
0228   0021           00975     banksel SYNC_PIE
0229   1713           00976     bsf SYNC_PIE,SYNC_IE
                      00977     ;enable interrupts
022A   30C0           00978     movlw (1<<GIE)|(1<<PEIE)
022B   008B           00979     movwf INTCON
022C   01??           00980     clrf lcountL
022D   01??           00981     clrf lcountH
022E   01??           00982     clrf flags
                      00983     ; seed lfsr PRNG
022F   30AC           00984     movlw 0xAC
0230   00??           00985     movwf randL
0231   30E1           00986     movlw 0xE1
0232   00??           00987     movwf randH
                      00988 
                      00989     
0233                  00990 main:
0233   2???           00991     call game_init
0234   2???           00992     call tetris
0235   3???           00993     bra $
0236   3???           00994     bra main
                      00995   
                      00996 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00997 ;   data tables
                      00998 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00999 
                      01000 ; **************** encoding ************************************************
                      01001 ; enhanced PIC instructions are coded on 14 bits
                      01002 ; these 14 bits can be read as data using flash memory
                      01003 ; writing/reading mechanism, see datasheet chapter 10 for detail.
                      01004 ; the 'dw' assembler directive encode data in those 14 bits contrary to 'dt'
                      01005 ; directive which encode a single byte as a RETLW instruction.
                      01006 ; So we get a 50% compression by encoding 3 nibbles/flash word. 
                      01007 ; the encoding used in the following tables is as follow:    
                      01008 ; bits 13:12  number of nibbles where 0 means there is more than 3 nibbles
                      01009 ; in this data chunk so 1 or more other words follow this one.    
                      01010 ; other 12 bits are sliced in 4 bits nibbles.
                      01011 ;****************************************************************************
                      01012 
0237                  01013 digits: ; each digit is 5 rows
0237   0EAA 2AE0      01014     dw 0x0EAA,0x2AE0 ; 0
0239   04C4 24E0      01015     dw 0x04C4,0x24E0 ; 1
023B   0E2E 28E0      01016     dw 0x0E2E,0x28E0 ; 2
023D   0E2E 22E0      01017     dw 0x0E2E,0x22E0 ; 3
023F   0AAE 2220      01018     dw 0x0AAE,0x2220 ; 4
0241   0E8E 22E0      01019     dw 0x0E8E,0x22E0 ; 5
0243   088E 2AE0      01020     dw 0x088E,0x2AE0 ; 6
0245   0E22 2220      01021     dw 0x0E22,0x2220 ; 7
0247   0EAE 2AE0      01022     dw 0x0EAE,0x2AE0 ; 8
0249   0EAE 2220      01023     dw 0x0EAE,0x2220 ; 9
                      01024 ; letters needed for 'SCORE' and 'LINES" labels
024B   3688 2860      01025     dw 0x3688,0x2860 ; C  code 10
024D   3E8E 28E0      01026     dw 0x3E8E,0x28E0 ; E  code 11
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:00:20         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

024F   3E44 24E0      01027     dw 0x3E44,0x24E0 ; I  code 12
0251   3888 28E0      01028     dw 0x3888,0x28E0 ; L  code 13
0253   38CA 2AA0      01029     dw 0x38CA,0x2AA0 ; N  code 14
0255   34AA 2A40      01030     dw 0x34AA,0x2A40 ; O  code 15
0257   38EA 2880      01031     dw 0x38EA,0x2880 ; R  code 16
0259   368C 22C0      01032     dw 0x368C,0x22C0 ; S  code 17
025B   3040 2400      01033     dw 0x3040,0x2400 ; :  code 18
                      01034 
                      01035 ; comments notation: Rn clockwise rotation n*90 degr.    
                      01036 ; note that vertical I as 4 rows so it needs 2 words    
025D                  01037 tetriminos: 
025D   3445           01038     dw 0x3445 ; L R0
025E   2E80           01039     dw 0x2E80 ; L R1
025F   3622           01040     dw 0x3622 ; L R2
0260   22E0           01041     dw 0x22E0 ; L R3
0261   3226           01042     dw 0x3226 ; J R0
0262   28E0           01043     dw 0x28E0 ; J R1
0263   3644           01044     dw 0x3644 ; J R2
0264   2E20           01045     dw 0x2E20 ; J R3
0265   2660           01046     dw 0x2660 ; O R0 
0266   2660           01047     dw 0x2660 ; O R1
0267   2660           01048     dw 0x2660 ; O R2
0268   2660           01049     dw 0x2660 ; O R3
0269   2360           01050     dw 0x2360 ; S R0
026A   3462           01051     dw 0x3462 ; S R1
026B   2360           01052     dw 0x2360 ; S R2
026C   3462           01053     dw 0x3462 ; S R3
026D   2E40           01054     dw 0x2E40 ; T R0
026E   34C4           01055     dw 0x34c4 ; T R1
026F   24E0           01056     dw 0x24E0 ; T R2
0270   3464           01057     dw 0x3464 ; T R3
0271   2C60           01058     dw 0x2C60 ; Z R0
0272   3264           01059     dw 0x3264 ; Z R1
0273   2C60           01060     dw 0x2C60 ; Z R3
0274   3264           01061     dw 0x3264 ; Z R4
                      01062 ; annoying! I tetriminos need a special treatment 
                      01063 ; because vertical I need 2 words for encoding.   
0275   0222 1200      01064 I0: dw 0x0222,0x1200 ; I R0  
0277   1F00 1000      01065     dw 0x1F00,0x1000 ; I R1  second word is filling for alignment
0279   0222 1200      01066     dw 0x0222,0x1200 ; I R2
027B   1F00 1000      01067     dw 0x1F00,0x1000 ; I R3  
                      01068 
  00000000            01069 LBL_SCORE equ 0
  00000001            01070 LBL_LINES equ 1
  00000002            01071 LBL_ZEROS equ 2
                      01072  
027D                  01073 labels:
027D   000B           01074     brw
027E   3???           01075     bra txt_score
027F   3???           01076     bra txt_lines
0280   3???           01077     bra txt_zeros
                      01078     
0281                  01079 txt_score:
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:00:20         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01080     pop
0281   0017               M     moviw SP--
0282   000B           01081     brw
0283   3411 340A 340F 01082     dt 17,10,15,16,11,18,255
       3410 340B 3412 
       34FF 
                      01083     
028A                  01084 txt_lines:
                      01085     pop
028A   0017               M     moviw SP--
028B   000B           01086     brw
028C   340D 340C 340E 01087     dt 13,12,14,11,17,18,255
       340B 3411 3412 
       34FF 
                      01088 
0293                  01089 txt_zeros:
                      01090     pop
0293   0017               M     moviw SP--
0294   000B           01091     brw
0295   3400 3400 3400 01092     dt 0,0,0,0,0,0,255
       3400 3400 3400 
       34FF 
                      01093     
3FE7 1EFF             01094     end
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:00:20         PAGE 27


SYMBOL TABLE
  LABEL                             VALUE 

ABDEN                             00000000
ABDOVF                            00000007
ADCON0                            0000009D
ADCON1                            0000009E
ADCON2                            0000009F
ADCS0                             00000004
ADCS1                             00000005
ADCS2                             00000006
ADDEN                             00000003
ADFM                              00000007
ADFVR0                            00000000
ADFVR1                            00000001
ADGO                              00000001
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADPREF0                           00000000
ADPREF1                           00000001
ADRES                             0000009B
ADRESH                            0000009C
ADRESL                            0000009B
ANSA0                             00000000
ANSA1                             00000001
ANSA2                             00000002
ANSA4                             00000004
ANSELA                            0000018C
APFCON                            0000011D
APFCON0                           0000011D
A_THR                             00000040
BAUDCON                           0000019F
BORCON                            00000116
BORFS                             00000006
BORRDY                            00000000
BPL                               00000006
BRG16                             00000003
BRGH                              00000002
BSR                               00000008
BSR0                              00000000
BSR1                              00000001
BSR2                              00000002
BSR3                              00000003
BSR4                              00000004
BSR_SHAD                          00000FE6
BTN_A                             00000004
BTN_B                             00000005
BTN_DN                            00000001
BTN_LT                            00000002
BTN_RT                            00000003
BTN_UP                            00000000
BUFFER_SIZE                       000000C0
B_THR                             00000095
C                                 00000000
C1HYS                             00000001
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:00:20         PAGE 28


SYMBOL TABLE
  LABEL                             VALUE 

C1IE                              00000005
C1IF                              00000005
C1INTN                            00000006
C1INTP                            00000007
C1NCH0                            00000000
C1NCH1                            00000001
C1NCH2                            00000002
C1OE                              00000005
C1ON                              00000007
C1OUT                             00000006
C1PCH0                            00000004
C1PCH1                            00000005
C1POL                             00000004
C1SP                              00000002
C1SYNC                            00000000
CDAFVR0                           00000002
CDAFVR1                           00000003
CFGS                              00000006
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CHS4                              00000006
CM1CON0                           00000111
CM1CON1                           00000112
CMOUT                             00000115
CREN                              00000004
CS0                               00000000
CS1                               00000001
CSRC                              00000007
CWG1CON0                          00000693
CWG1CON1                          00000694
CWG1CON2                          00000695
CWG1DBF                           00000692
CWG1DBF0                          00000000
CWG1DBF1                          00000001
CWG1DBF2                          00000002
CWG1DBF3                          00000003
CWG1DBF4                          00000004
CWG1DBF5                          00000005
CWG1DBR                           00000691
CWG1DBR0                          00000000
CWG1DBR1                          00000001
CWG1DBR2                          00000002
CWG1DBR3                          00000003
CWG1DBR4                          00000004
CWG1DBR5                          00000005
CWGASEL                           00000006
CWGBSEL                           00000005
C_SHAD                            00000000
DACCON0                           00000118
DACCON1                           00000119
DACEN                             00000007
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:00:20         PAGE 29


SYMBOL TABLE
  LABEL                             VALUE 

DACLPS                            00000006
DACOE                             00000005
DACPSS0                           00000002
DACPSS1                           00000003
DACR0                             00000000
DACR1                             00000001
DACR2                             00000002
DACR3                             00000003
DACR4                             00000004
DC                                00000001
DCIE                              00000001
DCIF                              00000001
DC_SHAD                           00000001
DN_THR                            000000D8
EN                                00000007
F                                 00000001
FCY                               004C4B40
FERR                              00000002
FIRST_VIDEO                       0000003C
FOSC                              01312D00
FREE                              00000004
FSR0                              00000004
FSR0H                             00000005
FSR0H_SHAD                        00000FE9
FSR0L                             00000004
FSR0L_SHAD                        00000FE8
FSR0_SHAD                         00000FE8
FSR1                              00000006
FSR1H                             00000007
FSR1H_SHAD                        00000FEB
FSR1L                             00000006
FSR1L_SHAD                        00000FEA
FSR1_SHAD                         00000FEA
FVRCON                            00000117
FVREN                             00000007
FVRRDY                            00000006
F_EVEN                            00000001
F_GSTOP                           00000004
F_GTMR                            00000003
F_MUTEX                           00000002
F_SND                             00000005
F_VSYNC                           00000000
G1ARSEN                           00000006
G1ASDLA0                          00000004
G1ASDLA1                          00000005
G1ASDLB0                          00000006
G1ASDLB1                          00000007
G1ASDSC1                          00000002
G1ASDSFLT                         00000001
G1ASE                             00000007
G1CS0                             00000000
G1EN                              00000007
G1IS0                             00000000
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:00:20         PAGE 30


SYMBOL TABLE
  LABEL                             VALUE 

G1IS1                             00000001
G1IS2                             00000002
G1OEA                             00000005
G1OEB                             00000006
G1POLA                            00000003
G1POLB                            00000004
GIE                               00000007
GO                                00000001
GO_NOT_DONE                       00000001
HFIOFL                            00000003
HFIOFR                            00000004
HFIOFS                            00000000
HORZ_DLY                          00000050
HORZ_PERIOD                       000004F5
HORZ_PULSE                        0000005E
I0                                00000275
INDF0                             00000000
INDF1                             00000001
INLVLA                            0000038C
INLVLA0                           00000000
INLVLA1                           00000001
INLVLA2                           00000002
INLVLA3                           00000003
INLVLA4                           00000004
INLVLA5                           00000005
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IOCAF                             00000393
IOCAF0                            00000000
IOCAF1                            00000001
IOCAF2                            00000002
IOCAF3                            00000003
IOCAF4                            00000004
IOCAF5                            00000005
IOCAN                             00000392
IOCAN0                            00000000
IOCAN1                            00000001
IOCAN2                            00000002
IOCAN3                            00000003
IOCAN4                            00000004
IOCAN5                            00000005
IOCAP                             00000391
IOCAP0                            00000000
IOCAP1                            00000001
IOCAP2                            00000002
IOCAP3                            00000003
IOCAP4                            00000004
IOCAP5                            00000005
IOCIE                             00000003
IOCIF                             00000000
IRCF0                             00000003
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:00:20         PAGE 31


SYMBOL TABLE
  LABEL                             VALUE 

IRCF1                             00000004
IRCF2                             00000005
IRCF3                             00000006
LAST_LINE                         00000106
LAST_VIDEO                        000000BB
LATA                              0000010C
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA4                             00000004
LATA5                             00000005
LBL_LINES                         00000001
LBL_SCORE                         00000000
LBL_ZEROS                         00000002
LDA                               00000007
LDS0                              00000000
LDS1                              00000001
LDT                               00000006
LFIOFR                            00000001
LFSR_TAPS                         000000B4
LT_THR                            000000D1
LWLO                              00000005
MC1OUT                            00000000
MFIOFR                            00000002
MODE0                             00000002
MODE1                             00000003
MPWM1EN                           00000000
MPWM1LD                           00000000
MPWM1OUT                          00000000
MPWM2EN                           00000001
MPWM2LD                           00000001
MPWM2OUT                          00000001
MPWM3EN                           00000002
MPWM3LD                           00000002
MPWM3OUT                          00000002
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RI                            00000002
NOT_RMCLR                         00000003
NOT_RWDT                          00000004
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_WPUEN                         00000007
ODA0                              00000000
ODA1                              00000001
ODA2                              00000002
ODA4                              00000004
ODA5                              00000005
ODCONA                            0000028C
OE                                00000006
OERR                              00000001
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:00:20         PAGE 32


SYMBOL TABLE
  LABEL                             VALUE 

OFIE                              00000003
OFIF                              00000003
OFM0                              00000005
OFM1                              00000006
OFO                               00000004
OFS0                              00000000
OFS1                              00000001
OPTION_REG                        00000095
OSCCON                            00000099
OSCSTAT                           0000009A
OSCTUNE                           00000098
OSTS                              00000005
OUT                               00000005
P1SEL                             00000000
P2SEL                             00000001
PAD_CHS                           00000003
PAD_PIN                           00000004
PCL                               00000002
PCLATH                            0000000A
PCLATH_SHAD                       00000FE7
PCON                              00000096
PEIE                              00000006
PHIE                              00000002
PHIF                              00000002
PIE1                              00000091
PIE2                              00000092
PIE3                              00000093
PIR1                              00000011
PIR2                              00000012
PIR3                              00000013
PIXEL_TXREG                       0000019A
PLLR                              00000006
PMADR                             00000191
PMADRH                            00000192
PMADRL                            00000191
PMCON1                            00000195
PMCON2                            00000196
PMDAT                             00000193
PMDATH                            00000194
PMDATL                            00000193
POL                               00000004
PORTA                             0000000C
PR2                               0000001B
PRIE                              00000000
PRIF                              00000000
PS0_OPTION_REG                    00000000
PS0_PWM1CLKCON                    00000004
PS0_PWM2CLKCON                    00000004
PS0_PWM3CLKCON                    00000004
PS1_OPTION_REG                    00000001
PS1_PWM1CLKCON                    00000005
PS1_PWM2CLKCON                    00000005
PS1_PWM3CLKCON                    00000005
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:00:20         PAGE 33


SYMBOL TABLE
  LABEL                             VALUE 

PS2_OPTION_REG                    00000002
PS2_PWM1CLKCON                    00000006
PS2_PWM2CLKCON                    00000006
PS2_PWM3CLKCON                    00000006
PSA                               00000003
PWM1CLKCON                        00000D9E
PWM1CON                           00000D9B
PWM1CS0                           00000000
PWM1CS1                           00000001
PWM1DC                            00000D93
PWM1DCH                           00000D94
PWM1DCH0                          00000000
PWM1DCH1                          00000001
PWM1DCH2                          00000002
PWM1DCH3                          00000003
PWM1DCH4                          00000004
PWM1DCH5                          00000005
PWM1DCH6                          00000006
PWM1DCH7                          00000007
PWM1DCIE                          00000001
PWM1DCIF                          00000001
PWM1DCL                           00000D93
PWM1DCL0                          00000000
PWM1DCL1                          00000001
PWM1DCL2                          00000002
PWM1DCL3                          00000003
PWM1DCL4                          00000004
PWM1DCL5                          00000005
PWM1DCL6                          00000006
PWM1DCL7                          00000007
PWM1EN                            00000007
PWM1EN_A                          00000000
PWM1IE                            00000004
PWM1IF                            00000004
PWM1INTCON                        00000D9C
PWM1INTE                          00000D9C
PWM1INTF                          00000D9D
PWM1INTFLG                        00000D9D
PWM1LD                            00000007
PWM1LDA_A                         00000000
PWM1LDCON                         00000D9F
PWM1LDM                           00000006
PWM1LDS0                          00000000
PWM1LDS1                          00000001
PWM1MODE0                         00000002
PWM1MODE1                         00000003
PWM1OE                            00000006
PWM1OF                            00000D97
PWM1OFCON                         00000DA0
PWM1OFH                           00000D98
PWM1OFH0                          00000000
PWM1OFH1                          00000001
PWM1OFH2                          00000002
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:00:20         PAGE 34


SYMBOL TABLE
  LABEL                             VALUE 

PWM1OFH3                          00000003
PWM1OFH4                          00000004
PWM1OFH5                          00000005
PWM1OFH6                          00000006
PWM1OFH7                          00000007
PWM1OFIE                          00000003
PWM1OFIF                          00000003
PWM1OFL                           00000D97
PWM1OFL0                          00000000
PWM1OFL1                          00000001
PWM1OFL2                          00000002
PWM1OFL3                          00000003
PWM1OFL4                          00000004
PWM1OFL5                          00000005
PWM1OFL6                          00000006
PWM1OFL7                          00000007
PWM1OFM0                          00000005
PWM1OFM1                          00000006
PWM1OFMC                          00000004
PWM1OFS0                          00000000
PWM1OFS1                          00000001
PWM1OUT                           00000005
PWM1OUT_A                         00000000
PWM1PH                            00000D91
PWM1PHH                           00000D92
PWM1PHH0                          00000000
PWM1PHH1                          00000001
PWM1PHH2                          00000002
PWM1PHH3                          00000003
PWM1PHH4                          00000004
PWM1PHH5                          00000005
PWM1PHH6                          00000006
PWM1PHH7                          00000007
PWM1PHIE                          00000002
PWM1PHIF                          00000002
PWM1PHL                           00000D91
PWM1PHL0                          00000000
PWM1PHL1                          00000001
PWM1PHL2                          00000002
PWM1PHL3                          00000003
PWM1PHL4                          00000004
PWM1PHL5                          00000005
PWM1PHL6                          00000006
PWM1PHL7                          00000007
PWM1POL                           00000004
PWM1PR                            00000D95
PWM1PRH                           00000D96
PWM1PRH0                          00000000
PWM1PRH1                          00000001
PWM1PRH2                          00000002
PWM1PRH3                          00000003
PWM1PRH4                          00000004
PWM1PRH5                          00000005
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:00:20         PAGE 35


SYMBOL TABLE
  LABEL                             VALUE 

PWM1PRH6                          00000006
PWM1PRH7                          00000007
PWM1PRIE                          00000000
PWM1PRIF                          00000000
PWM1PRL                           00000D95
PWM1PRL0                          00000000
PWM1PRL1                          00000001
PWM1PRL2                          00000002
PWM1PRL3                          00000003
PWM1PRL4                          00000004
PWM1PRL5                          00000005
PWM1PRL6                          00000006
PWM1PRL7                          00000007
PWM1PS0                           00000004
PWM1PS1                           00000005
PWM1PS2                           00000006
PWM1TMR                           00000D99
PWM1TMRH                          00000D9A
PWM1TMRH0                         00000000
PWM1TMRH1                         00000001
PWM1TMRH2                         00000002
PWM1TMRH3                         00000003
PWM1TMRH4                         00000004
PWM1TMRH5                         00000005
PWM1TMRH6                         00000006
PWM1TMRH7                         00000007
PWM1TMRL                          00000D99
PWM1TMRL0                         00000000
PWM1TMRL1                         00000001
PWM1TMRL2                         00000002
PWM1TMRL3                         00000003
PWM1TMRL4                         00000004
PWM1TMRL5                         00000005
PWM1TMRL6                         00000006
PWM1TMRL7                         00000007
PWM2CLKCON                        00000DAE
PWM2CON                           00000DAB
PWM2CS0                           00000000
PWM2CS1                           00000001
PWM2DC                            00000DA3
PWM2DCH                           00000DA4
PWM2DCH0                          00000000
PWM2DCH1                          00000001
PWM2DCH2                          00000002
PWM2DCH3                          00000003
PWM2DCH4                          00000004
PWM2DCH5                          00000005
PWM2DCH6                          00000006
PWM2DCH7                          00000007
PWM2DCIE                          00000001
PWM2DCIF                          00000001
PWM2DCL                           00000DA3
PWM2DCL0                          00000000
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:00:20         PAGE 36


SYMBOL TABLE
  LABEL                             VALUE 

PWM2DCL1                          00000001
PWM2DCL2                          00000002
PWM2DCL3                          00000003
PWM2DCL4                          00000004
PWM2DCL5                          00000005
PWM2DCL6                          00000006
PWM2DCL7                          00000007
PWM2EN                            00000007
PWM2EN_A                          00000001
PWM2IE                            00000005
PWM2IF                            00000005
PWM2INTCON                        00000DAC
PWM2INTE                          00000DAC
PWM2INTF                          00000DAD
PWM2INTFLG                        00000DAD
PWM2LD                            00000007
PWM2LDA_A                         00000001
PWM2LDCON                         00000DAF
PWM2LDM                           00000006
PWM2LDS0                          00000000
PWM2LDS1                          00000001
PWM2MODE0                         00000002
PWM2MODE1                         00000003
PWM2OE                            00000006
PWM2OF                            00000DA7
PWM2OFCON                         00000DB0
PWM2OFH                           00000DA8
PWM2OFH0                          00000000
PWM2OFH1                          00000001
PWM2OFH2                          00000002
PWM2OFH3                          00000003
PWM2OFH4                          00000004
PWM2OFH5                          00000005
PWM2OFH6                          00000006
PWM2OFH7                          00000007
PWM2OFIE                          00000003
PWM2OFIF                          00000003
PWM2OFL                           00000DA7
PWM2OFL0                          00000000
PWM2OFL1                          00000001
PWM2OFL2                          00000002
PWM2OFL3                          00000003
PWM2OFL4                          00000004
PWM2OFL5                          00000005
PWM2OFL6                          00000006
PWM2OFL7                          00000007
PWM2OFM0                          00000005
PWM2OFM1                          00000006
PWM2OFMC                          00000004
PWM2OFS0                          00000000
PWM2OFS1                          00000001
PWM2OUT                           00000005
PWM2OUT_A                         00000001
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:00:20         PAGE 37


SYMBOL TABLE
  LABEL                             VALUE 

PWM2PH                            00000DA1
PWM2PHH                           00000DA2
PWM2PHH0                          00000000
PWM2PHH1                          00000001
PWM2PHH2                          00000002
PWM2PHH3                          00000003
PWM2PHH4                          00000004
PWM2PHH5                          00000005
PWM2PHH6                          00000006
PWM2PHH7                          00000007
PWM2PHIE                          00000002
PWM2PHIF                          00000002
PWM2PHL                           00000DA1
PWM2PHL0                          00000000
PWM2PHL1                          00000001
PWM2PHL2                          00000002
PWM2PHL3                          00000003
PWM2PHL4                          00000004
PWM2PHL5                          00000005
PWM2PHL6                          00000006
PWM2PHL7                          00000007
PWM2POL                           00000004
PWM2PR                            00000DA5
PWM2PRH                           00000DA6
PWM2PRH0                          00000000
PWM2PRH1                          00000001
PWM2PRH2                          00000002
PWM2PRH3                          00000003
PWM2PRH4                          00000004
PWM2PRH5                          00000005
PWM2PRH6                          00000006
PWM2PRH7                          00000007
PWM2PRIE                          00000000
PWM2PRIF                          00000000
PWM2PRL                           00000DA5
PWM2PRL0                          00000000
PWM2PRL1                          00000001
PWM2PRL2                          00000002
PWM2PRL3                          00000003
PWM2PRL4                          00000004
PWM2PRL5                          00000005
PWM2PRL6                          00000006
PWM2PRL7                          00000007
PWM2PS0                           00000004
PWM2PS1                           00000005
PWM2PS2                           00000006
PWM2TMR                           00000DA9
PWM2TMRH                          00000DAA
PWM2TMRH0                         00000000
PWM2TMRH1                         00000001
PWM2TMRH2                         00000002
PWM2TMRH3                         00000003
PWM2TMRH4                         00000004
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:00:20         PAGE 38


SYMBOL TABLE
  LABEL                             VALUE 

PWM2TMRH5                         00000005
PWM2TMRH6                         00000006
PWM2TMRH7                         00000007
PWM2TMRL                          00000DA9
PWM2TMRL0                         00000000
PWM2TMRL1                         00000001
PWM2TMRL2                         00000002
PWM2TMRL3                         00000003
PWM2TMRL4                         00000004
PWM2TMRL5                         00000005
PWM2TMRL6                         00000006
PWM2TMRL7                         00000007
PWM3CLKCON                        00000DBE
PWM3CON                           00000DBB
PWM3CS0                           00000000
PWM3CS1                           00000001
PWM3DC                            00000DB3
PWM3DCH                           00000DB4
PWM3DCH0                          00000000
PWM3DCH1                          00000001
PWM3DCH2                          00000002
PWM3DCH3                          00000003
PWM3DCH4                          00000004
PWM3DCH5                          00000005
PWM3DCH6                          00000006
PWM3DCH7                          00000007
PWM3DCIE                          00000001
PWM3DCIF                          00000001
PWM3DCL                           00000DB3
PWM3DCL0                          00000000
PWM3DCL1                          00000001
PWM3DCL2                          00000002
PWM3DCL3                          00000003
PWM3DCL4                          00000004
PWM3DCL5                          00000005
PWM3DCL6                          00000006
PWM3DCL7                          00000007
PWM3EN                            00000007
PWM3EN_A                          00000002
PWM3IE                            00000006
PWM3IF                            00000006
PWM3INTCON                        00000DBC
PWM3INTE                          00000DBC
PWM3INTF                          00000DBD
PWM3INTFLG                        00000DBD
PWM3LD                            00000007
PWM3LDA_A                         00000002
PWM3LDCON                         00000DBF
PWM3LDM                           00000006
PWM3LDS0                          00000000
PWM3LDS1                          00000001
PWM3MODE0                         00000002
PWM3MODE1                         00000003
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:00:20         PAGE 39


SYMBOL TABLE
  LABEL                             VALUE 

PWM3OE                            00000006
PWM3OF                            00000DB7
PWM3OFCON                         00000DC0
PWM3OFH                           00000DB8
PWM3OFH0                          00000000
PWM3OFH1                          00000001
PWM3OFH2                          00000002
PWM3OFH3                          00000003
PWM3OFH4                          00000004
PWM3OFH5                          00000005
PWM3OFH6                          00000006
PWM3OFH7                          00000007
PWM3OFIE                          00000003
PWM3OFIF                          00000003
PWM3OFL                           00000DB7
PWM3OFL0                          00000000
PWM3OFL1                          00000001
PWM3OFL2                          00000002
PWM3OFL3                          00000003
PWM3OFL4                          00000004
PWM3OFL5                          00000005
PWM3OFL6                          00000006
PWM3OFL7                          00000007
PWM3OFM0                          00000005
PWM3OFM1                          00000006
PWM3OFMC                          00000004
PWM3OFS0                          00000000
PWM3OFS1                          00000001
PWM3OUT                           00000005
PWM3OUT_A                         00000002
PWM3PH                            00000DB1
PWM3PHH                           00000DB2
PWM3PHH0                          00000000
PWM3PHH1                          00000001
PWM3PHH2                          00000002
PWM3PHH3                          00000003
PWM3PHH4                          00000004
PWM3PHH5                          00000005
PWM3PHH6                          00000006
PWM3PHH7                          00000007
PWM3PHIE                          00000002
PWM3PHIF                          00000002
PWM3PHL                           00000DB1
PWM3PHL0                          00000000
PWM3PHL1                          00000001
PWM3PHL2                          00000002
PWM3PHL3                          00000003
PWM3PHL4                          00000004
PWM3PHL5                          00000005
PWM3PHL6                          00000006
PWM3PHL7                          00000007
PWM3POL                           00000004
PWM3PR                            00000DB5
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:00:20         PAGE 40


SYMBOL TABLE
  LABEL                             VALUE 

PWM3PRH                           00000DB6
PWM3PRH0                          00000000
PWM3PRH1                          00000001
PWM3PRH2                          00000002
PWM3PRH3                          00000003
PWM3PRH4                          00000004
PWM3PRH5                          00000005
PWM3PRH6                          00000006
PWM3PRH7                          00000007
PWM3PRIE                          00000000
PWM3PRIF                          00000000
PWM3PRL                           00000DB5
PWM3PRL0                          00000000
PWM3PRL1                          00000001
PWM3PRL2                          00000002
PWM3PRL3                          00000003
PWM3PRL4                          00000004
PWM3PRL5                          00000005
PWM3PRL6                          00000006
PWM3PRL7                          00000007
PWM3PS0                           00000004
PWM3PS1                           00000005
PWM3PS2                           00000006
PWM3TMR                           00000DB9
PWM3TMRH                          00000DBA
PWM3TMRH0                         00000000
PWM3TMRH1                         00000001
PWM3TMRH2                         00000002
PWM3TMRH3                         00000003
PWM3TMRH4                         00000004
PWM3TMRH5                         00000005
PWM3TMRH6                         00000006
PWM3TMRH7                         00000007
PWM3TMRL                          00000DB9
PWM3TMRL0                         00000000
PWM3TMRL1                         00000001
PWM3TMRL2                         00000002
PWM3TMRL3                         00000003
PWM3TMRL4                         00000004
PWM3TMRL5                         00000005
PWM3TMRL6                         00000006
PWM3TMRL7                         00000007
PWMEN                             00000D8E
PWMLD                             00000D8F
PWMOUT                            00000D90
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RCIDL                             00000006
RCIE                              00000005
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:00:20         PAGE 41


SYMBOL TABLE
  LABEL                             VALUE 

RCIF                              00000005
RCREG                             00000199
RCSTA                             0000019D
RD                                00000000
RT_THR                            000000B5
RX9                               00000006
RX9D                              00000000
RXDTSEL                           00000007
S0                                0000001F
SBOREN                            00000007
SCKP                              00000004
SCS0                              00000000
SCS1                              00000001
SENDB                             00000003
SLRA0                             00000000
SLRA1                             00000001
SLRA2                             00000002
SLRA4                             00000004
SLRA5                             00000005
SLRCONA                           0000030C
SP                                FSR1
SPBRG                             0000019B
SPBRGH                            0000019C
SPBRGL                            0000019B
SPEN                              00000007
SPLLEN                            00000007
SREN                              00000005
STACK_SIZE                        00000020
STATUS                            00000003
STATUS_SHAD                       00000FE4
STKOVF                            00000007
STKPTR                            00000FED
STKUNF                            00000006
SWDTEN                            00000000
SYNC                              00000004
SYNC_IE                           00000006
SYNC_IF                           00000006
SYNC_OUT                          00000002
SYNC_PIE                          00000093
SYNC_PIR                          00000013
SYNC_PWMCLKCON                    00000DBE
SYNC_PWMCON                       00000DBB
SYNC_PWMDCH                       00000DB4
SYNC_PWMDCL                       00000DB3
SYNC_PWMINTE                      00000DBC
SYNC_PWMINTF                      00000DBD
SYNC_PWMLDCON                     00000DBF
SYNC_PWMOF                        00000DB7
SYNC_PWMOFCON                     00000DC0
SYNC_PWMPH                        00000DB1
SYNC_PWMPRH                       00000DB6
SYNC_PWMPRL                       00000DB5
SYNC_PWMTMR                       00000DB9
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:00:20         PAGE 42


SYMBOL TABLE
  LABEL                             VALUE 

T                                 INDF1
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000018
T1GCON                            00000019
T1GGO                             00000003
T1GGO_NOT_DONE                    00000003
T1GPOL                            00000006
T1GSEL                            00000003
T1GSPM                            00000004
T1GSS0                            00000000
T1GSS1                            00000001
T1GTM                             00000005
T1GVAL                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             0000001C
T2OUTPS0                          00000003
T2OUTPS1                          00000004
T2OUTPS2                          00000005
T2OUTPS3                          00000006
TC                                00000032
TCY                               000000C8
TMR0                              00000015
TMR0CS                            00000005
TMR0IE                            00000005
TMR0IF                            00000002
TMR0SE                            00000004
TMR1                              00000016
TMR1CS0                           00000006
TMR1CS1                           00000007
TMR1GE                            00000007
TMR1GIE                           00000007
TMR1GIF                           00000007
TMR1H                             00000017
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             00000016
TMR1ON                            00000000
TMR2                              0000001A
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOS                               00000FEE
TOSH                              00000FEF
TOSL                              00000FEE
TRIGSEL0                          00000004
TRIGSEL1                          00000005
TRIGSEL2                          00000006
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:00:20         PAGE 43


SYMBOL TABLE
  LABEL                             VALUE 

TRIGSEL3                          00000007
TRISA                             0000008C
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRMT                              00000001
TSEN                              00000005
TSRNG                             00000004
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TUN5                              00000005
TX9                               00000006
TX9D                              00000000
TXCKSEL                           00000002
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             0000019A
TXSTA                             0000019E
TX_PIR                            00000011
UP_THR                            000000C6
VDD                               00000400
VERT_DLY                          00000028
VIDEO_BUFFER                      00002030
VIDEO_LAT                         0000010C
VIDEO_OUT                         00000001
VREGCON                           00000197
VREGPM                            00000001
W                                 00000000
WDTCON                            00000097
WDTPS0                            00000001
WDTPS1                            00000002
WDTPS2                            00000003
WDTPS3                            00000004
WDTPS4                            00000005
WELL_DEPTH                        00000016
WELL_WIDTH                        0000000A
WPUA                              0000020C
WPUA0                             00000000
WPUA1                             00000001
WPUA2                             00000002
WPUA3                             00000003
WPUA4                             00000004
WPUA5                             00000005
WR                                00000001
WREG                              00000009
WREG_SHAD                         00000FE5
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:00:20         PAGE 44


SYMBOL TABLE
  LABEL                             VALUE 

WREN                              00000002
WRERR                             00000003
WUE                               00000001
XSIZE                             00000030
YSIZE                             00000020
Z                                 00000002
Z_SHAD                            00000002
_.org_1_005C                      0000005C
_.org_1_008A                      0000008A
_.org_1_008C                      0000008C
_.org_1_00A2                      000000A2
_.org_1_00A9                      000000A9
_.org_1_01DF                      000001DF
_.org_1_01EE                      000001EE
_.org_1_0235                      00000235
_BOREN_NSLEEP                     00003DFF
_BOREN_OFF                        000039FF
_BOREN_ON                         00003FFF
_BOREN_SBODEN                     00003BFF
_BORV_19                          00003FFF
_BORV_HI                          00003BFF
_BORV_LO                          00003FFF
_CLKOUTEN_OFF                     00003FFF
_CLKOUTEN_ON                      000037FF
_CONFIG1                          00008007
_CONFIG2                          00008008
_CP_OFF                           00003FFF
_CP_ON                            00003F7F
_DEVID1                           00008006
_FOSC_ECH                         00003FFF
_FOSC_ECL                         00003FFD
_FOSC_ECM                         00003FFE
_FOSC_INTOSC                      00003FFC
_IDLOC0                           00008000
_IDLOC1                           00008001
_IDLOC2                           00008002
_IDLOC3                           00008003
_LPBOREN_OFF                      00003FFF
_LPBOREN_ON                       000037FF
_LVP_OFF                          00001FFF
_LVP_ON                           00003FFF
_MCLRE_OFF                        00003FBF
_MCLRE_ON                         00003FFF
_PLLEN_OFF                        00003EFF
_PLLEN_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FDF
_STVREN_OFF                       00003DFF
_STVREN_ON                        00003FFF
_WDTE_NSLEEP                      00003FF7
_WDTE_OFF                         00003FE7
_WDTE_ON                          00003FFF
_WDTE_SWDTEN                      00003FEF
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:00:20         PAGE 45


SYMBOL TABLE
  LABEL                             VALUE 

_WRT_ALL                          00003FFC
_WRT_BOOT                         00003FFE
_WRT_HALF                         00003FFD
_WRT_OFF                          00003FFF
__12F1572                         00000001
__DEBUG                           
__MPLAB_DEBUGGER_SIMULATOR        1
_stack                            00000020
accaH                             00000008
accaL                             00000007
accbH                             0000000A
accbL                             00000009
add                               
addpmadr                          
angle                             00000041
buttons                           0000000B
case                              
dec_n                             
digits                            00000237
disable_video                     
drop                              
drop_n                            
dropped                           00000046
dup                               
enable_video                      
fetch                             
fill_buffer                       000000B1
fill_loop                         000000B9
flags                             00000002
game_init                         0000019B
get_flash_word                    00000104
get_nibble                        00000117
gt_255                            00000022
gtimer                            00000003
hline                             0000017D
hline_done                        0000018A
inc_n                             
init                              000001FF
insert                            
isr                               00000004
isr01                             00000014
isr02                             00000020
isr_exit                          0000004F
labels                            0000027D
lcountH                           00000001
lcountL                           00000000
ldpmadr                           
lit                               
lt_256                            00000044
main                              00000233
movtw                             
movwt                             
mult6                             00000053
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:00:20         PAGE 46


SYMBOL TABLE
  LABEL                             VALUE 

next_flash_word                   00000113
nibble                            0000000C
nibble_mask                       00000125
no_button                         00000082
over                              
pause                             
pick                              
pixels_loop                       0000009D
pop                               
print_char                        00000133
print_label                       00000160
print_row                         00000129
print_tetrim                      00000142
prt01                             00000151
prt_lbl_done                      0000017B
prt_lbl_loop                      00000162
pstack_init                       
push                              
q                                 00000010
r                                 00000000
randH                             00000005
randL                             00000004
rcount                            00000006
read_flash                        0000010D
read_pad                          00000058
reserve                           
rot                               
row0                              00000124
row1                              00000120
row2                              00000122
rst                               0000000D
scoreH                            00000045
scoreL                            00000044
set_video_ptr                     000000BF
start_timer                       
store                             
sub                               
swap                              
task1                             00000037
task2                             0000003E
tasks                             0000002D
tbranch                           
tcyDelay                          
test_loop                         000001E2
tetrim                            00000040
tetriminos                        0000025D
tetris                            000001DB
ti                                0000014B
try_a                             0000005F
try_all                           0000005E
try_b                             00000065
try_button                        
try_dn                            0000007D
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:00:20         PAGE 47


SYMBOL TABLE
  LABEL                             VALUE 

try_lt                            00000077
try_rt                            0000006B
try_up                            00000071
tx                                00000042
txt_lines                         0000028A
txt_score                         00000281
txt_zeros                         00000293
ty                                00000043
video_buffer_b0                   00000050
video_buffer_b2                   000000A0
video_buffer_b3                   00000120
video_serialize                   00000083
vline                             0000018C
vline_done                        00000199
vsync_end                         0000000C
vsync_start                       00000018
wait_timer                        
xor_pixel                         000000D1
xor_row                           000000EE
xor_row02                         000000FE
xor_row_done                      00000102
xorp00                            000000DF
xorp01                            000000E2
zbranch                           

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,    97 suppressed

