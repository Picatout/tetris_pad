MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  22:07:42         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001     include p12f1572.inc
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Sep 13 2016
                      00005 ;  MPASM PIC12F1572 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2016 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01601         LIST
                      00002     
                      00003     radix dec
                      00004     errorlevel 0, -302, -305
                      00005     
8007   3FE7           00006     __config _CONFIG1, _FOSC_ECH&_WDTE_OFF
8008   1EFF           00007     __config _CONFIG2, _PLLEN_OFF&_LVP_OFF 
                      00008 
  01312D00            00009 FOSC equ 20000000 ; 20Mhz
  00000032            00010 TC equ 50 ; nanosecondes 
  004C4B40            00011 FCY equ FOSC/4    ; 5Mhz
  000000C8            00012 TCY equ 200 ; nanoseconds
                      00013 
                      00014 
  00000030            00015 XSIZE equ 48  ; horizontal pixels
  00000020            00016 YSIZE equ 32  ; vertical pixels
  00000006            00017 BPL equ XSIZE/8 ; bytes per line 
  000000C0            00018 BUFFER_SIZE equ  YSIZE*BPL  ; video buffer size
  00002030            00019 VIDEO_BUFFER equ 0x2000+(3*80-BUFFER_SIZE) ; buffer address
  00000032            00020 VERT_DLY equ 50
  00000046            00021 FIRST_VIDEO equ VERT_DLY+20  ; first video output line
  000000C5            00022 LAST_VIDEO equ FIRST_VIDEO+4*YSIZE-1  ; last video output line
  0000019A            00023 PIXEL_TXREG equ TXREG
  00000011            00024 TX_PIR equ PIR1
  00000032            00025 HORZ_DLY equ 10*5  ; there is 5 TCY/µsec
                      00026  
  00000001            00027 VIDEO_OUT equ RA1
  0000010C            00028 VIDEO_LAT equ LATA
  00000002            00029 SYNC_OUT equ RA2 
  00000DB3            00030 SYNC_PWMDCL equ PWM3DCL ; duty cycle low byte
  00000DB4            00031 SYNC_PWMDCH equ PWM3DCH ; high byte    
  00000DB5            00032 SYNC_PWMPRL equ PWM3PRL ; pwm period low byte
  00000DB6            00033 SYNC_PWMPRH equ PWM3PRH ; high byte 
  00000DB1            00034 SYNC_PWMPH equ PWM3PH ; pwm phase
  00000DB7            00035 SYNC_PWMOF equ PWM3OF ; pwm offset
  00000DB9            00036 SYNC_PWMTMR equ PWM3TMR ; timer
  00000DBB            00037 SYNC_PWMCON equ PWM3CON ; control SFR
  00000DBE            00038 SYNC_PWMCLKCON equ PWM3CLKCON  ; clock control SFR
  00000DC0            00039 SYNC_PWMOFCON equ PWM3OFCON ; offset control SFR
  00000DBF            00040 SYNC_PWMLDCON equ PWM3LDCON ; load control SFR
  00000006            00041 SYNC_IE equ PWM3IE  ; interrupt enable bit
  00000006            00042 SYNC_IF equ PWM3IF  ; interrupt flag bit
  00000093            00043 SYNC_PIE equ PIE3 ; interrupt enable SFR
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  22:07:42         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000013            00044 SYNC_PIR equ PIR3 ; interrupt flag SFR 
  00000DBC            00045 SYNC_PWMINTE equ PWM3INTE
  00000DBD            00046 SYNC_PWMINTF equ PWM3INTF
                      00047  
  000004F5            00048 HORZ_PERIOD equ FOSC/15748-1 ; 15748 hertz
  0000005E            00049 HORZ_PULSE equ 4700/TC ; 4.7µsec 
  00000106            00050 LAST_LINE equ 262
                      00051 
                      00052 ; game pad resource
                      00053 ; use ADC 
  00000004            00054 PAD_PIN equ ANSA4
  00000003            00055 PAD_CHS equ 3 
  00000000            00056 BTN_UP equ 0
  00000001            00057 BTN_DN equ 1
  00000002            00058 BTN_LT equ 2
  00000003            00059 BTN_RT equ 3
  00000004            00060 BTN_A equ 4
  00000005            00061 BTN_B equ 5
                      00062 ; threshold level for each button
                      00063 ; lower_btn_thr >= BTN_? < btn_thr
                      00064 ; exemple: BTN_UP if RT_THR<=Vadc<UP_THR  
  00000400            00065 VDD equ 1024
  000000D8            00066 DN_THR equ 216 ;(VDD*(6/7+5/6)/2)>>2
  000000D1            00067 LT_THR equ 209 ; (VDD*(5/6+4/5)/2)>>2
  000000C6            00068 UP_THR equ 198 ;(VDD*(4/5+3/4)/2)>>2
  000000B5            00069 RT_THR equ 181 ;(VDD*(3/4+2/3)/2)>>2
  00000095            00070 B_THR  equ 149 ; (VDD*(2/3+1/2)/2)>>2
  00000040            00071 A_THR  equ 64 ;(VDD/4)>>2
                      00072  
                      00073 try_button macro btn, label 
                      00074     movlw btn
                      00075     subwf ADRESH,W
                      00076     skpnc
                      00077     bra label
                      00078     endm
                      00079     
                      00080 ;boolean flags 
  00000000            00081 F_VSYNC equ 0 ; vertical sync active
  00000001            00082 F_EVEN equ 1  ; even field
  00000002            00083 F_MUTEX equ 2 ; video routine lock out
  00000003            00084 F_GTMR equ 3  ; game timer active
  00000004            00085 F_GSTOP equ 4 ; game stopped
  00000005            00086 F_SND equ 5 ; sound timer active 
                      00087  
  000000B4            00088 LFSR_TAPS equ 0xB4 ; xor mask
                      00089  
                      00090 disable_video macro ; lockout video_serialize
                      00091     bsf flags, F_MUTEX
                      00092     endm
                      00093     
                      00094 enable_video macro ; unlock video_serialize
                      00095     bcf flags, F_MUTEX
                      00096     endm
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  22:07:42         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00097     
                      00098 tcyDelay macro n ; delay in TCY cycles  5TCY per µsec.  
                      00099     variable r=n%5
                      00100     variable q=n/5
                      00101     while r>1
                      00102     bra $+1
                      00103 r-=2
                      00104     endw
                      00105     if r==1
                      00106     nop
                      00107     endif
                      00108     if q
                      00109     movlw q
                      00110     bra $+1
                      00111     decfsz WREG
                      00112     bra $-2
                      00113     endif
                      00114     endm
                      00115 
                      00116 case macro n, label
                      00117     xorlw n
                      00118     skpnz
                      00119     bra label
                      00120     xorlw n
                      00121     endm
                      00122  
                      00123 ldpmadr macro addr ; load PMADR register
                      00124     movlw low(addr)
                      00125     movwf PMADRL
                      00126     movlw high(addr)
                      00127     movwf PMADRH
                      00128     endm
                      00129     
                      00130 addpmadr macro value ; add value to PMADR
                      00131     movlw value
                      00132     addwf PMADRL
                      00133     clrw
                      00134     addwfc PMADRH
                      00135     endm
                      00136     
                      00137 start_timer macro value ; start game timer
                      00138     movlw value
                      00139     movwf gtimer
                      00140     bsf flags, F_GTMR
                      00141     endm
                      00142     
                      00143 wait_timer macro ; wait timer expiration
                      00144     btfsc flags, F_GTMR
                      00145     bra $-1
                      00146     endm
                      00147     
                      00148 pause macro value ; suspend execution (busy loop)
                      00149     start_timer value
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  22:07:42         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00150     wait_timer
                      00151     endm
                      00152     
                      00153 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00154 ; software stack for arguments passing
                      00155 ; SP is Stack Pointer
                      00156 ; T is Top Of Stack
                      00157 #define SP FSR1
                      00158 #define T INDF1
  00000020            00159 STACK_SIZE equ 32
                      00160  
  0000001F            00161 S0 equ 0x1F ; stack base address - 1
                      00162 
                      00163 pstack_init macro ; initialise stack pointer
                      00164     clrf FSR1H
                      00165     movlw S0
                      00166     movwf FSR1L
                      00167     endm
                      00168     
                      00169 push macro   ; ( -- n ) push WREG on stack
                      00170     movwi ++SP
                      00171     endm
                      00172 
                      00173 pop macro   ; ( n -- )  pop T in WREG
                      00174     moviw SP--
                      00175     endm
                      00176     
                      00177 drop macro  ; ( n -- ) ; discard T
                      00178    addfsr SP,-1
                      00179    endm
                      00180 
                      00181 drop_n macro n  ; discard n elements  n<32
                      00182     addfsr SP,-n
                      00183     endm
                      00184     
                      00185 lit macro  n ; ( -- n ) ; push a literal
                      00186    movlw n
                      00187    movwi ++SP 
                      00188    endm
                      00189 
                      00190 dup macro ; ( n -- n n ) duplicate T
                      00191     movfw T
                      00192     movwi ++SP
                      00193     endm
                      00194     
                      00195 over macro ; ( n1 n2 -- n1 n2 n1 )
                      00196     moviw -1[SP]
                      00197     push
                      00198     endm
                      00199     
                      00200 swap macro ; exchange WREG and T
                      00201     xorwf T
                      00202     xorwf T,W
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  22:07:42         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00203     xorwf T
                      00204     endm
                      00205  
                      00206 store macro var ; ( n -- ) pop T in variable
                      00207    moviw SP--
                      00208    movwf var
                      00209    endm
                      00210    
                      00211 fetch macro var  ; ( -- n ) push var on stack
                      00212    movfw var
                      00213    movwi ++SP
                      00214    endm
                      00215 
                      00216 pick macro n  ; pick nth element of stack to WREG
                      00217     moviw -n[SP]
                      00218     endm
                      00219 
                      00220 insert macro n ;  insert WREG at position n on stack
                      00221    movwi -n[SP]
                      00222    endm
                      00223    
                      00224 movtw macro ; ( n -- n ) overwrite WREG with T
                      00225    movfw T
                      00226    endm
                      00227    
                      00228 movwt macro ; ( n1 -- n2 ) overwrite T with WREG
                      00229     movwf T
                      00230     endm
                      00231     
                      00232 add macro  ; add WREG to T result on T
                      00233     addwf T,F
                      00234    endm
                      00235    
                      00236 sub macro  ; substract WREG from T result on T
                      00237    subwf T,F
                      00238    endm
                      00239 
                      00240 inc_n macro n ; increament nth element of stack
                      00241     moviw -n[SP]
                      00242     incf WREG,F
                      00243     movwi -n[SP]
                      00244     endm
                      00245     
                      00246 dec_n macro n ; decreament nth element of stack
                      00247     moviw -n[SP]
                      00248     decf WREG,F
                      00249     movwi -n[SP]
                      00250     endm
                      00251     
                      00252 zbranch macro label ; branch if T == 0
                      00253     pop
                      00254     skpnz
                      00255     bra label
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  22:07:42         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00256     endm
                      00257     
                      00258 tbranch macro label ; branch if T != 0
                      00259     pop
                      00260     skpz
                      00261     bra label
                      00262     endm
                      00263     
                      00264 reserve macro n ; reserve n bytes on stack for local variables
                      00265     addfsr SP, n 
                      00266     endm
                      00267  
                      00268 rot macro ; ( n1 n2 n3 -- n2 n3 n1 )
                      00269     pick 2
                      00270     push        ; n1 n2 n3 n1
                      00271     pick 2
                      00272     insert 3   ;  n2 n2 n3 n1
                      00273     pick 1
                      00274     insert 2   ; n2 n3 n3 n1
                      00275     pop        ; n2 n3 n3 
                      00276     movwf T    ; n2 n3 n1
                      00277     endm
                      00278  
                      00279 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00280 ; parameter stack section    
                      00281 dstack udata 0x20
0020                  00282 _stack res 32
                      00283 ; game variables section 
                      00284 game_var udata 0x40 
                      00285 ; tetris game state
0040                  00286 tetrim res 1 ; active tretriminos 
0041                  00287 angle res 1 ; tetriminos rotatation angle in multiple of 90degr. {0:3}
0042                  00288 tx  res 1 ; x coordinate
0043                  00289 ty  res 1 ; y coordinate
0044                  00290 scoreL res 1 ; game score  16 bits
0045                  00291 scoreH res 1 
0046                  00292 dropped res 1 ; dropped lines
                      00293 
                      00294 ; These 3 sections are used for video pixels buffering
                      00295 ; with indirect access using FSR0
                      00296 ; to form a contiguous address space. 
                      00297 vb_b0    udata 0x50
0050                  00298 video_buffer_b0 res 32
                      00299 vb_b1    udata 0xA0
00A0                  00300 video_buffer_b2 res 80
                      00301 vb_b2    udata 0x120
0120                  00302 video_buffer_b3 res 80
                      00303  
                      00304  
                      00305     udata_shr
                      00306 ;scan lines counter 16 bits
0000                  00307 lcountL res 1
0001                  00308 lcountH res 1
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  22:07:42         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00309 ; boolean flags 
0002                  00310 flags res 1
                      00311 ; game timer
0003                  00312 gtimer res 1 
                      00313 ; lfsr PRNG register
0004                  00314 randL res 1 
0005                  00315 randH res 1 
                      00316 ; loop counter
0006                  00317 rcount res 1
                      00318 ; arithmetic accumulator A 24 bits
0007                  00319 accaL res 1
0008                  00320 accaH res 1
                      00321 ; arithmetic accumulator B 16 bits
0009                  00322 accbL res 1
000A                  00323 accbH res 1
                      00324 ; game pad buttons state
000B                  00325 buttons res 1
                      00326 ; flash reader next nibble {0-3}
000C                  00327 nibble res 1
                      00328  
                      00329 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
000D                  00330 rst: 
                      00331     org 0
0000   0023           00332     banksel ANSELA
0001   018C           00333     clrf ANSELA
0002   160C           00334     bsf ANSELA,PAD_PIN
0003   2???           00335     goto init
                      00336     
                      00337     org 4
0004                  00338 isr:
0004   003B           00339     banksel SYNC_PWMINTF
0005   103D           00340     bcf SYNC_PWMINTF,PRIF
0006   1800           00341     btfsc lcountH,0
0007   3???           00342     bra gt_255 ; lcount > 255
0008   08??           00343     movfw lcountL
0009   1903           00344     skpnz
000A   3???           00345     bra vsync_start
000B   3A03           00346     xorlw 3
000C   1903           00347     skpnz
000D   3???           00348     bra vsync_end
000E                  00349 lt_256: ; lcount < 256
000E   1900           00350     btfsc flags, F_MUTEX
000F   3???           00351     bra isr_exit
0010   08??           00352     movfw lcountL
0011   3C45           00353     sublw FIRST_VIDEO-1
0012   1803           00354     skpnc
0013   3???           00355     bra isr_exit
0014   08??           00356     movfw lcountL
0015   3CC5           00357     sublw LAST_VIDEO
0016   1C03           00358     skpc
0017   3???           00359     bra isr_exit
0018   2???           00360     call video_serialize
0019   3???           00361     bra isr_exit    
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  22:07:42         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001A                  00362 vsync_start: ; scanline 0 start vertical sync pulse
001A   003B           00363     banksel SYNC_PWMDCL
001B   3097           00364     movlw (HORZ_PERIOD-HORZ_PULSE)&0xff
001C   00B3           00365     movwf SYNC_PWMDCL
001D   3004           00366     movlw (HORZ_PERIOD-HORZ_PULSE)>>8
001E   00B4           00367     movwf SYNC_PWMDCH
001F   17BF           00368     bsf SYNC_PWMLDCON,7
0020   1400           00369     bsf flags, F_VSYNC
0021   3???           00370     bra isr_exit
0022                  00371 vsync_end: ; scanline 3 end vertical sync pulse
0022   003B           00372     banksel SYNC_PWMDCL
0023   305E           00373     movlw HORZ_PULSE&0xff
0024   00B3           00374     movwf SYNC_PWMDCL
0025   3000           00375     movlw HORZ_PULSE>>8
0026   00B4           00376     movwf SYNC_PWMDCH
0027   17BF           00377     bsf SYNC_PWMLDCON,7
0028   1000           00378     bcf flags, F_VSYNC
0029   3???           00379     bra isr_exit
002A                  00380 gt_255: ; lcount>255
002A   3006           00381     movlw LAST_LINE&0xff
002B   1C80           00382     btfss flags,F_EVEN
002C   3E01           00383     addlw 1
002D   06??           00384     xorwf lcountL,W
002E   1D03           00385     skpz
002F   3???           00386     bra tasks
0030   01??           00387     clrf lcountL
0031   01??           00388     clrf lcountH
0032   3002           00389     movlw 1<<F_EVEN
0033   06??           00390     xorwf flags,F
0034   0009           00391     retfie
                      00392 ; round robin task scheduler
                      00393 ; each task execute once every 1/60th sec.
                      00394 ; condition:    
                      00395 ;   Task must complete inside
                      00396 ;   horizontal period.
0035                  00397 tasks:
0035   08??           00398     movfw lcountL
                      00399     case 1, task1
0036   3A01               M     xorlw 1
0037   1903               M     skpnz
0038   3???               M     bra task1
0039   3A01               M     xorlw 1
                      00400     case 2, task2
003A   3A02               M     xorlw 2
003B   1903               M     skpnz
003C   3???               M     bra task2
003D   3A02               M     xorlw 2
003E   3???           00401     bra isr_exit
003F                  00402 task1:   
                      00403 ; decrement game timer    
003F   08??           00404     movf gtimer,F ; 
0040   1903           00405     skpnz
0041   3???           00406     bra isr_exit
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  22:07:42         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0042   03??           00407     decf gtimer,F ; 
0043   1903           00408     skpnz
0044   1180           00409     bcf flags, F_GTMR
0045   3???           00410     bra isr_exit ;
0046                  00411 task2:
                      00412 ; rotate lfsr
0046   36??           00413     lsrf randH
0047   0C??           00414     rrf randL
0048   1803           00415     skpnc
0049   30B4           00416     movlw LFSR_TAPS
004A   06??           00417     xorwf randH
004B   3???           00418     bra isr_exit 
004C                  00419 isr_exit:
004C   0A??           00420     incf lcountL
004D   1903           00421     skpnz
004E   0A??           00422     incf lcountH
004F   0009           00423     retfie
                      00424 
                      00425 ;divsion by 10    
                      00426 ;needed to convert binary to BCD
                      00427 ; input:
                      00428 ;   acca dividend  16 bits
                      00429 ; output:
                      00430 ;   acca: quotient
                      00431 ;   accbL: remainder    
0050                  00432 div10:
                      00433     disable_video
0050   1500               M     bsf flags, F_MUTEX
0051   3011           00434     movlw 17
0052   00??           00435     movwf rcount
0053   01??           00436     clrf accbL
0054                  00437 div10_loop:
0054   300A           00438     movlw 10
0055   02??           00439     subwf accbL,W
0056   1803           00440     skpnc
0057   00??           00441     movwf accbL
0058   0D??           00442     rlf accaL
0059   0D??           00443     rlf accaH
005A   0D??           00444     rlf accbL
005B   0B??           00445     decfsz rcount
005C   3???           00446     bra div10_loop
005D   36??           00447     lsrf accbL
                      00448     enable_video
005E   1100               M     bcf flags, F_MUTEX
005F   0008           00449     return
                      00450     
                      00451     
                      00452 ; WREG*6  because BPL=6
                      00453 ; WREG*6=WREG*4+WREG*2    
0060                  00454 mult6: 
0060   00??           00455     movwf accbH
0061   35??           00456     lslf accbH    ; accbH=2*WREG
0062   35??           00457     lslf accbH,W  ; WREG=4*WREG
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  22:07:42         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0063   07??           00458     addwf accbH,W ; WREG=6*WREG
0064   0008           00459     return
                      00460 
                      00461 ;read game pad
                      00462 ; store value in
                      00463 ; buttons
                      00464 ; a button is accepted if
                      00465 ; the Vadc value is below its threshold
0065                  00466 read_pad:
0065   0021           00467     banksel ADCON0
0066   141D           00468     bsf ADCON0,ADON
                      00469     tcyDelay 8*4 ; délais d'acquisition 4µsec
  0002                    M     variable r=8*4%5
  0006                    M     variable q=8*4/5
                          M     while r>1
0067   3???               M     bra $+1
  00000000                M r-=2
                          M     endw
                          M     if r==1
                          M     nop
                          M     endif
                          M     if q
0068   3006               M     movlw q
0069   3???               M     bra $+1
006A   0B89               M     decfsz WREG
006B   3???               M     bra $-2
                          M     endif
006C   149D           00470     bsf ADCON0,GO
006D   189D           00471     btfsc ADCON0,NOT_DONE
006E   3???           00472     bra $-1
006F   101D           00473     bcf ADCON0,ADON
                      00474 ; try each button from lower to upper
0070                  00475 try_all:
0070   01??           00476     clrf buttons
0071                  00477 try_a:    
                      00478     try_button A_THR, try_b
0071   3040               M     movlw A_THR
0072   021C               M     subwf ADRESH,W
0073   1803               M     skpnc
0074   3???               M     bra try_b
0075   1600           00479     bsf buttons,BTN_A
0076   0008           00480     return
0077                  00481 try_b:
                      00482     try_button B_THR, try_rt
0077   3095               M     movlw B_THR
0078   021C               M     subwf ADRESH,W
0079   1803               M     skpnc
007A   3???               M     bra try_rt
007B   1680           00483     bsf buttons,BTN_B
007C   0008           00484     return
007D                  00485 try_rt:
                      00486     try_button RT_THR, try_up
007D   30B5               M     movlw RT_THR
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  22:07:42         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

007E   021C               M     subwf ADRESH,W
007F   1803               M     skpnc
0080   3???               M     bra try_up
0081   1580           00487     bsf buttons,BTN_RT
0082   0008           00488     return
0083                  00489 try_up:
                      00490     try_button UP_THR, try_lt
0083   30C6               M     movlw UP_THR
0084   021C               M     subwf ADRESH,W
0085   1803               M     skpnc
0086   3???               M     bra try_lt
0087   1400           00491     bsf buttons,BTN_UP
0088   0008           00492     return
0089                  00493 try_lt:
                      00494     try_button LT_THR, try_dn
0089   30D1               M     movlw LT_THR
008A   021C               M     subwf ADRESH,W
008B   1803               M     skpnc
008C   3???               M     bra try_dn
008D   1500           00495     bsf buttons,BTN_LT
008E   0008           00496     return
008F                  00497 try_dn:
                      00498     try_button DN_THR, no_button
008F   30D8               M     movlw DN_THR
0090   021C               M     subwf ADRESH,W
0091   1803               M     skpnc
0092   3???               M     bra no_button
0093   1480           00499     bsf buttons,BTN_DN
0094                  00500 no_button:
0094   0008           00501     return
                      00502     
                      00503     
                      00504 ; serialise video pixels to scan line
                      00505 ; due to timing constrain use specialized 
                      00506 ; division and multiplication    
0095                  00507 video_serialize: 
0095   0804           00508     movfw FSR0L
                      00509     push
0096   001C               M     movwi ++SP
0097   0805           00510     movfw FSR0H
                      00511     push
0098   001C               M     movwi ++SP
                      00512     lit 0 ; ( x )
0099   3000               M    movlw 0
009A   001C               M    movwi ++SP 
                      00513     tcyDelay HORZ_DLY
  0000                    M     variable r=HORZ_DLY%5
  000A                    M     variable q=HORZ_DLY/5
                          M     while r>1
                          M     bra $+1
                          M r-=2
                          M     endw
                          M     if r==1
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  22:07:42         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     nop
                          M     endif
                          M     if q
009B   300A               M     movlw q
009C   3???               M     bra $+1
009D   0B89               M     decfsz WREG
009E   3???               M     bra $-2
                          M     endif
009F   3030           00514     movlw VIDEO_BUFFER&0xff
00A0   0084           00515     movwf FSR0L
00A1   3020           00516     movlw VIDEO_BUFFER>>8
00A2   0085           00517     movwf FSR0H
00A3   3046           00518     movlw FIRST_VIDEO
00A4   02??           00519     subwf lcountL,W
00A5   3689           00520     lsrf WREG
00A6   3689           00521     lsrf WREG
00A7   2???           00522     call mult6
00A8   0784           00523     addwf FSR0L
00A9   0103           00524     clrw
00AA   3D85           00525     addwfc FSR0H
00AB   3006           00526     movlw XSIZE/8
00AC   00??           00527     movwf rcount
00AD   0023           00528     banksel RCSTA
00AE   179D           00529     bsf RCSTA,SPEN
00AF                  00530 pixels_loop:    
00AF   0012           00531     moviw FSR0++
00B0   0023           00532     banksel PIXEL_TXREG
00B1   009A           00533     movwf PIXEL_TXREG
00B2   0020           00534     banksel TX_PIR
00B3   1E11           00535     btfss TX_PIR,TXIF
00B4   3???           00536     bra $-1
00B5   0B??           00537     decfsz rcount
00B6   3???           00538     bra pixels_loop
00B7   0023           00539     banksel PIXEL_TXREG
00B8   019A           00540     clrf PIXEL_TXREG
00B9   0020           00541     banksel TX_PIR
00BA   1E11           00542     btfss TX_PIR,TXIF
00BB   3???           00543     bra $-1
00BC   0023           00544     banksel RCSTA
00BD   139D           00545     bcf RCSTA, SPEN
                      00546     pop
00BE   0017               M     moviw SP--
00BF   0085           00547     movwf FSR0H
                      00548     pop
00C0   0017               M     moviw SP--
00C1   0084           00549     movwf FSR0L
00C2   0008           00550     return
                      00551 
                      00552 ; fill_buffer
                      00553 ; fill screen buffer with WREG value    
00C3                  00554 fill_buffer: ; ( c -- )
                      00555     disable_video
00C3   1500               M     bsf flags, F_MUTEX
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  22:07:42         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00C4   3020           00556     movlw high(VIDEO_BUFFER)
00C5   0085           00557     movwf FSR0H
00C6   3030           00558     movlw low(VIDEO_BUFFER)
00C7   0084           00559     movwf FSR0L
00C8   30C0           00560     movlw BUFFER_SIZE
                      00561     push    ; c size
00C9   001C               M     movwi ++SP
                      00562     pick 1
00CA   3F7F               M     moviw -1[SP]
00CB                  00563 fill_loop:    
00CB   001A           00564     movwi FSR0++
00CC   0B81           00565     decfsz T
00CD   3???           00566     bra fill_loop
                      00567     drop_n 2
00CE   317E               M     addfsr SP,-2
                      00568     enable_video
00CF   1100               M     bcf flags, F_MUTEX
00D0   0008           00569     return
                      00570 
                      00571     
                      00572 ;set video pointer at 
                      00573 ; byte that contain pixel {x,y}
                      00574 ; output:
                      00575 ;   T = pixel offset, 0 left, 7 right  
                      00576 ;   Z=0 if offset==0    
00D1                  00577 set_video_ptr:  ; ( x y -- f )
00D1   3020           00578     movlw high(VIDEO_BUFFER)
00D2   0085           00579     movwf FSR0H
00D3   3030           00580     movlw low(VIDEO_BUFFER)
00D4   0084           00581     movwf FSR0L
                      00582 ; buffer_addr+y*BPL
                      00583     pop         ; ( x y -- x )
00D5   0017               M     moviw SP--
00D6   2???           00584     call mult6
00D7   0784           00585     addwf FSR0L
00D8   0103           00586     clrw
00D9   3D85           00587     addwfc FSR0H
                      00588 ; buffer_addr+x/8
00DA   3601           00589     lsrf T,W   
00DB   3689           00590     lsrf WREG
00DC   3689           00591     lsrf WREG
00DD   0784           00592     addwf FSR0L
00DE   0103           00593     clrw
00DF   3D85           00594     addwfc FSR0H
00E0   3007           00595     movlw 7
00E1   0581           00596     andwf T,F
00E2   0008           00597     return
                      00598 
  00000000            00599 XOR_OP equ 0
  00000001            00600 CLR_OP equ 1
                      00601 ;operation on pixel    
                      00602 ; inputs:
                      00603 ;   {x,y} coordinates
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  22:07:42         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00604 ;   op operation XOR_OP|CLR_OP 
                      00605 ; output:
                      00606 ;   WREG=collision flag, 0 if collision    
00E3                  00607 bitop: ; ( x y op -- f )
                      00608     disable_video
00E3   1500               M     bsf flags, F_MUTEX
                      00609     pick 2
00E4   3F7E               M     moviw -2[SP]
                      00610     push        ; x y op x
00E5   001C               M     movwi ++SP
                      00611     pick 2
00E6   3F7E               M     moviw -2[SP]
                      00612     push        ; x y op x y
00E7   001C               M     movwi ++SP
                      00613 ; preserve FSR0    
00E8   0804           00614     movfw FSR0L
                      00615     insert 4
00E9   3FFC               M    movwi -4[SP]
00EA   0805           00616     movfw FSR0H
                      00617     insert 3    ; -- FSR0L FSR0H op x y 
00EB   3FFD               M    movwi -3[SP]
00EC   2???           00618     call set_video_ptr  ; -- FSR0L FSR0H op bit
00ED   3001           00619     movlw 0x1
00EE   1903           00620     skpnz ; bit Z modified before leaving set_video_ptr
00EF   3???           00621     bra bitop01 ; least significant bit
00F0                  00622 bitop00:
00F0   3589           00623     lslf WREG
00F1   0B81           00624     decfsz T
00F2   3???           00625     bra bitop00
00F3                  00626 bitop01: 
                      00627     ; WREG= bit mask
00F3   0081           00628     movwf T    ; -- FSR0L FSR0H op mask
                      00629     pick 1  ; WREG= op
00F4   3F7F               M     moviw -1[SP]
00F5   1903           00630     skpnz
00F6   3???           00631     bra xor_bit  ; 
00F7                  00632 clear_bit:
00F7   0901           00633     comf T,W
00F8   0580           00634     andwf INDF0,F
00F9   3???           00635     bra bitop02
00FA                  00636 xor_bit:
00FA   0801           00637     movfw T   ; -- FSR0L FSR0H op mask
00FB   0680           00638     xorwf INDF0,F
00FC   0500           00639     andwf INDF0,W ; on screen bit value = 0 if collision
00FD   0081           00640     movwf T  ; -- FSR0L FSR0H op f
00FE                  00641 bitop02:    
                      00642 ; restore FSR0    
                      00643     pick 2  
00FE   3F7E               M     moviw -2[SP]
00FF   0085           00644     movwf FSR0H
                      00645     pick 3
0100   3F7D               M     moviw -3[SP]
0101   0084           00646     movwf FSR0L
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  22:07:42         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00647     pop  ; collision flag
0102   0017               M     moviw SP--
                      00648     drop_n 3 ; drop parameters frame
0103   317D               M     addfsr SP,-3
                      00649     push ; store collision flag
0104   001C               M     movwi ++SP
                      00650     enable_video
0105   1100               M     bcf flags, F_MUTEX
0106   0008           00651     return
                      00652 
                      00653 ; draw row of pixels
                      00654 ; draw up to 8 pixels.
                      00655 ; stop when r==0    
                      00656 ; input:
                      00657 ;   {x,y} left coordinates
                      00658 ;   r pixels to draw
                      00659 ;   f collision flag to be modified    
                      00660 ; output:
                      00661 ;   f=collision flag, return modified value   
0107                  00662 xor_row: ; ( f r x y -- f )
                      00663     pick 2 ; check if r==0
0107   3F7E               M     moviw -2[SP]
0108   1903           00664     skpnz
0109   3???           00665     bra xor_row_done ; r==0 done
010A   3589           00666     lslf WREG
                      00667     insert 2  ; save shifted r
010B   3FFE               M    movwi -2[SP]
010C   1C03           00668     skpc
010D   3???           00669     bra xor_row02 ; bit==0 no draw
                      00670     over ; f r x y x 
010E   3F7F               M     moviw -1[SP]
                          M     push
010F   001C               M     movwi ++SP
                      00671     over ; f r x y x y
0110   3F7F               M     moviw -1[SP]
                          M     push
0111   001C               M     movwi ++SP
                      00672     lit XOR_OP ; f r x y x y op
0112   3000               M    movlw XOR_OP
0113   001C               M    movwi ++SP 
0114   2???           00673     call bitop ; f r x y f
                      00674     pick 4 ; pick flag
0115   3F7C               M     moviw -4[SP]
0116   0481           00675     iorwf T
                      00676     pop      ; f r x y
0117   0017               M     moviw SP--
                      00677     insert 3 ; store modified flag
0118   3FFD               M    movwi -3[SP]
0119                  00678 xor_row02:
                      00679     inc_n 1  ; x+=1
0119   3F7F               M     moviw -1[SP]
011A   0A89               M     incf WREG,F
011B   3FFF               M     movwi -1[SP]
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  22:07:42         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

011C   3???           00680     bra xor_row
011D                  00681 xor_row_done: ; f r x y
                      00682     drop_n 3  ; only keep f
011D   317D               M     addfsr SP,-3
011E   0008           00683     return
                      00684 
                      00685 ; read flash memory word
                      00686 ; input:
                      00687 ;   lo is low byte of address
                      00688 ;   hi is high byte of address
                      00689 ;   ofs offset in table (limited to 255 )    
                      00690 ; output:
                      00691 ;   PMDATH: PMDAL
                      00692 ;reset <nibble> variable    
011F                  00693 get_flash_word: ; ( ofs lo hi -- )
011F   0023           00694     banksel PMADR
                      00695     pop
0120   0017               M     moviw SP--
0121   0092           00696     movwf PMADRH
                      00697     pop
0122   0017               M     moviw SP--
0123   0091           00698     movwf PMADRL
                      00699     pop
0124   0017               M     moviw SP--
0125   0791           00700     addwf PMADRL
0126   0103           00701     clrw 
0127   3D92           00702     addwfc PMADRH
0128                  00703 read_flash:    
0128   1315           00704     bcf PMCON1,CFGS
0129   1415           00705     bsf PMCON1, RD
012A   0000           00706     nop
012B   0000           00707     nop
012C   01??           00708     clrf nibble
012D   0008           00709     return
                      00710 
                      00711 ; increament pointer 
                      00712 ; and read next flash word    
012E                  00713 next_flash_word:
012E   0A91           00714     incf PMADRL
012F   1903           00715     skpnz
0130   0A92           00716     incf PMADRH
0131   3???           00717     bra read_flash
                      00718     
                      00719 ;get nibble from PMDAT
                      00720 ; output:
                      00721 ;   stack nibble in bits 7:4
                      00722 ; increment nibble variable    
0132                  00723 get_nibble: ; ( -- nibble )
0132   3003           00724     movlw 3
0133   06??           00725     xorwf nibble,W
0134   1903           00726     skpnz ; if set all nibbles of this word read
0135   2???           00727     call next_flash_word
0136   08??           00728     movfw nibble
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  22:07:42         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0137   1903           00729     skpnz
0138   3???           00730     bra row0
0139   0B89           00731     decfsz WREG
013A   3???           00732     bra row2
013B                  00733 row1:    
013B   0813           00734     movfw PMDATL
013C   3???           00735     bra nibble_mask
013D                  00736 row2:
013D   0E13           00737     swapf PMDATL,W
013E   3???           00738     bra nibble_mask
013F                  00739 row0:    
013F   0E14           00740     swapf PMDATH,W
0140                  00741 nibble_mask:
0140   39F0           00742     andlw 0xf0
                      00743     push
0141   001C               M     movwi ++SP
0142   0A??           00744     incf nibble,F ; advance nibble pointer
0143   0008           00745     return
                      00746 
                      00747 ; print 4 pixels row
                      00748 ; inputs:
                      00749 ;   x,y left coordinates
                      00750 ;   f  collision flag
                      00751 ;   r  row index {0-2}
                      00752 ; advance y coordinate for next row    
0144                  00753 print_row: ; ( x y f -- x y f )     
0144   2???           00754     call get_nibble ; -- x y f n 
                      00755     pick 3 
0145   3F7D               M     moviw -3[SP]
                      00756     push    ; x y f n x
0146   001C               M     movwi ++SP
                      00757     pick 3
0147   3F7D               M     moviw -3[SP]
                      00758     push      ; x y f n x y
0148   001C               M     movwi ++SP
0149   2???           00759     call xor_row ; -- x y f
                      00760     inc_n 1 ; y+=1
014A   3F7F               M     moviw -1[SP]
014B   0A89               M     incf WREG,F
014C   3FFF               M     movwi -1[SP]
014D   0008           00761     return
                      00762     
                      00763 ; draw character 
                      00764 ; input:
                      00765 ;   x,y left/top coordinates
                      00766 ;   c   character to print    
014E                  00767 print_char: ; ( x y c -- )
014E   3581           00768     lslf T ; 2 words per digit
                      00769     lit low(digits)
014F   30??               M    movlw low(digits)
0150   001C               M    movwi ++SP 
                      00770     lit high(digits) ; x y ofs adrL adrH
0151   30??               M    movlw high(digits)
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  22:07:42         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0152   001C               M    movwi ++SP 
0153   2???           00771     call get_flash_word  ; x y
                      00772     lit 0   ; x y f=0
0154   3000               M    movlw 0
0155   001C               M    movwi ++SP 
0156   2???           00773     call print_row
0157   2???           00774     call print_row
0158   2???           00775     call print_row 
0159   2???           00776     call print_row 
015A   2???           00777     call print_row 
                      00778     drop_n 3  ; ( x y f -- )
015B   317D               M     addfsr SP,-3
015C   0008           00779     return
                      00780 
                      00781 ; print a tetriminos
                      00782 ; input:
                      00783 ;   f collision flag
                      00784 ;   x,y  left/top coordinate
                      00785 ;   t tetriminos identifier
                      00786 ; output:
                      00787 ;   collision flag,  0 if no collision    
015D                  00788 print_tetrim: ; ( x y t  -- f )
015D   3018           00789     movlw 24
015E   0201           00790     subwf T,W
015F   1803           00791     skpnc
0160   3???           00792     bra ti ; I tetrominos
0161   30??           00793     movlw low(tetriminos)
                      00794     push
0162   001C               M     movwi ++SP
0163   30??           00795     movlw high(tetriminos)
                      00796     push
0164   001C               M     movwi ++SP
0165   3???           00797     bra prt01
0166                  00798 ti: ; special treatment for I tetriminos
0166   0081           00799     movwf T
0167   3581           00800     lslf T,F
0168   30??           00801     movlw low(I0)
                      00802     push
0169   001C               M     movwi ++SP
016A   30??           00803     movlw high(I0)
                      00804     push
016B   001C               M     movwi ++SP
016C                  00805 prt01:    
016C   2???           00806     call get_flash_word
                      00807     lit 0
016D   3000               M    movlw 0
016E   001C               M    movwi ++SP 
016F   2???           00808     call print_row ; x y f -- x y+1 f
0170   2???           00809     call print_row
0171   2???           00810     call print_row
0172   0023           00811     banksel PMDAT
0173   3030           00812     movlw 0x30
0174   0514           00813     andwf PMDATH,W
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  22:07:42         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0175   1903           00814     skpnz
0176   2???           00815     call print_row
0177   0801           00816     movfw T
                      00817     insert 2
0178   3FFE               M    movwi -2[SP]
                      00818     drop_n 2  ; -- f
0179   317E               M     addfsr SP,-2
017A   0008           00819     return
                      00820     
                      00821 ;print a text line store in flash
                      00822 ; text terminated by 0xff
                      00823 ; input: 
                      00824 ;  x, y left coordinates
                      00825 ;  idx  index of message    
017B                  00826 print_label: ; ( x y idx -- )
                      00827     lit 0    ; x y idx i
017B   3000               M    movlw 0
017C   001C               M    movwi ++SP 
017D                  00828 prt_lbl_loop:
                      00829     dup      ; x y idx i i
017D   0801               M     movfw T
017E   001C               M     movwi ++SP
                      00830     pick 2   ; WREG=idx
017F   3F7E               M     moviw -2[SP]
0180   2???           00831     call labels ; x y idx i i -- x y idx i  
0181   1B89           00832     btfsc WREG,7
0182   3???           00833     bra prt_lbl_done
                      00834     push ; x y idx i c
0183   001C               M     movwi ++SP
                      00835     pick 4
0184   3F7C               M     moviw -4[SP]
                      00836     push    ; x y idx i c x 
0185   001C               M     movwi ++SP
                      00837     pick 4
0186   3F7C               M     moviw -4[SP]
                      00838     push    ; x y idx i c x y
0187   001C               M     movwi ++SP
                      00839     rot     ; x y idx i x y c
                          M     pick 2
0188   3F7E               M     moviw -2[SP]
                          M     push        ; n1 n2 n3 n1
0189   001C               M     movwi ++SP
                          M     pick 2
018A   3F7E               M     moviw -2[SP]
                          M     insert 3   ;  n2 n2 n3 n1
018B   3FFD               M    movwi -3[SP]
                          M     pick 1
018C   3F7F               M     moviw -1[SP]
                          M     insert 2   ; n2 n3 n3 n1
018D   3FFE               M    movwi -2[SP]
                          M     pop        ; n2 n3 n3 
018E   0017               M     moviw SP--
018F   0081               M     movwf T    ; n2 n3 n1
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  22:07:42         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0190   2???           00840     call print_char ; -- x y idx i 
0191   0A81           00841     incf T
                      00842     pick 3    ; x
0192   3F7D               M     moviw -3[SP]
0193   3E04           00843     addlw 4   ; x+=4
                      00844     insert 3  
0194   3FFD               M    movwi -3[SP]
0195   3???           00845     bra prt_lbl_loop
0196                  00846 prt_lbl_done:
                      00847     drop_n 4
0196   317C               M     addfsr SP,-4
0197   0008           00848     return
                      00849 
                      00850 ;print an integer
                      00851 ;from right to left ( least first)
                      00852 ; input:    
                      00853 ;   x,y  coordinate right end
                      00854 ;   number to print in acca    
                      00855 ;   accbL contain digit after div10 call    
0198                  00856 print_int: ; ( x y -- )
0198   08??           00857     movfw accaH
0199   04??           00858     iorwf accaL,W
019A   1903           00859     skpnz
019B   3???           00860     bra print_last
                      00861     over
019C   3F7F               M     moviw -1[SP]
                          M     push
019D   001C               M     movwi ++SP
                      00862     over    ; x y x y
019E   3F7F               M     moviw -1[SP]
                          M     push
019F   001C               M     movwi ++SP
01A0   2???           00863     call div10
01A1   08??           00864     movfw accbL ; remainder of division
                      00865     push   ; x y x y d
01A2   001C               M     movwi ++SP
01A3   2???           00866     call print_char ; -- x y 
                      00867     pick 1
01A4   3F7F               M     moviw -1[SP]
                      00868     push
01A5   001C               M     movwi ++SP
01A6   3004           00869     movlw 4
01A7   0281           00870     subwf T
                      00871     pop
01A8   0017               M     moviw SP--
                      00872     insert 1
01A9   3FFF               M    movwi -1[SP]
01AA   3???           00873     bra print_int
01AB                  00874 print_last:
                      00875     pick 1
01AB   3F7F               M     moviw -1[SP]
01AC   3A2B           00876     xorlw 43
01AD   1D03           00877     skpz
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  22:07:42         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01AE   3???           00878     bra no_zero
                      00879     push
01AF   001C               M     movwi ++SP
01B0   3???           00880     bra print_char
01B1                  00881 no_zero:
                      00882     drop_n 2
01B1   317E               M     addfsr SP,-2
01B2   0008           00883     return
                      00884     
                      00885 ; draw horizontal line ( length  y x -- )
                      00886 ; inputs:
                      00887 ;   length of line
                      00888 ;   {x,y} left coordinates       
01B3                  00889 hline:
                      00890     pick 2
01B3   3F7E               M     moviw -2[SP]
01B4   1903           00891     skpnz
01B5   3???           00892     bra hline_done
01B6   0389           00893     decf WREG
                      00894     insert 2
01B7   3FFE               M    movwi -2[SP]
                      00895     dup     ; len y x x
01B8   0801               M     movfw T
01B9   001C               M     movwi ++SP
                      00896     pick 2
01BA   3F7E               M     moviw -2[SP]
                      00897     push    ; len y x x y
01BB   001C               M     movwi ++SP
                      00898     lit XOR_OP
01BC   3000               M    movlw XOR_OP
01BD   001C               M    movwi ++SP 
01BE   2???           00899     call bitop
                      00900     drop
01BF   317F               M    addfsr SP,-1
01C0   0A81           00901     incf T  ; len y x+1
01C1   3???           00902     bra hline
01C2                  00903 hline_done:    
                      00904     drop_n 3
01C2   317D               M     addfsr SP,-3
01C3   0008           00905     return
                      00906 
                      00907 ;draw vertical line ( length x y -- )
                      00908 ; inputs:
                      00909 ;   length of line
                      00910 ;   {x,y} top coordinate
01C4                  00911 vline:  ; len y x
                      00912     pick 2 
01C4   3F7E               M     moviw -2[SP]
01C5   1903           00913     skpnz
01C6   3???           00914     bra vline_done
01C7   0389           00915     decf WREG
                      00916     insert 2
01C8   3FFE               M    movwi -2[SP]
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  22:07:42         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00917     pick 1      
01C9   3F7F               M     moviw -1[SP]
                      00918     push    ; len x y x
01CA   001C               M     movwi ++SP
                      00919     pick 1
01CB   3F7F               M     moviw -1[SP]
                      00920     push    ; len x y x y
01CC   001C               M     movwi ++SP
                      00921     lit XOR_OP
01CD   3000               M    movlw XOR_OP
01CE   001C               M    movwi ++SP 
01CF   2???           00922     call bitop
                      00923     drop
01D0   317F               M    addfsr SP,-1
01D1   0A81           00924     incf T
01D2   3???           00925     bra vline
01D3                  00926 vline_done:
                      00927     drop_n 3
01D3   317D               M     addfsr SP,-3
01D4   0008           00928     return
                      00929     
  0000000A            00930 WELL_WIDTH equ 10
  00000016            00931 WELL_DEPTH equ 22 
01D5                  00932 game_init:
                      00933 ;clear screen    
                      00934     lit 0  
01D5   3000               M    movlw 0
01D6   001C               M    movwi ++SP 
01D7   2???           00935     call fill_buffer
                      00936 ; draw game well    
                      00937     lit WELL_DEPTH
01D8   3016               M    movlw WELL_DEPTH
01D9   001C               M    movwi ++SP 
                      00938     lit 0
01DA   3000               M    movlw 0
01DB   001C               M    movwi ++SP 
                      00939     lit 0
01DC   3000               M    movlw 0
01DD   001C               M    movwi ++SP 
01DE   2???           00940      call vline
                      00941     lit WELL_DEPTH
01DF   3016               M    movlw WELL_DEPTH
01E0   001C               M    movwi ++SP 
                      00942     lit WELL_WIDTH+1
01E1   300B               M    movlw WELL_WIDTH+1
01E2   001C               M    movwi ++SP 
                      00943     lit 0
01E3   3000               M    movlw 0
01E4   001C               M    movwi ++SP 
01E5   2???           00944     call vline
                      00945     lit WELL_WIDTH+2
01E6   300C               M    movlw WELL_WIDTH+2
01E7   001C               M    movwi ++SP 
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  22:07:42         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00946     lit WELL_DEPTH
01E8   3016               M    movlw WELL_DEPTH
01E9   001C               M    movwi ++SP 
                      00947     lit 0
01EA   3000               M    movlw 0
01EB   001C               M    movwi ++SP 
01EC   2???           00948     call hline
                      00949 ; print "SCORE" label    
                      00950     lit WELL_WIDTH+3 ; x
01ED   300D               M    movlw WELL_WIDTH+3
01EE   001C               M    movwi ++SP 
                      00951     lit 0            ; y
01EF   3000               M    movlw 0
01F0   001C               M    movwi ++SP 
                      00952     lit LBL_SCORE         
01F1   3000               M    movlw LBL_SCORE
01F2   001C               M    movwi ++SP 
01F3   2???           00953     call print_label
                      00954 ; print "LINES" label    
                      00955     lit WELL_WIDTH+3 ; x
01F4   300D               M    movlw WELL_WIDTH+3
01F5   001C               M    movwi ++SP 
                      00956     lit 12           ; y
01F6   300C               M    movlw 12
01F7   001C               M    movwi ++SP 
                      00957     lit LBL_LINES
01F8   3001               M    movlw LBL_LINES
01F9   001C               M    movwi ++SP 
01FA   2???           00958     call print_label
                      00959 ; variables initialization
01FB   0020           00960     banksel 0
01FC   3002           00961     movlw 2
01FD   00??           00962     movwf tx
01FE   01??           00963     clrf ty
01FF   01??           00964     clrf tetrim
0200   01??           00965     clrf angle
0201   01??           00966     clrf scoreL
0202   01??           00967     clrf scoreH
0203   01??           00968     clrf dropped
0204   01??           00969     clrf buttons
0205   1600           00970     bsf flags,F_GSTOP
0206   0008           00971     return
                      00972     
0207                  00973 tetris:
                      00974 ; print score
0207   002?           00975     banksel scoreL
0208   08??           00976     movfw scoreL
0209   00??           00977     movwf accaL
020A   08??           00978     movfw scoreH
020B   00??           00979     movwf accaH
                      00980     lit 43
020C   302B               M    movlw 43
020D   001C               M    movwi ++SP 
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  22:07:42         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00981     lit 6
020E   3006               M    movlw 6
020F   001C               M    movwi ++SP 
0210   2???           00982     call print_int
                      00983 ;print dropped line
0211   002?           00984     banksel dropped
0212   08??           00985     movfw dropped
0213   00??           00986     movwf accaL
0214   01??           00987     clrf accaH
                      00988     lit 43
0215   302B               M    movlw 43
0216   001C               M    movwi ++SP 
                      00989     lit 18
0217   3012               M    movlw 18
0218   001C               M    movwi ++SP 
0219   2???           00990     call print_int
                      00991 ;print start prompt
                      00992     lit 0
021A   3000               M    movlw 0
021B   001C               M    movwi ++SP 
                      00993     lit 24
021C   3018               M    movlw 24
021D   001C               M    movwi ++SP 
                      00994     lit LBL_PRESS
021E   3002               M    movlw LBL_PRESS
021F   001C               M    movwi ++SP 
0220   2???           00995     call print_label
                      00996 ; wait button A press
                      00997 ; to start game    
0221                  00998 wait_start:    
0221   2???           00999     call read_pad
0222   002?           01000     banksel buttons
0223   1E00           01001     btfss buttons,BTN_A
0224   3???           01002     bra wait_start
                      01003 ; delete prompt
                      01004     lit 0
0225   3000               M    movlw 0
0226   001C               M    movwi ++SP 
                      01005     lit 24
0227   3018               M    movlw 24
0228   001C               M    movwi ++SP 
                      01006     lit LBL_PRESS
0229   3002               M    movlw LBL_PRESS
022A   001C               M    movwi ++SP 
022B   2???           01007     call print_label
                      01008 ; game start
022C                  01009 game_loop:
                      01010     
022C   3???           01011     bra game_loop
022D   0008           01012     return
                      01013     
022E                  01014 init:
                      01015     pstack_init
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  22:07:42         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

022E   0187               M     clrf FSR1H
022F   301F               M     movlw S0
0230   0086               M     movwf FSR1L
                      01016 ; ADC configuration
0231   0021           01017     banksel ADCON0
0232   300C           01018     movlw (PAD_CHS<<CHS0)
0233   009D           01019     movwf ADCON0
0234   3020           01020     movlw (2<<ADCS0)
0235   009E           01021     movwf ADCON1
0236   0024           01022     banksel WPUA
0237   120C           01023     bcf WPUA, PAD_PIN
                      01024 ;;;;;;;;;;;;;;;;;;;;;    
0238   0021           01025     banksel TRISA
0239   110C           01026     bcf TRISA, SYNC_OUT
023A   108C           01027     bcf TRISA, VIDEO_OUT
023B   0022           01028     banksel VIDEO_LAT
023C   108C           01029     bcf VIDEO_LAT,VIDEO_OUT
                      01030 ;configure EUSART in sychronsous mode
                      01031 ;to use as pixel serializer
023D   0023           01032     banksel SPBRG
023E   3002           01033     movlw 2
023F   009B           01034     movwf SPBRGL
0240   019C           01035     clrf SPBRGH
0241   019A           01036     clrf TXREG
0242   30B0           01037     movlw (1<<SYNC)|(1<<CSRC)|(1<<TXEN)
0243   009E           01038     movwf TXSTA
0244   179D           01039     bsf RCSTA, SPEN
0245   30CF           01040     movlw ~((1<<CREN)|(1<<SREN))
0246   059D           01041     andwf RCSTA
                      01042 ; configure pwm video sync for horizontal period
0247   003B           01043     banksel SYNC_PWMDCH
0248   01B1           01044     clrf SYNC_PWMPH
0249   01B2           01045     clrf SYNC_PWMPH+1
024A   01BF           01046     clrf SYNC_PWMLDCON
024B   30F5           01047     movlw HORZ_PERIOD&0XFF
024C   00B5           01048     movwf SYNC_PWMPRL
024D   3004           01049     movlw HORZ_PERIOD>>8
024E   00B6           01050     movwf SYNC_PWMPRH
024F   01BE           01051     clrf SYNC_PWMCLKCON
0250   30D0           01052     movlw (3<<OE)|(1<<POL)
0251   00BB           01053     movwf SYNC_PWMCON
0252   305E           01054     movlw HORZ_PULSE&0xff
0253   00B3           01055     movwf SYNC_PWMDCL
0254   3000           01056     movlw HORZ_PULSE>>8
0255   00B4           01057     movwf SYNC_PWMDCH
0256   17BF           01058     bsf SYNC_PWMLDCON,7
                      01059    ;enable video interrupt on period match
0257   103D           01060     bcf SYNC_PWMINTF,PRIF
0258   143C           01061     bsf SYNC_PWMINTE,PRIE
                      01062     ; enable peripheral interrupt
0259   0021           01063     banksel SYNC_PIE
025A   1713           01064     bsf SYNC_PIE,SYNC_IE
                      01065     ;enable interrupts
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  22:07:42         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

025B   30C0           01066     movlw (1<<GIE)|(1<<PEIE)
025C   008B           01067     movwf INTCON
025D   01??           01068     clrf lcountL
025E   01??           01069     clrf lcountH
025F   01??           01070     clrf flags
                      01071     ; seed lfsr PRNG
0260   30AC           01072     movlw 0xAC
0261   00??           01073     movwf randL
0262   30E1           01074     movlw 0xE1
0263   00??           01075     movwf randH
                      01076 
                      01077     
0264                  01078 main:
0264   2???           01079     call game_init
0265   2???           01080     call tetris
0266   3???           01081     bra main
                      01082   
                      01083 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      01084 ;   data tables
                      01085 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      01086 
                      01087 ; **************** encoding ************************************************
                      01088 ; enhanced PIC instructions are coded on 14 bits
                      01089 ; these 14 bits can be read as data using flash memory
                      01090 ; writing/reading mechanism, see datasheet chapter 10 for detail.
                      01091 ; the 'dw' assembler directive encode data in those 14 bits contrary to 'dt'
                      01092 ; directive which encode a single byte as a RETLW instruction.
                      01093 ; So we get a 50% compression by encoding 3 nibbles/flash word. 
                      01094 ; the encoding used in the following tables is as follow:    
                      01095 ; bits 13:12  number of nibbles where 0 means there is more than 3 nibbles
                      01096 ; in this data chunk so 1 or more other words follow this one.    
                      01097 ; other 12 bits are sliced in 4 bits nibbles.
                      01098 ;****************************************************************************
                      01099 
0267                  01100 digits: ; each digit is 5 rows
0267   0EAA 2AE0      01101     dw 0x0EAA,0x2AE0 ; 0
0269   04C4 24E0      01102     dw 0x04C4,0x24E0 ; 1
026B   0E2E 28E0      01103     dw 0x0E2E,0x28E0 ; 2
026D   0E2E 22E0      01104     dw 0x0E2E,0x22E0 ; 3
026F   0AAE 2220      01105     dw 0x0AAE,0x2220 ; 4
0271   0E8E 22E0      01106     dw 0x0E8E,0x22E0 ; 5
0273   088E 2AE0      01107     dw 0x088E,0x2AE0 ; 6
0275   0E22 2220      01108     dw 0x0E22,0x2220 ; 7
0277   0EAE 2AE0      01109     dw 0x0EAE,0x2AE0 ; 8
0279   0EAE 2220      01110     dw 0x0EAE,0x2220 ; 9
                      01111 ; letters needed for 'SCORE' and 'LINES" labels
027B   3EAE 2AA0      01112     dw 0x3EAE,0x2AA0 ; A  code 10
027D   3688 2860      01113     dw 0x3688,0x2860 ; C  code 11
027F   3E8E 28E0      01114     dw 0x3E8E,0x28E0 ; E  code 12
0281   3E44 24E0      01115     dw 0x3E44,0x24E0 ; I  code 13
0283   3888 28E0      01116     dw 0x3888,0x28E0 ; L  code 14
0285   38CA 2AA0      01117     dw 0x38CA,0x2AA0 ; N  code 15
0287   34AA 2A40      01118     dw 0x34AA,0x2A40 ; O  code 16
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  22:07:42         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0289   3EAE 2880      01119     dw 0x3EAE,0x2880 ; P  code 17
028B   38EA 2880      01120     dw 0x38EA,0x2880 ; R  code 18
028D   368C 22C0      01121     dw 0x368C,0x22C0 ; S  code 19
028F   3040 2400      01122     dw 0x3040,0x2400 ; :  code 20
0291   2000 2000      01123     dw 0x2000,0x2000 ; space code 21
                      01124 
                      01125 ; comments notation: Rn clockwise rotation n*90 degr.    
                      01126 ; note that vertical I as 4 rows so it needs 2 words    
0293                  01127 tetriminos: 
0293   3446           01128     dw 0x3446 ; L R0
0294   2E80           01129     dw 0x2E80 ; L R1
0295   3622           01130     dw 0x3622 ; L R2
0296   22E0           01131     dw 0x22E0 ; L R3
0297   3226           01132     dw 0x3226 ; J R0
0298   28E0           01133     dw 0x28E0 ; J R1
0299   3644           01134     dw 0x3644 ; J R2
029A   2E20           01135     dw 0x2E20 ; J R3
029B   2660           01136     dw 0x2660 ; O R0 
029C   2660           01137     dw 0x2660 ; O R1
029D   2660           01138     dw 0x2660 ; O R2
029E   2660           01139     dw 0x2660 ; O R3
029F   2360           01140     dw 0x2360 ; S R0
02A0   3462           01141     dw 0x3462 ; S R1
02A1   2360           01142     dw 0x2360 ; S R2
02A2   3462           01143     dw 0x3462 ; S R3
02A3   2E40           01144     dw 0x2E40 ; T R0
02A4   34C4           01145     dw 0x34c4 ; T R1
02A5   24E0           01146     dw 0x24E0 ; T R2
02A6   3464           01147     dw 0x3464 ; T R3
02A7   2C60           01148     dw 0x2C60 ; Z R0
02A8   3264           01149     dw 0x3264 ; Z R1
02A9   2C60           01150     dw 0x2C60 ; Z R3
02AA   3264           01151     dw 0x3264 ; Z R4
                      01152 ; annoying! I tetriminos need a special treatment 
                      01153 ; because vertical I need 2 words for encoding.   
02AB   0222 1200      01154 I0: dw 0x0222,0x1200 ; I R0  
02AD   1F00 1000      01155     dw 0x1F00,0x1000 ; I R1  second word is filling for alignment
02AF   0222 1200      01156     dw 0x0222,0x1200 ; I R2
02B1   1F00 1000      01157     dw 0x1F00,0x1000 ; I R3  
                      01158 
  00000000            01159 LBL_SCORE equ 0
  00000001            01160 LBL_LINES equ 1
  00000002            01161 LBL_PRESS equ 2
                      01162  
02B3                  01163 labels:
02B3   000B           01164     brw
02B4   3???           01165     bra txt_score
02B5   3???           01166     bra txt_lines
02B6   3???           01167     bra txt_press
                      01168     
02B7                  01169 txt_score: ; "SCORE"
                      01170     pop
02B7   0017               M     moviw SP--
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  22:07:42         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02B8   000B           01171     brw
02B9   3413 340B 3410 01172     dt 19,11,16,18,12,20,255
       3412 340C 3414 
       34FF 
                      01173     
02C0                  01174 txt_lines: ; "LINES"
                      01175     pop
02C0   0017               M     moviw SP--
02C1   000B           01176     brw
02C2   340E 340D 340F 01177     dt 14,13,15,12,19,20,255
       340C 3413 3414 
       34FF 
                      01178 
02C9                  01179 txt_press: ; "PRESS A"
                      01180     pop
02C9   0017               M     moviw SP--
02CA   000B           01181     brw
02CB   3411 3412 340C 01182     dt 17,18,12,19,19,21,10,255
       3413 3413 3415 
       340A 34FF 
                      01183     
3FE7 1EFF             01184     end
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  22:07:42         PAGE 29


SYMBOL TABLE
  LABEL                             VALUE 

ABDEN                             00000000
ABDOVF                            00000007
ADCON0                            0000009D
ADCON1                            0000009E
ADCON2                            0000009F
ADCS0                             00000004
ADCS1                             00000005
ADCS2                             00000006
ADDEN                             00000003
ADFM                              00000007
ADFVR0                            00000000
ADFVR1                            00000001
ADGO                              00000001
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADPREF0                           00000000
ADPREF1                           00000001
ADRES                             0000009B
ADRESH                            0000009C
ADRESL                            0000009B
ANSA0                             00000000
ANSA1                             00000001
ANSA2                             00000002
ANSA4                             00000004
ANSELA                            0000018C
APFCON                            0000011D
APFCON0                           0000011D
A_THR                             00000040
BAUDCON                           0000019F
BORCON                            00000116
BORFS                             00000006
BORRDY                            00000000
BPL                               00000006
BRG16                             00000003
BRGH                              00000002
BSR                               00000008
BSR0                              00000000
BSR1                              00000001
BSR2                              00000002
BSR3                              00000003
BSR4                              00000004
BSR_SHAD                          00000FE6
BTN_A                             00000004
BTN_B                             00000005
BTN_DN                            00000001
BTN_LT                            00000002
BTN_RT                            00000003
BTN_UP                            00000000
BUFFER_SIZE                       000000C0
B_THR                             00000095
C                                 00000000
C1HYS                             00000001
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  22:07:42         PAGE 30


SYMBOL TABLE
  LABEL                             VALUE 

C1IE                              00000005
C1IF                              00000005
C1INTN                            00000006
C1INTP                            00000007
C1NCH0                            00000000
C1NCH1                            00000001
C1NCH2                            00000002
C1OE                              00000005
C1ON                              00000007
C1OUT                             00000006
C1PCH0                            00000004
C1PCH1                            00000005
C1POL                             00000004
C1SP                              00000002
C1SYNC                            00000000
CDAFVR0                           00000002
CDAFVR1                           00000003
CFGS                              00000006
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CHS4                              00000006
CLR_OP                            00000001
CM1CON0                           00000111
CM1CON1                           00000112
CMOUT                             00000115
CREN                              00000004
CS0                               00000000
CS1                               00000001
CSRC                              00000007
CWG1CON0                          00000693
CWG1CON1                          00000694
CWG1CON2                          00000695
CWG1DBF                           00000692
CWG1DBF0                          00000000
CWG1DBF1                          00000001
CWG1DBF2                          00000002
CWG1DBF3                          00000003
CWG1DBF4                          00000004
CWG1DBF5                          00000005
CWG1DBR                           00000691
CWG1DBR0                          00000000
CWG1DBR1                          00000001
CWG1DBR2                          00000002
CWG1DBR3                          00000003
CWG1DBR4                          00000004
CWG1DBR5                          00000005
CWGASEL                           00000006
CWGBSEL                           00000005
C_SHAD                            00000000
DACCON0                           00000118
DACCON1                           00000119
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  22:07:42         PAGE 31


SYMBOL TABLE
  LABEL                             VALUE 

DACEN                             00000007
DACLPS                            00000006
DACOE                             00000005
DACPSS0                           00000002
DACPSS1                           00000003
DACR0                             00000000
DACR1                             00000001
DACR2                             00000002
DACR3                             00000003
DACR4                             00000004
DC                                00000001
DCIE                              00000001
DCIF                              00000001
DC_SHAD                           00000001
DN_THR                            000000D8
EN                                00000007
F                                 00000001
FCY                               004C4B40
FERR                              00000002
FIRST_VIDEO                       00000046
FOSC                              01312D00
FREE                              00000004
FSR0                              00000004
FSR0H                             00000005
FSR0H_SHAD                        00000FE9
FSR0L                             00000004
FSR0L_SHAD                        00000FE8
FSR0_SHAD                         00000FE8
FSR1                              00000006
FSR1H                             00000007
FSR1H_SHAD                        00000FEB
FSR1L                             00000006
FSR1L_SHAD                        00000FEA
FSR1_SHAD                         00000FEA
FVRCON                            00000117
FVREN                             00000007
FVRRDY                            00000006
F_EVEN                            00000001
F_GSTOP                           00000004
F_GTMR                            00000003
F_MUTEX                           00000002
F_SND                             00000005
F_VSYNC                           00000000
G1ARSEN                           00000006
G1ASDLA0                          00000004
G1ASDLA1                          00000005
G1ASDLB0                          00000006
G1ASDLB1                          00000007
G1ASDSC1                          00000002
G1ASDSFLT                         00000001
G1ASE                             00000007
G1CS0                             00000000
G1EN                              00000007
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  22:07:42         PAGE 32


SYMBOL TABLE
  LABEL                             VALUE 

G1IS0                             00000000
G1IS1                             00000001
G1IS2                             00000002
G1OEA                             00000005
G1OEB                             00000006
G1POLA                            00000003
G1POLB                            00000004
GIE                               00000007
GO                                00000001
GO_NOT_DONE                       00000001
HFIOFL                            00000003
HFIOFR                            00000004
HFIOFS                            00000000
HORZ_DLY                          00000032
HORZ_PERIOD                       000004F5
HORZ_PULSE                        0000005E
I0                                000002AB
INDF0                             00000000
INDF1                             00000001
INLVLA                            0000038C
INLVLA0                           00000000
INLVLA1                           00000001
INLVLA2                           00000002
INLVLA3                           00000003
INLVLA4                           00000004
INLVLA5                           00000005
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IOCAF                             00000393
IOCAF0                            00000000
IOCAF1                            00000001
IOCAF2                            00000002
IOCAF3                            00000003
IOCAF4                            00000004
IOCAF5                            00000005
IOCAN                             00000392
IOCAN0                            00000000
IOCAN1                            00000001
IOCAN2                            00000002
IOCAN3                            00000003
IOCAN4                            00000004
IOCAN5                            00000005
IOCAP                             00000391
IOCAP0                            00000000
IOCAP1                            00000001
IOCAP2                            00000002
IOCAP3                            00000003
IOCAP4                            00000004
IOCAP5                            00000005
IOCIE                             00000003
IOCIF                             00000000
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  22:07:42         PAGE 33


SYMBOL TABLE
  LABEL                             VALUE 

IRCF0                             00000003
IRCF1                             00000004
IRCF2                             00000005
IRCF3                             00000006
LAST_LINE                         00000106
LAST_VIDEO                        000000C5
LATA                              0000010C
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA4                             00000004
LATA5                             00000005
LBL_LINES                         00000001
LBL_PRESS                         00000002
LBL_SCORE                         00000000
LDA                               00000007
LDS0                              00000000
LDS1                              00000001
LDT                               00000006
LFIOFR                            00000001
LFSR_TAPS                         000000B4
LT_THR                            000000D1
LWLO                              00000005
MC1OUT                            00000000
MFIOFR                            00000002
MODE0                             00000002
MODE1                             00000003
MPWM1EN                           00000000
MPWM1LD                           00000000
MPWM1OUT                          00000000
MPWM2EN                           00000001
MPWM2LD                           00000001
MPWM2OUT                          00000001
MPWM3EN                           00000002
MPWM3LD                           00000002
MPWM3OUT                          00000002
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RI                            00000002
NOT_RMCLR                         00000003
NOT_RWDT                          00000004
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_WPUEN                         00000007
ODA0                              00000000
ODA1                              00000001
ODA2                              00000002
ODA4                              00000004
ODA5                              00000005
ODCONA                            0000028C
OE                                00000006
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  22:07:42         PAGE 34


SYMBOL TABLE
  LABEL                             VALUE 

OERR                              00000001
OFIE                              00000003
OFIF                              00000003
OFM0                              00000005
OFM1                              00000006
OFO                               00000004
OFS0                              00000000
OFS1                              00000001
OPTION_REG                        00000095
OSCCON                            00000099
OSCSTAT                           0000009A
OSCTUNE                           00000098
OSTS                              00000005
OUT                               00000005
P1SEL                             00000000
P2SEL                             00000001
PAD_CHS                           00000003
PAD_PIN                           00000004
PCL                               00000002
PCLATH                            0000000A
PCLATH_SHAD                       00000FE7
PCON                              00000096
PEIE                              00000006
PHIE                              00000002
PHIF                              00000002
PIE1                              00000091
PIE2                              00000092
PIE3                              00000093
PIR1                              00000011
PIR2                              00000012
PIR3                              00000013
PIXEL_TXREG                       0000019A
PLLR                              00000006
PMADR                             00000191
PMADRH                            00000192
PMADRL                            00000191
PMCON1                            00000195
PMCON2                            00000196
PMDAT                             00000193
PMDATH                            00000194
PMDATL                            00000193
POL                               00000004
PORTA                             0000000C
PR2                               0000001B
PRIE                              00000000
PRIF                              00000000
PS0_OPTION_REG                    00000000
PS0_PWM1CLKCON                    00000004
PS0_PWM2CLKCON                    00000004
PS0_PWM3CLKCON                    00000004
PS1_OPTION_REG                    00000001
PS1_PWM1CLKCON                    00000005
PS1_PWM2CLKCON                    00000005
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  22:07:42         PAGE 35


SYMBOL TABLE
  LABEL                             VALUE 

PS1_PWM3CLKCON                    00000005
PS2_OPTION_REG                    00000002
PS2_PWM1CLKCON                    00000006
PS2_PWM2CLKCON                    00000006
PS2_PWM3CLKCON                    00000006
PSA                               00000003
PWM1CLKCON                        00000D9E
PWM1CON                           00000D9B
PWM1CS0                           00000000
PWM1CS1                           00000001
PWM1DC                            00000D93
PWM1DCH                           00000D94
PWM1DCH0                          00000000
PWM1DCH1                          00000001
PWM1DCH2                          00000002
PWM1DCH3                          00000003
PWM1DCH4                          00000004
PWM1DCH5                          00000005
PWM1DCH6                          00000006
PWM1DCH7                          00000007
PWM1DCIE                          00000001
PWM1DCIF                          00000001
PWM1DCL                           00000D93
PWM1DCL0                          00000000
PWM1DCL1                          00000001
PWM1DCL2                          00000002
PWM1DCL3                          00000003
PWM1DCL4                          00000004
PWM1DCL5                          00000005
PWM1DCL6                          00000006
PWM1DCL7                          00000007
PWM1EN                            00000007
PWM1EN_A                          00000000
PWM1IE                            00000004
PWM1IF                            00000004
PWM1INTCON                        00000D9C
PWM1INTE                          00000D9C
PWM1INTF                          00000D9D
PWM1INTFLG                        00000D9D
PWM1LD                            00000007
PWM1LDA_A                         00000000
PWM1LDCON                         00000D9F
PWM1LDM                           00000006
PWM1LDS0                          00000000
PWM1LDS1                          00000001
PWM1MODE0                         00000002
PWM1MODE1                         00000003
PWM1OE                            00000006
PWM1OF                            00000D97
PWM1OFCON                         00000DA0
PWM1OFH                           00000D98
PWM1OFH0                          00000000
PWM1OFH1                          00000001
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  22:07:42         PAGE 36


SYMBOL TABLE
  LABEL                             VALUE 

PWM1OFH2                          00000002
PWM1OFH3                          00000003
PWM1OFH4                          00000004
PWM1OFH5                          00000005
PWM1OFH6                          00000006
PWM1OFH7                          00000007
PWM1OFIE                          00000003
PWM1OFIF                          00000003
PWM1OFL                           00000D97
PWM1OFL0                          00000000
PWM1OFL1                          00000001
PWM1OFL2                          00000002
PWM1OFL3                          00000003
PWM1OFL4                          00000004
PWM1OFL5                          00000005
PWM1OFL6                          00000006
PWM1OFL7                          00000007
PWM1OFM0                          00000005
PWM1OFM1                          00000006
PWM1OFMC                          00000004
PWM1OFS0                          00000000
PWM1OFS1                          00000001
PWM1OUT                           00000005
PWM1OUT_A                         00000000
PWM1PH                            00000D91
PWM1PHH                           00000D92
PWM1PHH0                          00000000
PWM1PHH1                          00000001
PWM1PHH2                          00000002
PWM1PHH3                          00000003
PWM1PHH4                          00000004
PWM1PHH5                          00000005
PWM1PHH6                          00000006
PWM1PHH7                          00000007
PWM1PHIE                          00000002
PWM1PHIF                          00000002
PWM1PHL                           00000D91
PWM1PHL0                          00000000
PWM1PHL1                          00000001
PWM1PHL2                          00000002
PWM1PHL3                          00000003
PWM1PHL4                          00000004
PWM1PHL5                          00000005
PWM1PHL6                          00000006
PWM1PHL7                          00000007
PWM1POL                           00000004
PWM1PR                            00000D95
PWM1PRH                           00000D96
PWM1PRH0                          00000000
PWM1PRH1                          00000001
PWM1PRH2                          00000002
PWM1PRH3                          00000003
PWM1PRH4                          00000004
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  22:07:42         PAGE 37


SYMBOL TABLE
  LABEL                             VALUE 

PWM1PRH5                          00000005
PWM1PRH6                          00000006
PWM1PRH7                          00000007
PWM1PRIE                          00000000
PWM1PRIF                          00000000
PWM1PRL                           00000D95
PWM1PRL0                          00000000
PWM1PRL1                          00000001
PWM1PRL2                          00000002
PWM1PRL3                          00000003
PWM1PRL4                          00000004
PWM1PRL5                          00000005
PWM1PRL6                          00000006
PWM1PRL7                          00000007
PWM1PS0                           00000004
PWM1PS1                           00000005
PWM1PS2                           00000006
PWM1TMR                           00000D99
PWM1TMRH                          00000D9A
PWM1TMRH0                         00000000
PWM1TMRH1                         00000001
PWM1TMRH2                         00000002
PWM1TMRH3                         00000003
PWM1TMRH4                         00000004
PWM1TMRH5                         00000005
PWM1TMRH6                         00000006
PWM1TMRH7                         00000007
PWM1TMRL                          00000D99
PWM1TMRL0                         00000000
PWM1TMRL1                         00000001
PWM1TMRL2                         00000002
PWM1TMRL3                         00000003
PWM1TMRL4                         00000004
PWM1TMRL5                         00000005
PWM1TMRL6                         00000006
PWM1TMRL7                         00000007
PWM2CLKCON                        00000DAE
PWM2CON                           00000DAB
PWM2CS0                           00000000
PWM2CS1                           00000001
PWM2DC                            00000DA3
PWM2DCH                           00000DA4
PWM2DCH0                          00000000
PWM2DCH1                          00000001
PWM2DCH2                          00000002
PWM2DCH3                          00000003
PWM2DCH4                          00000004
PWM2DCH5                          00000005
PWM2DCH6                          00000006
PWM2DCH7                          00000007
PWM2DCIE                          00000001
PWM2DCIF                          00000001
PWM2DCL                           00000DA3
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  22:07:42         PAGE 38


SYMBOL TABLE
  LABEL                             VALUE 

PWM2DCL0                          00000000
PWM2DCL1                          00000001
PWM2DCL2                          00000002
PWM2DCL3                          00000003
PWM2DCL4                          00000004
PWM2DCL5                          00000005
PWM2DCL6                          00000006
PWM2DCL7                          00000007
PWM2EN                            00000007
PWM2EN_A                          00000001
PWM2IE                            00000005
PWM2IF                            00000005
PWM2INTCON                        00000DAC
PWM2INTE                          00000DAC
PWM2INTF                          00000DAD
PWM2INTFLG                        00000DAD
PWM2LD                            00000007
PWM2LDA_A                         00000001
PWM2LDCON                         00000DAF
PWM2LDM                           00000006
PWM2LDS0                          00000000
PWM2LDS1                          00000001
PWM2MODE0                         00000002
PWM2MODE1                         00000003
PWM2OE                            00000006
PWM2OF                            00000DA7
PWM2OFCON                         00000DB0
PWM2OFH                           00000DA8
PWM2OFH0                          00000000
PWM2OFH1                          00000001
PWM2OFH2                          00000002
PWM2OFH3                          00000003
PWM2OFH4                          00000004
PWM2OFH5                          00000005
PWM2OFH6                          00000006
PWM2OFH7                          00000007
PWM2OFIE                          00000003
PWM2OFIF                          00000003
PWM2OFL                           00000DA7
PWM2OFL0                          00000000
PWM2OFL1                          00000001
PWM2OFL2                          00000002
PWM2OFL3                          00000003
PWM2OFL4                          00000004
PWM2OFL5                          00000005
PWM2OFL6                          00000006
PWM2OFL7                          00000007
PWM2OFM0                          00000005
PWM2OFM1                          00000006
PWM2OFMC                          00000004
PWM2OFS0                          00000000
PWM2OFS1                          00000001
PWM2OUT                           00000005
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  22:07:42         PAGE 39


SYMBOL TABLE
  LABEL                             VALUE 

PWM2OUT_A                         00000001
PWM2PH                            00000DA1
PWM2PHH                           00000DA2
PWM2PHH0                          00000000
PWM2PHH1                          00000001
PWM2PHH2                          00000002
PWM2PHH3                          00000003
PWM2PHH4                          00000004
PWM2PHH5                          00000005
PWM2PHH6                          00000006
PWM2PHH7                          00000007
PWM2PHIE                          00000002
PWM2PHIF                          00000002
PWM2PHL                           00000DA1
PWM2PHL0                          00000000
PWM2PHL1                          00000001
PWM2PHL2                          00000002
PWM2PHL3                          00000003
PWM2PHL4                          00000004
PWM2PHL5                          00000005
PWM2PHL6                          00000006
PWM2PHL7                          00000007
PWM2POL                           00000004
PWM2PR                            00000DA5
PWM2PRH                           00000DA6
PWM2PRH0                          00000000
PWM2PRH1                          00000001
PWM2PRH2                          00000002
PWM2PRH3                          00000003
PWM2PRH4                          00000004
PWM2PRH5                          00000005
PWM2PRH6                          00000006
PWM2PRH7                          00000007
PWM2PRIE                          00000000
PWM2PRIF                          00000000
PWM2PRL                           00000DA5
PWM2PRL0                          00000000
PWM2PRL1                          00000001
PWM2PRL2                          00000002
PWM2PRL3                          00000003
PWM2PRL4                          00000004
PWM2PRL5                          00000005
PWM2PRL6                          00000006
PWM2PRL7                          00000007
PWM2PS0                           00000004
PWM2PS1                           00000005
PWM2PS2                           00000006
PWM2TMR                           00000DA9
PWM2TMRH                          00000DAA
PWM2TMRH0                         00000000
PWM2TMRH1                         00000001
PWM2TMRH2                         00000002
PWM2TMRH3                         00000003
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  22:07:42         PAGE 40


SYMBOL TABLE
  LABEL                             VALUE 

PWM2TMRH4                         00000004
PWM2TMRH5                         00000005
PWM2TMRH6                         00000006
PWM2TMRH7                         00000007
PWM2TMRL                          00000DA9
PWM2TMRL0                         00000000
PWM2TMRL1                         00000001
PWM2TMRL2                         00000002
PWM2TMRL3                         00000003
PWM2TMRL4                         00000004
PWM2TMRL5                         00000005
PWM2TMRL6                         00000006
PWM2TMRL7                         00000007
PWM3CLKCON                        00000DBE
PWM3CON                           00000DBB
PWM3CS0                           00000000
PWM3CS1                           00000001
PWM3DC                            00000DB3
PWM3DCH                           00000DB4
PWM3DCH0                          00000000
PWM3DCH1                          00000001
PWM3DCH2                          00000002
PWM3DCH3                          00000003
PWM3DCH4                          00000004
PWM3DCH5                          00000005
PWM3DCH6                          00000006
PWM3DCH7                          00000007
PWM3DCIE                          00000001
PWM3DCIF                          00000001
PWM3DCL                           00000DB3
PWM3DCL0                          00000000
PWM3DCL1                          00000001
PWM3DCL2                          00000002
PWM3DCL3                          00000003
PWM3DCL4                          00000004
PWM3DCL5                          00000005
PWM3DCL6                          00000006
PWM3DCL7                          00000007
PWM3EN                            00000007
PWM3EN_A                          00000002
PWM3IE                            00000006
PWM3IF                            00000006
PWM3INTCON                        00000DBC
PWM3INTE                          00000DBC
PWM3INTF                          00000DBD
PWM3INTFLG                        00000DBD
PWM3LD                            00000007
PWM3LDA_A                         00000002
PWM3LDCON                         00000DBF
PWM3LDM                           00000006
PWM3LDS0                          00000000
PWM3LDS1                          00000001
PWM3MODE0                         00000002
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  22:07:42         PAGE 41


SYMBOL TABLE
  LABEL                             VALUE 

PWM3MODE1                         00000003
PWM3OE                            00000006
PWM3OF                            00000DB7
PWM3OFCON                         00000DC0
PWM3OFH                           00000DB8
PWM3OFH0                          00000000
PWM3OFH1                          00000001
PWM3OFH2                          00000002
PWM3OFH3                          00000003
PWM3OFH4                          00000004
PWM3OFH5                          00000005
PWM3OFH6                          00000006
PWM3OFH7                          00000007
PWM3OFIE                          00000003
PWM3OFIF                          00000003
PWM3OFL                           00000DB7
PWM3OFL0                          00000000
PWM3OFL1                          00000001
PWM3OFL2                          00000002
PWM3OFL3                          00000003
PWM3OFL4                          00000004
PWM3OFL5                          00000005
PWM3OFL6                          00000006
PWM3OFL7                          00000007
PWM3OFM0                          00000005
PWM3OFM1                          00000006
PWM3OFMC                          00000004
PWM3OFS0                          00000000
PWM3OFS1                          00000001
PWM3OUT                           00000005
PWM3OUT_A                         00000002
PWM3PH                            00000DB1
PWM3PHH                           00000DB2
PWM3PHH0                          00000000
PWM3PHH1                          00000001
PWM3PHH2                          00000002
PWM3PHH3                          00000003
PWM3PHH4                          00000004
PWM3PHH5                          00000005
PWM3PHH6                          00000006
PWM3PHH7                          00000007
PWM3PHIE                          00000002
PWM3PHIF                          00000002
PWM3PHL                           00000DB1
PWM3PHL0                          00000000
PWM3PHL1                          00000001
PWM3PHL2                          00000002
PWM3PHL3                          00000003
PWM3PHL4                          00000004
PWM3PHL5                          00000005
PWM3PHL6                          00000006
PWM3PHL7                          00000007
PWM3POL                           00000004
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  22:07:42         PAGE 42


SYMBOL TABLE
  LABEL                             VALUE 

PWM3PR                            00000DB5
PWM3PRH                           00000DB6
PWM3PRH0                          00000000
PWM3PRH1                          00000001
PWM3PRH2                          00000002
PWM3PRH3                          00000003
PWM3PRH4                          00000004
PWM3PRH5                          00000005
PWM3PRH6                          00000006
PWM3PRH7                          00000007
PWM3PRIE                          00000000
PWM3PRIF                          00000000
PWM3PRL                           00000DB5
PWM3PRL0                          00000000
PWM3PRL1                          00000001
PWM3PRL2                          00000002
PWM3PRL3                          00000003
PWM3PRL4                          00000004
PWM3PRL5                          00000005
PWM3PRL6                          00000006
PWM3PRL7                          00000007
PWM3PS0                           00000004
PWM3PS1                           00000005
PWM3PS2                           00000006
PWM3TMR                           00000DB9
PWM3TMRH                          00000DBA
PWM3TMRH0                         00000000
PWM3TMRH1                         00000001
PWM3TMRH2                         00000002
PWM3TMRH3                         00000003
PWM3TMRH4                         00000004
PWM3TMRH5                         00000005
PWM3TMRH6                         00000006
PWM3TMRH7                         00000007
PWM3TMRL                          00000DB9
PWM3TMRL0                         00000000
PWM3TMRL1                         00000001
PWM3TMRL2                         00000002
PWM3TMRL3                         00000003
PWM3TMRL4                         00000004
PWM3TMRL5                         00000005
PWM3TMRL6                         00000006
PWM3TMRL7                         00000007
PWMEN                             00000D8E
PWMLD                             00000D8F
PWMOUT                            00000D90
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RCIDL                             00000006
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  22:07:42         PAGE 43


SYMBOL TABLE
  LABEL                             VALUE 

RCIE                              00000005
RCIF                              00000005
RCREG                             00000199
RCSTA                             0000019D
RD                                00000000
RT_THR                            000000B5
RX9                               00000006
RX9D                              00000000
RXDTSEL                           00000007
S0                                0000001F
SBOREN                            00000007
SCKP                              00000004
SCS0                              00000000
SCS1                              00000001
SENDB                             00000003
SLRA0                             00000000
SLRA1                             00000001
SLRA2                             00000002
SLRA4                             00000004
SLRA5                             00000005
SLRCONA                           0000030C
SP                                FSR1
SPBRG                             0000019B
SPBRGH                            0000019C
SPBRGL                            0000019B
SPEN                              00000007
SPLLEN                            00000007
SREN                              00000005
STACK_SIZE                        00000020
STATUS                            00000003
STATUS_SHAD                       00000FE4
STKOVF                            00000007
STKPTR                            00000FED
STKUNF                            00000006
SWDTEN                            00000000
SYNC                              00000004
SYNC_IE                           00000006
SYNC_IF                           00000006
SYNC_OUT                          00000002
SYNC_PIE                          00000093
SYNC_PIR                          00000013
SYNC_PWMCLKCON                    00000DBE
SYNC_PWMCON                       00000DBB
SYNC_PWMDCH                       00000DB4
SYNC_PWMDCL                       00000DB3
SYNC_PWMINTE                      00000DBC
SYNC_PWMINTF                      00000DBD
SYNC_PWMLDCON                     00000DBF
SYNC_PWMOF                        00000DB7
SYNC_PWMOFCON                     00000DC0
SYNC_PWMPH                        00000DB1
SYNC_PWMPRH                       00000DB6
SYNC_PWMPRL                       00000DB5
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  22:07:42         PAGE 44


SYMBOL TABLE
  LABEL                             VALUE 

SYNC_PWMTMR                       00000DB9
T                                 INDF1
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000018
T1GCON                            00000019
T1GGO                             00000003
T1GGO_NOT_DONE                    00000003
T1GPOL                            00000006
T1GSEL                            00000003
T1GSPM                            00000004
T1GSS0                            00000000
T1GSS1                            00000001
T1GTM                             00000005
T1GVAL                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             0000001C
T2OUTPS0                          00000003
T2OUTPS1                          00000004
T2OUTPS2                          00000005
T2OUTPS3                          00000006
TC                                00000032
TCY                               000000C8
TMR0                              00000015
TMR0CS                            00000005
TMR0IE                            00000005
TMR0IF                            00000002
TMR0SE                            00000004
TMR1                              00000016
TMR1CS0                           00000006
TMR1CS1                           00000007
TMR1GE                            00000007
TMR1GIE                           00000007
TMR1GIF                           00000007
TMR1H                             00000017
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             00000016
TMR1ON                            00000000
TMR2                              0000001A
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOS                               00000FEE
TOSH                              00000FEF
TOSL                              00000FEE
TRIGSEL0                          00000004
TRIGSEL1                          00000005
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  22:07:42         PAGE 45


SYMBOL TABLE
  LABEL                             VALUE 

TRIGSEL2                          00000006
TRIGSEL3                          00000007
TRISA                             0000008C
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRMT                              00000001
TSEN                              00000005
TSRNG                             00000004
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TUN5                              00000005
TX9                               00000006
TX9D                              00000000
TXCKSEL                           00000002
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             0000019A
TXSTA                             0000019E
TX_PIR                            00000011
UP_THR                            000000C6
VDD                               00000400
VERT_DLY                          00000032
VIDEO_BUFFER                      00002030
VIDEO_LAT                         0000010C
VIDEO_OUT                         00000001
VREGCON                           00000197
VREGPM                            00000001
W                                 00000000
WDTCON                            00000097
WDTPS0                            00000001
WDTPS1                            00000002
WDTPS2                            00000003
WDTPS3                            00000004
WDTPS4                            00000005
WELL_DEPTH                        00000016
WELL_WIDTH                        0000000A
WPUA                              0000020C
WPUA0                             00000000
WPUA1                             00000001
WPUA2                             00000002
WPUA3                             00000003
WPUA4                             00000004
WPUA5                             00000005
WR                                00000001
WREG                              00000009
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  22:07:42         PAGE 46


SYMBOL TABLE
  LABEL                             VALUE 

WREG_SHAD                         00000FE5
WREN                              00000002
WRERR                             00000003
WUE                               00000001
XOR_OP                            00000000
XSIZE                             00000030
YSIZE                             00000020
Z                                 00000002
Z_SHAD                            00000002
_.org_1_0067                      00000067
_.org_1_0069                      00000069
_.org_1_006B                      0000006B
_.org_1_006E                      0000006E
_.org_1_009C                      0000009C
_.org_1_009E                      0000009E
_.org_1_00B4                      000000B4
_.org_1_00BB                      000000BB
_BOREN_NSLEEP                     00003DFF
_BOREN_OFF                        000039FF
_BOREN_ON                         00003FFF
_BOREN_SBODEN                     00003BFF
_BORV_19                          00003FFF
_BORV_HI                          00003BFF
_BORV_LO                          00003FFF
_CLKOUTEN_OFF                     00003FFF
_CLKOUTEN_ON                      000037FF
_CONFIG1                          00008007
_CONFIG2                          00008008
_CP_OFF                           00003FFF
_CP_ON                            00003F7F
_DEVID1                           00008006
_FOSC_ECH                         00003FFF
_FOSC_ECL                         00003FFD
_FOSC_ECM                         00003FFE
_FOSC_INTOSC                      00003FFC
_IDLOC0                           00008000
_IDLOC1                           00008001
_IDLOC2                           00008002
_IDLOC3                           00008003
_LPBOREN_OFF                      00003FFF
_LPBOREN_ON                       000037FF
_LVP_OFF                          00001FFF
_LVP_ON                           00003FFF
_MCLRE_OFF                        00003FBF
_MCLRE_ON                         00003FFF
_PLLEN_OFF                        00003EFF
_PLLEN_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FDF
_STVREN_OFF                       00003DFF
_STVREN_ON                        00003FFF
_WDTE_NSLEEP                      00003FF7
_WDTE_OFF                         00003FE7
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  22:07:42         PAGE 47


SYMBOL TABLE
  LABEL                             VALUE 

_WDTE_ON                          00003FFF
_WDTE_SWDTEN                      00003FEF
_WRT_ALL                          00003FFC
_WRT_BOOT                         00003FFE
_WRT_HALF                         00003FFD
_WRT_OFF                          00003FFF
__12F1572                         00000001
_stack                            00000020
accaH                             00000008
accaL                             00000007
accbH                             0000000A
accbL                             00000009
add                               
addpmadr                          
angle                             00000041
bitop                             000000E3
bitop00                           000000F0
bitop01                           000000F3
bitop02                           000000FE
buttons                           0000000B
case                              
clear_bit                         000000F7
dec_n                             
digits                            00000267
disable_video                     
div10                             00000050
div10_loop                        00000054
drop                              
drop_n                            
dropped                           00000046
dup                               
enable_video                      
fetch                             
fill_buffer                       000000C3
fill_loop                         000000CB
flags                             00000002
game_init                         000001D5
game_loop                         0000022C
get_flash_word                    0000011F
get_nibble                        00000132
gt_255                            0000002A
gtimer                            00000003
hline                             000001B3
hline_done                        000001C2
inc_n                             
init                              0000022E
insert                            
isr                               00000004
isr_exit                          0000004C
labels                            000002B3
lcountH                           00000001
lcountL                           00000000
ldpmadr                           
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  22:07:42         PAGE 48


SYMBOL TABLE
  LABEL                             VALUE 

lit                               
lt_256                            0000000E
main                              00000264
movtw                             
movwt                             
mult6                             00000060
next_flash_word                   0000012E
nibble                            0000000C
nibble_mask                       00000140
no_button                         00000094
no_zero                           000001B1
over                              
pause                             
pick                              
pixels_loop                       000000AF
pop                               
print_char                        0000014E
print_int                         00000198
print_label                       0000017B
print_last                        000001AB
print_row                         00000144
print_tetrim                      0000015D
prt01                             0000016C
prt_lbl_done                      00000196
prt_lbl_loop                      0000017D
pstack_init                       
push                              
q                                 0000000A
r                                 00000000
randH                             00000005
randL                             00000004
rcount                            00000006
read_flash                        00000128
read_pad                          00000065
reserve                           
rot                               
row0                              0000013F
row1                              0000013B
row2                              0000013D
rst                               0000000D
scoreH                            00000045
scoreL                            00000044
set_video_ptr                     000000D1
start_timer                       
store                             
sub                               
swap                              
task1                             0000003F
task2                             00000046
tasks                             00000035
tbranch                           
tcyDelay                          
tetrim                            00000040
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-8-2016  22:07:42         PAGE 49


SYMBOL TABLE
  LABEL                             VALUE 

tetriminos                        00000293
tetris                            00000207
ti                                00000166
try_a                             00000071
try_all                           00000070
try_b                             00000077
try_button                        
try_dn                            0000008F
try_lt                            00000089
try_rt                            0000007D
try_up                            00000083
tx                                00000042
txt_lines                         000002C0
txt_press                         000002C9
txt_score                         000002B7
ty                                00000043
video_buffer_b0                   00000050
video_buffer_b2                   000000A0
video_buffer_b3                   00000120
video_serialize                   00000095
vline                             000001C4
vline_done                        000001D3
vsync_end                         00000022
vsync_start                       0000001A
wait_start                        00000221
wait_timer                        
xor_bit                           000000FA
xor_row                           00000107
xor_row02                         00000119
xor_row_done                      0000011D
zbranch                           

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,   102 suppressed

