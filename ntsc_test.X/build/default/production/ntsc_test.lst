MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:51:46         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001     include p12f1572.inc
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Sep 13 2016
                      00005 ;  MPASM PIC12F1572 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2016 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01601         LIST
                      00002     
                      00003     radix dec
                      00004     errorlevel 0, -302, -305
                      00005     
8007   3FE7           00006     __config _CONFIG1, _FOSC_ECH&_WDTE_OFF
8008   1EFF           00007     __config _CONFIG2, _PLLEN_OFF&_LVP_OFF 
                      00008 
  01312D00            00009 FOSC equ 20000000 ; 20Mhz
  00000032            00010 TC equ 50 ; nanosecondes 
  004C4B40            00011 FCY equ FOSC/4    ; 5Mhz
  000000C8            00012 TCY equ 200 ; nanoseconds
                      00013 
                      00014 
  00000030            00015 XSIZE equ 48  ; horizontal pixels
  00000020            00016 YSIZE equ 32  ; vertical pixels
  00000006            00017 BPL equ XSIZE/8 ; bytes per line 
  000000C0            00018 BUFFER_SIZE equ  YSIZE*BPL  ; video buffer size
  00002030            00019 VIDEO_BUFFER equ 0x2000+(3*80-BUFFER_SIZE) ; buffer address
  00000028            00020 VERT_DLY equ 40
  0000003C            00021 FIRST_VIDEO equ VERT_DLY+20  ; first video output line
  000000BB            00022 LAST_VIDEO equ FIRST_VIDEO+4*YSIZE-1  ; last video output line
  0000019A            00023 PIXEL_TXREG equ TXREG
  00000011            00024 TX_PIR equ PIR1
  00000050            00025 HORZ_DLY equ 16*5  ; there is 5 TCY/µsec
                      00026  
  00000001            00027 VIDEO_OUT equ RA1
  0000010C            00028 VIDEO_LAT equ LATA
  00000002            00029 SYNC_OUT equ RA2 
  00000DB3            00030 SYNC_PWMDCL equ PWM3DCL ; duty cycle low byte
  00000DB4            00031 SYNC_PWMDCH equ PWM3DCH ; high byte    
  00000DB5            00032 SYNC_PWMPRL equ PWM3PRL ; pwm period low byte
  00000DB6            00033 SYNC_PWMPRH equ PWM3PRH ; high byte 
  00000DB1            00034 SYNC_PWMPH equ PWM3PH ; pwm phase
  00000DB7            00035 SYNC_PWMOF equ PWM3OF ; pwm offset
  00000DB9            00036 SYNC_PWMTMR equ PWM3TMR ; timer
  00000DBB            00037 SYNC_PWMCON equ PWM3CON ; control SFR
  00000DBE            00038 SYNC_PWMCLKCON equ PWM3CLKCON  ; clock control SFR
  00000DC0            00039 SYNC_PWMOFCON equ PWM3OFCON ; offset control SFR
  00000DBF            00040 SYNC_PWMLDCON equ PWM3LDCON ; load control SFR
  00000006            00041 SYNC_IE equ PWM3IE  ; interrupt enable bit
  00000006            00042 SYNC_IF equ PWM3IF  ; interrupt flag bit
  00000093            00043 SYNC_PIE equ PIE3 ; interrupt enable SFR
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:51:46         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000013            00044 SYNC_PIR equ PIR3 ; interrupt flag SFR 
  00000DBC            00045 SYNC_PWMINTE equ PWM3INTE
  00000DBD            00046 SYNC_PWMINTF equ PWM3INTF
                      00047  
  000004F5            00048 HORZ_PERIOD equ FOSC/15748-1 ; 15748 hertz
  0000005E            00049 HORZ_PULSE equ 4700/TC ; 4.7µsec 
  00000106            00050 LAST_LINE equ 262
                      00051 
                      00052 ; game pad resource
                      00053 ; use ADC 
  00000004            00054 PAD_PIN equ ANSA4
  00000003            00055 PAD_CHS equ 3 
  00000000            00056 BTN_UP equ 0
  00000001            00057 BTN_DN equ 1
  00000002            00058 BTN_LT equ 2
  00000003            00059 BTN_RT equ 3
  00000004            00060 BTN_A equ 4
  00000005            00061 BTN_B equ 5
                      00062 ; threshold level for each button
                      00063 ; lower_btn_thr >= BTN_? < btn_thr
                      00064 ; exemple: BTN_UP if RT_THR<=Vadc<UP_THR  
  00000400            00065 VDD equ 1024
  000000D8            00066 DN_THR equ 216 ;(VDD*(6/7+5/6)/2)>>2
  000000D1            00067 LT_THR equ 209 ; (VDD*(5/6+4/5)/2)>>2
  000000C6            00068 UP_THR equ 198 ;(VDD*(4/5+3/4)/2)>>2
  000000B5            00069 RT_THR equ 181 ;(VDD*(3/4+2/3)/2)>>2
  00000095            00070 B_THR  equ 149 ; (VDD*(2/3+1/2)/2)>>2
  00000040            00071 A_THR  equ 64 ;(VDD/4)>>2
                      00072  
                      00073 try_button macro btn, label 
                      00074     movlw btn
                      00075     subwf ADRESH,W
                      00076     skpnc
                      00077     bra label
                      00078     endm
                      00079     
                      00080 ;boolean flags 
  00000000            00081 F_VSYNC equ 0 ; vertical sync active
  00000001            00082 F_EVEN equ 1  ; even field
  00000002            00083 F_MUTEX equ 2 ; video routine lock out
  00000003            00084 F_GTMR equ 3  ; game timer active
  00000004            00085 F_GSTOP equ 4 ; game stopped
  00000005            00086 F_SND equ 5 ; sound timer active 
                      00087  
  000000B4            00088 LFSR_TAPS equ 0xB4 ; xor mask
                      00089  
                      00090 disable_video macro ; lockout video_serialize
                      00091     bsf flags, F_MUTEX
                      00092     endm
                      00093     
                      00094 enable_video macro ; unlock video_serialize
                      00095     bcf flags, F_MUTEX
                      00096     endm
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:51:46         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00097     
                      00098 tcyDelay macro n ; delay in TCY cycles  5TCY per µsec.  
                      00099     variable r=n%5
                      00100     variable q=n/5
                      00101     while r>1
                      00102     bra $+1
                      00103 r-=2
                      00104     endw
                      00105     if r==1
                      00106     nop
                      00107     endif
                      00108     if q
                      00109     movlw q
                      00110     bra $+1
                      00111     decfsz WREG
                      00112     bra $-2
                      00113     endif
                      00114     endm
                      00115 
                      00116 case macro n, label
                      00117     xorlw n
                      00118     skpnz
                      00119     bra label
                      00120     xorlw n
                      00121     endm
                      00122  
                      00123 ldpmadr macro addr ; load PMADR register
                      00124     movlw low(addr)
                      00125     movwf PMADRL
                      00126     movlw high(addr)
                      00127     movwf PMADRH
                      00128     endm
                      00129     
                      00130 addpmadr macro value ; add value to PMADR
                      00131     movlw value
                      00132     addwf PMADRL
                      00133     clrw
                      00134     addwfc PMADRH
                      00135     endm
                      00136     
                      00137 start_timer macro value ; start game timer
                      00138     movlw value
                      00139     movwf gtimer
                      00140     bsf flags, F_GTMR
                      00141     endm
                      00142     
                      00143 wait_timer macro ; wait timer expiration
                      00144     btfsc flags, F_GTMR
                      00145     bra $-1
                      00146     endm
                      00147     
                      00148 pause macro value ; suspend execution (busy loop)
                      00149     start_timer value
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:51:46         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00150     wait_timer
                      00151     endm
                      00152     
                      00153 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00154 ; software stack for arguments passing
                      00155 ; SP is Stack Pointer
                      00156 ; T is Top Of Stack
                      00157 #define SP FSR1
                      00158 #define T INDF1
  00000020            00159 STACK_SIZE equ 32
                      00160  
  0000001F            00161 S0 equ 0x1F ; stack base address - 1
                      00162 
                      00163 pstack_init macro ; initialise stack pointer
                      00164     clrf FSR1H
                      00165     movlw S0
                      00166     movwf FSR1L
                      00167     endm
                      00168     
                      00169 push macro   ; ( -- n ) push WREG on stack
                      00170     movwi ++SP
                      00171     endm
                      00172 
                      00173 pop macro   ; ( n -- )  pop T in WREG
                      00174     moviw SP--
                      00175     endm
                      00176     
                      00177 drop macro  ; ( n -- ) ; discard T
                      00178    addfsr SP,-1
                      00179    endm
                      00180 
                      00181 drop_n macro n  ; discard n elements  n<32
                      00182     addfsr SP,-n
                      00183     endm
                      00184     
                      00185 lit macro  n ; ( -- n ) ; push a literal
                      00186    movlw n
                      00187    movwi ++SP 
                      00188    endm
                      00189 
                      00190 dup macro ; ( n -- n n ) duplicate T
                      00191     movfw T
                      00192     movwi ++SP
                      00193     endm
                      00194     
                      00195 over macro ; ( n1 n2 -- n1 n2 n1 )
                      00196     moviw -1[SP]
                      00197     push
                      00198     endm
                      00199     
                      00200 swap macro ; exchange WREG and T
                      00201     xorwf T
                      00202     xorwf T,W
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:51:46         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00203     xorwf T
                      00204     endm
                      00205  
                      00206 store macro var ; ( n -- ) pop T in variable
                      00207    moviw SP--
                      00208    movwf var
                      00209    endm
                      00210    
                      00211 fetch macro var  ; ( -- n ) push var on stack
                      00212    movfw var
                      00213    movwi ++SP
                      00214    endm
                      00215 
                      00216 pick macro n  ; pick nth element of stack to WREG
                      00217     moviw -n[SP]
                      00218     endm
                      00219 
                      00220 insert macro n ;  insert WREG at position n on stack
                      00221    movwi -n[SP]
                      00222    endm
                      00223    
                      00224 movtw macro ; ( n -- n ) overwrite WREG with T
                      00225    movfw T
                      00226    endm
                      00227    
                      00228 movwt macro ; ( n1 -- n2 ) overwrite T with WREG
                      00229     movwf T
                      00230     endm
                      00231     
                      00232 add macro  ; add WREG to T result on T
                      00233     addwf T,F
                      00234    endm
                      00235    
                      00236 sub macro  ; substract WREG from T result on T
                      00237    subwf T,F
                      00238    endm
                      00239 
                      00240 inc_n macro n ; increament nth element of stack
                      00241     moviw -n[SP]
                      00242     incf WREG,F
                      00243     movwi -n[SP]
                      00244     endm
                      00245     
                      00246 dec_n macro n ; decreament nth element of stack
                      00247     moviw -n[SP]
                      00248     decf WREG,F
                      00249     movwi -n[SP]
                      00250     endm
                      00251     
                      00252 zbranch macro label ; branch if T == 0
                      00253     pop
                      00254     skpnz
                      00255     bra label
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:51:46         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00256     endm
                      00257     
                      00258 tbranch macro label ; branch if T != 0
                      00259     pop
                      00260     skpz
                      00261     bra label
                      00262     endm
                      00263     
                      00264 reserve macro n ; reserve n bytes on stack for local variables
                      00265     addfsr SP, n 
                      00266     endm
                      00267  
                      00268 rot macro ; ( n1 n2 n3 -- n2 n3 n1 )
                      00269     pick 2
                      00270     push        ; n1 n2 n3 n1
                      00271     pick 2
                      00272     insert 3   ;  n2 n2 n3 n1
                      00273     pick 1
                      00274     insert 2   ; n2 n3 n3 n1
                      00275     pop        ; n2 n3 n3 
                      00276     movwf T    ; n2 n3 n1
                      00277     endm
                      00278  
                      00279 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00280 ; parameter stack section    
                      00281 dstack udata 0x20
0020                  00282 _stack res 32
                      00283 ; game variables section 
                      00284 game_var udata 0x40 
                      00285 ; tetris game state
0040                  00286 tetrim res 1 ; active tretriminos 
0041                  00287 angle res 1 ; tetriminos rotatation angle in multiple of 90degr. {0:3}
0042                  00288 tx  res 1 ; x coordinate
0043                  00289 ty  res 1 ; y coordinate
0044                  00290 scoreL res 1 ; game score  16 bits
0045                  00291 scoreH res 1 
0046                  00292 dropped res 1 ; dropped lines
                      00293 
                      00294 ; These 3 sections are used for video pixels buffering
                      00295 ; with indirect access using FSR0
                      00296 ; to form a contiguous address space. 
                      00297 vb_b0    udata 0x50
0050                  00298 video_buffer_b0 res 32
                      00299 vb_b1    udata 0xA0
00A0                  00300 video_buffer_b2 res 80
                      00301 vb_b2    udata 0x120
0120                  00302 video_buffer_b3 res 80
                      00303  
                      00304  
                      00305     udata_shr
                      00306 ;scan lines counter 16 bits
0000                  00307 lcountL res 1
0001                  00308 lcountH res 1
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:51:46         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00309 ; boolean flags 
0002                  00310 flags res 1
                      00311 ; game timer
0003                  00312 gtimer res 1 
                      00313 ; lfsr PRNG register
0004                  00314 randL res 1 
0005                  00315 randH res 1 
                      00316 ; loop counter
0006                  00317 rcount res 1
                      00318 ; arithmetic accumulator A 16 bits
0007                  00319 accaL res 1
0008                  00320 accaH res 1
                      00321 ; arithmetic accumulator B 16 bits
0009                  00322 accbL res 1
000A                  00323 accbH res 1
                      00324 ; game pad buttons state
000B                  00325 buttons res 1
                      00326 ; flash reader next nibble {0-3}
000C                  00327 nibble res 1
                      00328  
                      00329 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
000D                  00330 rst: 
                      00331     org 0
0000   0023           00332     banksel ANSELA
0001   018C           00333     clrf ANSELA
0002   160C           00334     bsf ANSELA,PAD_PIN
0003   2???           00335     goto init
                      00336     
                      00337     org 4
0004                  00338 isr:
0004   003B           00339     banksel SYNC_PWMINTF
0005   103D           00340     bcf SYNC_PWMINTF,PRIF
0006   1800           00341     btfsc lcountH,0
0007   3???           00342     bra gt_255 ; lcount > 255
0008   08??           00343     movfw lcountL
0009   1903           00344     skpnz
000A   3???           00345     bra vsync_start
000B   3A03           00346     xorlw 3
000C   1903           00347     skpnz
000D   3???           00348     bra vsync_end
000E                  00349 lt_256: ; lcount < 256
000E   1900           00350     btfsc flags, F_MUTEX
000F   3???           00351     bra isr_exit
0010   08??           00352     movfw lcountL
0011   3C3B           00353     sublw FIRST_VIDEO-1
0012   1803           00354     skpnc
0013   3???           00355     bra isr_exit
0014   08??           00356     movfw lcountL
0015   3CBB           00357     sublw LAST_VIDEO
0016   1C03           00358     skpc
0017   3???           00359     bra isr_exit
0018   2???           00360     call video_serialize
0019   3???           00361     bra isr_exit    
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:51:46         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001A                  00362 vsync_start: ; scanline 0 start vertical sync pulse
001A   003B           00363     banksel SYNC_PWMDCL
001B   3097           00364     movlw (HORZ_PERIOD-HORZ_PULSE)&0xff
001C   00B3           00365     movwf SYNC_PWMDCL
001D   3004           00366     movlw (HORZ_PERIOD-HORZ_PULSE)>>8
001E   00B4           00367     movwf SYNC_PWMDCH
001F   17BF           00368     bsf SYNC_PWMLDCON,7
0020   1400           00369     bsf flags, F_VSYNC
0021   3???           00370     bra isr_exit
0022                  00371 vsync_end: ; scanline 3 end vertical sync pulse
0022   003B           00372     banksel SYNC_PWMDCL
0023   305E           00373     movlw HORZ_PULSE&0xff
0024   00B3           00374     movwf SYNC_PWMDCL
0025   3000           00375     movlw HORZ_PULSE>>8
0026   00B4           00376     movwf SYNC_PWMDCH
0027   17BF           00377     bsf SYNC_PWMLDCON,7
0028   1000           00378     bcf flags, F_VSYNC
0029   3???           00379     bra isr_exit
002A                  00380 gt_255: ; lcount>255
002A   3006           00381     movlw LAST_LINE&0xff
002B   1C80           00382     btfss flags,F_EVEN
002C   3E01           00383     addlw 1
002D   06??           00384     xorwf lcountL,W
002E   1D03           00385     skpz
002F   3???           00386     bra tasks
0030   01??           00387     clrf lcountL
0031   01??           00388     clrf lcountH
0032   3002           00389     movlw 1<<F_EVEN
0033   06??           00390     xorwf flags,F
0034   0009           00391     retfie
                      00392 ; round robin task scheduler
                      00393 ; each task execute once every 1/60th sec.
                      00394 ; condition:    
                      00395 ;   Task must complete inside
                      00396 ;   horizontal period.
0035                  00397 tasks:
0035   08??           00398     movfw lcountL
                      00399     case 1, task1
0036   3A01               M     xorlw 1
0037   1903               M     skpnz
0038   3???               M     bra task1
0039   3A01               M     xorlw 1
                      00400     case 2, task2
003A   3A02               M     xorlw 2
003B   1903               M     skpnz
003C   3???               M     bra task2
003D   3A02               M     xorlw 2
003E   3???           00401     bra isr_exit
003F                  00402 task1:   
                      00403 ; decrement game timer    
003F   08??           00404     movf gtimer,F ; 
0040   1903           00405     skpnz
0041   3???           00406     bra isr_exit
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:51:46         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0042   03??           00407     decf gtimer,F ; 
0043   1903           00408     skpnz
0044   1180           00409     bcf flags, F_GTMR
0045   3???           00410     bra isr_exit ;
0046                  00411 task2:
                      00412 ; rotate lfsr
0046   36??           00413     lsrf randH
0047   0C??           00414     rrf randL
0048   1803           00415     skpnc
0049   30B4           00416     movlw LFSR_TAPS
004A   06??           00417     xorwf randH
004B   3???           00418     bra isr_exit 
004C                  00419 isr_exit:
004C   0A??           00420     incf lcountL
004D   1903           00421     skpnz
004E   0A??           00422     incf lcountH
004F   0009           00423     retfie
                      00424 
                      00425 ; WREG*6  because BPL=6
                      00426 ; WREG*6=WREG*4+WREG*2    
0050                  00427 mult6: 
0050   00??           00428     movwf accaL
0051   35??           00429     lslf accaL    ; accaL=2*WREG
0052   35??           00430     lslf accaL,W  ; WREG=4*WREG
0053   07??           00431     addwf accaL,W ; WREG=6*WREG
0054   0008           00432     return
                      00433 
                      00434 ;read game pad
                      00435 ; store value in
                      00436 ; buttons
                      00437 ; a button is accepted if
                      00438 ; the Vadc value is below its threshold
0055                  00439 read_pad:
0055   0021           00440     banksel ADCON0
0056   141D           00441     bsf ADCON0,ADON
0057   149D           00442     bsf ADCON0,GO
0058   189D           00443     btfsc ADCON0,NOT_DONE
0059   3???           00444     bra $-1
005A   101D           00445     bcf ADCON0,ADON
                      00446 ; try each button from lower to upper
005B                  00447 try_all:
005B   01??           00448     clrf buttons
005C                  00449 try_a:    
                      00450     try_button A_THR, try_b
005C   3040               M     movlw A_THR
005D   021C               M     subwf ADRESH,W
005E   1803               M     skpnc
005F   3???               M     bra try_b
0060   1600           00451     bsf buttons,BTN_A
0061   0008           00452     return
0062                  00453 try_b:
                      00454     try_button B_THR, try_rt
0062   3095               M     movlw B_THR
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:51:46         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0063   021C               M     subwf ADRESH,W
0064   1803               M     skpnc
0065   3???               M     bra try_rt
0066   1680           00455     bsf buttons,BTN_B
0067   0008           00456     return
0068                  00457 try_rt:
                      00458     try_button RT_THR, try_up
0068   30B5               M     movlw RT_THR
0069   021C               M     subwf ADRESH,W
006A   1803               M     skpnc
006B   3???               M     bra try_up
006C   1580           00459     bsf buttons,BTN_RT
006D   0008           00460     return
006E                  00461 try_up:
                      00462     try_button UP_THR, try_lt
006E   30C6               M     movlw UP_THR
006F   021C               M     subwf ADRESH,W
0070   1803               M     skpnc
0071   3???               M     bra try_lt
0072   1400           00463     bsf buttons,BTN_UP
0073   0008           00464     return
0074                  00465 try_lt:
                      00466     try_button LT_THR, try_dn
0074   30D1               M     movlw LT_THR
0075   021C               M     subwf ADRESH,W
0076   1803               M     skpnc
0077   3???               M     bra try_dn
0078   1500           00467     bsf buttons,BTN_LT
0079   0008           00468     return
007A                  00469 try_dn:
                      00470     try_button DN_THR, no_button
007A   30D8               M     movlw DN_THR
007B   021C               M     subwf ADRESH,W
007C   1803               M     skpnc
007D   3???               M     bra no_button
007E   1480           00471     bsf buttons,BTN_DN
007F                  00472 no_button:
007F   0008           00473     return
                      00474     
                      00475     
                      00476 ; serialise video pixels to scan line
                      00477 ; due to timing constrain use specialized 
                      00478 ; division and multiplication    
0080                  00479 video_serialize: 
0080   0804           00480     movfw FSR0L
                      00481     push
0081   001C               M     movwi ++SP
0082   0805           00482     movfw FSR0H
                      00483     push
0083   001C               M     movwi ++SP
                      00484     lit 0 ; ( x )
0084   3000               M    movlw 0
0085   001C               M    movwi ++SP 
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:51:46         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00485     tcyDelay HORZ_DLY
  0000                    M     variable r=HORZ_DLY%5
  0010                    M     variable q=HORZ_DLY/5
                          M     while r>1
                          M     bra $+1
                          M r-=2
                          M     endw
                          M     if r==1
                          M     nop
                          M     endif
                          M     if q
0086   3010               M     movlw q
0087   3???               M     bra $+1
0088   0B89               M     decfsz WREG
0089   3???               M     bra $-2
                          M     endif
008A   3030           00486     movlw VIDEO_BUFFER&0xff
008B   0084           00487     movwf FSR0L
008C   3020           00488     movlw VIDEO_BUFFER>>8
008D   0085           00489     movwf FSR0H
008E   303C           00490     movlw FIRST_VIDEO
008F   02??           00491     subwf lcountL,W
0090   3689           00492     lsrf WREG
0091   3689           00493     lsrf WREG
0092   2???           00494     call mult6
0093   0784           00495     addwf FSR0L
0094   0103           00496     clrw
0095   3D85           00497     addwfc FSR0H
0096   3006           00498     movlw XSIZE/8
0097   00??           00499     movwf rcount
0098   0023           00500     banksel RCSTA
0099   179D           00501     bsf RCSTA,SPEN
009A                  00502 pixels_loop:    
009A   0012           00503     moviw FSR0++
009B   0023           00504     banksel PIXEL_TXREG
009C   009A           00505     movwf PIXEL_TXREG
009D   0020           00506     banksel TX_PIR
009E   1E11           00507     btfss TX_PIR,TXIF
009F   3???           00508     bra $-1
00A0   0B??           00509     decfsz rcount
00A1   3???           00510     bra pixels_loop
00A2   0023           00511     banksel PIXEL_TXREG
00A3   019A           00512     clrf PIXEL_TXREG
00A4   0020           00513     banksel TX_PIR
00A5   1E11           00514     btfss TX_PIR,TXIF
00A6   3???           00515     bra $-1
00A7   0023           00516     banksel RCSTA
00A8   139D           00517     bcf RCSTA, SPEN
                      00518     pop
00A9   0017               M     moviw SP--
00AA   0085           00519     movwf FSR0H
                      00520     pop
00AB   0017               M     moviw SP--
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:51:46         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00AC   0084           00521     movwf FSR0L
00AD   0008           00522     return
                      00523 
                      00524 ; fill_buffer
                      00525 ; fill screen buffer with WREG value    
00AE                  00526 fill_buffer: ; ( c -- )
                      00527     disable_video
00AE   1500               M     bsf flags, F_MUTEX
00AF   3020           00528     movlw high(VIDEO_BUFFER)
00B0   0085           00529     movwf FSR0H
00B1   3030           00530     movlw low(VIDEO_BUFFER)
00B2   0084           00531     movwf FSR0L
00B3   30C0           00532     movlw BUFFER_SIZE
                      00533     push    ; c size
00B4   001C               M     movwi ++SP
                      00534     pick 1
00B5   3F7F               M     moviw -1[SP]
00B6                  00535 fill_loop:    
00B6   001A           00536     movwi FSR0++
00B7   0B81           00537     decfsz T
00B8   3???           00538     bra fill_loop
                      00539     drop_n 2
00B9   317E               M     addfsr SP,-2
                      00540     enable_video
00BA   1100               M     bcf flags, F_MUTEX
00BB   0008           00541     return
                      00542 
                      00543 ;set video pointer at 
                      00544 ; byte that contain pixel {x,y}
                      00545 ; output:
                      00546 ;   WREG = pixel offset, 0 left, 7 right  
                      00547 ;   Z=0 if offset==0    
00BC                  00548 set_video_ptr:  ; ( x y -- )
00BC   3020           00549     movlw high(VIDEO_BUFFER)
00BD   0085           00550     movwf FSR0H
00BE   3030           00551     movlw low(VIDEO_BUFFER)
00BF   0084           00552     movwf FSR0L
                      00553 ; buffer_addr+y*BPL
                      00554     pop         ; ( x y -- x )
00C0   0017               M     moviw SP--
00C1   2???           00555     call mult6
00C2   0784           00556     addwf FSR0L
00C3   0103           00557     clrw
00C4   3D85           00558     addwfc FSR0H
                      00559 ; buffer_addr+x/8
00C5   3601           00560     lsrf T,W   
00C6   3689           00561     lsrf WREG
00C7   3689           00562     lsrf WREG
00C8   0784           00563     addwf FSR0L
00C9   0103           00564     clrw
00CA   3D85           00565     addwfc FSR0H
                      00566     pop            
00CB   0017               M     moviw SP--
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:51:46         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00CC   3907           00567     andlw 7
00CD   0008           00568     return
                      00569 
                      00570 ;inverse le pixel    
                      00571 ; inputs:
                      00572 ;   {x,y} coordinates
                      00573 ; output:
                      00574 ;   WREG=collision flag    
00CE                  00575 xor_pixel: ; ( x y -- f )
                      00576     disable_video
00CE   1500               M     bsf flags, F_MUTEX
                      00577     pick 1
00CF   3F7F               M     moviw -1[SP]
                      00578     push
00D0   001C               M     movwi ++SP
                      00579     pick 1
00D1   3F7F               M     moviw -1[SP]
                      00580     push        ; x y x y
00D2   001C               M     movwi ++SP
00D3   0804           00581     movfw FSR0L
                      00582     insert 3
00D4   3FFD               M    movwi -3[SP]
00D5   0805           00583     movfw FSR0H
                      00584     insert 2    ; FSR0L FSR0H x y 
00D6   3FFE               M    movwi -2[SP]
00D7   2???           00585     call set_video_ptr  ;FSR0L FSR0H 
                      00586     push        ; FSR0L FSR0H bit
00D8   001C               M     movwi ++SP
00D9   3001           00587     movlw 0x1
00DA   1903           00588     skpnz
00DB   3???           00589     bra xorp01
00DC                  00590 xorp00:
00DC   3589           00591     lslf WREG
00DD   0B81           00592     decfsz T
00DE   3???           00593     bra xorp00
00DF                  00594 xorp01:
00DF   0680           00595     xorwf INDF0
00E0   0500           00596     andwf INDF0,W ; on screen bit value 0|1 for collision detection
00E1   0081           00597     movwf T
                      00598     pick 1  
00E2   3F7F               M     moviw -1[SP]
00E3   0085           00599     movwf FSR0H
                      00600     pick 2
00E4   3F7E               M     moviw -2[SP]
00E5   0084           00601     movwf FSR0L
                      00602     pop  ; collistion flag 0 -> no collision
00E6   0017               M     moviw SP--
                      00603     drop_n 2
00E7   317E               M     addfsr SP,-2
                      00604     push ; return collision flag
00E8   001C               M     movwi ++SP
                      00605     enable_video
00E9   1100               M     bcf flags, F_MUTEX
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:51:46         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00EA   0008           00606     return
                      00607 
                      00608 ; draw row of pixels
                      00609 ; draw up to 8 pixels.
                      00610 ; stop when r==0    
                      00611 ; input:
                      00612 ;   {x,y} left coordinates
                      00613 ;   r pixels to draw
                      00614 ;   f collision flag to be modified    
                      00615 ; output:
                      00616 ;   f=collision flag, return modified value   
00EB                  00617 xor_row: ; ( f r x y -- f )
                      00618     pick 2 ; check if r==0
00EB   3F7E               M     moviw -2[SP]
00EC   1903           00619     skpnz
00ED   3???           00620     bra xor_row_done ; r==0 done
00EE   3589           00621     lslf WREG
                      00622     insert 2  ; save shifted r
00EF   3FFE               M    movwi -2[SP]
00F0   1C03           00623     skpc
00F1   3???           00624     bra xor_row02 ; bit==0 no draw
                      00625     over ; f r x y x 
00F2   3F7F               M     moviw -1[SP]
                          M     push
00F3   001C               M     movwi ++SP
                      00626     over ; f r x y x y
00F4   3F7F               M     moviw -1[SP]
                          M     push
00F5   001C               M     movwi ++SP
00F6   2???           00627     call xor_pixel ; f r x y fn
                      00628     pick 4 ; pick flag
00F7   3F7C               M     moviw -4[SP]
00F8   0481           00629     iorwf T
                      00630     pop     
00F9   0017               M     moviw SP--
                      00631     insert 3 ; store modified flag
00FA   3FFD               M    movwi -3[SP]
00FB                  00632 xor_row02:
                      00633     inc_n 1  ; x+=1
00FB   3F7F               M     moviw -1[SP]
00FC   0A89               M     incf WREG,F
00FD   3FFF               M     movwi -1[SP]
00FE   3???           00634     bra xor_row
00FF                  00635 xor_row_done: ; f r x y
                      00636     drop_n 3  ; only keep f
00FF   317D               M     addfsr SP,-3
0100   0008           00637     return
                      00638 
                      00639 ; read flash memory word
                      00640 ; input:
                      00641 ;   lo is low byte of address
                      00642 ;   hi is high byte of address
                      00643 ;   ofs offset in table (limited to 255 )    
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:51:46         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00644 ; output:
                      00645 ;   PMDATH: PMDAL
                      00646 ;reset <nibble> variable    
0101                  00647 get_flash_word: ; ( ofs lo hi -- )
0101   0023           00648     banksel PMADR
                      00649     pop
0102   0017               M     moviw SP--
0103   0092           00650     movwf PMADRH
                      00651     pop
0104   0017               M     moviw SP--
0105   0091           00652     movwf PMADRL
                      00653     pop
0106   0017               M     moviw SP--
0107   0791           00654     addwf PMADRL
0108   0103           00655     clrw 
0109   3D92           00656     addwfc PMADRH
010A                  00657 read_flash:    
010A   1315           00658     bcf PMCON1,CFGS
010B   1415           00659     bsf PMCON1, RD
010C   0000           00660     nop
010D   0000           00661     nop
010E   01??           00662     clrf nibble
010F   0008           00663     return
                      00664 
                      00665 ; increament pointer 
                      00666 ; and read next flash word    
0110                  00667 next_flash_word:
0110   0A91           00668     incf PMADRL
0111   1903           00669     skpnz
0112   0A92           00670     incf PMADRH
0113   3???           00671     bra read_flash
                      00672     
                      00673 ;get nibble from PMDAT
                      00674 ; output:
                      00675 ;   stack nibble in bits 7:4
                      00676 ; increment nibble variable    
0114                  00677 get_nibble: ; ( -- nibble )
0114   3003           00678     movlw 3
0115   06??           00679     xorwf nibble,W
0116   1903           00680     skpnz ; if set all nibbles of this word read
0117   2???           00681     call next_flash_word
0118   08??           00682     movfw nibble
0119   1903           00683     skpnz
011A   3???           00684     bra row0
011B   0B89           00685     decfsz WREG
011C   3???           00686     bra row2
011D                  00687 row1:    
011D   0813           00688     movfw PMDATL
011E   3???           00689     bra nibble_mask
011F                  00690 row2:
011F   0E13           00691     swapf PMDATL,W
0120   3???           00692     bra nibble_mask
0121                  00693 row0:    
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:51:46         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0121   0E14           00694     swapf PMDATH,W
0122                  00695 nibble_mask:
0122   39F0           00696     andlw 0xf0
                      00697     push
0123   001C               M     movwi ++SP
0124   0A??           00698     incf nibble,F ; advance nibble pointer
0125   0008           00699     return
                      00700 
                      00701 ; print 4 pixels row
                      00702 ; inputs:
                      00703 ;   x,y left coordinates
                      00704 ;   f  collision flag
                      00705 ;   r  row index {0-2}
                      00706 ; advance y coordinate for next row    
0126                  00707 print_row: ; ( x y f -- x y f )     
0126   2???           00708     call get_nibble ; -- x y f n 
                      00709     pick 3 
0127   3F7D               M     moviw -3[SP]
                      00710     push    ; x y f n x
0128   001C               M     movwi ++SP
                      00711     pick 3
0129   3F7D               M     moviw -3[SP]
                      00712     push      ; x y f n x y
012A   001C               M     movwi ++SP
012B   2???           00713     call xor_row ; -- x y f
                      00714     inc_n 1 ; y+=1
012C   3F7F               M     moviw -1[SP]
012D   0A89               M     incf WREG,F
012E   3FFF               M     movwi -1[SP]
012F   0008           00715     return
                      00716     
                      00717 ; draw character 
                      00718 ; input:
                      00719 ;   x,y left/top coordinates
                      00720 ;   c   character to print    
0130                  00721 print_char: ; ( x y c -- )
0130   3581           00722     lslf T ; 2 words per digit
                      00723     lit low(digits)
0131   30??               M    movlw low(digits)
0132   001C               M    movwi ++SP 
                      00724     lit high(digits) ; x y ofs adrL adrH
0133   30??               M    movlw high(digits)
0134   001C               M    movwi ++SP 
0135   2???           00725     call get_flash_word  ; x y
                      00726     lit 0   ; x y f=0
0136   3000               M    movlw 0
0137   001C               M    movwi ++SP 
0138   2???           00727     call print_row
0139   2???           00728     call print_row
013A   2???           00729     call print_row 
013B   2???           00730     call print_row 
013C   2???           00731     call print_row 
                      00732     drop_n 3  ; ( x y f -- )
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:51:46         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

013D   317D               M     addfsr SP,-3
013E   0008           00733     return
                      00734 
                      00735 ; print a tetriminos
                      00736 ; input:
                      00737 ;   f collision flag
                      00738 ;   x,y  left/top coordinate
                      00739 ;   t tetriminos identifier
                      00740 ; output:
                      00741 ;   collision flag,  0 if no collision    
013F                  00742 print_tetrim: ; ( x y t  -- f )
013F   3018           00743     movlw 24
0140   0201           00744     subwf T,W
0141   1803           00745     skpnc
0142   3???           00746     bra ti ; I tetrominos
0143   30??           00747     movlw low(tetriminos)
                      00748     push
0144   001C               M     movwi ++SP
0145   30??           00749     movlw high(tetriminos)
                      00750     push
0146   001C               M     movwi ++SP
0147   3???           00751     bra prt01
0148                  00752 ti: ; special treatment for I tetriminos
0148   0081           00753     movwf T
0149   3581           00754     lslf T,F
014A   30??           00755     movlw low(I0)
                      00756     push
014B   001C               M     movwi ++SP
014C   30??           00757     movlw high(I0)
                      00758     push
014D   001C               M     movwi ++SP
014E                  00759 prt01:    
014E   2???           00760     call get_flash_word
                      00761     lit 0
014F   3000               M    movlw 0
0150   001C               M    movwi ++SP 
0151   2???           00762     call print_row ; x y f -- x y+1 f
0152   2???           00763     call print_row
0153   2???           00764     call print_row
0154   0023           00765     banksel PMDAT
0155   3030           00766     movlw 0x30
0156   0514           00767     andwf PMDATH,W
0157   1903           00768     skpnz
0158   2???           00769     call print_row
0159   0801           00770     movfw T
                      00771     insert 2
015A   3FFE               M    movwi -2[SP]
                      00772     drop_n 2  ; -- f
015B   317E               M     addfsr SP,-2
015C   0008           00773     return
                      00774     
                      00775 ;print a text line store in flash
                      00776 ; text terminated by 0xff
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:51:46         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00777 ; input: 
                      00778 ;  x, y left coordinates
                      00779 ;  idx  index of message    
015D                  00780 print_label: ; ( x y idx -- )
                      00781     lit 0    ; x y idx i
015D   3000               M    movlw 0
015E   001C               M    movwi ++SP 
015F                  00782 prt_lbl_loop:
                      00783     dup      ; x y idx i i
015F   0801               M     movfw T
0160   001C               M     movwi ++SP
                      00784     pick 2   ; WREG=idx
0161   3F7E               M     moviw -2[SP]
0162   2???           00785     call labels ; x y idx i i -- x y idx i  
0163   1B89           00786     btfsc WREG,7
0164   3???           00787     bra prt_lbl_done
                      00788     push ; x y idx i c
0165   001C               M     movwi ++SP
                      00789     pick 4
0166   3F7C               M     moviw -4[SP]
                      00790     push    ; x y idx i c x 
0167   001C               M     movwi ++SP
                      00791     pick 4
0168   3F7C               M     moviw -4[SP]
                      00792     push    ; x y idx i c x y
0169   001C               M     movwi ++SP
                      00793     rot     ; x y idx i x y c
                          M     pick 2
016A   3F7E               M     moviw -2[SP]
                          M     push        ; n1 n2 n3 n1
016B   001C               M     movwi ++SP
                          M     pick 2
016C   3F7E               M     moviw -2[SP]
                          M     insert 3   ;  n2 n2 n3 n1
016D   3FFD               M    movwi -3[SP]
                          M     pick 1
016E   3F7F               M     moviw -1[SP]
                          M     insert 2   ; n2 n3 n3 n1
016F   3FFE               M    movwi -2[SP]
                          M     pop        ; n2 n3 n3 
0170   0017               M     moviw SP--
0171   0081               M     movwf T    ; n2 n3 n1
0172   2???           00794     call print_char ; -- x y idx i 
0173   0A81           00795     incf T
                      00796     pick 3    ; x
0174   3F7D               M     moviw -3[SP]
0175   3E04           00797     addlw 4   ; x+=4
                      00798     insert 3  
0176   3FFD               M    movwi -3[SP]
0177   3???           00799     bra prt_lbl_loop
0178                  00800 prt_lbl_done:
                      00801     drop_n 4
0178   317C               M     addfsr SP,-4
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:51:46         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0179   0008           00802     return
                      00803     
                      00804     
                      00805 ; draw horizontal line ( length  y x -- )
                      00806 ; inputs:
                      00807 ;   length of line
                      00808 ;   {x,y} left coordinates       
017A                  00809 hline:
                      00810     pick 2
017A   3F7E               M     moviw -2[SP]
017B   1903           00811     skpnz
017C   3???           00812     bra hline_done
017D   0389           00813     decf WREG
                      00814     insert 2
017E   3FFE               M    movwi -2[SP]
                      00815     dup     ; len y x x
017F   0801               M     movfw T
0180   001C               M     movwi ++SP
                      00816     pick 2
0181   3F7E               M     moviw -2[SP]
                      00817     push    ; len y x x y
0182   001C               M     movwi ++SP
0183   2???           00818     call xor_pixel
                      00819     drop
0184   317F               M    addfsr SP,-1
0185   0A81           00820     incf T  ; len y x+1
0186   3???           00821     bra hline
0187                  00822 hline_done:    
                      00823     drop_n 3
0187   317D               M     addfsr SP,-3
0188   0008           00824     return
                      00825 
                      00826 ;draw vertical line ( length x y -- )
                      00827 ; inputs:
                      00828 ;   length of line
                      00829 ;   {x,y} top coordinate
0189                  00830 vline:  ; len y x
                      00831     pick 2 
0189   3F7E               M     moviw -2[SP]
018A   1903           00832     skpnz
018B   3???           00833     bra vline_done
018C   0389           00834     decf WREG
                      00835     insert 2
018D   3FFE               M    movwi -2[SP]
                      00836     pick 1      
018E   3F7F               M     moviw -1[SP]
                      00837     push    ; len x y x
018F   001C               M     movwi ++SP
                      00838     pick 1
0190   3F7F               M     moviw -1[SP]
                      00839     push    ; len x y x y
0191   001C               M     movwi ++SP
0192   2???           00840     call xor_pixel
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:51:46         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00841     drop
0193   317F               M    addfsr SP,-1
0194   0A81           00842     incf T
0195   3???           00843     bra vline
0196                  00844 vline_done:
                      00845     drop_n 3
0196   317D               M     addfsr SP,-3
0197   0008           00846     return
                      00847     
  0000000A            00848 WELL_WIDTH equ 10
  00000016            00849 WELL_DEPTH equ 22 
0198                  00850 game_init:
                      00851     lit 0   ; lit 0 to clear screen black
0198   3000               M    movlw 0
0199   001C               M    movwi ++SP 
019A   2???           00852     call fill_buffer ; clear screen black
                      00853     lit WELL_DEPTH
019B   3016               M    movlw WELL_DEPTH
019C   001C               M    movwi ++SP 
                      00854     lit 0
019D   3000               M    movlw 0
019E   001C               M    movwi ++SP 
                      00855     lit 0
019F   3000               M    movlw 0
01A0   001C               M    movwi ++SP 
01A1   2???           00856      call vline
                      00857     lit WELL_DEPTH
01A2   3016               M    movlw WELL_DEPTH
01A3   001C               M    movwi ++SP 
                      00858     lit WELL_WIDTH+1
01A4   300B               M    movlw WELL_WIDTH+1
01A5   001C               M    movwi ++SP 
                      00859     lit 0
01A6   3000               M    movlw 0
01A7   001C               M    movwi ++SP 
01A8   2???           00860     call vline
                      00861     lit WELL_WIDTH+2
01A9   300C               M    movlw WELL_WIDTH+2
01AA   001C               M    movwi ++SP 
                      00862     lit WELL_DEPTH
01AB   3016               M    movlw WELL_DEPTH
01AC   001C               M    movwi ++SP 
                      00863     lit 0
01AD   3000               M    movlw 0
01AE   001C               M    movwi ++SP 
01AF   2???           00864     call hline
                      00865     lit WELL_WIDTH+3 ; x
01B0   300D               M    movlw WELL_WIDTH+3
01B1   001C               M    movwi ++SP 
                      00866     lit 0            ; y
01B2   3000               M    movlw 0
01B3   001C               M    movwi ++SP 
                      00867     lit LBL_SCORE            ; message index
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:51:46         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01B4   3000               M    movlw LBL_SCORE
01B5   001C               M    movwi ++SP 
01B6   2???           00868     call print_label
                      00869     lit WELL_WIDTH+3 ; x
01B7   300D               M    movlw WELL_WIDTH+3
01B8   001C               M    movwi ++SP 
                      00870     lit 12           ; y
01B9   300C               M    movlw 12
01BA   001C               M    movwi ++SP 
                      00871     lit LBL_LINES       ; message index
01BB   3001               M    movlw LBL_LINES
01BC   001C               M    movwi ++SP 
01BD   2???           00872     call print_label
                      00873     lit WELL_WIDTH+11 ; x
01BE   3015               M    movlw WELL_WIDTH+11
01BF   001C               M    movwi ++SP 
                      00874     lit 6            ; y
01C0   3006               M    movlw 6
01C1   001C               M    movwi ++SP 
                      00875     lit LBL_ZEROS       ; message index
01C2   3002               M    movlw LBL_ZEROS
01C3   001C               M    movwi ++SP 
01C4   2???           00876     call print_label
                      00877     lit WELL_WIDTH+11 ; x
01C5   3015               M    movlw WELL_WIDTH+11
01C6   001C               M    movwi ++SP 
                      00878     lit 18           ; y
01C7   3012               M    movlw 18
01C8   001C               M    movwi ++SP 
                      00879     lit LBL_ZEROS       ; message index
01C9   3002               M    movlw LBL_ZEROS
01CA   001C               M    movwi ++SP 
01CB   2???           00880     call print_label
                      00881     
                      00882 ; variables initialization
01CC   0020           00883     banksel 0
01CD   3002           00884     movlw 2
01CE   00??           00885     movwf tx
01CF   01??           00886     clrf ty
01D0   01??           00887     clrf tetrim
01D1   01??           00888     clrf angle
01D2   01??           00889     clrf scoreL
01D3   01??           00890     clrf scoreH
01D4   01??           00891     clrf dropped
01D5   01??           00892     clrf buttons
01D6   1600           00893     bsf flags,F_GSTOP
01D7   0008           00894     return
                      00895     
01D8                  00896 tetris:
                      00897 ; test print_tetrim
                      00898     lit 0 ; tetrimino id
01D8   3000               M    movlw 0
01D9   001C               M    movwi ++SP 
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:51:46         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01DA                  00899 test_loop:    
                      00900     lit 4 ; x
01DA   3004               M    movlw 4
01DB   001C               M    movwi ++SP 
                      00901     lit 0 ; y
01DC   3000               M    movlw 0
01DD   001C               M    movwi ++SP 
                      00902     pick 2
01DE   3F7E               M     moviw -2[SP]
                      00903     push    ; -- t x y t 
01DF   001C               M     movwi ++SP
01E0   2???           00904     call print_tetrim
                      00905     drop ; flag
01E1   317F               M    addfsr SP,-1
                      00906     pause  60
                          M     start_timer 60
01E2   303C               M     movlw 60
01E3   00??               M     movwf gtimer
01E4   1580               M     bsf flags, F_GTMR
                          M     wait_timer
01E5   1980               M     btfsc flags, F_GTMR
01E6   3???               M     bra $-1
                      00907     lit 4 ; x
01E7   3004               M    movlw 4
01E8   001C               M    movwi ++SP 
                      00908     lit 0 ; y
01E9   3000               M    movlw 0
01EA   001C               M    movwi ++SP 
                      00909     pick 2
01EB   3F7E               M     moviw -2[SP]
                      00910     push
01EC   001C               M     movwi ++SP
01ED   2???           00911     call print_tetrim
                      00912     drop ; flag
01EE   317F               M    addfsr SP,-1
01EF   0A81           00913     incf T
01F0   301C           00914     movlw 28
01F1   0201           00915     subwf T,W
01F2   1C03           00916     skpc
01F3   3???           00917     bra test_loop
01F4   0181           00918     clrf T
01F5   3???           00919     bra test_loop
01F6   0008           00920     return
                      00921     
01F7                  00922 init:
                      00923     pstack_init
01F7   0187               M     clrf FSR1H
01F8   301F               M     movlw S0
01F9   0086               M     movwf FSR1L
                      00924 ; ADC configuration
01FA   0021           00925     banksel ADCON0
01FB   300C           00926     movlw (PAD_CHS<<CHS0)
01FC   009D           00927     movwf ADCON0
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:51:46         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01FD   3020           00928     movlw (2<<ADCS0)
01FE   009E           00929     movwf ADCON1
                      00930 ;;;;;;;;;;;;;;;;;;;;;    
01FF   0021           00931     banksel TRISA
0200   110C           00932     bcf TRISA, SYNC_OUT
0201   108C           00933     bcf TRISA, VIDEO_OUT
0202   0022           00934     banksel VIDEO_LAT
0203   108C           00935     bcf VIDEO_LAT,VIDEO_OUT
                      00936 ;configure EUSART in sychronsous mode
                      00937 ;to use as pixel serializer
0204   0023           00938     banksel SPBRG
0205   3001           00939     movlw 1
0206   009B           00940     movwf SPBRGL
0207   019C           00941     clrf SPBRGH
0208   019A           00942     clrf TXREG
0209   30B0           00943     movlw (1<<SYNC)|(1<<CSRC)|(1<<TXEN)
020A   009E           00944     movwf TXSTA
020B   179D           00945     bsf RCSTA, SPEN
020C   30CF           00946     movlw ~((1<<CREN)|(1<<SREN))
020D   059D           00947     andwf RCSTA
                      00948 ; configure pwm video sync for horizontal period
020E   003B           00949     banksel SYNC_PWMDCH
020F   01B1           00950     clrf SYNC_PWMPH
0210   01B2           00951     clrf SYNC_PWMPH+1
0211   01BF           00952     clrf SYNC_PWMLDCON
0212   30F5           00953     movlw HORZ_PERIOD&0XFF
0213   00B5           00954     movwf SYNC_PWMPRL
0214   3004           00955     movlw HORZ_PERIOD>>8
0215   00B6           00956     movwf SYNC_PWMPRH
0216   01BE           00957     clrf SYNC_PWMCLKCON
0217   30D0           00958     movlw (3<<OE)|(1<<POL)
0218   00BB           00959     movwf SYNC_PWMCON
0219   305E           00960     movlw HORZ_PULSE&0xff
021A   00B3           00961     movwf SYNC_PWMDCL
021B   3000           00962     movlw HORZ_PULSE>>8
021C   00B4           00963     movwf SYNC_PWMDCH
021D   17BF           00964     bsf SYNC_PWMLDCON,7
                      00965    ;enable video interrupt on period match
021E   103D           00966     bcf SYNC_PWMINTF,PRIF
021F   143C           00967     bsf SYNC_PWMINTE,PRIE
                      00968     ; enable peripheral interrupt
0220   0021           00969     banksel SYNC_PIE
0221   1713           00970     bsf SYNC_PIE,SYNC_IE
                      00971     ;enable interrupts
0222   30C0           00972     movlw (1<<GIE)|(1<<PEIE)
0223   008B           00973     movwf INTCON
0224   01??           00974     clrf lcountL
0225   01??           00975     clrf lcountH
0226   01??           00976     clrf flags
                      00977     ; seed lfsr PRNG
0227   30AC           00978     movlw 0xAC
0228   00??           00979     movwf randL
0229   30E1           00980     movlw 0xE1
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:51:46         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

022A   00??           00981     movwf randH
                      00982 
                      00983     
022B                  00984 main:
022B   2???           00985     call game_init
022C   2???           00986     call tetris
022D   3???           00987     bra $
022E   3???           00988     bra main
                      00989   
                      00990 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00991 ;   data tables
                      00992 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00993 
                      00994 ; **************** encoding ************************************************
                      00995 ; enhanced PIC instructions are coded on 14 bits
                      00996 ; these 14 bits can be read as data using flash memory
                      00997 ; writing/reading mechanism, see datasheet chapter 10 for detail.
                      00998 ; the 'dw' assembler directive encode data in those 14 bits contrary to 'dt'
                      00999 ; directive which encode a single byte as a RETLW instruction.
                      01000 ; So we get a 50% compression by encoding 3 nibbles/flash word. 
                      01001 ; the encoding used in the following tables is as follow:    
                      01002 ; bits 13:12  number of nibbles where 0 means there is more than 3 nibbles
                      01003 ; in this data chunk so 1 or more other words follow this one.    
                      01004 ; other 12 bits are sliced in 4 bits nibbles.
                      01005 ;****************************************************************************
                      01006 
022F                  01007 digits: ; each digit is 5 rows
022F   0EAA 2AE0      01008     dw 0x0EAA,0x2AE0 ; 0
0231   04C4 24E0      01009     dw 0x04C4,0x24E0 ; 1
0233   0E2E 28E0      01010     dw 0x0E2E,0x28E0 ; 2
0235   0E2E 22E0      01011     dw 0x0E2E,0x22E0 ; 3
0237   0AAE 2220      01012     dw 0x0AAE,0x2220 ; 4
0239   0E8E 22E0      01013     dw 0x0E8E,0x22E0 ; 5
023B   088E 2AE0      01014     dw 0x088E,0x2AE0 ; 6
023D   0E22 2220      01015     dw 0x0E22,0x2220 ; 7
023F   0EAE 2AE0      01016     dw 0x0EAE,0x2AE0 ; 8
0241   0EAE 2220      01017     dw 0x0EAE,0x2220 ; 9
                      01018 ; letters needed for 'SCORE' and 'LINES" labels
0243   3688 2860      01019     dw 0x3688,0x2860 ; C  code 10
0245   3E8E 28E0      01020     dw 0x3E8E,0x28E0 ; E  code 11
0247   3E44 24E0      01021     dw 0x3E44,0x24E0 ; I  code 12
0249   3888 28E0      01022     dw 0x3888,0x28E0 ; L  code 13
024B   38CA 2AA0      01023     dw 0x38CA,0x2AA0 ; N  code 14
024D   34AA 2A40      01024     dw 0x34AA,0x2A40 ; O  code 15
024F   38EA 2880      01025     dw 0x38EA,0x2880 ; R  code 16
0251   368C 22C0      01026     dw 0x368C,0x22C0 ; S  code 17
0253   3040 2400      01027     dw 0x3040,0x2400 ; :  code 18
                      01028 
                      01029 ; comments notation: Rn clockwise rotation n*90 degr.    
                      01030 ; note that vertical I as 4 rows so it needs 2 words    
0255                  01031 tetriminos: 
0255   3446           01032     dw 0x3446 ; L R0
0256   2E80           01033     dw 0x2E80 ; L R1
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:51:46         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0257   3622           01034     dw 0x3622 ; L R2
0258   22E0           01035     dw 0x22E0 ; L R3
0259   3226           01036     dw 0x3226 ; J R0
025A   28E0           01037     dw 0x28E0 ; J R1
025B   3644           01038     dw 0x3644 ; J R2
025C   2E20           01039     dw 0x2E20 ; J R3
025D   2660           01040     dw 0x2660 ; O R0 
025E   2660           01041     dw 0x2660 ; O R1
025F   2660           01042     dw 0x2660 ; O R2
0260   2660           01043     dw 0x2660 ; O R3
0261   2360           01044     dw 0x2360 ; S R0
0262   3462           01045     dw 0x3462 ; S R1
0263   2360           01046     dw 0x2360 ; S R2
0264   3462           01047     dw 0x3462 ; S R3
0265   2E40           01048     dw 0x2E40 ; T R0
0266   34C4           01049     dw 0x34c4 ; T R1
0267   24E0           01050     dw 0x24E0 ; T R2
0268   3464           01051     dw 0x3464 ; T R3
0269   2C60           01052     dw 0x2C60 ; Z R0
026A   3264           01053     dw 0x3264 ; Z R1
026B   2C60           01054     dw 0x2C60 ; Z R3
026C   3264           01055     dw 0x3264 ; Z R4
                      01056 ; annoying! I tetriminos need a special treatment 
                      01057 ; because vertical I need 2 words for encoding.   
026D   0222 1200      01058 I0: dw 0x0222,0x1200 ; I R0  
026F   1F00 1000      01059     dw 0x1F00,0x1000 ; I R1  second word is filling for alignment
0271   0222 1200      01060     dw 0x0222,0x1200 ; I R2
0273   1F00 1000      01061     dw 0x1F00,0x1000 ; I R3  
                      01062 
  00000000            01063 LBL_SCORE equ 0
  00000001            01064 LBL_LINES equ 1
  00000002            01065 LBL_ZEROS equ 2
                      01066  
0275                  01067 labels:
0275   000B           01068     brw
0276   3???           01069     bra txt_score
0277   3???           01070     bra txt_lines
0278   3???           01071     bra txt_zeros
                      01072     
0279                  01073 txt_score:
                      01074     pop
0279   0017               M     moviw SP--
027A   000B           01075     brw
027B   3411 340A 340F 01076     dt 17,10,15,16,11,18,255
       3410 340B 3412 
       34FF 
                      01077     
0282                  01078 txt_lines:
                      01079     pop
0282   0017               M     moviw SP--
0283   000B           01080     brw
0284   340D 340C 340E 01081     dt 13,12,14,11,17,18,255
       340B 3411 3412 
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:51:46         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

       34FF 
                      01082 
028B                  01083 txt_zeros:
                      01084     pop
028B   0017               M     moviw SP--
028C   000B           01085     brw
028D   3400 3400 3400 01086     dt 0,0,0,0,0,0,255
       3400 3400 3400 
       34FF 
                      01087     
3FE7 1EFF             01088     end
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:51:46         PAGE 27


SYMBOL TABLE
  LABEL                             VALUE 

ABDEN                             00000000
ABDOVF                            00000007
ADCON0                            0000009D
ADCON1                            0000009E
ADCON2                            0000009F
ADCS0                             00000004
ADCS1                             00000005
ADCS2                             00000006
ADDEN                             00000003
ADFM                              00000007
ADFVR0                            00000000
ADFVR1                            00000001
ADGO                              00000001
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADPREF0                           00000000
ADPREF1                           00000001
ADRES                             0000009B
ADRESH                            0000009C
ADRESL                            0000009B
ANSA0                             00000000
ANSA1                             00000001
ANSA2                             00000002
ANSA4                             00000004
ANSELA                            0000018C
APFCON                            0000011D
APFCON0                           0000011D
A_THR                             00000040
BAUDCON                           0000019F
BORCON                            00000116
BORFS                             00000006
BORRDY                            00000000
BPL                               00000006
BRG16                             00000003
BRGH                              00000002
BSR                               00000008
BSR0                              00000000
BSR1                              00000001
BSR2                              00000002
BSR3                              00000003
BSR4                              00000004
BSR_SHAD                          00000FE6
BTN_A                             00000004
BTN_B                             00000005
BTN_DN                            00000001
BTN_LT                            00000002
BTN_RT                            00000003
BTN_UP                            00000000
BUFFER_SIZE                       000000C0
B_THR                             00000095
C                                 00000000
C1HYS                             00000001
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:51:46         PAGE 28


SYMBOL TABLE
  LABEL                             VALUE 

C1IE                              00000005
C1IF                              00000005
C1INTN                            00000006
C1INTP                            00000007
C1NCH0                            00000000
C1NCH1                            00000001
C1NCH2                            00000002
C1OE                              00000005
C1ON                              00000007
C1OUT                             00000006
C1PCH0                            00000004
C1PCH1                            00000005
C1POL                             00000004
C1SP                              00000002
C1SYNC                            00000000
CDAFVR0                           00000002
CDAFVR1                           00000003
CFGS                              00000006
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CHS4                              00000006
CM1CON0                           00000111
CM1CON1                           00000112
CMOUT                             00000115
CREN                              00000004
CS0                               00000000
CS1                               00000001
CSRC                              00000007
CWG1CON0                          00000693
CWG1CON1                          00000694
CWG1CON2                          00000695
CWG1DBF                           00000692
CWG1DBF0                          00000000
CWG1DBF1                          00000001
CWG1DBF2                          00000002
CWG1DBF3                          00000003
CWG1DBF4                          00000004
CWG1DBF5                          00000005
CWG1DBR                           00000691
CWG1DBR0                          00000000
CWG1DBR1                          00000001
CWG1DBR2                          00000002
CWG1DBR3                          00000003
CWG1DBR4                          00000004
CWG1DBR5                          00000005
CWGASEL                           00000006
CWGBSEL                           00000005
C_SHAD                            00000000
DACCON0                           00000118
DACCON1                           00000119
DACEN                             00000007
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:51:46         PAGE 29


SYMBOL TABLE
  LABEL                             VALUE 

DACLPS                            00000006
DACOE                             00000005
DACPSS0                           00000002
DACPSS1                           00000003
DACR0                             00000000
DACR1                             00000001
DACR2                             00000002
DACR3                             00000003
DACR4                             00000004
DC                                00000001
DCIE                              00000001
DCIF                              00000001
DC_SHAD                           00000001
DN_THR                            000000D8
EN                                00000007
F                                 00000001
FCY                               004C4B40
FERR                              00000002
FIRST_VIDEO                       0000003C
FOSC                              01312D00
FREE                              00000004
FSR0                              00000004
FSR0H                             00000005
FSR0H_SHAD                        00000FE9
FSR0L                             00000004
FSR0L_SHAD                        00000FE8
FSR0_SHAD                         00000FE8
FSR1                              00000006
FSR1H                             00000007
FSR1H_SHAD                        00000FEB
FSR1L                             00000006
FSR1L_SHAD                        00000FEA
FSR1_SHAD                         00000FEA
FVRCON                            00000117
FVREN                             00000007
FVRRDY                            00000006
F_EVEN                            00000001
F_GSTOP                           00000004
F_GTMR                            00000003
F_MUTEX                           00000002
F_SND                             00000005
F_VSYNC                           00000000
G1ARSEN                           00000006
G1ASDLA0                          00000004
G1ASDLA1                          00000005
G1ASDLB0                          00000006
G1ASDLB1                          00000007
G1ASDSC1                          00000002
G1ASDSFLT                         00000001
G1ASE                             00000007
G1CS0                             00000000
G1EN                              00000007
G1IS0                             00000000
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:51:46         PAGE 30


SYMBOL TABLE
  LABEL                             VALUE 

G1IS1                             00000001
G1IS2                             00000002
G1OEA                             00000005
G1OEB                             00000006
G1POLA                            00000003
G1POLB                            00000004
GIE                               00000007
GO                                00000001
GO_NOT_DONE                       00000001
HFIOFL                            00000003
HFIOFR                            00000004
HFIOFS                            00000000
HORZ_DLY                          00000050
HORZ_PERIOD                       000004F5
HORZ_PULSE                        0000005E
I0                                0000026D
INDF0                             00000000
INDF1                             00000001
INLVLA                            0000038C
INLVLA0                           00000000
INLVLA1                           00000001
INLVLA2                           00000002
INLVLA3                           00000003
INLVLA4                           00000004
INLVLA5                           00000005
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IOCAF                             00000393
IOCAF0                            00000000
IOCAF1                            00000001
IOCAF2                            00000002
IOCAF3                            00000003
IOCAF4                            00000004
IOCAF5                            00000005
IOCAN                             00000392
IOCAN0                            00000000
IOCAN1                            00000001
IOCAN2                            00000002
IOCAN3                            00000003
IOCAN4                            00000004
IOCAN5                            00000005
IOCAP                             00000391
IOCAP0                            00000000
IOCAP1                            00000001
IOCAP2                            00000002
IOCAP3                            00000003
IOCAP4                            00000004
IOCAP5                            00000005
IOCIE                             00000003
IOCIF                             00000000
IRCF0                             00000003
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:51:46         PAGE 31


SYMBOL TABLE
  LABEL                             VALUE 

IRCF1                             00000004
IRCF2                             00000005
IRCF3                             00000006
LAST_LINE                         00000106
LAST_VIDEO                        000000BB
LATA                              0000010C
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA4                             00000004
LATA5                             00000005
LBL_LINES                         00000001
LBL_SCORE                         00000000
LBL_ZEROS                         00000002
LDA                               00000007
LDS0                              00000000
LDS1                              00000001
LDT                               00000006
LFIOFR                            00000001
LFSR_TAPS                         000000B4
LT_THR                            000000D1
LWLO                              00000005
MC1OUT                            00000000
MFIOFR                            00000002
MODE0                             00000002
MODE1                             00000003
MPWM1EN                           00000000
MPWM1LD                           00000000
MPWM1OUT                          00000000
MPWM2EN                           00000001
MPWM2LD                           00000001
MPWM2OUT                          00000001
MPWM3EN                           00000002
MPWM3LD                           00000002
MPWM3OUT                          00000002
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RI                            00000002
NOT_RMCLR                         00000003
NOT_RWDT                          00000004
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_WPUEN                         00000007
ODA0                              00000000
ODA1                              00000001
ODA2                              00000002
ODA4                              00000004
ODA5                              00000005
ODCONA                            0000028C
OE                                00000006
OERR                              00000001
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:51:46         PAGE 32


SYMBOL TABLE
  LABEL                             VALUE 

OFIE                              00000003
OFIF                              00000003
OFM0                              00000005
OFM1                              00000006
OFO                               00000004
OFS0                              00000000
OFS1                              00000001
OPTION_REG                        00000095
OSCCON                            00000099
OSCSTAT                           0000009A
OSCTUNE                           00000098
OSTS                              00000005
OUT                               00000005
P1SEL                             00000000
P2SEL                             00000001
PAD_CHS                           00000003
PAD_PIN                           00000004
PCL                               00000002
PCLATH                            0000000A
PCLATH_SHAD                       00000FE7
PCON                              00000096
PEIE                              00000006
PHIE                              00000002
PHIF                              00000002
PIE1                              00000091
PIE2                              00000092
PIE3                              00000093
PIR1                              00000011
PIR2                              00000012
PIR3                              00000013
PIXEL_TXREG                       0000019A
PLLR                              00000006
PMADR                             00000191
PMADRH                            00000192
PMADRL                            00000191
PMCON1                            00000195
PMCON2                            00000196
PMDAT                             00000193
PMDATH                            00000194
PMDATL                            00000193
POL                               00000004
PORTA                             0000000C
PR2                               0000001B
PRIE                              00000000
PRIF                              00000000
PS0_OPTION_REG                    00000000
PS0_PWM1CLKCON                    00000004
PS0_PWM2CLKCON                    00000004
PS0_PWM3CLKCON                    00000004
PS1_OPTION_REG                    00000001
PS1_PWM1CLKCON                    00000005
PS1_PWM2CLKCON                    00000005
PS1_PWM3CLKCON                    00000005
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:51:46         PAGE 33


SYMBOL TABLE
  LABEL                             VALUE 

PS2_OPTION_REG                    00000002
PS2_PWM1CLKCON                    00000006
PS2_PWM2CLKCON                    00000006
PS2_PWM3CLKCON                    00000006
PSA                               00000003
PWM1CLKCON                        00000D9E
PWM1CON                           00000D9B
PWM1CS0                           00000000
PWM1CS1                           00000001
PWM1DC                            00000D93
PWM1DCH                           00000D94
PWM1DCH0                          00000000
PWM1DCH1                          00000001
PWM1DCH2                          00000002
PWM1DCH3                          00000003
PWM1DCH4                          00000004
PWM1DCH5                          00000005
PWM1DCH6                          00000006
PWM1DCH7                          00000007
PWM1DCIE                          00000001
PWM1DCIF                          00000001
PWM1DCL                           00000D93
PWM1DCL0                          00000000
PWM1DCL1                          00000001
PWM1DCL2                          00000002
PWM1DCL3                          00000003
PWM1DCL4                          00000004
PWM1DCL5                          00000005
PWM1DCL6                          00000006
PWM1DCL7                          00000007
PWM1EN                            00000007
PWM1EN_A                          00000000
PWM1IE                            00000004
PWM1IF                            00000004
PWM1INTCON                        00000D9C
PWM1INTE                          00000D9C
PWM1INTF                          00000D9D
PWM1INTFLG                        00000D9D
PWM1LD                            00000007
PWM1LDA_A                         00000000
PWM1LDCON                         00000D9F
PWM1LDM                           00000006
PWM1LDS0                          00000000
PWM1LDS1                          00000001
PWM1MODE0                         00000002
PWM1MODE1                         00000003
PWM1OE                            00000006
PWM1OF                            00000D97
PWM1OFCON                         00000DA0
PWM1OFH                           00000D98
PWM1OFH0                          00000000
PWM1OFH1                          00000001
PWM1OFH2                          00000002
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:51:46         PAGE 34


SYMBOL TABLE
  LABEL                             VALUE 

PWM1OFH3                          00000003
PWM1OFH4                          00000004
PWM1OFH5                          00000005
PWM1OFH6                          00000006
PWM1OFH7                          00000007
PWM1OFIE                          00000003
PWM1OFIF                          00000003
PWM1OFL                           00000D97
PWM1OFL0                          00000000
PWM1OFL1                          00000001
PWM1OFL2                          00000002
PWM1OFL3                          00000003
PWM1OFL4                          00000004
PWM1OFL5                          00000005
PWM1OFL6                          00000006
PWM1OFL7                          00000007
PWM1OFM0                          00000005
PWM1OFM1                          00000006
PWM1OFMC                          00000004
PWM1OFS0                          00000000
PWM1OFS1                          00000001
PWM1OUT                           00000005
PWM1OUT_A                         00000000
PWM1PH                            00000D91
PWM1PHH                           00000D92
PWM1PHH0                          00000000
PWM1PHH1                          00000001
PWM1PHH2                          00000002
PWM1PHH3                          00000003
PWM1PHH4                          00000004
PWM1PHH5                          00000005
PWM1PHH6                          00000006
PWM1PHH7                          00000007
PWM1PHIE                          00000002
PWM1PHIF                          00000002
PWM1PHL                           00000D91
PWM1PHL0                          00000000
PWM1PHL1                          00000001
PWM1PHL2                          00000002
PWM1PHL3                          00000003
PWM1PHL4                          00000004
PWM1PHL5                          00000005
PWM1PHL6                          00000006
PWM1PHL7                          00000007
PWM1POL                           00000004
PWM1PR                            00000D95
PWM1PRH                           00000D96
PWM1PRH0                          00000000
PWM1PRH1                          00000001
PWM1PRH2                          00000002
PWM1PRH3                          00000003
PWM1PRH4                          00000004
PWM1PRH5                          00000005
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:51:46         PAGE 35


SYMBOL TABLE
  LABEL                             VALUE 

PWM1PRH6                          00000006
PWM1PRH7                          00000007
PWM1PRIE                          00000000
PWM1PRIF                          00000000
PWM1PRL                           00000D95
PWM1PRL0                          00000000
PWM1PRL1                          00000001
PWM1PRL2                          00000002
PWM1PRL3                          00000003
PWM1PRL4                          00000004
PWM1PRL5                          00000005
PWM1PRL6                          00000006
PWM1PRL7                          00000007
PWM1PS0                           00000004
PWM1PS1                           00000005
PWM1PS2                           00000006
PWM1TMR                           00000D99
PWM1TMRH                          00000D9A
PWM1TMRH0                         00000000
PWM1TMRH1                         00000001
PWM1TMRH2                         00000002
PWM1TMRH3                         00000003
PWM1TMRH4                         00000004
PWM1TMRH5                         00000005
PWM1TMRH6                         00000006
PWM1TMRH7                         00000007
PWM1TMRL                          00000D99
PWM1TMRL0                         00000000
PWM1TMRL1                         00000001
PWM1TMRL2                         00000002
PWM1TMRL3                         00000003
PWM1TMRL4                         00000004
PWM1TMRL5                         00000005
PWM1TMRL6                         00000006
PWM1TMRL7                         00000007
PWM2CLKCON                        00000DAE
PWM2CON                           00000DAB
PWM2CS0                           00000000
PWM2CS1                           00000001
PWM2DC                            00000DA3
PWM2DCH                           00000DA4
PWM2DCH0                          00000000
PWM2DCH1                          00000001
PWM2DCH2                          00000002
PWM2DCH3                          00000003
PWM2DCH4                          00000004
PWM2DCH5                          00000005
PWM2DCH6                          00000006
PWM2DCH7                          00000007
PWM2DCIE                          00000001
PWM2DCIF                          00000001
PWM2DCL                           00000DA3
PWM2DCL0                          00000000
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:51:46         PAGE 36


SYMBOL TABLE
  LABEL                             VALUE 

PWM2DCL1                          00000001
PWM2DCL2                          00000002
PWM2DCL3                          00000003
PWM2DCL4                          00000004
PWM2DCL5                          00000005
PWM2DCL6                          00000006
PWM2DCL7                          00000007
PWM2EN                            00000007
PWM2EN_A                          00000001
PWM2IE                            00000005
PWM2IF                            00000005
PWM2INTCON                        00000DAC
PWM2INTE                          00000DAC
PWM2INTF                          00000DAD
PWM2INTFLG                        00000DAD
PWM2LD                            00000007
PWM2LDA_A                         00000001
PWM2LDCON                         00000DAF
PWM2LDM                           00000006
PWM2LDS0                          00000000
PWM2LDS1                          00000001
PWM2MODE0                         00000002
PWM2MODE1                         00000003
PWM2OE                            00000006
PWM2OF                            00000DA7
PWM2OFCON                         00000DB0
PWM2OFH                           00000DA8
PWM2OFH0                          00000000
PWM2OFH1                          00000001
PWM2OFH2                          00000002
PWM2OFH3                          00000003
PWM2OFH4                          00000004
PWM2OFH5                          00000005
PWM2OFH6                          00000006
PWM2OFH7                          00000007
PWM2OFIE                          00000003
PWM2OFIF                          00000003
PWM2OFL                           00000DA7
PWM2OFL0                          00000000
PWM2OFL1                          00000001
PWM2OFL2                          00000002
PWM2OFL3                          00000003
PWM2OFL4                          00000004
PWM2OFL5                          00000005
PWM2OFL6                          00000006
PWM2OFL7                          00000007
PWM2OFM0                          00000005
PWM2OFM1                          00000006
PWM2OFMC                          00000004
PWM2OFS0                          00000000
PWM2OFS1                          00000001
PWM2OUT                           00000005
PWM2OUT_A                         00000001
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:51:46         PAGE 37


SYMBOL TABLE
  LABEL                             VALUE 

PWM2PH                            00000DA1
PWM2PHH                           00000DA2
PWM2PHH0                          00000000
PWM2PHH1                          00000001
PWM2PHH2                          00000002
PWM2PHH3                          00000003
PWM2PHH4                          00000004
PWM2PHH5                          00000005
PWM2PHH6                          00000006
PWM2PHH7                          00000007
PWM2PHIE                          00000002
PWM2PHIF                          00000002
PWM2PHL                           00000DA1
PWM2PHL0                          00000000
PWM2PHL1                          00000001
PWM2PHL2                          00000002
PWM2PHL3                          00000003
PWM2PHL4                          00000004
PWM2PHL5                          00000005
PWM2PHL6                          00000006
PWM2PHL7                          00000007
PWM2POL                           00000004
PWM2PR                            00000DA5
PWM2PRH                           00000DA6
PWM2PRH0                          00000000
PWM2PRH1                          00000001
PWM2PRH2                          00000002
PWM2PRH3                          00000003
PWM2PRH4                          00000004
PWM2PRH5                          00000005
PWM2PRH6                          00000006
PWM2PRH7                          00000007
PWM2PRIE                          00000000
PWM2PRIF                          00000000
PWM2PRL                           00000DA5
PWM2PRL0                          00000000
PWM2PRL1                          00000001
PWM2PRL2                          00000002
PWM2PRL3                          00000003
PWM2PRL4                          00000004
PWM2PRL5                          00000005
PWM2PRL6                          00000006
PWM2PRL7                          00000007
PWM2PS0                           00000004
PWM2PS1                           00000005
PWM2PS2                           00000006
PWM2TMR                           00000DA9
PWM2TMRH                          00000DAA
PWM2TMRH0                         00000000
PWM2TMRH1                         00000001
PWM2TMRH2                         00000002
PWM2TMRH3                         00000003
PWM2TMRH4                         00000004
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:51:46         PAGE 38


SYMBOL TABLE
  LABEL                             VALUE 

PWM2TMRH5                         00000005
PWM2TMRH6                         00000006
PWM2TMRH7                         00000007
PWM2TMRL                          00000DA9
PWM2TMRL0                         00000000
PWM2TMRL1                         00000001
PWM2TMRL2                         00000002
PWM2TMRL3                         00000003
PWM2TMRL4                         00000004
PWM2TMRL5                         00000005
PWM2TMRL6                         00000006
PWM2TMRL7                         00000007
PWM3CLKCON                        00000DBE
PWM3CON                           00000DBB
PWM3CS0                           00000000
PWM3CS1                           00000001
PWM3DC                            00000DB3
PWM3DCH                           00000DB4
PWM3DCH0                          00000000
PWM3DCH1                          00000001
PWM3DCH2                          00000002
PWM3DCH3                          00000003
PWM3DCH4                          00000004
PWM3DCH5                          00000005
PWM3DCH6                          00000006
PWM3DCH7                          00000007
PWM3DCIE                          00000001
PWM3DCIF                          00000001
PWM3DCL                           00000DB3
PWM3DCL0                          00000000
PWM3DCL1                          00000001
PWM3DCL2                          00000002
PWM3DCL3                          00000003
PWM3DCL4                          00000004
PWM3DCL5                          00000005
PWM3DCL6                          00000006
PWM3DCL7                          00000007
PWM3EN                            00000007
PWM3EN_A                          00000002
PWM3IE                            00000006
PWM3IF                            00000006
PWM3INTCON                        00000DBC
PWM3INTE                          00000DBC
PWM3INTF                          00000DBD
PWM3INTFLG                        00000DBD
PWM3LD                            00000007
PWM3LDA_A                         00000002
PWM3LDCON                         00000DBF
PWM3LDM                           00000006
PWM3LDS0                          00000000
PWM3LDS1                          00000001
PWM3MODE0                         00000002
PWM3MODE1                         00000003
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:51:46         PAGE 39


SYMBOL TABLE
  LABEL                             VALUE 

PWM3OE                            00000006
PWM3OF                            00000DB7
PWM3OFCON                         00000DC0
PWM3OFH                           00000DB8
PWM3OFH0                          00000000
PWM3OFH1                          00000001
PWM3OFH2                          00000002
PWM3OFH3                          00000003
PWM3OFH4                          00000004
PWM3OFH5                          00000005
PWM3OFH6                          00000006
PWM3OFH7                          00000007
PWM3OFIE                          00000003
PWM3OFIF                          00000003
PWM3OFL                           00000DB7
PWM3OFL0                          00000000
PWM3OFL1                          00000001
PWM3OFL2                          00000002
PWM3OFL3                          00000003
PWM3OFL4                          00000004
PWM3OFL5                          00000005
PWM3OFL6                          00000006
PWM3OFL7                          00000007
PWM3OFM0                          00000005
PWM3OFM1                          00000006
PWM3OFMC                          00000004
PWM3OFS0                          00000000
PWM3OFS1                          00000001
PWM3OUT                           00000005
PWM3OUT_A                         00000002
PWM3PH                            00000DB1
PWM3PHH                           00000DB2
PWM3PHH0                          00000000
PWM3PHH1                          00000001
PWM3PHH2                          00000002
PWM3PHH3                          00000003
PWM3PHH4                          00000004
PWM3PHH5                          00000005
PWM3PHH6                          00000006
PWM3PHH7                          00000007
PWM3PHIE                          00000002
PWM3PHIF                          00000002
PWM3PHL                           00000DB1
PWM3PHL0                          00000000
PWM3PHL1                          00000001
PWM3PHL2                          00000002
PWM3PHL3                          00000003
PWM3PHL4                          00000004
PWM3PHL5                          00000005
PWM3PHL6                          00000006
PWM3PHL7                          00000007
PWM3POL                           00000004
PWM3PR                            00000DB5
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:51:46         PAGE 40


SYMBOL TABLE
  LABEL                             VALUE 

PWM3PRH                           00000DB6
PWM3PRH0                          00000000
PWM3PRH1                          00000001
PWM3PRH2                          00000002
PWM3PRH3                          00000003
PWM3PRH4                          00000004
PWM3PRH5                          00000005
PWM3PRH6                          00000006
PWM3PRH7                          00000007
PWM3PRIE                          00000000
PWM3PRIF                          00000000
PWM3PRL                           00000DB5
PWM3PRL0                          00000000
PWM3PRL1                          00000001
PWM3PRL2                          00000002
PWM3PRL3                          00000003
PWM3PRL4                          00000004
PWM3PRL5                          00000005
PWM3PRL6                          00000006
PWM3PRL7                          00000007
PWM3PS0                           00000004
PWM3PS1                           00000005
PWM3PS2                           00000006
PWM3TMR                           00000DB9
PWM3TMRH                          00000DBA
PWM3TMRH0                         00000000
PWM3TMRH1                         00000001
PWM3TMRH2                         00000002
PWM3TMRH3                         00000003
PWM3TMRH4                         00000004
PWM3TMRH5                         00000005
PWM3TMRH6                         00000006
PWM3TMRH7                         00000007
PWM3TMRL                          00000DB9
PWM3TMRL0                         00000000
PWM3TMRL1                         00000001
PWM3TMRL2                         00000002
PWM3TMRL3                         00000003
PWM3TMRL4                         00000004
PWM3TMRL5                         00000005
PWM3TMRL6                         00000006
PWM3TMRL7                         00000007
PWMEN                             00000D8E
PWMLD                             00000D8F
PWMOUT                            00000D90
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RCIDL                             00000006
RCIE                              00000005
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:51:46         PAGE 41


SYMBOL TABLE
  LABEL                             VALUE 

RCIF                              00000005
RCREG                             00000199
RCSTA                             0000019D
RD                                00000000
RT_THR                            000000B5
RX9                               00000006
RX9D                              00000000
RXDTSEL                           00000007
S0                                0000001F
SBOREN                            00000007
SCKP                              00000004
SCS0                              00000000
SCS1                              00000001
SENDB                             00000003
SLRA0                             00000000
SLRA1                             00000001
SLRA2                             00000002
SLRA4                             00000004
SLRA5                             00000005
SLRCONA                           0000030C
SP                                FSR1
SPBRG                             0000019B
SPBRGH                            0000019C
SPBRGL                            0000019B
SPEN                              00000007
SPLLEN                            00000007
SREN                              00000005
STACK_SIZE                        00000020
STATUS                            00000003
STATUS_SHAD                       00000FE4
STKOVF                            00000007
STKPTR                            00000FED
STKUNF                            00000006
SWDTEN                            00000000
SYNC                              00000004
SYNC_IE                           00000006
SYNC_IF                           00000006
SYNC_OUT                          00000002
SYNC_PIE                          00000093
SYNC_PIR                          00000013
SYNC_PWMCLKCON                    00000DBE
SYNC_PWMCON                       00000DBB
SYNC_PWMDCH                       00000DB4
SYNC_PWMDCL                       00000DB3
SYNC_PWMINTE                      00000DBC
SYNC_PWMINTF                      00000DBD
SYNC_PWMLDCON                     00000DBF
SYNC_PWMOF                        00000DB7
SYNC_PWMOFCON                     00000DC0
SYNC_PWMPH                        00000DB1
SYNC_PWMPRH                       00000DB6
SYNC_PWMPRL                       00000DB5
SYNC_PWMTMR                       00000DB9
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:51:46         PAGE 42


SYMBOL TABLE
  LABEL                             VALUE 

T                                 INDF1
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000018
T1GCON                            00000019
T1GGO                             00000003
T1GGO_NOT_DONE                    00000003
T1GPOL                            00000006
T1GSEL                            00000003
T1GSPM                            00000004
T1GSS0                            00000000
T1GSS1                            00000001
T1GTM                             00000005
T1GVAL                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             0000001C
T2OUTPS0                          00000003
T2OUTPS1                          00000004
T2OUTPS2                          00000005
T2OUTPS3                          00000006
TC                                00000032
TCY                               000000C8
TMR0                              00000015
TMR0CS                            00000005
TMR0IE                            00000005
TMR0IF                            00000002
TMR0SE                            00000004
TMR1                              00000016
TMR1CS0                           00000006
TMR1CS1                           00000007
TMR1GE                            00000007
TMR1GIE                           00000007
TMR1GIF                           00000007
TMR1H                             00000017
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             00000016
TMR1ON                            00000000
TMR2                              0000001A
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOS                               00000FEE
TOSH                              00000FEF
TOSL                              00000FEE
TRIGSEL0                          00000004
TRIGSEL1                          00000005
TRIGSEL2                          00000006
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:51:46         PAGE 43


SYMBOL TABLE
  LABEL                             VALUE 

TRIGSEL3                          00000007
TRISA                             0000008C
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRMT                              00000001
TSEN                              00000005
TSRNG                             00000004
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TUN5                              00000005
TX9                               00000006
TX9D                              00000000
TXCKSEL                           00000002
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             0000019A
TXSTA                             0000019E
TX_PIR                            00000011
UP_THR                            000000C6
VDD                               00000400
VERT_DLY                          00000028
VIDEO_BUFFER                      00002030
VIDEO_LAT                         0000010C
VIDEO_OUT                         00000001
VREGCON                           00000197
VREGPM                            00000001
W                                 00000000
WDTCON                            00000097
WDTPS0                            00000001
WDTPS1                            00000002
WDTPS2                            00000003
WDTPS3                            00000004
WDTPS4                            00000005
WELL_DEPTH                        00000016
WELL_WIDTH                        0000000A
WPUA                              0000020C
WPUA0                             00000000
WPUA1                             00000001
WPUA2                             00000002
WPUA3                             00000003
WPUA4                             00000004
WPUA5                             00000005
WR                                00000001
WREG                              00000009
WREG_SHAD                         00000FE5
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:51:46         PAGE 44


SYMBOL TABLE
  LABEL                             VALUE 

WREN                              00000002
WRERR                             00000003
WUE                               00000001
XSIZE                             00000030
YSIZE                             00000020
Z                                 00000002
Z_SHAD                            00000002
_.org_1_0059                      00000059
_.org_1_0087                      00000087
_.org_1_0089                      00000089
_.org_1_009F                      0000009F
_.org_1_00A6                      000000A6
_.org_1_01E6                      000001E6
_.org_1_022D                      0000022D
_BOREN_NSLEEP                     00003DFF
_BOREN_OFF                        000039FF
_BOREN_ON                         00003FFF
_BOREN_SBODEN                     00003BFF
_BORV_19                          00003FFF
_BORV_HI                          00003BFF
_BORV_LO                          00003FFF
_CLKOUTEN_OFF                     00003FFF
_CLKOUTEN_ON                      000037FF
_CONFIG1                          00008007
_CONFIG2                          00008008
_CP_OFF                           00003FFF
_CP_ON                            00003F7F
_DEVID1                           00008006
_FOSC_ECH                         00003FFF
_FOSC_ECL                         00003FFD
_FOSC_ECM                         00003FFE
_FOSC_INTOSC                      00003FFC
_IDLOC0                           00008000
_IDLOC1                           00008001
_IDLOC2                           00008002
_IDLOC3                           00008003
_LPBOREN_OFF                      00003FFF
_LPBOREN_ON                       000037FF
_LVP_OFF                          00001FFF
_LVP_ON                           00003FFF
_MCLRE_OFF                        00003FBF
_MCLRE_ON                         00003FFF
_PLLEN_OFF                        00003EFF
_PLLEN_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FDF
_STVREN_OFF                       00003DFF
_STVREN_ON                        00003FFF
_WDTE_NSLEEP                      00003FF7
_WDTE_OFF                         00003FE7
_WDTE_ON                          00003FFF
_WDTE_SWDTEN                      00003FEF
_WRT_ALL                          00003FFC
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:51:46         PAGE 45


SYMBOL TABLE
  LABEL                             VALUE 

_WRT_BOOT                         00003FFE
_WRT_HALF                         00003FFD
_WRT_OFF                          00003FFF
__12F1572                         00000001
_stack                            00000020
accaH                             00000008
accaL                             00000007
accbH                             0000000A
accbL                             00000009
add                               
addpmadr                          
angle                             00000041
buttons                           0000000B
case                              
dec_n                             
digits                            0000022F
disable_video                     
drop                              
drop_n                            
dropped                           00000046
dup                               
enable_video                      
fetch                             
fill_buffer                       000000AE
fill_loop                         000000B6
flags                             00000002
game_init                         00000198
get_flash_word                    00000101
get_nibble                        00000114
gt_255                            0000002A
gtimer                            00000003
hline                             0000017A
hline_done                        00000187
inc_n                             
init                              000001F7
insert                            
isr                               00000004
isr_exit                          0000004C
labels                            00000275
lcountH                           00000001
lcountL                           00000000
ldpmadr                           
lit                               
lt_256                            0000000E
main                              0000022B
movtw                             
movwt                             
mult6                             00000050
next_flash_word                   00000110
nibble                            0000000C
nibble_mask                       00000122
no_button                         0000007F
over                              
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:51:46         PAGE 46


SYMBOL TABLE
  LABEL                             VALUE 

pause                             
pick                              
pixels_loop                       0000009A
pop                               
print_char                        00000130
print_label                       0000015D
print_row                         00000126
print_tetrim                      0000013F
prt01                             0000014E
prt_lbl_done                      00000178
prt_lbl_loop                      0000015F
pstack_init                       
push                              
q                                 00000010
r                                 00000000
randH                             00000005
randL                             00000004
rcount                            00000006
read_flash                        0000010A
read_pad                          00000055
reserve                           
rot                               
row0                              00000121
row1                              0000011D
row2                              0000011F
rst                               0000000D
scoreH                            00000045
scoreL                            00000044
set_video_ptr                     000000BC
start_timer                       
store                             
sub                               
swap                              
task1                             0000003F
task2                             00000046
tasks                             00000035
tbranch                           
tcyDelay                          
test_loop                         000001DA
tetrim                            00000040
tetriminos                        00000255
tetris                            000001D8
ti                                00000148
try_a                             0000005C
try_all                           0000005B
try_b                             00000062
try_button                        
try_dn                            0000007A
try_lt                            00000074
try_rt                            00000068
try_up                            0000006E
tx                                00000042
txt_lines                         00000282
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/NTS   12-6-2016  20:51:46         PAGE 47


SYMBOL TABLE
  LABEL                             VALUE 

txt_score                         00000279
txt_zeros                         0000028B
ty                                00000043
video_buffer_b0                   00000050
video_buffer_b2                   000000A0
video_buffer_b3                   00000120
video_serialize                   00000080
vline                             00000189
vline_done                        00000196
vsync_end                         00000022
vsync_start                       0000001A
wait_timer                        
xor_pixel                         000000CE
xor_row                           000000EB
xor_row02                         000000FB
xor_row_done                      000000FF
xorp00                            000000DC
xorp01                            000000DF
zbranch                           

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,    96 suppressed

