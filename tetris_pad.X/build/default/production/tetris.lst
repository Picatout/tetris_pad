MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-18-2016  10:30:19         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001     include p12f1572.inc
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Sep 13 2016
                      00005 ;  MPASM PIC12F1572 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2016 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01601         LIST
                      00002     
                      00003     radix dec
                      00004     errorlevel 0, -302, -305
                      00005     
8007   3FE7           00006     __config _CONFIG1, _FOSC_ECH&_WDTE_OFF
8008   1EFF           00007     __config _CONFIG2, _PLLEN_OFF&_LVP_OFF 
                      00008 
                      00009 #define SOUND_SUPPORT
                      00010     
  01312D00            00011 FOSC equ 20000000 ; 20Mhz
  00000032            00012 TC equ 50 ; nanosecondes sync timer clock period
  004C4B40            00013 FCY equ FOSC/4    ; 5Mhz
  000000C8            00014 TCY equ 200 ; nanoseconds
                      00015 
                      00016 
  00000030            00017 XSIZE equ 48  ; horizontal pixels
  00000020            00018 YSIZE equ 32  ; vertical pixels
  00000006            00019 BPL equ XSIZE/8 ; bytes per line 
  000000C0            00020 BUFFER_SIZE equ  YSIZE*BPL  ; video buffer size
  00002030            00021 VIDEO_BUFFER equ 0x2000+(3*80-BUFFER_SIZE) ; buffer address
  00000032            00022 VERT_DLY equ 50
  00000046            00023 FIRST_VIDEO equ VERT_DLY+20  ; first video output line
  000000C5            00024 LAST_VIDEO equ FIRST_VIDEO+4*YSIZE-1  ; last video output line
  0000019A            00025 PIXEL_TXREG equ TXREG
  00000011            00026 TX_PIR equ PIR1
  00000032            00027 HORZ_DLY equ 10*5  ; there is 5 TCY/µsec
                      00028  
  00000001            00029 VIDEO_OUT equ RA1
  0000010C            00030 VIDEO_LAT equ LATA
  00000002            00031 SYNC_OUT equ RA2 
  00000DB3            00032 SYNC_PWMDCL equ PWM3DCL ; duty cycle low byte
  00000DB4            00033 SYNC_PWMDCH equ PWM3DCH ; high byte    
  00000DB5            00034 SYNC_PWMPRL equ PWM3PRL ; pwm period low byte
  00000DB6            00035 SYNC_PWMPRH equ PWM3PRH ; high byte 
  00000DB1            00036 SYNC_PWMPH equ PWM3PH ; pwm phase
  00000DB7            00037 SYNC_PWMOF equ PWM3OF ; pwm offset
  00000DB9            00038 SYNC_PWMTMR equ PWM3TMR ; timer
  00000DBB            00039 SYNC_PWMCON equ PWM3CON ; control SFR
  00000DBE            00040 SYNC_PWMCLKCON equ PWM3CLKCON  ; clock control SFR
  00000DC0            00041 SYNC_PWMOFCON equ PWM3OFCON ; offset control SFR
  00000DBF            00042 SYNC_PWMLDCON equ PWM3LDCON ; load control SFR
  00000006            00043 SYNC_IE equ PWM3IE  ; interrupt enable bit
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-18-2016  10:30:19         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000006            00044 SYNC_IF equ PWM3IF  ; interrupt flag bit
  00000093            00045 SYNC_PIE equ PIE3 ; interrupt enable SFR
  00000013            00046 SYNC_PIR equ PIR3 ; interrupt flag SFR 
  00000DBC            00047 SYNC_PWMINTE equ PWM3INTE
  00000DBD            00048 SYNC_PWMINTF equ PWM3INTF
                      00049  
  000004F5            00050 HORZ_PERIOD equ FOSC/15748-1 ; 15748 hertz
  0000005E            00051 HORZ_PULSE equ 4700/TC ; 4.7µsec 
  00000106            00052 LAST_LINE equ 262
                      00053 
  00000000            00054 LED_PIN equ RA0
  00000004            00055 ADC_PIN equ RA4
                      00056 
                      00057 #ifdef SOUND_SUPPORT 
  00000004            00058 AUDIO_PIN equ RA4
  00000DA3            00059 AUDIO_PWMDCL equ PWM2DCL
  00000DA4            00060 AUDIO_PWMDCH equ PWM2DCH
  00000DA5            00061 AUDIO_PWMPRL equ PWM2PRL
  00000DA6            00062 AUDIO_PWMPRH equ PWM2PRH
  00000DA9            00063 AUDIO_PWMTMR equ PWM2TMR
  00000DAE            00064 AUDIO_PWMCLKCON equ PWM2CLKCON
  00000DAF            00065 AUDIO_PWMLDCON equ PWM2LDCON
  00000DAB            00066 AUDIO_PWMCON equ PWM2CON
                      00067 #endif
                      00068  
                      00069 ; game pad resource
                      00070 ; use ADC 
  00000004            00071 PAD_PIN equ ANSA4
  00000003            00072 PAD_CHS equ 3 
  00000000            00073 BTN_UP equ 0
  00000001            00074 BTN_DN equ 1
  00000002            00075 BTN_LT equ 2
  00000003            00076 BTN_RT equ 3
  00000004            00077 BTN_A equ 4
  00000005            00078 BTN_B equ 5
                      00079 ; threshold level for each button
                      00080 ; lower_btn_thr >= BTN_? < btn_thr
                      00081 ; exemple: BTN_UP if RT_THR<=Vadc<UP_THR  
  00000400            00082 VDD equ 1024
  000000D8            00083 DN_THR equ 216 ;(VDD*(6/7+5/6)/2)>>2
  000000D1            00084 LT_THR equ 209 ; (VDD*(5/6+4/5)/2)>>2
  000000C6            00085 UP_THR equ 198 ;(VDD*(4/5+3/4)/2)>>2
  000000B5            00086 RT_THR equ 181 ;(VDD*(3/4+2/3)/2)>>2
  00000095            00087 B_THR  equ 149 ; (VDD*(2/3+1/2)/2)>>2
  00000040            00088 A_THR  equ 64 ;(VDD/4)>>2
                      00089  
                      00090 try_button macro btn, label 
                      00091     movlw btn
                      00092     subwf ADRESH,W
                      00093     skpnc
                      00094     bra label
                      00095     endm
                      00096     
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-18-2016  10:30:19         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00097 ;boolean flags 
  00000000            00098 F_VSYNC equ 0 ; vertical sync active
  00000001            00099 F_EVEN equ 1  ; even field
  00000002            00100 F_GTMR equ 2  ; game timer active
  00000003            00101 F_GSTOP equ 3 ; game stopped
  00000004            00102 F_COLL equ 4 ; collision flag
                      00103 #ifdef SOUND_SUPPORT 
  00000005            00104 F_SND equ 5 ; sound timer active 
  00000006            00105 F_NO_SND equ 6 ; quiet mode
                      00106 #endif
                      00107  
  000000B4            00108 LFSR_TAPS equ 0xB4 ; xor mask
                      00109  
                      00110 tcyDelay macro n ; delay in TCY cycles  5TCY per µsec.  
                      00111     variable r=n%5
                      00112     variable q=n/5
                      00113     while r>1
                      00114     bra $+1
                      00115 r-=2
                      00116     endw
                      00117     if r==1
                      00118     nop
                      00119     endif
                      00120     if q
                      00121     movlw q
                      00122     bra $+1
                      00123     decfsz WREG
                      00124     bra $-2
                      00125     endif
                      00126     endm
                      00127 
                      00128 ; button selector case    
                      00129 case macro n, label
                      00130     btfsc buttons,n
                      00131     bra label
                      00132     endm
                      00133  
                      00134 #ifdef SOUND_SUPPORT    
                      00135 wait_sound macro ; wait sound end
                      00136     btfsc flags,F_SND
                      00137     bra $-1
                      00138     endm
                      00139 #endif
                      00140     
                      00141 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00142 ; software stack for arguments passing
                      00143 ; SP is Stack Pointer
                      00144 ; T is Top Of Stack
                      00145 #define SP FSR1
                      00146 #define T INDF1
  00000020            00147 STACK_SIZE equ 32
                      00148  
  0000001F            00149 S0 equ 0x1F ; stack base address - 1
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-18-2016  10:30:19         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00150 
                      00151 push macro   ; ( -- n ) push WREG on stack
                      00152     movwi ++SP
                      00153     endm
                      00154 
                      00155 pop macro   ; ( n -- )  pop T in WREG
                      00156     moviw SP--
                      00157     endm
                      00158     
                      00159 drop macro  ; ( n -- ) ; discard T
                      00160    addfsr SP,-1
                      00161    endm
                      00162 
                      00163 drop_n macro n  ; discard n elements  n<32
                      00164     addfsr SP,-n
                      00165     endm
                      00166     
                      00167 lit macro  n ; ( -- n ) ; push a literal
                      00168    movlw n
                      00169    movwi ++SP 
                      00170    endm
                      00171 
                      00172 dup macro ; ( n -- n n ) duplicate T
                      00173     movfw T
                      00174     movwi ++SP
                      00175     endm
                      00176     
                      00177 over macro ; ( n1 n2 -- n1 n2 n1 )
                      00178     moviw -1[SP]
                      00179     push
                      00180     endm
                      00181     
                      00182 pick macro n  ; pick nth element of stack to WREG
                      00183     moviw -n[SP]
                      00184     endm
                      00185 
                      00186 insert macro n ;  insert WREG at position n on stack
                      00187    movwi -n[SP]
                      00188    endm
                      00189    
                      00190 inc_n macro n ; increament nth element of stack
                      00191     moviw -n[SP]
                      00192     incf WREG,F
                      00193     movwi -n[SP]
                      00194     endm
                      00195     
                      00196 dec_n macro n ; decreament nth element of stack
                      00197     moviw -n[SP]
                      00198     decf WREG,F
                      00199     movwi -n[SP]
                      00200     endm
                      00201     
                      00202 reserve macro n ; reserve n bytes on stack for local variables
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-18-2016  10:30:19         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00203     addfsr SP, n 
                      00204     endm
                      00205  
                      00206 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00207 ; parameter stack section    
                      00208 dstack udata 0x20
0020                  00209 _stack res 32
                      00210 ; game variables section 
  00000000            00211 GAME_VAR equ 0 ; game variables bank
                      00212 game_var udata 0x40 
                      00213 ; tetris game state
0040                  00214 tetrim res 1 ; active tretriminos 
0041                  00215 angle res 1 ; tetriminos rotatation angle in multiple of 90degr. {0:3}
0042                  00216 tx  res 1 ; x coordinate
0043                  00217 ty  res 1 ; y coordinate
0044                  00218 scoreL res 1 ; game score  16 bits
0045                  00219 scoreH res 1 
0046                  00220 droppedL res 1  ; total
0047                  00221 droppedH res 1  ; dropped lines
                      00222   
                      00223  
                      00224 ; These 3 sections are used for video pixels buffering
                      00225 ; with indirect access using FSR0
                      00226 ; to form a contiguous address space. 
                      00227 ; total size 192 bytes 
                      00228 vb_b0    udata 0x50
0050                  00229 video_buffer_b0 res 32
                      00230 vb_b1    udata 0xA0
00A0                  00231 video_buffer_b1 res 80
                      00232 vb_b2    udata 0x120
0120                  00233 video_buffer_b2 res 80
                      00234  
                      00235  
                      00236     udata_shr
                      00237 ;scan lines counter 16 bits
0000                  00238 lcountL res 1
0001                  00239 lcountH res 1
                      00240 ; boolean flags 
0002                  00241 flags res 1
                      00242 ; game timer
0003                  00243 gtimer res 1 
                      00244 #ifdef SOUND_SUPPORT 
                      00245 ; sound timer
0004                  00246 tone_tmr res 1 
                      00247 #endif 
                      00248 ; lfsr PRNG register
0005                  00249 randL res 1 
0006                  00250 randH res 1 
                      00251 ; loop counter
0007                  00252 rcount res 1
                      00253 ; arithmetic accumulator A 16 bits
0008                  00254 accaL res 1
0009                  00255 accaH res 1
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-18-2016  10:30:19         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00256 ; arithmetic accumulator B 16 bits
000A                  00257 accbL res 1
000B                  00258 accbH res 1
                      00259 ; game pad buttons state
000C                  00260 buttons res 1
                      00261 ; program memory reader next nibble {0-3}
000D                  00262 nibble res 1
                      00263 ; temporary registers
000E                  00264 t0  res 1
000F                  00265 t1  res 1
                      00266   
                      00267 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00268 ; reset entry point
                      00269 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0010                  00270 rst: 
                      00271     org 0
0000   0023           00272     banksel ANSELA
0001   018C           00273     clrf ANSELA
0002   160C           00274     bsf ANSELA,PAD_PIN
0003   2???           00275     goto init
                      00276     
                      00277     org 4
                      00278 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;   
                      00279 ; interrupt service routine
                      00280 ; the only interrupt is on SYNC_PWM timer
                      00281 ; this intterrupt trigger once 
                      00282 ; for every horizontal line, i.e. 15748/sec.    
                      00283 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
0004                  00284 isr:
0004   003B           00285     banksel SYNC_PWMINTF
0005   103D           00286     bcf SYNC_PWMINTF,PRIF
0006   1800           00287     btfsc lcountH,0
0007   3???           00288     bra gt_255 ; lcount > 255
                      00289 ; lcount < 256
0008   08??           00290     movfw lcountL
0009   1903           00291     skpnz
000A   3???           00292     bra vsync_start
000B   3A03           00293     xorlw 3
000C   1903           00294     skpnz
000D   3???           00295     bra vsync_end
                      00296 ; check if visible line
000E   3046           00297     movlw FIRST_VIDEO
000F   02??           00298     subwf lcountL,W
0010   1C03           00299     skpc
0011   3???           00300     bra isr_exit
0012   3C7F           00301     sublw 4*YSIZE-1
0013   1803           00302     skpnc
                      00303 ; output video pixels for this line    
0014   2???           00304     call video_serialize 
0015   3???           00305     bra isr_exit 
                      00306 ; scanline 0 start vertical sync pulse    
0016                  00307 vsync_start: 
0016   003B           00308     banksel SYNC_PWMDCL
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-18-2016  10:30:19         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0017   3097           00309     movlw (HORZ_PERIOD-HORZ_PULSE)&0xff
0018   00B3           00310     movwf SYNC_PWMDCL
0019   3004           00311     movlw (HORZ_PERIOD-HORZ_PULSE)>>8
001A   00B4           00312     movwf SYNC_PWMDCH
001B   17BF           00313     bsf SYNC_PWMLDCON,LDA
001C   1400           00314     bsf flags, F_VSYNC
001D   3???           00315     bra isr_exit
                      00316 ; scanline 3 end vertical sync pulse
001E                  00317 vsync_end: 
001E   003B           00318     banksel SYNC_PWMDCL
001F   305E           00319     movlw HORZ_PULSE&0xff
0020   00B3           00320     movwf SYNC_PWMDCL
0021   3000           00321     movlw HORZ_PULSE>>8
0022   00B4           00322     movwf SYNC_PWMDCH
0023   17BF           00323     bsf SYNC_PWMLDCON,LDA
0024   1000           00324     bcf flags, F_VSYNC
0025   3???           00325     bra isr_exit
                      00326 ; scan line > 255    
0026                  00327 gt_255:
                      00328 ; check for end of field    
0026   3006           00329     movlw LAST_LINE&0xff
0027   1C80           00330     btfss flags,F_EVEN
0028   3E01           00331     addlw 1
0029   06??           00332     xorwf lcountL,W
002A   1D03           00333     skpz
002B   3???           00334     bra tasks
                      00335 ; end of field
                      00336 ; reset line counter    
002C   01??           00337     clrf lcountL
002D   01??           00338     clrf lcountH
002E   3002           00339     movlw 1<<F_EVEN
002F   06??           00340     xorwf flags,F ; toggle even field flag
0030   0009           00341     retfie
                      00342 ; round robin task scheduler
                      00343 ; each task execute once every 1/60th sec.
                      00344 ; condition:    
                      00345 ;   Task must complete inside
                      00346 ;   horizontal period. i.e. before SYNC_PWM period end
                      00347 ; maximum 6 tasks slots available    
0031                  00348 tasks:
                      00349 ; task selector    
0031   08??           00350     movfw lcountL
0032   1903           00351     skpnz
0033   3???           00352     bra task0
0034   0389           00353     decf WREG
0035   1903           00354     skpnz 
0036   3???           00355     bra task1
0037   0389           00356     decf WREG
0038   1903           00357     skpnz
0039   3???           00358     bra task2
003A   3???           00359     bra isr_exit
003B                  00360 task0:
                      00361 #ifdef SOUND_SUPPORT    
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-18-2016  10:30:19         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00362 ; sound timer    
003B   08??           00363     movfw tone_tmr
003C   1903           00364     skpnz
003D   3???           00365     bra isr_exit
003E   0B??           00366     decfsz tone_tmr,F
003F   3???           00367     bra isr_exit
0040   1280           00368     bcf flags,F_SND
0041   003B           00369     banksel AUDIO_PWMCON
0042   13AB           00370     bcf AUDIO_PWMCON,EN
                      00371 #endif    
0043   3???           00372     bra isr_exit
0044                  00373 task1:   
                      00374 ; game timer    
0044   08??           00375     movf gtimer,F ; 
0045   1903           00376     skpnz
0046   3???           00377     bra isr_exit
0047   0B??           00378     decfsz gtimer,F ; 
0048   3???           00379     bra isr_exit ;
0049   1100           00380     bcf flags, F_GTMR
004A   3???           00381     bra isr_exit ;
004B                  00382 task2:
                      00383 ; rotate lfsr
004B   36??           00384     lsrf randH
004C   0C??           00385     rrf randL
004D   1803           00386     skpnc
004E   30B4           00387     movlw LFSR_TAPS
004F   06??           00388     xorwf randH
0050                  00389 isr_exit:
0050   0A??           00390     incf lcountL
0051   1903           00391     skpnz
0052   0A??           00392     incf lcountH
0053   0009           00393     retfie
                      00394 
                      00395 ;pause
                      00396 ; idle loop in multiple of 1/60 sec.
                      00397 ; input:
                      00398 ;   WREG=delay
                      00399 ; output:
                      00400 ;   none    
0054                  00401 pause: 
0054   00??           00402     movwf gtimer
0055   1500           00403     bsf flags, F_GTMR
0056   1900           00404     btfsc flags, F_GTMR
0057   3???           00405     bra $-1
0058   0008           00406     return
                      00407     
                      00408 ;div10    
                      00409 ; divsion by 10    
                      00410 ; needed to convert binary to BCD
                      00411 ; input:
                      00412 ;   acca dividend  16 bits
                      00413 ; output:
                      00414 ;   acca: quotient
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-18-2016  10:30:19         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00415 ;   accbL: remainder    
0059                  00416 div10:
0059   3011           00417     movlw 17
005A   00??           00418     movwf rcount
005B   01??           00419     clrf accbL
005C                  00420 div10_loop:
005C   300A           00421     movlw 10
005D   02??           00422     subwf accbL,W
005E   1803           00423     skpnc
005F   00??           00424     movwf accbL
0060   0D??           00425     rlf accaL
0061   0D??           00426     rlf accaH
0062   0D??           00427     rlf accbL
0063   0B??           00428     decfsz rcount
0064   3???           00429     bra div10_loop
0065   36??           00430     lsrf accbL
0066   0008           00431     return
                      00432     
                      00433 ;read_pad    
                      00434 ;read game pad
                      00435 ; store value in 'buttons'
                      00436 ; a button is accepted if
                      00437 ; the Vadc value is below its threshold
0067                  00438 read_pad:
0067   01??           00439     clrf buttons
0068   0021           00440     banksel TRISA
0069   160C           00441     bsf TRISA,ADC_PIN
006A   0021           00442     banksel ADCON0
006B   141D           00443     bsf ADCON0,ADON
                      00444     tcyDelay 5*4 ; délais d'acquisition 4µsec
  0000                    M     variable r=5*4%5
  0004                    M     variable q=5*4/5
                          M     while r>1
                          M     bra $+1
                          M r-=2
                          M     endw
                          M     if r==1
                          M     nop
                          M     endif
                          M     if q
006C   3004               M     movlw q
006D   3???               M     bra $+1
006E   0B89               M     decfsz WREG
006F   3???               M     bra $-2
                          M     endif
0070   149D           00445     bsf ADCON0,GO
0071   189D           00446     btfsc ADCON0,NOT_DONE
0072   3???           00447     bra $-1
0073   101D           00448     bcf ADCON0,ADON
                      00449 ; try each button from lower to upper
0074                  00450 try_a:
                      00451     try_button A_THR, try_b
0074   3040               M     movlw A_THR
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-18-2016  10:30:19         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0075   021C               M     subwf ADRESH,W
0076   1803               M     skpnc
0077   3???               M     bra try_b
0078   1600           00452     bsf buttons,BTN_A
0079   3???           00453     bra read_exit
007A                  00454 try_b:    
                      00455     try_button B_THR, try_rt
007A   3095               M     movlw B_THR
007B   021C               M     subwf ADRESH,W
007C   1803               M     skpnc
007D   3???               M     bra try_rt
007E   1680           00456     bsf buttons,BTN_B
007F   3???           00457     bra read_exit
0080                  00458 try_rt:
                      00459     try_button RT_THR, try_up
0080   30B5               M     movlw RT_THR
0081   021C               M     subwf ADRESH,W
0082   1803               M     skpnc
0083   3???               M     bra try_up
0084   1580           00460     bsf buttons,BTN_RT
0085   3???           00461     bra read_exit
0086                  00462 try_up:
                      00463     try_button UP_THR, try_lt
0086   30C6               M     movlw UP_THR
0087   021C               M     subwf ADRESH,W
0088   1803               M     skpnc
0089   3???               M     bra try_lt
008A   1400           00464     bsf buttons,BTN_UP
008B   3???           00465     bra read_exit
008C                  00466 try_lt:
                      00467     try_button LT_THR, try_dn
008C   30D1               M     movlw LT_THR
008D   021C               M     subwf ADRESH,W
008E   1803               M     skpnc
008F   3???               M     bra try_dn
0090   1500           00468     bsf buttons,BTN_LT
0091   3???           00469     bra read_exit
0092                  00470 try_dn:
                      00471     try_button DN_THR, read_exit
0092   30D8               M     movlw DN_THR
0093   021C               M     subwf ADRESH,W
0094   1803               M     skpnc
0095   3???               M     bra read_exit
0096   1480           00472     bsf buttons,BTN_DN
0097                  00473 read_exit:
0097   0021           00474     banksel TRISA
0098   120C           00475     bcf TRISA,ADC_PIN
0099   0008           00476     return
                      00477 
                      00478 #ifdef SOUND_SUPPORT    
                      00479 ; play a tone
                      00480 ; input:
                      00481 ;   t   duration in multiple of 1/60 sec.
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-18-2016  10:30:19         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00482 ;   n   note number
009A                  00483 tone: ; ( t n -- )
009A   0021           00484     banksel TRISA
009B   120C           00485     bcf TRISA,AUDIO_PIN
009C   003B           00486     banksel AUDIO_PWMPRL
009D   3581           00487     lslf T
009E   0801           00488     movfw T
009F   2???           00489     call tone_pr
00A0   00A5           00490     movwf AUDIO_PWMPRL
00A1   3689           00491     lsrf WREG
00A2   00A3           00492     movwf AUDIO_PWMDCL
00A3   0A01           00493     incf T,W
00A4   2???           00494     call tone_pr
00A5   00A6           00495     movwf AUDIO_PWMPRH
00A6   3689           00496     lsrf WREG
00A7   00A4           00497     movwf AUDIO_PWMDCH
00A8   1803           00498     skpnc
00A9   17A3           00499     bsf AUDIO_PWMDCL,7
                      00500     drop  ; n
00AA   317F               M    addfsr SP,-1
                      00501     pop   ; WREG=t
00AB   0017               M     moviw SP--
00AC   00??           00502     movwf tone_tmr
00AD   17AB           00503     bsf AUDIO_PWMCON,EN
00AE   17AF           00504     bsf AUDIO_PWMLDCON,LDA
00AF   1680           00505     bsf flags,F_SND
00B0   0008           00506     return
                      00507 #endif
                      00508     
                      00509 ; set_yptr    
                      00510 ; set FSR0 to point to
                      00511 ; video_buffer line y    
                      00512 ; input:
                      00513 ;   y  line number {0:YZISE-1}
                      00514 ; output:
                      00515 ;   FSR0 point to beginning of line y    
00B1                  00516 set_yptr: ; ( y -- )
00B1   3030           00517     movlw VIDEO_BUFFER&0xff
00B2   0084           00518     movwf FSR0L
00B3   3020           00519     movlw VIDEO_BUFFER>>8
00B4   0085           00520     movwf FSR0H
00B5   3581           00521     lslf T,F
00B6   3501           00522     lslf T,W
00B7   0781           00523     addwf T,F
                      00524     pop
00B8   0017               M     moviw SP--
00B9   0784           00525     addwf FSR0L
00BA   0103           00526     clrw 
00BB   3D85           00527     addwfc FSR0H
00BC   0008           00528     return
                      00529     
                      00530 ;video_serialize
                      00531 ; serialise video pixels to output pin
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-18-2016  10:30:19         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00532 ; use EUSART in synchronous mode    
                      00533 ; called from isr    
                      00534 ; input:
                      00535 ;   none
                      00536 ; output:
                      00537 ;   none    
00BD                  00538 video_serialize: 
                      00539     tcyDelay HORZ_DLY
  0000                    M     variable r=HORZ_DLY%5
  000A                    M     variable q=HORZ_DLY/5
                          M     while r>1
                          M     bra $+1
                          M r-=2
                          M     endw
                          M     if r==1
                          M     nop
                          M     endif
                          M     if q
00BD   300A               M     movlw q
00BE   3???               M     bra $+1
00BF   0B89               M     decfsz WREG
00C0   3???               M     bra $-2
                          M     endif
                      00540 ; save FSR0    
00C1   0804           00541     movfw FSR0L
                      00542     push
00C2   001C               M     movwi ++SP
00C3   0805           00543     movfw FSR0H
                      00544     push
00C4   001C               M     movwi ++SP
00C5   3046           00545     movlw FIRST_VIDEO
00C6   02??           00546     subwf lcountL,W
00C7   3689           00547     lsrf WREG  ; a pixel is 4 scan lines
00C8   3689           00548     lsrf WREG
                      00549     push      ; FSR0L FSR0H y
00C9   001C               M     movwi ++SP
00CA   2???           00550     call set_yptr ; FSR0L FSR0H
                      00551     lit BPL ; FSR0L FSR0H BPL
00CB   3006               M    movlw BPL
00CC   001C               M    movwi ++SP 
00CD   0023           00552     banksel RCSTA
00CE   179D           00553     bsf RCSTA,SPEN
00CF                  00554 byte_serialize:    
00CF   0023           00555     banksel PIXEL_TXREG
00D0   0012           00556     moviw FSR0++
00D1   009A           00557     movwf PIXEL_TXREG
00D2   0020           00558     banksel TX_PIR
00D3   1E11           00559     btfss TX_PIR,TXIF
00D4   3???           00560     bra $-1
00D5   0B81           00561     decfsz T
00D6   3???           00562     bra byte_serialize
                      00563     drop ; discard bytes counter
00D7   317F               M    addfsr SP,-1
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-18-2016  10:30:19         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00D8   0023           00564     banksel PIXEL_TXREG
00D9   019A           00565     clrf PIXEL_TXREG
00DA   0020           00566     banksel TX_PIR
00DB   1E11           00567     btfss TX_PIR,TXIF
00DC   3???           00568     bra $-1
00DD   0023           00569     banksel RCSTA
00DE   139D           00570     bcf RCSTA, SPEN
                      00571 ;restore FSR0    
                      00572     pop
00DF   0017               M     moviw SP--
00E0   0085           00573     movwf FSR0H
                      00574     pop
00E1   0017               M     moviw SP--
00E2   0084           00575     movwf FSR0L
00E3   0008           00576     return
                      00577 
                      00578 ; clear_screen
                      00579 ; set all pixels black
                      00580 ; input:
                      00581 ;   none
                      00582 ; output:
                      00583 ;   none    
00E4                  00584 clear_screen: 
                      00585     lit 0
00E4   3000               M    movlw 0
00E5   001C               M    movwi ++SP 
00E6   2???           00586     call set_yptr
00E7   30C0           00587     movlw BUFFER_SIZE
                      00588     push  ; T=byte count  
00E8   001C               M     movwi ++SP
00E9   3000           00589     movlw 0
00EA                  00590 cls_loop:    
00EA   001A           00591     movwi FSR0++
00EB   0B81           00592     decfsz T
00EC   3???           00593     bra cls_loop
                      00594     drop
00ED   317F               M    addfsr SP,-1
00EE   0008           00595     return
                      00596 
                      00597 ;set_pixel_ptr    
                      00598 ;set FSR0 pointer at byte containing pixel x,y
                      00599 ; input:
                      00600 ;   x,y coordinates of pixel in video_buffer    
                      00601 ; output:
                      00602 ;   WREG = pixel mask  
                      00603 ; NOTE: EUSART output Least Significant Bit first
                      00604 ;       LSB appear left on screen.
00EF                  00605 set_pixel_ptr:  ; ( x y -- )
00EF   2???           00606     call set_yptr
                      00607 ; FSR0+x/8
00F0   3601           00608     lsrf T,W   
00F1   3689           00609     lsrf WREG
00F2   3689           00610     lsrf WREG
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-18-2016  10:30:19         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00F3   0784           00611     addwf FSR0L
00F4   0103           00612     clrw
00F5   3D85           00613     addwfc FSR0H
                      00614 ;create bit mask    
00F6   3007           00615     movlw 7
00F7   0581           00616     andwf T,F ; T=bit position
00F8   3001           00617     movlw 0x1
00F9   1903           00618     skpnz 
00FA   3???           00619     bra mask01 ; least significant bit
00FB                  00620 mask00:
00FB   3589           00621     lslf WREG
00FC   0B81           00622     decfsz T
00FD   3???           00623     bra mask00
00FE                  00624 mask01:
                      00625     drop ; discard shift counter
00FE   317F               M    addfsr SP,-1
00FF   0008           00626     return
                      00627 
                      00628 ; set_pixel
                      00629 ; set x,y pixel to 1
                      00630 ; input:
                      00631 ;   x,y pixel coordinates x{0:XSIZE-1},y{0:YSIZE-1}
                      00632 ; output:
                      00633 ;   none
0100                  00634 set_pixel: ; ( x y -- )
0100   2???           00635     call set_pixel_ptr
0101   0480           00636     iorwf INDF0,F
0102   0008           00637     return
                      00638 
                      00639 ; clear_pixel
                      00640 ; set x,y pixel to 0
                      00641 ; input:
                      00642 ;   x,y pixel coordinates x{0:XSIZE-1},y{0:YSIZE-1}
                      00643 ; output:
                      00644 ;   none
0103                  00645 clear_pixel: ; ( x y -- )
0103   2???           00646     call set_pixel_ptr
0104   0989           00647     comf WREG
0105   0580           00648     andwf INDF0,F
0106   0008           00649     return
                      00650 
                      00651 ; get_pixel    
                      00652 ; return state of pixel
                      00653 ; input:
                      00654 ;   x,y pixel coordinates x{0:XSIZE-1},y{0:YSIZE-1}
                      00655 ; output:
                      00656 ;   WREG=0|2^n  where n{0:7}
                      00657 ;   Z=1 when T==0    
0107                  00658 get_pixel: ; ( x y -- )
0107   2???           00659     call set_pixel_ptr
0108   0500           00660     andwf INDF0,W
0109   0008           00661     return
                      00662     
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-18-2016  10:30:19         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00663 ; xor_pixel
                      00664 ; inverse pixel at x,y coordinates
                      00665 ; input:
                      00666 ;   x,y pixel coordinates x{0:XSIZE-1},y{0:YSIZE-1}
                      00667 ; output:
                      00668 ;   set F_COLL boolean flag if collision
010A                  00669 xor_pixel: ; ( x y -- f )
010A   2???           00670     call set_pixel_ptr
010B   0680           00671     xorwf INDF0,F
010C   0500           00672     andwf INDF0,W
010D   1903           00673     skpnz
010E   1600           00674     bsf flags, F_COLL
010F   0008           00675     return
                      00676 
                      00677 ;xor_row    
                      00678 ; draw row of 4 pixels
                      00679 ; stop when n==0    
                      00680 ; input:
                      00681 ;   {x,y} left coordinates
                      00682 ;   n pixels to draw, 4 bits in high nibble
                      00683 ; output:
                      00684 ;   f=collision flag, return modified value   
                      00685 ; conditions:
                      00686 ;   use 't1' as temporary storage    
                      00687 ; >> no bank dependency << 
0110                  00688 xor_row: ; ( n x y -- )
                      00689 ; check for empty row
                      00690     pick 2 ; check if n==0
0110   3F7E               M     moviw -2[SP]
0111   1903           00691     skpnz
0112   3???           00692     bra xor_row_done ; row empty nothing to do
0113   3589           00693     lslf WREG
                      00694     insert 2  ; save shifted n
0114   3FFE               M    movwi -2[SP]
0115   1C03           00695     skpc
0116   3???           00696     bra xor_row02 ; bit==0 no draw
                      00697 ; bounds check x{0:XSIZE-1}    
                      00698     pick 1  ; WREG=x
0117   3F7F               M     moviw -1[SP]
0118   1B89           00699     btfsc WREG,7 
0119   3???           00700     bra xor_row02 ; x<0 out of screen
                      00701     over ; n x y x 
011A   3F7F               M     moviw -1[SP]
                          M     push
011B   001C               M     movwi ++SP
                      00702     over ; n x y x y
011C   3F7F               M     moviw -1[SP]
                          M     push
011D   001C               M     movwi ++SP
011E   2???           00703     call xor_pixel ; -- n x y
011F                  00704 xor_row02:
                      00705     inc_n 1  ; x+=1
011F   3F7F               M     moviw -1[SP]
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-18-2016  10:30:19         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0120   0A89               M     incf WREG,F
0121   3FFF               M     movwi -1[SP]
0122   3???           00706     bra xor_row
0123                  00707 xor_row_done: ; n x y
                      00708     drop_n 3  ; clean stack
0123   317D               M     addfsr SP,-3
0124   0008           00709     return
                      00710 
                      00711 ;get_flash_word    
                      00712 ; read program memory word
                      00713 ; input:
                      00714 ;   ofs offset in table {0:255}    
                      00715 ;   lo is low byte of program address
                      00716 ;   hi is high byte of program address
                      00717 ; output:
                      00718 ;   PMDATH:PMDAL contain 14 bits data word
                      00719 ; side effect:    
                      00720 ;   set 'nibble' counter 
                      00721 ;   modify BSR    
0125                  00722 get_flash_word: ; ( ofs -- )
0125   0023           00723     banksel PMADR
                      00724     pop
0126   0017               M     moviw SP--
0127   0791           00725     addwf PMADRL,F
0128   0103           00726     clrw 
0129   3D92           00727     addwfc PMADRH,F
012A                  00728 read_flash:    
012A   1315           00729     bcf PMCON1,CFGS
012B   1415           00730     bsf PMCON1, RD
012C   0000           00731     nop
012D   0000           00732     nop
012E   0E14           00733     swapf PMDATH,W
012F   3903           00734     andlw 3
0130   1903           00735     skpnz
0131   3003           00736     movlw 3
0132   00??           00737     movwf nibble
0133   0008           00738     return
                      00739 
                      00740 ;next_flash_word    
                      00741 ; increment PMADR 
                      00742 ; and read next flash word    
                      00743 ; input:
                      00744 ;   none
                      00745 ; output:
                      00746 ;   PMDAT    
                      00747 ; side effect:
                      00748 ;   set 'nibble' counter    
                      00749 ;   modify BSR
0134                  00750 next_flash_word:
0134   0023           00751     banksel PMADR
0135   0A91           00752     incf PMADRL
0136   1903           00753     skpnz
0137   0A92           00754     incf PMADRH
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-18-2016  10:30:19         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0138   3???           00755     bra read_flash
                      00756 
                      00757 ;get_nibble    
                      00758 ;get nibble from PMDAT
                      00759 ; input:
                      00760 ;   none    
                      00761 ; output:
                      00762 ;   T=nibble in bits 7:4
                      00763 ; side effect:    
                      00764 ;   increment 'nibble' variable    
                      00765 ;   modify BSR
0139                  00766 get_nibble: ; ( -- nibble )
0139   08??           00767     movfw nibble
013A   1903           00768     skpnz 
013B   2???           00769     call next_flash_word
                      00770 ;    banksel PMDAT
                      00771 ; select nibble in word    
013C   3A03           00772     xorlw 3
013D   1903           00773     skpnz
013E   3???           00774     bra row0
013F   3A03           00775     xorlw 3
0140   3A02           00776     xorlw 2
0141   1903           00777     skpnz
0142   3???           00778     bra row1
0143                  00779 row2:
0143   0E13           00780     swapf PMDATL,W
0144   3???           00781     bra nibble_mask
0145                  00782 row1:    
0145   0813           00783     movfw PMDATL
0146   3???           00784     bra nibble_mask
0147                  00785 row0:    
0147   0E14           00786     swapf PMDATH,W
0148                  00787 nibble_mask:
0148   39F0           00788     andlw 0xf0
                      00789     push
0149   001C               M     movwi ++SP
014A   03??           00790     decf nibble,F ; advance nibble counter
014B   0008           00791     return
                      00792 
                      00793 ;bitmap
                      00794 ; apply a bitmap from program memory to video_buffer
                      00795 ; a bitmap is 4 pixels wide and any number of rows    
                      00796 ; input:
                      00797 ;   PMADR  point to table in program memory    
                      00798 ;   x,y  left/top coordinates in video_buffer
                      00799 ;   ofs  offset of bitmap in table
                      00800 ; output:
                      00801 ;   none
014C                  00802 bitmap: ; ( x y ofs -- )
014C   2???           00803     call get_flash_word  ; x y ofs -- x y 
014D                  00804 bmp00:
014D   08??           00805     movfw nibble
                      00806     push    ; x y cntr
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-18-2016  10:30:19         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

014E   001C               M     movwi ++SP
014F                  00807 bmp02:    
014F   2???           00808     call get_nibble ; x y cntr -- x y cntr n 
                      00809     pick 3 ; x
0150   3F7D               M     moviw -3[SP]
                      00810     push    ; x y cntr n x
0151   001C               M     movwi ++SP
                      00811     pick 3  ; y
0152   3F7D               M     moviw -3[SP]
                      00812     push      ; x y cntr n x y
0153   001C               M     movwi ++SP
0154   2???           00813     call xor_row ; x y cntr n x y -- x y cntr
                      00814     inc_n 1 ; y+=1
0155   3F7F               M     moviw -1[SP]
0156   0A89               M     incf WREG,F
0157   3FFF               M     movwi -1[SP]
0158   0B81           00815     decfsz T
0159   3???           00816     bra bmp02
                      00817 ;    banksel PMDAT
015A   0E14           00818     swapf PMDATH,W
015B   3903           00819     andlw 3
015C   1903           00820     skpnz
015D   3???           00821     bra bmp01
                      00822     drop_n 3  ; clean stack
015E   317D               M     addfsr SP,-3
015F   0008           00823     return
0160                  00824 bmp01:
                      00825     drop  ; x y 
0160   317F               M    addfsr SP,-1
0161   2???           00826     call next_flash_word
0162   3???           00827     bra bmp00
                      00828     
                      00829 ;print_char     
                      00830 ; draw character in video_buffer 
                      00831 ; input:
                      00832 ;   x,y left/top coordinates
                      00833 ;   c   character to print 
                      00834 ; output:
                      00835 ;   none    
0163                  00836 print_char: ; ( x y c -- )
0163   3581           00837     lslf T ; 2 words per table entry
0164   0023           00838     banksel PMADR
0165   30??           00839     movlw low(digits)
0166   0091           00840     movwf PMADRL
0167   30??           00841     movlw high(digits)
0168   0092           00842     movwf PMADRH
0169   2???           00843     call bitmap ; x y ofs -- 
016A   0008           00844     return
                      00845 
                      00846 ;print_tetrim    
                      00847 ; print current tetriminos
                      00848 ; input:
                      00849 ;   none
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-18-2016  10:30:19         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00850 ; use game variables   
                      00851 ;   titrim: tetriminos id
                      00852 ;   angle: rotation angle    
                      00853 ;   tx,ty  left/top coordinates
                      00854 ; output:
                      00855 ;   f boolean collision flag   
                      00856 ; side effect:    
                      00857 ;   modify BSR
016B                  00858 print_tetrim: ; ( -- f )
016B   1200           00859     bcf flags, F_COLL
016C   0020           00860     banksel GAME_VAR
016D   08??           00861     movfw tx
                      00862     push    ; -- x
016E   001C               M     movwi ++SP
016F   08??           00863     movfw ty
                      00864     push    ; -- x y 
0170   001C               M     movwi ++SP
0171   08??           00865     movfw angle
                      00866     push    ; -- x y a
0172   001C               M     movwi ++SP
0173   35??           00867     lslf tetrim,W   ; 4 words per table entry, one for each angle
0174   3589           00868     lslf WREG
0175   3A18           00869     xorlw 24
0176   1903           00870     skpnz
0177   3581           00871     lslf T,F
0178   3A18           00872     xorlw 24
0179   0781           00873     addwf T,F  ; x y ofs
017A   0023           00874     banksel PMADR
017B   30??           00875     movlw low(tetriminos)
017C   0091           00876     movwf PMADRL
017D   30??           00877     movlw high(tetriminos)
017E   0092           00878     movwf PMADRH
017F   2???           00879     call bitmap
                      00880     lit 0
0180   3000               M    movlw 0
0181   001C               M    movwi ++SP 
0182   1A00           00881     btfsc flags, F_COLL
0183   0A81           00882     incf T,F
0184   0008           00883     return
                      00884 
                      00885 ;print_label    
                      00886 ;print a text line stored in program memory
                      00887 ; text terminated by 255
                      00888 ; input: 
                      00889 ;  x,y left coordinates
                      00890 ;  PCLH= high(table)
                      00891 ;  T=low(table) 
                      00892 ; output:
                      00893 ;   none
0185                  00894 print_label: ; ( x y tableL -- )
0185   0801           00895     movfw T     ; WREG= labelL
0186   000A           00896     callw      
0187   1B89           00897     btfsc WREG,7
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-18-2016  10:30:19         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0188   3???           00898     bra prt_lbl_done
                      00899     push ; x y labelL c
0189   001C               M     movwi ++SP
                      00900     pick 3  ; WREG=x
018A   3F7D               M     moviw -3[SP]
                      00901     push    ; x y labelL c x 
018B   001C               M     movwi ++SP
                      00902     pick 3  ; WREG=y
018C   3F7D               M     moviw -3[SP]
                      00903     push    ; x y labelL c x y
018D   001C               M     movwi ++SP
                      00904     pick 2  ; WREG = c
018E   3F7E               M     moviw -2[SP]
                      00905     push    ; x y labelL c x y c
018F   001C               M     movwi ++SP
0190   2???           00906     call print_char ; x y labelL c x y c -- x y labelL c
                      00907     drop    ; x y labelL
0191   317F               M    addfsr SP,-1
0192   3001           00908     movlw 1
0193   0781           00909     addwf T,F ; advance to next character in table
0194   0103           00910     clrw
0195   3D8A           00911     addwfc PCLATH,F
                      00912     pick 2    ; x
0196   3F7E               M     moviw -2[SP]
0197   3E04           00913     addlw 4   ; x+=4
                      00914     insert 2  
0198   3FFE               M    movwi -2[SP]
0199   3???           00915     bra print_label
019A                  00916 prt_lbl_done:
                      00917     drop_n 3
019A   317D               M     addfsr SP,-3
019B   0008           00918     return
                      00919     
                      00920 ;print_int
                      00921 ;print an integer
                      00922 ;from right to left ( least significant digit first)
                      00923 ; input:    
                      00924 ;   y  line number 
                      00925 ;   number to print in acca    
                      00926 ; output:
                      00927 ;   none
                      00928 ; condition:    
                      00929 ;   accbL contain digit after div10 call    
019C                  00930 print_int: ; ( y -- )
                      00931     dup     ; y y
019C   0801               M     movfw T
019D   001C               M     movwi ++SP
019E   302B           00932     movlw XSIZE-5
                      00933     insert 1    ; x y
019F   3FFF               M    movwi -1[SP]
01A0                  00934 print_int00:    
01A0   08??           00935     movfw accaH
01A1   04??           00936     iorwf accaL,W
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-18-2016  10:30:19         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01A2   1903           00937     skpnz
01A3   3???           00938     bra print_last
                      00939     over    ; x y x 
01A4   3F7F               M     moviw -1[SP]
                          M     push
01A5   001C               M     movwi ++SP
                      00940     over    ; x y x y
01A6   3F7F               M     moviw -1[SP]
                          M     push
01A7   001C               M     movwi ++SP
01A8   2???           00941     call div10
01A9   08??           00942     movfw accbL ; remainder of division
                      00943     push   ; x y x y d
01AA   001C               M     movwi ++SP
01AB   2???           00944     call print_char ; -- x y 
                      00945     pick 1  ; x
01AC   3F7F               M     moviw -1[SP]
                      00946     push    ; x y x
01AD   001C               M     movwi ++SP
01AE   3004           00947     movlw 4
01AF   0281           00948     subwf T,F ; x y x-4  next position in video_buffer
                      00949     pop
01B0   0017               M     moviw SP--
                      00950     insert 1  ; save that x position
01B1   3FFF               M    movwi -1[SP]
01B2   3???           00951     bra print_int00
01B3                  00952 print_last:
                      00953     pick 1  ; x 
01B3   3F7F               M     moviw -1[SP]
01B4   3A2B           00954     xorlw XSIZE-5 ; x at right margin?
01B5   1D03           00955     skpz
01B6   3???           00956     bra no_zero
                      00957     push          ; yes print a zero
01B7   001C               M     movwi ++SP
01B8   3???           00958     bra print_char
01B9                  00959 no_zero:
                      00960     drop_n 2
01B9   317E               M     addfsr SP,-2
01BA   0008           00961     return
                      00962     
                      00963 ; draw horizontal line ( length  y x -- )
                      00964 ; inputs:
                      00965 ;   length of line
                      00966 ;   {x,y} left coordinates 
                      00967 ; output:
                      00968 ;   none    
01BB                  00969 hline:
                      00970     pick 2  ; length
01BB   3F7E               M     moviw -2[SP]
01BC   1903           00971     skpnz
01BD   3???           00972     bra hline_done  ; length=0
01BE   0389           00973     decf WREG
                      00974     insert 2  ; decrement length
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-18-2016  10:30:19         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01BF   3FFE               M    movwi -2[SP]
                      00975     dup     ; len y x x
01C0   0801               M     movfw T
01C1   001C               M     movwi ++SP
                      00976     pick 2  ; y
01C2   3F7E               M     moviw -2[SP]
                      00977     push    ; len y x x y
01C3   001C               M     movwi ++SP
01C4   2???           00978     call xor_pixel
01C5   0A81           00979     incf T  ; len y x+1
01C6   3???           00980     bra hline
01C7                  00981 hline_done:    
                      00982     drop_n 3
01C7   317D               M     addfsr SP,-3
01C8   0008           00983     return
                      00984 
                      00985 ; vline    
                      00986 ;draw vertical line ( length x y -- )
                      00987 ; inputs:
                      00988 ;   length of line
                      00989 ;   {x,y} top coordinates
                      00990 ; output:
                      00991 ;   none    
01C9                  00992 vline:  ; ( len x y -- ) 
                      00993     pick 2 ; len
01C9   3F7E               M     moviw -2[SP]
01CA   1903           00994     skpnz
01CB   3???           00995     bra vline_done ; len=0
01CC   0389           00996     decf WREG
                      00997     insert 2  ; decrement len
01CD   3FFE               M    movwi -2[SP]
                      00998     over     ; l x y x
01CE   3F7F               M     moviw -1[SP]
                          M     push
01CF   001C               M     movwi ++SP
                      00999     over     ; l x y x y    
01D0   3F7F               M     moviw -1[SP]
                          M     push
01D1   001C               M     movwi ++SP
01D2   2???           01000     call xor_pixel ; -- l x y
01D3   0A81           01001     incf T,F    ; y+=1
01D4   3???           01002     bra vline
01D5                  01003 vline_done:
                      01004     drop_n 3
01D5   317D               M     addfsr SP,-3
01D6   0008           01005     return
                      01006     
                      01007 ; drop 1 row
                      01008 ; input:
                      01009 ;   r  row to drop
                      01010 ; output:
                      01011 ;   none
01D7                  01012 drop1: ; ( r -- )
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-18-2016  10:30:19         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01013     reserve 1 ; r x  
01D7   3141               M     addfsr SP, 1 
01D8                  01014 row_loop: ; y{r:1}
01D8   300A           01015     movlw 10
01D9   0081           01016     movwf T ; -- r x
01DA                  01017 col_loop:  ; x{10:1}
                      01018     dup   ; -- r x x
01DA   0801               M     movfw T
01DB   001C               M     movwi ++SP
                      01019     pick 2
01DC   3F7E               M     moviw -2[SP]
01DD   0389           01020     decf WREG
                      01021     push  ; -- r x x r-1
01DE   001C               M     movwi ++SP
01DF   2???           01022     call get_pixel ; -- r x p
01E0   00??           01023     movwf t0
                      01024     dup         ; r x x
01E1   0801               M     movfw T
01E2   001C               M     movwi ++SP
                      01025     pick 2
01E3   3F7E               M     moviw -2[SP]
                      01026     push        ; r x x r
01E4   001C               M     movwi ++SP
01E5   08??           01027     movf t0,F
01E6   1D03           01028     skpz
01E7   3???           01029     bra drop00
01E8   2???           01030     call clear_pixel ;  r x x r -- r x
01E9   3???           01031     bra next_pixel
01EA                  01032 drop00:
01EA   2???           01033     call set_pixel ; r x x r -- r x
01EB                  01034 next_pixel:    
01EB   0B81           01035     decfsz T    ; r x-1 
01EC   3???           01036     bra col_loop
                      01037     dec_n 1  ; dec r
01ED   3F7F               M     moviw -1[SP]
01EE   0389               M     decf WREG,F
01EF   3FFF               M     movwi -1[SP]
01F0   1D03           01038     skpz 
01F1   3???           01039     bra row_loop
                      01040     drop_n 2
01F2   317E               M     addfsr SP,-2
01F3   0008           01041     return
                      01042     
                      01043     
  00000000            01044 ROW_EMPTY equ 0     
  0000000A            01045 ROW_FULL equ 10 ; 10 bits in row
                      01046 ; query_row 
                      01047 ; check the state of well row
                      01048 ; input:
                      01049 ;   s number of bits set initialized at 0 by caller    
                      01050 ;   r row number: 0 top, 21 bottom  
                      01051 ; output:    
                      01052 ;   s={0:10}  number of bits set
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-18-2016  10:30:19         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01F4                  01053 query_row: ; ( s=0 r -- s=0:10 )
                      01054     lit 10 ; s r x   ; check x from  10 to 1
01F4   300A               M    movlw 10
01F5   001C               M    movwi ++SP 
01F6                  01055 qr00:
                      01056     dup   ; s r x x
01F6   0801               M     movfw T
01F7   001C               M     movwi ++SP
                      01057     pick 2 
01F8   3F7E               M     moviw -2[SP]
                      01058     push  ; s r x x y
01F9   001C               M     movwi ++SP
01FA   2???           01059     call get_pixel ; -- s r x
01FB   1903           01060     skpnz   ; Z modified by get_pixel
01FC   3???           01061     bra qr01
                      01062     inc_n 2
01FD   3F7E               M     moviw -2[SP]
01FE   0A89               M     incf WREG,F
01FF   3FFE               M     movwi -2[SP]
0200                  01063 qr01:    
0200   0B81           01064     decfsz T
0201   3???           01065     bra qr00
                      01066     drop_n 2 ; -- s
0202   317E               M     addfsr SP,-2
0203   0008           01067     return
                      01068 
                      01069 ; count and drop full rows
                      01070 ; input:
                      01071 ;   none
                      01072 ; output:
                      01073 ;   n number of droppend rows
                      01074 ;condition:
                      01075 ;  check each row from bottom up
                      01076 ;  stop at first empty row
                      01077 ;  full rows are dropped    
0204                  01078 count_full: ; ( -- n)
                      01079     lit 0 ; full rows counter
0204   3000               M    movlw 0
0205   001C               M    movwi ++SP 
                      01080     lit 21 ; row number {21:1}
0206   3015               M    movlw 21
0207   001C               M    movwi ++SP 
0208                  01081 count_loop:
                      01082     lit 0   ; n r s  number of bits set
0208   3000               M    movlw 0
0209   001C               M    movwi ++SP 
                      01083     over    ; n r s r
020A   3F7F               M     moviw -1[SP]
                          M     push
020B   001C               M     movwi ++SP
020C   2???           01084     call query_row ; n r s r -- n r s
                      01085     pop     ; n r
020D   0017               M     moviw SP--
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-18-2016  10:30:19         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

020E   1903           01086     skpnz
020F   3???           01087     bra count_done
0210   3A0A           01088     xorlw ROW_FULL
0211   1D03           01089     skpz
0212   3???           01090     bra next_row
                      01091 ; this is a full row    
                      01092     inc_n 1 ; increment n
0213   3F7F               M     moviw -1[SP]
0214   0A89               M     incf WREG,F
0215   3FFF               M     movwi -1[SP]
                      01093     dup    ; n r r
0216   0801               M     movfw T
0217   001C               M     movwi ++SP
0218   2???           01094     call drop1 ; n r r -- n r
0219   0A81           01095     incf T,F
021A                  01096 next_row:
021A   0B81           01097     decfsz T,F
021B   3???           01098     bra count_loop
021C                  01099 count_done:
                      01100     drop   ; n r -- n
021C   317F               M    addfsr SP,-1
021D   0008           01101     return
                      01102 
                      01103 ;new_tminos    
                      01104 ; generate a new tetriminos
                      01105 ; input:
                      01106 ;   none
                      01107 ; output:
                      01108 ;   none
021E                  01109 new_tminos:
021E   0020           01110     banksel GAME_VAR
021F   3007           01111     movlw 7
0220   05??           01112     andwf randL,W
0221   3A07           01113     xorlw 7
0222   1D03           01114     skpz
0223   3A07           01115     xorlw 7
0224   00??           01116     movwf tetrim
0225   3003           01117     movlw 3
0226   05??           01118     andwf randH,W
0227   00??           01119     movwf angle
0228   3004           01120     movlw 4
0229   00??           01121     movwf tx
022A   01??           01122     clrf ty
022B   2???           01123     call coll_test
022C   1D03           01124     skpz
022D   1580           01125     bsf flags, F_GSTOP
022E   0008           01126     return
                      01127 
                      01128 ;wait_start    
                      01129 ; wait player start signal
                      01130 ; button A pressed    
                      01131 ; input:
                      01132 ;   none
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-18-2016  10:30:19         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01133 ; output:
                      01134 ;   none
022F                  01135 wait_start:
                      01136 #ifdef SOUND_SUPPORT    
022F   0103           01137     clrw
0230   2???           01138     call korobeiniki
                      01139     push    ; count
0231   001C               M     movwi ++SP
                      01140     lit 0   ; sequence
0232   3000               M    movlw 0
0233   001C               M    movwi ++SP 
0234                  01141 koro:
0234   1B00           01142     btfsc flags, F_NO_SND
0235   3???           01143     bra no_sound
0236   0A81           01144     incf T,F ; -- count sequence
0237   0801           01145     movfw T  ; WREG=sequence
0238   2???           01146     call korobeiniki
                      01147     push    ; -- count sequence duration
0239   001C               M     movwi ++SP
                      01148     inc_n 1 ;
023A   3F7F               M     moviw -1[SP]
023B   0A89               M     incf WREG,F
023C   3FFF               M     movwi -1[SP]
                      01149     pick 1  
023D   3F7F               M     moviw -1[SP]
023E   2???           01150     call korobeiniki
                      01151     push    ; -- count nidx duration note
023F   001C               M     movwi ++SP
0240   2???           01152     call tone  ; -- count nidx 
                      01153     wait_sound
0241   1A80               M     btfsc flags,F_SND
0242   3???               M     bra $-1
0243                  01154 no_sound:    
0243   2???           01155     call read_pad
0244   1A00           01156     btfsc buttons, BTN_A
0245   3???           01157     bra wait_end
0246   1A80           01158     btfsc buttons, BTN_B
0247   1700           01159     bsf flags, F_NO_SND
                      01160     dec_n 1
0248   3F7F               M     moviw -1[SP]
0249   0389               M     decf WREG,F
024A   3FFF               M     movwi -1[SP]
024B   1D03           01161     skpz
024C   3???           01162     bra koro
                      01163     drop_n 2
024D   317E               M     addfsr SP,-2
024E   303C           01164     movlw 60
024F   2???           01165     call pause
0250   3???           01166     bra wait_start
0251                  01167 wait_end:    
                      01168     drop_n 2
0251   317E               M     addfsr SP,-2
                      01169 #else
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-18-2016  10:30:19         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01170     movlw 20
                      01171     call pause
                      01172     call read_pad
                      01173     btfss buttons, BTN_A
                      01174     bra wait_start
                      01175 #endif    
0252   2???           01176     call clear_score
0253   1180           01177     bcf flags, F_GSTOP
0254   0008           01178     return
                      01179  
0255                  01180 clear_score:
0255   0020           01181     banksel GAME_VAR
0256   01??           01182     clrf scoreL
0257   01??           01183     clrf scoreH
0258   01??           01184     clrf droppedL
0259   01??           01185     clrf droppedH
025A   0008           01186     return
                      01187     
                      01188 ;coll_test
                      01189 ; collision test
                      01190 ; after rotation or translation
                      01191 ; undo last action if collision    
                      01192 ; input:
                      01193 ;   none
                      01194 ; output:
                      01195 ;   WREG=f collision flag 0|1
                      01196 ;   Z==0 no collision    
025B                  01197 coll_test: 
025B   2???           01198     call print_tetrim ; -- f
025C   2???           01199     call print_tetrim ; -- f f
                      01200     drop
025D   317F               M    addfsr SP,-1
025E   0020           01201     banksel GAME_VAR
                      01202     pop
025F   0017               M     moviw SP--
0260   0008           01203     return
                      01204 
                      01205 ;update_display    
                      01206 ; print 'score' and 'dropped' values
                      01207 ; input:
                      01208 ;   none
                      01209 ; output:
                      01210 ;   none
0261                  01211 update_display:    
                      01212 ; print score
0261   0020           01213     banksel GAME_VAR
0262   08??           01214     movfw scoreL
0263   00??           01215     movwf accaL
0264   08??           01216     movfw scoreH
0265   00??           01217     movwf accaH
                      01218     lit 6
0266   3006               M    movlw 6
0267   001C               M    movwi ++SP 
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-18-2016  10:30:19         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0268   2???           01219     call print_int
                      01220 ;print dropped line
0269   0020           01221     banksel GAME_VAR
026A   08??           01222     movfw droppedL
026B   00??           01223     movwf accaL
026C   08??           01224     movfw droppedH
026D   00??           01225     movwf accaH
                      01226     lit 18
026E   3012               M    movlw 18
026F   001C               M    movwi ++SP 
0270   2???           01227     call print_int
0271   0008           01228     return
                      01229 
                      01230 ;prompt
                      01231 ; print prompt message    
0272                  01232 prompt:
                      01233     lit 0
0272   3000               M    movlw 0
0273   001C               M    movwi ++SP 
                      01234     lit 24
0274   3018               M    movlw 24
0275   001C               M    movwi ++SP 
0276   31??           01235     movlp high(lbl_press)
                      01236     lit low(lbl_press)
0277   30??               M    movlw low(lbl_press)
0278   001C               M    movwi ++SP 
0279   2???           01237     call print_label
027A   0008           01238     return
                      01239     
                      01240 ;;;;;;;;;;;;;;;;;;;;;;;;;;
                      01241 ; hardware initialization
                      01242 ;;;;;;;;;;;;;;;;;;;;;;;;;;    
027B                  01243 init:
                      01244 ; parameter stack initialization    
027B   0187           01245     clrf FSR1H
027C   301F           01246     movlw S0
027D   0086           01247     movwf FSR1L
                      01248 ; ADC configuration
027E   0021           01249     banksel ADCON0
027F   300C           01250     movlw (PAD_CHS<<CHS0)
0280   009D           01251     movwf ADCON0
0281   3020           01252     movlw (2<<ADCS0)
0282   009E           01253     movwf ADCON1
0283   0024           01254     banksel WPUA
0284   120C           01255     bcf WPUA, PAD_PIN
                      01256 ;;;;;;;;;;;;;;;;;;;;;    
0285   0021           01257     banksel TRISA
0286   30F8           01258     movlw ~((1<<SYNC_OUT)|(1<<VIDEO_OUT)|(1<<LED_PIN))
0287   058C           01259     andwf TRISA,F
0288   0022           01260     banksel VIDEO_LAT
0289   108C           01261     bcf VIDEO_LAT,VIDEO_OUT
028A   100C           01262     bcf LATA,LED_PIN
                      01263 #ifdef SOUND_SUPPORT    
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-18-2016  10:30:19         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01264 ; audio pwm initialization
028B   120C           01265     bcf LATA,AUDIO_PIN
028C   003B           01266     banksel PWM2PH
028D   01A1           01267     clrf PWM2PHL
028E   01A2           01268     clrf PWM2PHH
028F   01A7           01269     clrf PWM2OFL
0290   01A8           01270     clrf PWM2OFH
0291   172B           01271     bsf AUDIO_PWMCON,OE
0292   0022           01272     banksel APFCON
0293   149D           01273     bsf APFCON,P2SEL
                      01274 #endif   
                      01275 ;configure EUSART in sychronsous mode
                      01276 ;to use as pixel serializer
0294   0023           01277     banksel SPBRG
0295   3002           01278     movlw 2
0296   009B           01279     movwf SPBRGL
0297   019C           01280     clrf SPBRGH
0298   019A           01281     clrf TXREG
0299   30B0           01282     movlw (1<<SYNC)|(1<<CSRC)|(1<<TXEN)
029A   009E           01283     movwf TXSTA
029B   179D           01284     bsf RCSTA, SPEN
029C   30CF           01285     movlw ~((1<<CREN)|(1<<SREN))
029D   059D           01286     andwf RCSTA
                      01287 ; configure pwm video sync for horizontal period
029E   003B           01288     banksel SYNC_PWMDCH
029F   01B1           01289     clrf SYNC_PWMPH
02A0   01B2           01290     clrf SYNC_PWMPH+1
02A1   01BF           01291     clrf SYNC_PWMLDCON
02A2   30F5           01292     movlw HORZ_PERIOD&0XFF
02A3   00B5           01293     movwf SYNC_PWMPRL
02A4   3004           01294     movlw HORZ_PERIOD>>8
02A5   00B6           01295     movwf SYNC_PWMPRH
02A6   01BE           01296     clrf SYNC_PWMCLKCON
02A7   30D0           01297     movlw (3<<OE)|(1<<POL)
02A8   00BB           01298     movwf SYNC_PWMCON
02A9   305E           01299     movlw HORZ_PULSE&0xff
02AA   00B3           01300     movwf SYNC_PWMDCL
02AB   3000           01301     movlw HORZ_PULSE>>8
02AC   00B4           01302     movwf SYNC_PWMDCH
02AD   17BF           01303     bsf SYNC_PWMLDCON,LDA
                      01304    ;enable video interrupt on period match
02AE   103D           01305     bcf SYNC_PWMINTF,PRIF
02AF   143C           01306     bsf SYNC_PWMINTE,PRIE
                      01307     ; enable peripheral interrupt
02B0   0021           01308     banksel SYNC_PIE
02B1   1713           01309     bsf SYNC_PIE,SYNC_IE
                      01310     ;enable interrupts
02B2   30C0           01311     movlw (1<<GIE)|(1<<PEIE)
02B3   008B           01312     movwf INTCON
02B4   01??           01313     clrf lcountL
02B5   01??           01314     clrf lcountH
02B6   01??           01315     clrf flags
                      01316     ; seed lfsr PRNG
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-18-2016  10:30:19         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02B7   30AC           01317     movlw 0xAC
02B8   00??           01318     movwf randL
02B9   30E1           01319     movlw 0xE1
02BA   00??           01320     movwf randH
                      01321 ;;;;;;;;;;;;;;;;;;;;;
                      01322 ; game initialization
                      01323 ;;;;;;;;;;;;;;;;;;;;;    
  0000000A            01324 WELL_WIDTH equ 10
  00000016            01325 WELL_DEPTH equ 22 
02BB                  01326 game_init:
02BB   2???           01327     call clear_screen
                      01328 ; draw game well
02BC   3016           01329     movlw WELL_DEPTH
                      01330     push
02BD   001C               M     movwi ++SP
                      01331     push  ; len len
02BE   001C               M     movwi ++SP
02BF   0103           01332     clrw
                      01333     push
02C0   001C               M     movwi ++SP
                      01334     push  ; len len x=0, y=0
02C1   001C               M     movwi ++SP
02C2   2???           01335     call vline ; -- len 
                      01336     lit WELL_WIDTH+1 ; len x
02C3   300B               M    movlw WELL_WIDTH+1
02C4   001C               M    movwi ++SP 
                      01337     lit 0            ; len x y
02C5   3000               M    movlw 0
02C6   001C               M    movwi ++SP 
02C7   2???           01338     call vline
                      01339     lit WELL_WIDTH+2
02C8   300C               M    movlw WELL_WIDTH+2
02C9   001C               M    movwi ++SP 
                      01340     lit WELL_DEPTH
02CA   3016               M    movlw WELL_DEPTH
02CB   001C               M    movwi ++SP 
                      01341     lit 0
02CC   3000               M    movlw 0
02CD   001C               M    movwi ++SP 
02CE   2???           01342     call hline
                      01343 ; print "SCORE" label    
                      01344     lit WELL_WIDTH+3 ; x
02CF   300D               M    movlw WELL_WIDTH+3
02D0   001C               M    movwi ++SP 
                      01345     lit 0            ; y
02D1   3000               M    movlw 0
02D2   001C               M    movwi ++SP 
02D3   31??           01346     movlp high(lbl_score)
                      01347     lit low(lbl_score)  
02D4   30??               M    movlw low(lbl_score)
02D5   001C               M    movwi ++SP 
02D6   2???           01348     call print_label
                      01349 ; print "LINES" label    
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-18-2016  10:30:19         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01350     lit WELL_WIDTH+3 ; x
02D7   300D               M    movlw WELL_WIDTH+3
02D8   001C               M    movwi ++SP 
                      01351     lit 12           ; y
02D9   300C               M    movlw 12
02DA   001C               M    movwi ++SP 
02DB   31??           01352     movlp high(lbl_lines)
                      01353     lit low(lbl_lines)
02DC   30??               M    movlw low(lbl_lines)
02DD   001C               M    movwi ++SP 
02DE   2???           01354     call print_label
                      01355 ; variables initialization
02DF   1580           01356     bsf flags,F_GSTOP
02E0   2???           01357     call clear_score
                      01358 ;;;;;;;;;;;;;;;;;;;;;;;;;
                      01359 ;   game logic
                      01360 ;;;;;;;;;;;;;;;;;;;;;;;;;    
02E1                  01361 tetris:
02E1   2???           01362     call update_display
                      01363 ;print start prompt
02E2   2???           01364     call prompt
                      01365 ; wait button A press
                      01366 ; to start game    
02E3   2???           01367     call wait_start 
                      01368 ; delete prompt
02E4   2???           01369     call prompt
                      01370 ; game start here
02E5                  01371 game_loop:
                      01372 ; generate new tetriminos
                      01373 ; if collision at this stage
                      01374 ; game is over
02E5   2???           01375     call new_tminos
02E6   1D80           01376     btfss flags, F_GSTOP
02E7   3???           01377     bra fall_loop
                      01378 ; game_over
02E8                  01379 game_over:
                      01380     lit 10
02E8   300A               M    movlw 10
02E9   001C               M    movwi ++SP 
                      01381     lit 0
02EA   3000               M    movlw 0
02EB   001C               M    movwi ++SP 
02EC                  01382 clr00:    
                      01383     over
02EC   3F7F               M     moviw -1[SP]
                          M     push
02ED   001C               M     movwi ++SP
                      01384     over
02EE   3F7F               M     moviw -1[SP]
                          M     push
02EF   001C               M     movwi ++SP
02F0   2???           01385     call clear_pixel ; x y x y -- x y
                      01386     dec_n 1 ; x-=1
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-18-2016  10:30:19         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02F1   3F7F               M     moviw -1[SP]
02F2   0389               M     decf WREG,F
02F3   3FFF               M     movwi -1[SP]
02F4   1D03           01387     skpz
02F5   3???           01388     bra clr00
02F6   3015           01389     movlw 21
02F7   0081           01390     movwf T
                      01391     insert 1  ; counter 21
02F8   3FFF               M    movwi -1[SP]
02F9                  01392 drop21:
                      01393     dup    ; counter 21 21
02F9   0801               M     movfw T
02FA   001C               M     movwi ++SP
02FB   2???           01394     call drop1 ; -- counter 21
02FC   3006           01395     movlw 6
02FD   2???           01396     call pause
                      01397     pick 1
02FE   3F7F               M     moviw -1[SP]
02FF   0389           01398     decf WREG
                      01399     insert 1  ; -- counter-1 21
0300   3FFF               M    movwi -1[SP]
0301   1D03           01400     skpz
0302   3???           01401     bra drop21
                      01402     drop_n 2
0303   317E               M     addfsr SP,-2
0304   3???           01403     bra game_init
                      01404 ; tetriminos fall in the well    
0305                  01405 fall_loop: 
0305   2???           01406     call print_tetrim
                      01407     pop
0306   0017               M     moviw SP--
0307   300A           01408     movlw 10
0308   2???           01409     call pause
0309   2???           01410     call print_tetrim ; erase tetriminos
                      01411     pop
030A   0017               M     moviw SP--
                      01412 ; read pad
030B   2???           01413     call read_pad
030C   0020           01414     banksel GAME_VAR
                      01415     case BTN_B, drop_tetrim
030D   1A80               M     btfsc buttons,BTN_B
030E   3???               M     bra drop_tetrim
                      01416     case BTN_UP, rot_right
030F   1800               M     btfsc buttons,BTN_UP
0310   3???               M     bra rot_right
                      01417     case BTN_DN, rot_left
0311   1880               M     btfsc buttons,BTN_DN
0312   3???               M     bra rot_left
                      01418     case BTN_RT, move_right
0313   1980               M     btfsc buttons,BTN_RT
0314   3???               M     bra move_right
                      01419     case BTN_LT, move_left
0315   1900               M     btfsc buttons,BTN_LT
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-18-2016  10:30:19         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0316   3???               M     bra move_left
0317   3???           01420     bra move_down
0318                  01421 drop_tetrim:
0318   0020           01422     banksel GAME_VAR
0319   0A??           01423     incf ty,F
031A   2???           01424     call coll_test
031B   1903           01425     skpnz
031C   3???           01426     bra drop_tetrim
031D   03??           01427     decf ty,F
031E   3???           01428     bra score_update
031F                  01429 rot_left:
031F   03??           01430     decf angle,F
0320   3003           01431     movlw 3
0321   05??           01432     andwf angle,F
0322   2???           01433     call coll_test
0323   1D03           01434     skpz
0324   0A??           01435     incf angle,F
0325   3003           01436     movlw 3
0326   05??           01437     andwf angle,F
0327   3???           01438     bra move_down
0328                  01439 rot_right:
0328   0A??           01440     incf angle,F
0329   3003           01441     movlw 3
032A   05??           01442     andwf angle,F
032B   2???           01443     call coll_test
032C   1D03           01444     skpz
032D   03??           01445     decf angle,F
032E   3003           01446     movlw 3
032F   05??           01447     andwf angle,F
0330   3???           01448     bra move_down
0331                  01449 move_left:
0331   03??           01450     decf tx,F
0332   2???           01451     call coll_test
0333   1D03           01452     skpz
0334   0A??           01453     incf tx,F
0335   3???           01454     bra move_down
0336                  01455 move_right:
0336   0A??           01456     incf tx,F
0337   2???           01457     call coll_test
0338   1D03           01458     skpz
0339   03??           01459     decf tx,F
                      01460 ; move down
033A                  01461 move_down:
                      01462 ;    banksel GAME_VAR
033A   0A??           01463     incf ty,F ; tetriminos fall
033B   2???           01464     call coll_test
033C   1903           01465     skpnz
033D   3???           01466     bra fall_loop
033E   03??           01467     decf ty,F
033F   2???           01468     call print_tetrim
                      01469     pop
0340   0017               M     moviw SP--
0341                  01470 score_update:    
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-18-2016  10:30:19         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01471 ; check full row and clean
0341   2???           01472     call update_display ; erase numbers
0342   2???           01473     call count_full
                      01474 ; add full row count to dropped variable
0343   0020           01475     banksel GAME_VAR
0344   0801           01476     movfw T
0345   07??           01477     addwf droppedL,F ; 
0346   0103           01478     clrw
0347   3D??           01479     addwfc droppedH
                      01480 ; count points = 2^n where n is count of dropped rows {1:4}    
0348   0881           01481     movf T,F
0349   1903           01482     skpnz
034A   3???           01483     bra add_points
034B   3001           01484     movlw 1
034C   3589           01485     lslf WREG
034D   0B81           01486     decfsz T,F
034E   3???           01487     bra $-2
034F                  01488 add_points:
034F   07??           01489     addwf scoreL
0350   0103           01490     clrw
0351   3D??           01491     addwfc scoreH
                      01492     drop 
0352   317F               M    addfsr SP,-1
0353   2???           01493     call update_display ; display new values
0354   3???           01494     bra game_loop
                      01495     
                      01496     
                      01497 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      01498 ;   data tables
                      01499 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      01500 
                      01501 ; **************** encoding ************************************************
                      01502 ; enhanced PIC instructions are coded on 14 bits
                      01503 ; these 14 bits can be read as data using program memory
                      01504 ; writing/reading mechanism, see datasheet chapter 10 for detail.
                      01505 ; the 'dw' assembler directive encode data in those 14 bits contrary to 'dt'
                      01506 ; directive which encode a single byte as a RETLW instruction.
                      01507 ; So we get a 50% compression by encoding 3 nibbles/program word. 
                      01508 ; The encoding used in the following tables is as follow:    
                      01509 ; bits 13:12  number of nibbles where 0 means there is more than 3 nibbles
                      01510 ; in this data chunk so 1 or more other words follow this one.    
                      01511 ; other 12 bits are 3 nibbles (i.e. 4 bits slices).
                      01512 ;****************************************************************************
                      01513 
0355                  01514 digits: ; each digit is 5 rows
0355   0EAA 20AE      01515     dw 0x0EAA,0x20AE ; 0
0357   04C4 204E      01516     dw 0x04C4,0x204E ; 1
0359   0E2E 208E      01517     dw 0x0E2E,0x208E ; 2
035B   0E2E 202E      01518     dw 0x0E2E,0x202E ; 3
035D   0AAE 2022      01519     dw 0x0AAE,0x2022 ; 4
035F   0E8E 202E      01520     dw 0x0E8E,0x202E ; 5
0361   088E 20AE      01521     dw 0x088E,0x20AE ; 6
0363   0E22 2022      01522     dw 0x0E22,0x2022 ; 7
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-18-2016  10:30:19         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0365   0EAE 20AE      01523     dw 0x0EAE,0x20AE ; 8
0367   0EAE 2022      01524     dw 0x0EAE,0x2022 ; 9
                      01525 ; letters needed for 'SCORE' and 'LINES" labels
0369   0EAE 20AA      01526     dw 0x0EAE,0x20AA ; A  code 10
036B   0688 2086      01527     dw 0x0688,0x2086 ; C  code 11
036D   0E8E 208E      01528     dw 0x0E8E,0x208E ; E  code 12
036F   0E44 204E      01529     dw 0x0E44,0x204E ; I  code 13
0371   0888 208E      01530     dw 0x0888,0x208E ; L  code 14
0373   08CA 20AA      01531     dw 0x08CA,0x20AA ; N  code 15
0375   04AA 20A4      01532     dw 0x04AA,0x20A4 ; O  code 16
0377   0EAE 2088      01533     dw 0x0EAE,0x2088 ; P  code 17
0379   08EA 2088      01534     dw 0x08EA,0x2088 ; R  code 18
037B   0684 202C      01535     dw 0x0684,0x202C ; S  code 19
037D   0040 2040      01536     dw 0x0040,0x2040 ; :  code 20
037F   1000 0000      01537     dw 0x1000,0x0000 ; space code 21
                      01538 
                      01539 ; comments notation: Rn clockwise rotation n*90 degr.    
                      01540 ; note that vertical I as 4 rows so it needs 2 words    
0381                  01541 tetriminos: 
0381   388C           01542     dw 0x388C ; L R0
0382   30E8           01543     dw 0x30E8 ; L R1
0383   3C44           01544     dw 0x3C44 ; L R2
0384   202E           01545     dw 0x202E ; L R3
0385   344C           01546     dw 0x344C ; J R0
0386   208E           01547     dw 0x208E ; J R1
0387   3644           01548     dw 0x3644 ; J R2
0388   30E2           01549     dw 0x30E2 ; J R3
0389   20CC           01550     dw 0x20CC ; O R0 
038A   20CC           01551     dw 0x20CC ; O R2 
038B   20CC           01552     dw 0x20CC ; O R2 
038C   20CC           01553     dw 0x20CC ; O R3 
038D   206C           01554     dw 0x206C ; S R0
038E   3462           01555     dw 0x3462 ; S R1
038F   206C           01556     dw 0x206C ; S R2
0390   3462           01557     dw 0x3462 ; S R3
0391   20E4           01558     dw 0x20E4 ; T R0
0392   3262           01559     dw 0x3262 ; T R1
0393   304E           01560     dw 0x304E ; T R2
0394   38C8           01561     dw 0x38C8 ; T R3
0395   20C6           01562     dw 0x20C6 ; Z R0
0396   34C8           01563     dw 0x34C8 ; Z R1
0397   20C6           01564     dw 0x20C6 ; Z R3
0398   34C8           01565     dw 0x34C8 ; Z R4
                      01566 ; annoying! I tetriminos need a special treatment 
                      01567 ; because vertical I need 2 words for encoding.   
0399   0444 1004      01568     dw 0x0444,0x1004 ; I R0  
039B   200F 0000      01569     dw 0x200F,0x0000 ; I R1  second word is filling for alignment
039D   0444 1004      01570     dw 0x0444,0x1004 ; I R2
039F   200F 0000      01571     dw 0x200F,0x0000 ; I R3  
                      01572 
                      01573 #ifdef SOUND_SUPPORT
                      01574 ; tempered scale timer period values    
03A1                  01575 tone_pr:
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-18-2016  10:30:19         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03A1   000B           01576     brw
03A2   3402 34ED      01577     dt 0x02, 0xed   ; 330   (MI4)   0
03A4   34B5 34DF      01578     dt 0xb5, 0xdf   ; 349   (FA4)   1
03A6   3428 34D3      01579     dt 0x28, 0xd3   ; 370   (FA4#)  2
03A8   344C 34C7      01580     dt 0x4c, 0xc7   ; 392   (SOL4)  3
03AA   341E 34BC      01581     dt 0x1e, 0xbc   ; 415   (SOL4#) 4
03AC   348F 34B1      01582     dt 0x8f, 0xb1   ; 440   (LA4)   5
03AE   3498 34A7      01583     dt 0x98, 0xa7   ; 466   (LA4#)  6
03B0   3430 349E      01584     dt 0x30, 0x9e   ; 494   (SI4)   7
03B2   344F 3495      01585     dt 0x4f, 0x95   ; 523hz (DO5)   8
03B4   34ED 348C      01586     dt 0xed, 0x8c   ; 554   (DO5#)  9
03B6   3404 3485      01587     dt 0x04, 0x85   ; 587   (RÉ5)   10
03B8   348D 347D      01588     dt 0x8d, 0x7d   ; 622   (RÉ5#)  11
03BA   3481 3476      01589     dt 0x81, 0x76   ; 659   (MI5)   12
03BC   34DA 346F      01590     dt 0xda, 0x6f   ; 698   (FA5)   13
03BE   3493 3469      01591     dt 0x93, 0x69   ; 740   (FA5#)  14
03C0   34A6 3463      01592     dt 0xa6, 0x63   ; 784   (SOL5)  15
03C2   340F 345E      01593     dt 0x0f, 0x5e   ; 831   (SOL5#) 16
03C4   34C7 3458      01594     dt 0xc7, 0x58   ; 880   (LA5)   17
03C6   34CC 3453      01595     dt 0xcc, 0x53   ; 932   (LA5#)  18
03C8   3418 344F      01596     dt 0x18, 0x4f   ; 988   (SI5)   19
03CA   3482 3442      01597     dt 0x82, 0x42   ; 1046hz (do6)  20
03CC   3400 3400      01598     dt 0, 0         ; silence       21
                      01599 
                      01600     
                      01601 ; a russian folklore soung    
03CE                  01602 korobeiniki:
                      01603     ;nombre de notes
03CE   000B           01604     brw
03CF   3422           01605     dt 34
                      01606     ; duré, note
03D0   342D 3400      01607     dt 45, 0 
03D2   340F 3404      01608     dt 15, 4
03D4   341E 3407      01609     dt 30, 7
03D6   340F 3403      01610     dt 15, 3
03D8   340F 3400      01611     dt 15, 0
                      01612     
03DA   342D 3405      01613     dt 45, 5
03DC   340F 3409      01614     dt 15, 9
03DE   341E 340C      01615     dt 30, 12
03E0   340F 340A      01616     dt 15, 10
03E2   340F 3408      01617     dt 15, 8
                      01618     
03E4   342D 3407      01619     dt 45, 7
03E6   340F 3408      01620     dt 15, 8
03E8   341E 340A      01621     dt 30, 10
03EA   341E 340C      01622     dt 30, 12
                      01623     
03EC   341E 3408      01624     dt 30, 8
03EE   341E 3405      01625     dt 30, 5
03F0   343C 3405      01626     dt 60, 5
                      01627     
03F2   342D 340D      01628     dt 45, 13
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-18-2016  10:30:19         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03F4   340F 340F      01629     dt 15, 15
03F6   341E 3411      01630     dt 30, 17
03F8   340F 340F      01631     dt 15, 15
03FA   340F 340D      01632     dt 15, 13
                      01633     
03FC   342D 340C      01634     dt 45, 12
03FE   340F 340D      01635     dt 15, 13
0400   341E 340C      01636     dt 30, 12
0402   340F 340A      01637     dt 15, 10
0404   340F 3408      01638     dt 15, 8
                      01639     
0406   342D 3407      01640     dt 45, 7
0408   340F 3408      01641     dt 15, 8
040A   341E 340A      01642     dt 30, 10
040C   341E 340C      01643     dt 30, 12
                      01644     
040E   341E 3408      01645     dt 30, 8
0410   341E 3405      01646     dt 30, 5
0412   343C 3405      01647     dt 60, 5
                      01648     
                      01649  #endif
                      01650 
0414                  01651 lbl_score: ; "SCORE" label
0414   3413 340B 3410 01652     dt 19,11,16,18,12,20,255
       3412 340C 3414 
       34FF 
                      01653     
041B                  01654 lbl_lines: ; "LINES"  label
041B   340E 340D 340F 01655     dt 14,13,15,12,19,20,255
       340C 3413 3414 
       34FF 
                      01656 
0422                  01657 lbl_press: ; "PRESS A" label
0422   3411 3412 340C 01658     dt 17,18,12,19,19,21,10,255
       3413 3413 3415 
       340A 34FF 
                      01659 
                      01660     
                      01661  
3FE7 1EFF             01662     end
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-18-2016  10:30:19         PAGE 38


SYMBOL TABLE
  LABEL                             VALUE 

ABDEN                             00000000
ABDOVF                            00000007
ADCON0                            0000009D
ADCON1                            0000009E
ADCON2                            0000009F
ADCS0                             00000004
ADCS1                             00000005
ADCS2                             00000006
ADC_PIN                           00000004
ADDEN                             00000003
ADFM                              00000007
ADFVR0                            00000000
ADFVR1                            00000001
ADGO                              00000001
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADPREF0                           00000000
ADPREF1                           00000001
ADRES                             0000009B
ADRESH                            0000009C
ADRESL                            0000009B
ANSA0                             00000000
ANSA1                             00000001
ANSA2                             00000002
ANSA4                             00000004
ANSELA                            0000018C
APFCON                            0000011D
APFCON0                           0000011D
AUDIO_PIN                         00000004
AUDIO_PWMCLKCON                   00000DAE
AUDIO_PWMCON                      00000DAB
AUDIO_PWMDCH                      00000DA4
AUDIO_PWMDCL                      00000DA3
AUDIO_PWMLDCON                    00000DAF
AUDIO_PWMPRH                      00000DA6
AUDIO_PWMPRL                      00000DA5
AUDIO_PWMTMR                      00000DA9
A_THR                             00000040
BAUDCON                           0000019F
BORCON                            00000116
BORFS                             00000006
BORRDY                            00000000
BPL                               00000006
BRG16                             00000003
BRGH                              00000002
BSR                               00000008
BSR0                              00000000
BSR1                              00000001
BSR2                              00000002
BSR3                              00000003
BSR4                              00000004
BSR_SHAD                          00000FE6
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-18-2016  10:30:19         PAGE 39


SYMBOL TABLE
  LABEL                             VALUE 

BTN_A                             00000004
BTN_B                             00000005
BTN_DN                            00000001
BTN_LT                            00000002
BTN_RT                            00000003
BTN_UP                            00000000
BUFFER_SIZE                       000000C0
B_THR                             00000095
C                                 00000000
C1HYS                             00000001
C1IE                              00000005
C1IF                              00000005
C1INTN                            00000006
C1INTP                            00000007
C1NCH0                            00000000
C1NCH1                            00000001
C1NCH2                            00000002
C1OE                              00000005
C1ON                              00000007
C1OUT                             00000006
C1PCH0                            00000004
C1PCH1                            00000005
C1POL                             00000004
C1SP                              00000002
C1SYNC                            00000000
CDAFVR0                           00000002
CDAFVR1                           00000003
CFGS                              00000006
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CHS4                              00000006
CM1CON0                           00000111
CM1CON1                           00000112
CMOUT                             00000115
CREN                              00000004
CS0                               00000000
CS1                               00000001
CSRC                              00000007
CWG1CON0                          00000693
CWG1CON1                          00000694
CWG1CON2                          00000695
CWG1DBF                           00000692
CWG1DBF0                          00000000
CWG1DBF1                          00000001
CWG1DBF2                          00000002
CWG1DBF3                          00000003
CWG1DBF4                          00000004
CWG1DBF5                          00000005
CWG1DBR                           00000691
CWG1DBR0                          00000000
CWG1DBR1                          00000001
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-18-2016  10:30:19         PAGE 40


SYMBOL TABLE
  LABEL                             VALUE 

CWG1DBR2                          00000002
CWG1DBR3                          00000003
CWG1DBR4                          00000004
CWG1DBR5                          00000005
CWGASEL                           00000006
CWGBSEL                           00000005
C_SHAD                            00000000
DACCON0                           00000118
DACCON1                           00000119
DACEN                             00000007
DACLPS                            00000006
DACOE                             00000005
DACPSS0                           00000002
DACPSS1                           00000003
DACR0                             00000000
DACR1                             00000001
DACR2                             00000002
DACR3                             00000003
DACR4                             00000004
DC                                00000001
DCIE                              00000001
DCIF                              00000001
DC_SHAD                           00000001
DN_THR                            000000D8
EN                                00000007
F                                 00000001
FCY                               004C4B40
FERR                              00000002
FIRST_VIDEO                       00000046
FOSC                              01312D00
FREE                              00000004
FSR0                              00000004
FSR0H                             00000005
FSR0H_SHAD                        00000FE9
FSR0L                             00000004
FSR0L_SHAD                        00000FE8
FSR0_SHAD                         00000FE8
FSR1                              00000006
FSR1H                             00000007
FSR1H_SHAD                        00000FEB
FSR1L                             00000006
FSR1L_SHAD                        00000FEA
FSR1_SHAD                         00000FEA
FVRCON                            00000117
FVREN                             00000007
FVRRDY                            00000006
F_COLL                            00000004
F_EVEN                            00000001
F_GSTOP                           00000003
F_GTMR                            00000002
F_NO_SND                          00000006
F_SND                             00000005
F_VSYNC                           00000000
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-18-2016  10:30:19         PAGE 41


SYMBOL TABLE
  LABEL                             VALUE 

G1ARSEN                           00000006
G1ASDLA0                          00000004
G1ASDLA1                          00000005
G1ASDLB0                          00000006
G1ASDLB1                          00000007
G1ASDSC1                          00000002
G1ASDSFLT                         00000001
G1ASE                             00000007
G1CS0                             00000000
G1EN                              00000007
G1IS0                             00000000
G1IS1                             00000001
G1IS2                             00000002
G1OEA                             00000005
G1OEB                             00000006
G1POLA                            00000003
G1POLB                            00000004
GAME_VAR                          00000000
GIE                               00000007
GO                                00000001
GO_NOT_DONE                       00000001
HFIOFL                            00000003
HFIOFR                            00000004
HFIOFS                            00000000
HORZ_DLY                          00000032
HORZ_PERIOD                       000004F5
HORZ_PULSE                        0000005E
INDF0                             00000000
INDF1                             00000001
INLVLA                            0000038C
INLVLA0                           00000000
INLVLA1                           00000001
INLVLA2                           00000002
INLVLA3                           00000003
INLVLA4                           00000004
INLVLA5                           00000005
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IOCAF                             00000393
IOCAF0                            00000000
IOCAF1                            00000001
IOCAF2                            00000002
IOCAF3                            00000003
IOCAF4                            00000004
IOCAF5                            00000005
IOCAN                             00000392
IOCAN0                            00000000
IOCAN1                            00000001
IOCAN2                            00000002
IOCAN3                            00000003
IOCAN4                            00000004
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-18-2016  10:30:19         PAGE 42


SYMBOL TABLE
  LABEL                             VALUE 

IOCAN5                            00000005
IOCAP                             00000391
IOCAP0                            00000000
IOCAP1                            00000001
IOCAP2                            00000002
IOCAP3                            00000003
IOCAP4                            00000004
IOCAP5                            00000005
IOCIE                             00000003
IOCIF                             00000000
IRCF0                             00000003
IRCF1                             00000004
IRCF2                             00000005
IRCF3                             00000006
LAST_LINE                         00000106
LAST_VIDEO                        000000C5
LATA                              0000010C
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA4                             00000004
LATA5                             00000005
LDA                               00000007
LDS0                              00000000
LDS1                              00000001
LDT                               00000006
LED_PIN                           00000000
LFIOFR                            00000001
LFSR_TAPS                         000000B4
LT_THR                            000000D1
LWLO                              00000005
MC1OUT                            00000000
MFIOFR                            00000002
MODE0                             00000002
MODE1                             00000003
MPWM1EN                           00000000
MPWM1LD                           00000000
MPWM1OUT                          00000000
MPWM2EN                           00000001
MPWM2LD                           00000001
MPWM2OUT                          00000001
MPWM3EN                           00000002
MPWM3LD                           00000002
MPWM3OUT                          00000002
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RI                            00000002
NOT_RMCLR                         00000003
NOT_RWDT                          00000004
NOT_T1SYNC                        00000002
NOT_TO                            00000004
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-18-2016  10:30:19         PAGE 43


SYMBOL TABLE
  LABEL                             VALUE 

NOT_WPUEN                         00000007
ODA0                              00000000
ODA1                              00000001
ODA2                              00000002
ODA4                              00000004
ODA5                              00000005
ODCONA                            0000028C
OE                                00000006
OERR                              00000001
OFIE                              00000003
OFIF                              00000003
OFM0                              00000005
OFM1                              00000006
OFO                               00000004
OFS0                              00000000
OFS1                              00000001
OPTION_REG                        00000095
OSCCON                            00000099
OSCSTAT                           0000009A
OSCTUNE                           00000098
OSTS                              00000005
OUT                               00000005
P1SEL                             00000000
P2SEL                             00000001
PAD_CHS                           00000003
PAD_PIN                           00000004
PCL                               00000002
PCLATH                            0000000A
PCLATH_SHAD                       00000FE7
PCON                              00000096
PEIE                              00000006
PHIE                              00000002
PHIF                              00000002
PIE1                              00000091
PIE2                              00000092
PIE3                              00000093
PIR1                              00000011
PIR2                              00000012
PIR3                              00000013
PIXEL_TXREG                       0000019A
PLLR                              00000006
PMADR                             00000191
PMADRH                            00000192
PMADRL                            00000191
PMCON1                            00000195
PMCON2                            00000196
PMDAT                             00000193
PMDATH                            00000194
PMDATL                            00000193
POL                               00000004
PORTA                             0000000C
PR2                               0000001B
PRIE                              00000000
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-18-2016  10:30:19         PAGE 44


SYMBOL TABLE
  LABEL                             VALUE 

PRIF                              00000000
PS0_OPTION_REG                    00000000
PS0_PWM1CLKCON                    00000004
PS0_PWM2CLKCON                    00000004
PS0_PWM3CLKCON                    00000004
PS1_OPTION_REG                    00000001
PS1_PWM1CLKCON                    00000005
PS1_PWM2CLKCON                    00000005
PS1_PWM3CLKCON                    00000005
PS2_OPTION_REG                    00000002
PS2_PWM1CLKCON                    00000006
PS2_PWM2CLKCON                    00000006
PS2_PWM3CLKCON                    00000006
PSA                               00000003
PWM1CLKCON                        00000D9E
PWM1CON                           00000D9B
PWM1CS0                           00000000
PWM1CS1                           00000001
PWM1DC                            00000D93
PWM1DCH                           00000D94
PWM1DCH0                          00000000
PWM1DCH1                          00000001
PWM1DCH2                          00000002
PWM1DCH3                          00000003
PWM1DCH4                          00000004
PWM1DCH5                          00000005
PWM1DCH6                          00000006
PWM1DCH7                          00000007
PWM1DCIE                          00000001
PWM1DCIF                          00000001
PWM1DCL                           00000D93
PWM1DCL0                          00000000
PWM1DCL1                          00000001
PWM1DCL2                          00000002
PWM1DCL3                          00000003
PWM1DCL4                          00000004
PWM1DCL5                          00000005
PWM1DCL6                          00000006
PWM1DCL7                          00000007
PWM1EN                            00000007
PWM1EN_A                          00000000
PWM1IE                            00000004
PWM1IF                            00000004
PWM1INTCON                        00000D9C
PWM1INTE                          00000D9C
PWM1INTF                          00000D9D
PWM1INTFLG                        00000D9D
PWM1LD                            00000007
PWM1LDA_A                         00000000
PWM1LDCON                         00000D9F
PWM1LDM                           00000006
PWM1LDS0                          00000000
PWM1LDS1                          00000001
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-18-2016  10:30:19         PAGE 45


SYMBOL TABLE
  LABEL                             VALUE 

PWM1MODE0                         00000002
PWM1MODE1                         00000003
PWM1OE                            00000006
PWM1OF                            00000D97
PWM1OFCON                         00000DA0
PWM1OFH                           00000D98
PWM1OFH0                          00000000
PWM1OFH1                          00000001
PWM1OFH2                          00000002
PWM1OFH3                          00000003
PWM1OFH4                          00000004
PWM1OFH5                          00000005
PWM1OFH6                          00000006
PWM1OFH7                          00000007
PWM1OFIE                          00000003
PWM1OFIF                          00000003
PWM1OFL                           00000D97
PWM1OFL0                          00000000
PWM1OFL1                          00000001
PWM1OFL2                          00000002
PWM1OFL3                          00000003
PWM1OFL4                          00000004
PWM1OFL5                          00000005
PWM1OFL6                          00000006
PWM1OFL7                          00000007
PWM1OFM0                          00000005
PWM1OFM1                          00000006
PWM1OFMC                          00000004
PWM1OFS0                          00000000
PWM1OFS1                          00000001
PWM1OUT                           00000005
PWM1OUT_A                         00000000
PWM1PH                            00000D91
PWM1PHH                           00000D92
PWM1PHH0                          00000000
PWM1PHH1                          00000001
PWM1PHH2                          00000002
PWM1PHH3                          00000003
PWM1PHH4                          00000004
PWM1PHH5                          00000005
PWM1PHH6                          00000006
PWM1PHH7                          00000007
PWM1PHIE                          00000002
PWM1PHIF                          00000002
PWM1PHL                           00000D91
PWM1PHL0                          00000000
PWM1PHL1                          00000001
PWM1PHL2                          00000002
PWM1PHL3                          00000003
PWM1PHL4                          00000004
PWM1PHL5                          00000005
PWM1PHL6                          00000006
PWM1PHL7                          00000007
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-18-2016  10:30:19         PAGE 46


SYMBOL TABLE
  LABEL                             VALUE 

PWM1POL                           00000004
PWM1PR                            00000D95
PWM1PRH                           00000D96
PWM1PRH0                          00000000
PWM1PRH1                          00000001
PWM1PRH2                          00000002
PWM1PRH3                          00000003
PWM1PRH4                          00000004
PWM1PRH5                          00000005
PWM1PRH6                          00000006
PWM1PRH7                          00000007
PWM1PRIE                          00000000
PWM1PRIF                          00000000
PWM1PRL                           00000D95
PWM1PRL0                          00000000
PWM1PRL1                          00000001
PWM1PRL2                          00000002
PWM1PRL3                          00000003
PWM1PRL4                          00000004
PWM1PRL5                          00000005
PWM1PRL6                          00000006
PWM1PRL7                          00000007
PWM1PS0                           00000004
PWM1PS1                           00000005
PWM1PS2                           00000006
PWM1TMR                           00000D99
PWM1TMRH                          00000D9A
PWM1TMRH0                         00000000
PWM1TMRH1                         00000001
PWM1TMRH2                         00000002
PWM1TMRH3                         00000003
PWM1TMRH4                         00000004
PWM1TMRH5                         00000005
PWM1TMRH6                         00000006
PWM1TMRH7                         00000007
PWM1TMRL                          00000D99
PWM1TMRL0                         00000000
PWM1TMRL1                         00000001
PWM1TMRL2                         00000002
PWM1TMRL3                         00000003
PWM1TMRL4                         00000004
PWM1TMRL5                         00000005
PWM1TMRL6                         00000006
PWM1TMRL7                         00000007
PWM2CLKCON                        00000DAE
PWM2CON                           00000DAB
PWM2CS0                           00000000
PWM2CS1                           00000001
PWM2DC                            00000DA3
PWM2DCH                           00000DA4
PWM2DCH0                          00000000
PWM2DCH1                          00000001
PWM2DCH2                          00000002
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-18-2016  10:30:19         PAGE 47


SYMBOL TABLE
  LABEL                             VALUE 

PWM2DCH3                          00000003
PWM2DCH4                          00000004
PWM2DCH5                          00000005
PWM2DCH6                          00000006
PWM2DCH7                          00000007
PWM2DCIE                          00000001
PWM2DCIF                          00000001
PWM2DCL                           00000DA3
PWM2DCL0                          00000000
PWM2DCL1                          00000001
PWM2DCL2                          00000002
PWM2DCL3                          00000003
PWM2DCL4                          00000004
PWM2DCL5                          00000005
PWM2DCL6                          00000006
PWM2DCL7                          00000007
PWM2EN                            00000007
PWM2EN_A                          00000001
PWM2IE                            00000005
PWM2IF                            00000005
PWM2INTCON                        00000DAC
PWM2INTE                          00000DAC
PWM2INTF                          00000DAD
PWM2INTFLG                        00000DAD
PWM2LD                            00000007
PWM2LDA_A                         00000001
PWM2LDCON                         00000DAF
PWM2LDM                           00000006
PWM2LDS0                          00000000
PWM2LDS1                          00000001
PWM2MODE0                         00000002
PWM2MODE1                         00000003
PWM2OE                            00000006
PWM2OF                            00000DA7
PWM2OFCON                         00000DB0
PWM2OFH                           00000DA8
PWM2OFH0                          00000000
PWM2OFH1                          00000001
PWM2OFH2                          00000002
PWM2OFH3                          00000003
PWM2OFH4                          00000004
PWM2OFH5                          00000005
PWM2OFH6                          00000006
PWM2OFH7                          00000007
PWM2OFIE                          00000003
PWM2OFIF                          00000003
PWM2OFL                           00000DA7
PWM2OFL0                          00000000
PWM2OFL1                          00000001
PWM2OFL2                          00000002
PWM2OFL3                          00000003
PWM2OFL4                          00000004
PWM2OFL5                          00000005
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-18-2016  10:30:19         PAGE 48


SYMBOL TABLE
  LABEL                             VALUE 

PWM2OFL6                          00000006
PWM2OFL7                          00000007
PWM2OFM0                          00000005
PWM2OFM1                          00000006
PWM2OFMC                          00000004
PWM2OFS0                          00000000
PWM2OFS1                          00000001
PWM2OUT                           00000005
PWM2OUT_A                         00000001
PWM2PH                            00000DA1
PWM2PHH                           00000DA2
PWM2PHH0                          00000000
PWM2PHH1                          00000001
PWM2PHH2                          00000002
PWM2PHH3                          00000003
PWM2PHH4                          00000004
PWM2PHH5                          00000005
PWM2PHH6                          00000006
PWM2PHH7                          00000007
PWM2PHIE                          00000002
PWM2PHIF                          00000002
PWM2PHL                           00000DA1
PWM2PHL0                          00000000
PWM2PHL1                          00000001
PWM2PHL2                          00000002
PWM2PHL3                          00000003
PWM2PHL4                          00000004
PWM2PHL5                          00000005
PWM2PHL6                          00000006
PWM2PHL7                          00000007
PWM2POL                           00000004
PWM2PR                            00000DA5
PWM2PRH                           00000DA6
PWM2PRH0                          00000000
PWM2PRH1                          00000001
PWM2PRH2                          00000002
PWM2PRH3                          00000003
PWM2PRH4                          00000004
PWM2PRH5                          00000005
PWM2PRH6                          00000006
PWM2PRH7                          00000007
PWM2PRIE                          00000000
PWM2PRIF                          00000000
PWM2PRL                           00000DA5
PWM2PRL0                          00000000
PWM2PRL1                          00000001
PWM2PRL2                          00000002
PWM2PRL3                          00000003
PWM2PRL4                          00000004
PWM2PRL5                          00000005
PWM2PRL6                          00000006
PWM2PRL7                          00000007
PWM2PS0                           00000004
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-18-2016  10:30:19         PAGE 49


SYMBOL TABLE
  LABEL                             VALUE 

PWM2PS1                           00000005
PWM2PS2                           00000006
PWM2TMR                           00000DA9
PWM2TMRH                          00000DAA
PWM2TMRH0                         00000000
PWM2TMRH1                         00000001
PWM2TMRH2                         00000002
PWM2TMRH3                         00000003
PWM2TMRH4                         00000004
PWM2TMRH5                         00000005
PWM2TMRH6                         00000006
PWM2TMRH7                         00000007
PWM2TMRL                          00000DA9
PWM2TMRL0                         00000000
PWM2TMRL1                         00000001
PWM2TMRL2                         00000002
PWM2TMRL3                         00000003
PWM2TMRL4                         00000004
PWM2TMRL5                         00000005
PWM2TMRL6                         00000006
PWM2TMRL7                         00000007
PWM3CLKCON                        00000DBE
PWM3CON                           00000DBB
PWM3CS0                           00000000
PWM3CS1                           00000001
PWM3DC                            00000DB3
PWM3DCH                           00000DB4
PWM3DCH0                          00000000
PWM3DCH1                          00000001
PWM3DCH2                          00000002
PWM3DCH3                          00000003
PWM3DCH4                          00000004
PWM3DCH5                          00000005
PWM3DCH6                          00000006
PWM3DCH7                          00000007
PWM3DCIE                          00000001
PWM3DCIF                          00000001
PWM3DCL                           00000DB3
PWM3DCL0                          00000000
PWM3DCL1                          00000001
PWM3DCL2                          00000002
PWM3DCL3                          00000003
PWM3DCL4                          00000004
PWM3DCL5                          00000005
PWM3DCL6                          00000006
PWM3DCL7                          00000007
PWM3EN                            00000007
PWM3EN_A                          00000002
PWM3IE                            00000006
PWM3IF                            00000006
PWM3INTCON                        00000DBC
PWM3INTE                          00000DBC
PWM3INTF                          00000DBD
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-18-2016  10:30:19         PAGE 50


SYMBOL TABLE
  LABEL                             VALUE 

PWM3INTFLG                        00000DBD
PWM3LD                            00000007
PWM3LDA_A                         00000002
PWM3LDCON                         00000DBF
PWM3LDM                           00000006
PWM3LDS0                          00000000
PWM3LDS1                          00000001
PWM3MODE0                         00000002
PWM3MODE1                         00000003
PWM3OE                            00000006
PWM3OF                            00000DB7
PWM3OFCON                         00000DC0
PWM3OFH                           00000DB8
PWM3OFH0                          00000000
PWM3OFH1                          00000001
PWM3OFH2                          00000002
PWM3OFH3                          00000003
PWM3OFH4                          00000004
PWM3OFH5                          00000005
PWM3OFH6                          00000006
PWM3OFH7                          00000007
PWM3OFIE                          00000003
PWM3OFIF                          00000003
PWM3OFL                           00000DB7
PWM3OFL0                          00000000
PWM3OFL1                          00000001
PWM3OFL2                          00000002
PWM3OFL3                          00000003
PWM3OFL4                          00000004
PWM3OFL5                          00000005
PWM3OFL6                          00000006
PWM3OFL7                          00000007
PWM3OFM0                          00000005
PWM3OFM1                          00000006
PWM3OFMC                          00000004
PWM3OFS0                          00000000
PWM3OFS1                          00000001
PWM3OUT                           00000005
PWM3OUT_A                         00000002
PWM3PH                            00000DB1
PWM3PHH                           00000DB2
PWM3PHH0                          00000000
PWM3PHH1                          00000001
PWM3PHH2                          00000002
PWM3PHH3                          00000003
PWM3PHH4                          00000004
PWM3PHH5                          00000005
PWM3PHH6                          00000006
PWM3PHH7                          00000007
PWM3PHIE                          00000002
PWM3PHIF                          00000002
PWM3PHL                           00000DB1
PWM3PHL0                          00000000
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-18-2016  10:30:19         PAGE 51


SYMBOL TABLE
  LABEL                             VALUE 

PWM3PHL1                          00000001
PWM3PHL2                          00000002
PWM3PHL3                          00000003
PWM3PHL4                          00000004
PWM3PHL5                          00000005
PWM3PHL6                          00000006
PWM3PHL7                          00000007
PWM3POL                           00000004
PWM3PR                            00000DB5
PWM3PRH                           00000DB6
PWM3PRH0                          00000000
PWM3PRH1                          00000001
PWM3PRH2                          00000002
PWM3PRH3                          00000003
PWM3PRH4                          00000004
PWM3PRH5                          00000005
PWM3PRH6                          00000006
PWM3PRH7                          00000007
PWM3PRIE                          00000000
PWM3PRIF                          00000000
PWM3PRL                           00000DB5
PWM3PRL0                          00000000
PWM3PRL1                          00000001
PWM3PRL2                          00000002
PWM3PRL3                          00000003
PWM3PRL4                          00000004
PWM3PRL5                          00000005
PWM3PRL6                          00000006
PWM3PRL7                          00000007
PWM3PS0                           00000004
PWM3PS1                           00000005
PWM3PS2                           00000006
PWM3TMR                           00000DB9
PWM3TMRH                          00000DBA
PWM3TMRH0                         00000000
PWM3TMRH1                         00000001
PWM3TMRH2                         00000002
PWM3TMRH3                         00000003
PWM3TMRH4                         00000004
PWM3TMRH5                         00000005
PWM3TMRH6                         00000006
PWM3TMRH7                         00000007
PWM3TMRL                          00000DB9
PWM3TMRL0                         00000000
PWM3TMRL1                         00000001
PWM3TMRL2                         00000002
PWM3TMRL3                         00000003
PWM3TMRL4                         00000004
PWM3TMRL5                         00000005
PWM3TMRL6                         00000006
PWM3TMRL7                         00000007
PWMEN                             00000D8E
PWMLD                             00000D8F
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-18-2016  10:30:19         PAGE 52


SYMBOL TABLE
  LABEL                             VALUE 

PWMOUT                            00000D90
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCREG                             00000199
RCSTA                             0000019D
RD                                00000000
ROW_EMPTY                         00000000
ROW_FULL                          0000000A
RT_THR                            000000B5
RX9                               00000006
RX9D                              00000000
RXDTSEL                           00000007
S0                                0000001F
SBOREN                            00000007
SCKP                              00000004
SCS0                              00000000
SCS1                              00000001
SENDB                             00000003
SLRA0                             00000000
SLRA1                             00000001
SLRA2                             00000002
SLRA4                             00000004
SLRA5                             00000005
SLRCONA                           0000030C
SOUND_SUPPORT                     
SP                                FSR1
SPBRG                             0000019B
SPBRGH                            0000019C
SPBRGL                            0000019B
SPEN                              00000007
SPLLEN                            00000007
SREN                              00000005
STACK_SIZE                        00000020
STATUS                            00000003
STATUS_SHAD                       00000FE4
STKOVF                            00000007
STKPTR                            00000FED
STKUNF                            00000006
SWDTEN                            00000000
SYNC                              00000004
SYNC_IE                           00000006
SYNC_IF                           00000006
SYNC_OUT                          00000002
SYNC_PIE                          00000093
SYNC_PIR                          00000013
SYNC_PWMCLKCON                    00000DBE
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-18-2016  10:30:19         PAGE 53


SYMBOL TABLE
  LABEL                             VALUE 

SYNC_PWMCON                       00000DBB
SYNC_PWMDCH                       00000DB4
SYNC_PWMDCL                       00000DB3
SYNC_PWMINTE                      00000DBC
SYNC_PWMINTF                      00000DBD
SYNC_PWMLDCON                     00000DBF
SYNC_PWMOF                        00000DB7
SYNC_PWMOFCON                     00000DC0
SYNC_PWMPH                        00000DB1
SYNC_PWMPRH                       00000DB6
SYNC_PWMPRL                       00000DB5
SYNC_PWMTMR                       00000DB9
T                                 INDF1
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000018
T1GCON                            00000019
T1GGO                             00000003
T1GGO_NOT_DONE                    00000003
T1GPOL                            00000006
T1GSEL                            00000003
T1GSPM                            00000004
T1GSS0                            00000000
T1GSS1                            00000001
T1GTM                             00000005
T1GVAL                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             0000001C
T2OUTPS0                          00000003
T2OUTPS1                          00000004
T2OUTPS2                          00000005
T2OUTPS3                          00000006
TC                                00000032
TCY                               000000C8
TMR0                              00000015
TMR0CS                            00000005
TMR0IE                            00000005
TMR0IF                            00000002
TMR0SE                            00000004
TMR1                              00000016
TMR1CS0                           00000006
TMR1CS1                           00000007
TMR1GE                            00000007
TMR1GIE                           00000007
TMR1GIF                           00000007
TMR1H                             00000017
TMR1IE                            00000000
TMR1IF                            00000000
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-18-2016  10:30:19         PAGE 54


SYMBOL TABLE
  LABEL                             VALUE 

TMR1L                             00000016
TMR1ON                            00000000
TMR2                              0000001A
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOS                               00000FEE
TOSH                              00000FEF
TOSL                              00000FEE
TRIGSEL0                          00000004
TRIGSEL1                          00000005
TRIGSEL2                          00000006
TRIGSEL3                          00000007
TRISA                             0000008C
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRMT                              00000001
TSEN                              00000005
TSRNG                             00000004
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TUN5                              00000005
TX9                               00000006
TX9D                              00000000
TXCKSEL                           00000002
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             0000019A
TXSTA                             0000019E
TX_PIR                            00000011
UP_THR                            000000C6
VDD                               00000400
VERT_DLY                          00000032
VIDEO_BUFFER                      00002030
VIDEO_LAT                         0000010C
VIDEO_OUT                         00000001
VREGCON                           00000197
VREGPM                            00000001
W                                 00000000
WDTCON                            00000097
WDTPS0                            00000001
WDTPS1                            00000002
WDTPS2                            00000003
WDTPS3                            00000004
WDTPS4                            00000005
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-18-2016  10:30:19         PAGE 55


SYMBOL TABLE
  LABEL                             VALUE 

WELL_DEPTH                        00000016
WELL_WIDTH                        0000000A
WPUA                              0000020C
WPUA0                             00000000
WPUA1                             00000001
WPUA2                             00000002
WPUA3                             00000003
WPUA4                             00000004
WPUA5                             00000005
WR                                00000001
WREG                              00000009
WREG_SHAD                         00000FE5
WREN                              00000002
WRERR                             00000003
WUE                               00000001
XSIZE                             00000030
YSIZE                             00000020
Z                                 00000002
Z_SHAD                            00000002
_.org_1_0057                      00000057
_.org_1_006D                      0000006D
_.org_1_006F                      0000006F
_.org_1_0072                      00000072
_.org_1_00BE                      000000BE
_.org_1_00C0                      000000C0
_.org_1_00D4                      000000D4
_.org_1_00DC                      000000DC
_.org_1_0242                      00000242
_.org_1_034E                      0000034E
_BOREN_NSLEEP                     00003DFF
_BOREN_OFF                        000039FF
_BOREN_ON                         00003FFF
_BOREN_SBODEN                     00003BFF
_BORV_19                          00003FFF
_BORV_HI                          00003BFF
_BORV_LO                          00003FFF
_CLKOUTEN_OFF                     00003FFF
_CLKOUTEN_ON                      000037FF
_CONFIG1                          00008007
_CONFIG2                          00008008
_CP_OFF                           00003FFF
_CP_ON                            00003F7F
_DEVID1                           00008006
_FOSC_ECH                         00003FFF
_FOSC_ECL                         00003FFD
_FOSC_ECM                         00003FFE
_FOSC_INTOSC                      00003FFC
_IDLOC0                           00008000
_IDLOC1                           00008001
_IDLOC2                           00008002
_IDLOC3                           00008003
_LPBOREN_OFF                      00003FFF
_LPBOREN_ON                       000037FF
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-18-2016  10:30:19         PAGE 56


SYMBOL TABLE
  LABEL                             VALUE 

_LVP_OFF                          00001FFF
_LVP_ON                           00003FFF
_MCLRE_OFF                        00003FBF
_MCLRE_ON                         00003FFF
_PLLEN_OFF                        00003EFF
_PLLEN_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FDF
_STVREN_OFF                       00003DFF
_STVREN_ON                        00003FFF
_WDTE_NSLEEP                      00003FF7
_WDTE_OFF                         00003FE7
_WDTE_ON                          00003FFF
_WDTE_SWDTEN                      00003FEF
_WRT_ALL                          00003FFC
_WRT_BOOT                         00003FFE
_WRT_HALF                         00003FFD
_WRT_OFF                          00003FFF
__12F1572                         00000001
_stack                            00000020
accaH                             00000009
accaL                             00000008
accbH                             0000000B
accbL                             0000000A
add_points                        0000034F
angle                             00000041
bitmap                            0000014C
bmp00                             0000014D
bmp01                             00000160
bmp02                             0000014F
buttons                           0000000C
byte_serialize                    000000CF
case                              
clear_pixel                       00000103
clear_score                       00000255
clear_screen                      000000E4
clr00                             000002EC
cls_loop                          000000EA
col_loop                          000001DA
coll_test                         0000025B
count_done                        0000021C
count_full                        00000204
count_loop                        00000208
dec_n                             
digits                            00000355
div10                             00000059
div10_loop                        0000005C
drop                              
drop00                            000001EA
drop1                             000001D7
drop21                            000002F9
drop_n                            
drop_tetrim                       00000318
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-18-2016  10:30:19         PAGE 57


SYMBOL TABLE
  LABEL                             VALUE 

droppedH                          00000047
droppedL                          00000046
dup                               
fall_loop                         00000305
flags                             00000002
game_init                         000002BB
game_loop                         000002E5
game_over                         000002E8
get_flash_word                    00000125
get_nibble                        00000139
get_pixel                         00000107
gt_255                            00000026
gtimer                            00000003
hline                             000001BB
hline_done                        000001C7
inc_n                             
init                              0000027B
insert                            
isr                               00000004
isr_exit                          00000050
koro                              00000234
korobeiniki                       000003CE
lbl_lines                         0000041B
lbl_press                         00000422
lbl_score                         00000414
lcountH                           00000001
lcountL                           00000000
lit                               
mask00                            000000FB
mask01                            000000FE
move_down                         0000033A
move_left                         00000331
move_right                        00000336
new_tminos                        0000021E
next_flash_word                   00000134
next_pixel                        000001EB
next_row                          0000021A
nibble                            0000000D
nibble_mask                       00000148
no_sound                          00000243
no_zero                           000001B9
over                              
pause                             00000054
pick                              
pop                               
print_char                        00000163
print_int                         0000019C
print_int00                       000001A0
print_label                       00000185
print_last                        000001B3
print_tetrim                      0000016B
prompt                            00000272
prt_lbl_done                      0000019A
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-18-2016  10:30:19         PAGE 58


SYMBOL TABLE
  LABEL                             VALUE 

push                              
q                                 0000000A
qr00                              000001F6
qr01                              00000200
query_row                         000001F4
r                                 00000000
randH                             00000006
randL                             00000005
rcount                            00000007
read_exit                         00000097
read_flash                        0000012A
read_pad                          00000067
reserve                           
rot_left                          0000031F
rot_right                         00000328
row0                              00000147
row1                              00000145
row2                              00000143
row_loop                          000001D8
rst                               00000010
scoreH                            00000045
scoreL                            00000044
score_update                      00000341
set_pixel                         00000100
set_pixel_ptr                     000000EF
set_yptr                          000000B1
t0                                0000000E
t1                                0000000F
task0                             0000003B
task1                             00000044
task2                             0000004B
tasks                             00000031
tcyDelay                          
tetrim                            00000040
tetriminos                        00000381
tetris                            000002E1
tone                              0000009A
tone_pr                           000003A1
tone_tmr                          00000004
try_a                             00000074
try_b                             0000007A
try_button                        
try_dn                            00000092
try_lt                            0000008C
try_rt                            00000080
try_up                            00000086
tx                                00000042
ty                                00000043
update_display                    00000261
video_buffer_b0                   00000050
video_buffer_b1                   000000A0
video_buffer_b2                   00000120
video_serialize                   000000BD
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-18-2016  10:30:19         PAGE 59


SYMBOL TABLE
  LABEL                             VALUE 

vline                             000001C9
vline_done                        000001D5
vsync_end                         0000001E
vsync_start                       00000016
wait_end                          00000251
wait_sound                        
wait_start                        0000022F
xor_pixel                         0000010A
xor_row                           00000110
xor_row02                         0000011F
xor_row_done                      00000123

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,   129 suppressed

