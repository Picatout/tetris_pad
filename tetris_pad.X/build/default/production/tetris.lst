MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-19-2016  23:27:58         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001     include p12f1572.inc
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Sep 13 2016
                      00005 ;  MPASM PIC12F1572 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2016 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01601         LIST
                      00002     
                      00003     radix dec
                      00004     errorlevel 0, -302, -305
                      00005     
8007   3FE7           00006     __config _CONFIG1, _FOSC_ECH&_WDTE_OFF
8008   1EFF           00007     __config _CONFIG2, _PLLEN_OFF&_LVP_OFF 
                      00008 
                      00009 ; comment this define to exclude audio support code.  
                      00010 #define SOUND_SUPPORT
                      00011 ; comment this define to exclude game_over animation code.    
                      00012 #define ANIMATION
                      00013     
  01312D00            00014 FOSC equ 20000000 ; 20Mhz oscillator frequency
  00000032            00015 TC equ 50 ; FOSC period in nanosecondes 
  004C4B40            00016 FCY equ FOSC/4    ; 5Mhz
  000000C8            00017 TCY equ TC*4 ; nanoseconds  instruction cycle period.
                      00018 
                      00019 ;display parameters
  00000030            00020 XSIZE equ 48  ; horizontal pixels
  00000020            00021 YSIZE equ 32  ; vertical pixels
  00000006            00022 BPL equ XSIZE/8 ; bytes per line 
  000000C0            00023 BUFFER_SIZE equ  YSIZE*BPL  ; video buffer size
  00002030            00024 VIDEO_BUFFER equ 0x2000+(3*80-BUFFER_SIZE) ; buffer address
  00000032            00025 VERT_DLY equ 50 ; number of scan lines to vertical center display on screen
  00000032            00026 HORZ_DLY equ 10*5  ; to center display on screen. There is 5 TCY/µsec
  00000046            00027 FIRST_VIDEO equ VERT_DLY+20  ; first video output line
  000000C5            00028 LAST_VIDEO equ FIRST_VIDEO+4*YSIZE-1  ; last video output line
                      00029 ; peripherals regiters used in video generation
  0000019A            00030 PIXEL_TXREG equ TXREG ; using EUSART to serialize out pixels
  00000011            00031 TX_PIR equ PIR1
  00000001            00032 VIDEO_OUT equ RA1
  0000010C            00033 VIDEO_LAT equ LATA
  00000002            00034 SYNC_OUT equ RA2 
  00000DB3            00035 SYNC_PWMDCL equ PWM3DCL ; duty cycle low byte
  00000DB4            00036 SYNC_PWMDCH equ PWM3DCH ; high byte    
  00000DB5            00037 SYNC_PWMPRL equ PWM3PRL ; pwm period low byte
  00000DB6            00038 SYNC_PWMPRH equ PWM3PRH ; high byte 
  00000DB1            00039 SYNC_PWMPH equ PWM3PH ; pwm phase
  00000DB7            00040 SYNC_PWMOF equ PWM3OF ; pwm offset
  00000DB9            00041 SYNC_PWMTMR equ PWM3TMR ; timer
  00000DBB            00042 SYNC_PWMCON equ PWM3CON ; control SFR
  00000DBE            00043 SYNC_PWMCLKCON equ PWM3CLKCON  ; clock control SFR
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-19-2016  23:27:58         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000DC0            00044 SYNC_PWMOFCON equ PWM3OFCON ; offset control SFR
  00000DBF            00045 SYNC_PWMLDCON equ PWM3LDCON ; load control SFR
  00000006            00046 SYNC_IE equ PWM3IE  ; interrupt enable bit
  00000006            00047 SYNC_IF equ PWM3IF  ; interrupt flag bit
  00000093            00048 SYNC_PIE equ PIE3 ; interrupt enable SFR
  00000013            00049 SYNC_PIR equ PIR3 ; interrupt flag SFR 
  00000DBC            00050 SYNC_PWMINTE equ PWM3INTE
  00000DBD            00051 SYNC_PWMINTF equ PWM3INTF
                      00052  
  000004F5            00053 HORZ_PERIOD equ FOSC/15748-1 ; 15748 hertz
  0000005E            00054 HORZ_PULSE equ 4700/TC ; 4.7µsec 
  00000106            00055 LAST_LINE equ 262 ; field last line
                      00056 
  00000000            00057 LED_PIN equ RA0 ; power LED pin
  00000004            00058 ADC_PIN equ RA4 ; pad buttons adc input pin
                      00059 
                      00060 #ifdef SOUND_SUPPORT 
                      00061 ;peripherals used for sound generation. 
  00000004            00062 AUDIO_PIN equ RA4
  00000DA3            00063 AUDIO_PWMDCL equ PWM2DCL
  00000DA4            00064 AUDIO_PWMDCH equ PWM2DCH
  00000DA5            00065 AUDIO_PWMPRL equ PWM2PRL
  00000DA6            00066 AUDIO_PWMPRH equ PWM2PRH
  00000DA9            00067 AUDIO_PWMTMR equ PWM2TMR
  00000DAE            00068 AUDIO_PWMCLKCON equ PWM2CLKCON
  00000DAF            00069 AUDIO_PWMLDCON equ PWM2LDCON
  00000DAB            00070 AUDIO_PWMCON equ PWM2CON
  00000DA1            00071 AUDIO_PWMPHL equ PWM2PHL
  00000DA2            00072 AUDIO_PWMPHH equ PWM2PHH
  00000DA7            00073 AUDIO_PWMOFL equ PWM2OFL
  00000DA8            00074 AUDIO_PWMOFH equ PWM2OFH
                      00075 #endif
                      00076  
                      00077 ; game pad resource
                      00078 ; use ADC 
  00000004            00079 PAD_PIN equ ANSA4  ; analog digital converter pin
  00000003            00080 PAD_CHS equ 3 ; ADC channel
  00000000            00081 BTN_UP equ 0
  00000001            00082 BTN_DN equ 1
  00000002            00083 BTN_LT equ 2
  00000003            00084 BTN_RT equ 3
  00000004            00085 BTN_A equ 4
  00000005            00086 BTN_B equ 5
                      00087 ; threshold level for each button
                      00088 ; lower_btn_thr >= BTN_? < btn_thr
                      00089 ; exemple: BTN_UP if RT_THR<=Vadc<UP_THR  
  00000400            00090 VDD equ 1024
  000000D8            00091 DN_THR equ 216 ;(VDD*(6/7+5/6)/2)>>2
  000000D1            00092 LT_THR equ 209 ; (VDD*(5/6+4/5)/2)>>2
  000000C6            00093 UP_THR equ 198 ;(VDD*(4/5+3/4)/2)>>2
  000000B5            00094 RT_THR equ 181 ;(VDD*(3/4+2/3)/2)>>2
  00000095            00095 B_THR  equ 149 ; (VDD*(2/3+1/2)/2)>>2
  00000040            00096 A_THR  equ 64 ;(VDD/4)>>2
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-19-2016  23:27:58         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00097 
                      00098 ; this macro is used in read_pad
                      00099 ; to determine which button is pressed.  
                      00100 try_button macro btn, label 
                      00101     movlw btn
                      00102     subwf ADRESH,W
                      00103     skpnc
                      00104     bra label
                      00105     endm
                      00106     
                      00107 ;boolean flags 
  00000000            00108 F_VSYNC equ 0 ; vertical sync active
  00000001            00109 F_EVEN equ 1  ; even field
  00000002            00110 F_GTMR equ 2  ; game timer active
  00000003            00111 F_GSTOP equ 3 ; game stopped
  00000004            00112 F_COLL equ 4 ; collision flag
                      00113 #ifdef SOUND_SUPPORT 
  00000005            00114 F_SND equ 5 ; sound timer active 
  00000006            00115 F_NO_SND equ 6 ; quiet mode
                      00116 #endif
                      00117 ; xor mask used by pseudo random number generator 
  000000B4            00118 LFSR_TAPS equ 0xB4 
                      00119 
                      00120 ; delay in TCY cycles  5 TCY per µsec. 
                      00121 tcyDelay macro n  
                      00122     variable r=n%5
                      00123     variable q=n/5
                      00124     while r>1
                      00125     bra $+1
                      00126 r-=2
                      00127     endw
                      00128     if r==1
                      00129     nop
                      00130     endif
                      00131     if q
                      00132     movlw q
                      00133     bra $+1
                      00134     decfsz WREG
                      00135     bra $-2
                      00136     endif
                      00137     endm
                      00138 
                      00139 ; button selector case    
                      00140 case macro n, label
                      00141     btfsc buttons,n
                      00142     bra label
                      00143     endm
                      00144  
                      00145 #ifdef SOUND_SUPPORT    
                      00146 ; wait sound end
                      00147 wait_sound macro
                      00148     btfsc flags,F_SND
                      00149     bra $-1
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-19-2016  23:27:58         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00150     endm
                      00151 #endif
                      00152     
                      00153 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00154 ; software stack for arguments passing
                      00155 ; SP is Stack Pointer
                      00156 ; T is Top Of Stack
                      00157 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
                      00158 #define SP FSR1
                      00159 #define T INDF1
  00000020            00160 STACK_SIZE equ 32
                      00161  
  0000001F            00162 S0 equ 0x1F ; stack base address - 1
                      00163 
                      00164 push macro   ; ( -- n ) push WREG on stack
                      00165     movwi ++SP
                      00166     endm
                      00167 
                      00168 pop macro   ; ( n -- )  pop T in WREG
                      00169     moviw SP--
                      00170     endm
                      00171     
                      00172 drop macro  ; ( n -- ) ; discard T
                      00173    addfsr SP,-1
                      00174    endm
                      00175 
                      00176 drop_n macro n  ; discard n elements  n<32
                      00177     addfsr SP,-n
                      00178     endm
                      00179     
                      00180 lit macro  n ; ( -- n ) ; push a literal
                      00181    movlw n
                      00182    movwi ++SP 
                      00183    endm
                      00184 
                      00185 dup macro ; ( n -- n n ) duplicate T
                      00186     movfw T
                      00187     movwi ++SP
                      00188     endm
                      00189     
                      00190 over macro ; ( n1 n2 -- n1 n2 n1 )
                      00191     moviw -1[SP]
                      00192     push
                      00193     endm
                      00194     
                      00195 pick macro n  ; pick nth element of stack to WREG
                      00196     moviw -n[SP]
                      00197     endm
                      00198 
                      00199 insert macro n ;  insert WREG at position n on stack
                      00200    movwi -n[SP]
                      00201    endm
                      00202    
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-19-2016  23:27:58         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00203 inc_n macro n ; increament nth element of stack
                      00204     moviw -n[SP]
                      00205     incf WREG,F
                      00206     movwi -n[SP]
                      00207     endm
                      00208     
                      00209 dec_n macro n ; decreament nth element of stack
                      00210     moviw -n[SP]
                      00211     decf WREG,F
                      00212     movwi -n[SP]
                      00213     endm
                      00214     
                      00215 reserve macro n ; reserve n bytes on stack for local variables
                      00216     addfsr SP, n 
                      00217     endm
                      00218  
                      00219 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00220 ; parameter stack section    
                      00221 dstack udata 0x20
0020                  00222 _stack res 32
                      00223 ; game variables section 
  00000000            00224 GAME_VAR equ 0 ; game variables bank
                      00225 game_var udata 0x40 
                      00226 ; tetris game state
0040                  00227 tetrim res 1 ; active tretriminos 
0041                  00228 angle res 1 ; tetriminos rotatation angle in multiple of 90 degr. {0:3}
0042                  00229 tx  res 1 ; x coordinate
0043                  00230 ty  res 1 ; y coordinate
0044                  00231 scoreL res 1 ; game score  16 bits
0045                  00232 scoreH res 1 
0046                  00233 droppedL res 1  ; total
0047                  00234 droppedH res 1  ; dropped lines
                      00235   
                      00236  
                      00237 ; These 3 sections are used for video display buffering
                      00238 ; with indirect access using FSR0
                      00239 ; to form a contiguous address space. 
                      00240 ; total size 192 bytes. 48x32 pixels
                      00241 vb_b0    udata 0x50
0050                  00242 video_buffer_b0 res 32
                      00243 vb_b1    udata 0xA0
00A0                  00244 video_buffer_b1 res 80
                      00245 vb_b2    udata 0x120
0120                  00246 video_buffer_b2 res 80
                      00247  
                      00248 ;for code efficiency system variables
                      00249 ;are kept in common RAM section
                      00250 ;to avoid the need of banksel before accessing
                      00251 ; them. 
                      00252     udata_shr
                      00253 ;scan lines counter 16 bits
0000                  00254 lcountL res 1
0001                  00255 lcountH res 1
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-19-2016  23:27:58         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00256 ; boolean flags 
0002                  00257 flags res 1
                      00258 ; game timer
0003                  00259 gtimer res 1 
                      00260 #ifdef SOUND_SUPPORT 
                      00261 ; sound timer
0004                  00262 tone_tmr res 1 
                      00263 #endif 
                      00264 ; linear feedback shift register. PRNG register
0005                  00265 randL res 1 
0006                  00266 randH res 1 
                      00267 ; loop counter
0007                  00268 rcount res 1
                      00269 ; arithmetic accumulator A 16 bits
0008                  00270 accaL res 1
0009                  00271 accaH res 1
                      00272 ; arithmetic accumulator B 16 bits
000A                  00273 accbL res 1
000B                  00274 accbH res 1
                      00275 ; game pad buttons state
000C                  00276 buttons res 1
                      00277 ; program memory reader next nibble {0-3}
000D                  00278 nibble res 1
                      00279 ; temporary registers
000E                  00280 t0  res 1
000F                  00281 t1  res 1
                      00282   
                      00283 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00284 ; reset entry point
                      00285 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0010                  00286 rst: 
                      00287     org 0
0000   0023           00288     banksel ANSELA
0001   018C           00289     clrf ANSELA
0002   160C           00290     bsf ANSELA,PAD_PIN
0003   2???           00291     goto init
                      00292     
                      00293     org 4
                      00294 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;   
                      00295 ; interrupt service routine
                      00296 ; the only interrupt is on SYNC_PWM timer
                      00297 ; this intterrupt trigger once 
                      00298 ; for every horizontal line, i.e. 15748/sec.    
                      00299 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
0004                  00300 isr:
0004   003B           00301     banksel SYNC_PWMINTF
0005   103D           00302     bcf SYNC_PWMINTF,PRIF
0006   1800           00303     btfsc lcountH,0
0007   3???           00304     bra gt_255 ; lcount > 255
                      00305 ; lcount < 256
0008   08??           00306     movfw lcountL
0009   1903           00307     skpnz
000A   3???           00308     bra vsync_start
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-19-2016  23:27:58         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000B   3A03           00309     xorlw 3
000C   1903           00310     skpnz
000D   3???           00311     bra vsync_end
                      00312 ; check if visible line
000E   3046           00313     movlw FIRST_VIDEO
000F   02??           00314     subwf lcountL,W
0010   1C03           00315     skpc
0011   3???           00316     bra isr_exit
0012   3C7F           00317     sublw 4*YSIZE-1
0013   1803           00318     skpnc
                      00319 ; output video pixels for this line    
0014   2???           00320     call video_serialize 
0015   3???           00321     bra isr_exit 
                      00322 ; scanline 0 start vertical sync pulse    
0016                  00323 vsync_start: 
0016   003B           00324     banksel SYNC_PWMDCL
0017   3097           00325     movlw (HORZ_PERIOD-HORZ_PULSE)&0xff
0018   00B3           00326     movwf SYNC_PWMDCL
0019   3004           00327     movlw (HORZ_PERIOD-HORZ_PULSE)>>8
001A   00B4           00328     movwf SYNC_PWMDCH
001B   17BF           00329     bsf SYNC_PWMLDCON,LDA
001C   1400           00330     bsf flags, F_VSYNC
001D   3???           00331     bra isr_exit
                      00332 ; scanline 3 end vertical sync pulse
001E                  00333 vsync_end: 
001E   003B           00334     banksel SYNC_PWMDCL
001F   305E           00335     movlw HORZ_PULSE&0xff
0020   00B3           00336     movwf SYNC_PWMDCL
0021   3000           00337     movlw HORZ_PULSE>>8
0022   00B4           00338     movwf SYNC_PWMDCH
0023   17BF           00339     bsf SYNC_PWMLDCON,LDA
0024   1000           00340     bcf flags, F_VSYNC
0025   3???           00341     bra isr_exit
                      00342 ; scan line > 255    
0026                  00343 gt_255:
                      00344 ; check for end of field    
0026   3006           00345     movlw LAST_LINE&0xff
0027   1C80           00346     btfss flags,F_EVEN
0028   3E01           00347     addlw 1
0029   06??           00348     xorwf lcountL,W
002A   1D03           00349     skpz
002B   3???           00350     bra tasks
                      00351 ; end of field
                      00352 ; reset line counter    
002C   01??           00353     clrf lcountL
002D   01??           00354     clrf lcountH
002E   3002           00355     movlw 1<<F_EVEN
002F   06??           00356     xorwf flags,F ; toggle even field flag
0030   0009           00357     retfie
                      00358 ; round robin task scheduler
                      00359 ; each task execute once every 1/60th sec.
                      00360 ; condition:    
                      00361 ;   Task must complete inside
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-19-2016  23:27:58         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00362 ;   horizontal period. i.e. before SYNC_PWM period end.
                      00363 ; maximum 6 tasks slots available    
0031                  00364 tasks:
                      00365 ; task selector    
0031   08??           00366     movfw lcountL
0032   1903           00367     skpnz
0033   3???           00368     bra task0
0034   0389           00369     decf WREG
0035   1903           00370     skpnz 
0036   3???           00371     bra task1
0037   0389           00372     decf WREG
0038   1903           00373     skpnz
0039   3???           00374     bra task2
003A   3???           00375     bra isr_exit
003B                  00376 task0:
                      00377 #ifdef SOUND_SUPPORT    
                      00378 ; sound timer management   
003B   08??           00379     movfw tone_tmr
003C   1903           00380     skpnz
003D   3???           00381     bra isr_exit
003E   0B??           00382     decfsz tone_tmr,F
003F   3???           00383     bra isr_exit
0040   1280           00384     bcf flags,F_SND
0041   003B           00385     banksel AUDIO_PWMCON
0042   13AB           00386     bcf AUDIO_PWMCON,EN
0043   0021           00387     banksel TRISA
0044   160C           00388     bsf TRISA, AUDIO_PIN
                      00389 #endif    
0045   3???           00390     bra isr_exit
0046                  00391 task1:   
                      00392 ; game timer management   
0046   1900           00393     btfsc flags, F_GTMR
0047   0B??           00394     decfsz gtimer,F ; 
0048   3???           00395     bra isr_exit ;
0049   1100           00396     bcf flags, F_GTMR
004A   3???           00397     bra isr_exit ;
004B                  00398 task2:
                      00399 ; rotate lfsr, PRNG
004B   36??           00400     lsrf randH
004C   0C??           00401     rrf randL
004D   1803           00402     skpnc
004E   30B4           00403     movlw LFSR_TAPS
004F   06??           00404     xorwf randH
0050                  00405 isr_exit:
0050   0A??           00406     incf lcountL
0051   1903           00407     skpnz
0052   0A??           00408     incf lcountH
0053   0009           00409     retfie
                      00410 
                      00411 ;pause
                      00412 ; idle loop in multiple of 1/60 sec.
                      00413 ; input:
                      00414 ;   WREG=delay
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-19-2016  23:27:58         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00415 ; output:
                      00416 ;   none    
0054                  00417 pause: 
0054   00??           00418     movwf gtimer
0055   1500           00419     bsf flags, F_GTMR
0056   1900           00420     btfsc flags, F_GTMR
0057   3???           00421     bra $-1
0058   0008           00422     return
                      00423     
                      00424 ;div10    
                      00425 ; divsion by 10    
                      00426 ; needed to convert binary to BCD
                      00427 ; input:
                      00428 ;   acca dividend  16 bits
                      00429 ; output:
                      00430 ;   acca: quotient
                      00431 ;   accbL: remainder    
0059                  00432 div10:
0059   3011           00433     movlw 17
005A   00??           00434     movwf rcount
005B   01??           00435     clrf accbL
005C                  00436 div10_loop:
005C   300A           00437     movlw 10
005D   02??           00438     subwf accbL,W
005E   1803           00439     skpnc
005F   00??           00440     movwf accbL
0060   0D??           00441     rlf accaL
0061   0D??           00442     rlf accaH
0062   0D??           00443     rlf accbL
0063   0B??           00444     decfsz rcount
0064   3???           00445     bra div10_loop
0065   36??           00446     lsrf accbL
0066   0008           00447     return
                      00448     
                      00449 ;read_pad    
                      00450 ;read game pad
                      00451 ; a button is accepted if
                      00452 ; the Vadc value is below its threshold
                      00453 ; input:
                      00454 ;   none
                      00455 ; output:
                      00456 ;   'buttons' variable    
0067                  00457 read_pad:
0067   01??           00458     clrf buttons
0068   0021           00459     banksel ADCON0
0069   141D           00460     bsf ADCON0,ADON
                      00461     tcyDelay 5*4 ; délais d'acquisition 4µsec
  0000                    M     variable r=5*4%5
  0004                    M     variable q=5*4/5
                          M     while r>1
                          M     bra $+1
                          M r-=2
                          M     endw
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-19-2016  23:27:58         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if r==1
                          M     nop
                          M     endif
                          M     if q
006A   3004               M     movlw q
006B   3???               M     bra $+1
006C   0B89               M     decfsz WREG
006D   3???               M     bra $-2
                          M     endif
006E   149D           00462     bsf ADCON0,GO
006F   189D           00463     btfsc ADCON0,NOT_DONE
0070   3???           00464     bra $-1
0071   101D           00465     bcf ADCON0,ADON
                      00466 ; try each button from lower to upper
0072                  00467 try_a:
                      00468     try_button A_THR, try_b
0072   3040               M     movlw A_THR
0073   021C               M     subwf ADRESH,W
0074   1803               M     skpnc
0075   3???               M     bra try_b
0076   1600           00469     bsf buttons,BTN_A
0077   3???           00470     bra read_exit
0078                  00471 try_b:    
                      00472     try_button B_THR, try_rt
0078   3095               M     movlw B_THR
0079   021C               M     subwf ADRESH,W
007A   1803               M     skpnc
007B   3???               M     bra try_rt
007C   1680           00473     bsf buttons,BTN_B
007D   3???           00474     bra read_exit
007E                  00475 try_rt:
                      00476     try_button RT_THR, try_up
007E   30B5               M     movlw RT_THR
007F   021C               M     subwf ADRESH,W
0080   1803               M     skpnc
0081   3???               M     bra try_up
0082   1580           00477     bsf buttons,BTN_RT
0083   3???           00478     bra read_exit
0084                  00479 try_up:
                      00480     try_button UP_THR, try_lt
0084   30C6               M     movlw UP_THR
0085   021C               M     subwf ADRESH,W
0086   1803               M     skpnc
0087   3???               M     bra try_lt
0088   1400           00481     bsf buttons,BTN_UP
0089   3???           00482     bra read_exit
008A                  00483 try_lt:
                      00484     try_button LT_THR, try_dn
008A   30D1               M     movlw LT_THR
008B   021C               M     subwf ADRESH,W
008C   1803               M     skpnc
008D   3???               M     bra try_dn
008E   1500           00485     bsf buttons,BTN_LT
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-19-2016  23:27:58         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

008F   3???           00486     bra read_exit
0090                  00487 try_dn:
                      00488     try_button DN_THR, read_exit
0090   30D8               M     movlw DN_THR
0091   021C               M     subwf ADRESH,W
0092   1803               M     skpnc
0093   3???               M     bra read_exit
0094   1480           00489     bsf buttons,BTN_DN
0095                  00490 read_exit:
0095   0008           00491     return
                      00492 
                      00493 #ifdef SOUND_SUPPORT    
                      00494 ;tone
                      00495 ; play a tone
                      00496 ; input:
                      00497 ;   t   duration in multiple of 1/60 sec.
                      00498 ;   n   note index in tone_pr table
0096                  00499 tone: ; ( t n -- )
0096   0021           00500     banksel TRISA
0097   120C           00501     bcf TRISA,AUDIO_PIN
0098   003B           00502     banksel AUDIO_PWMPRL
0099   3581           00503     lslf T
009A   0801           00504     movfw T
009B   2???           00505     call tone_pr
009C   00A5           00506     movwf AUDIO_PWMPRL
009D   3689           00507     lsrf WREG
009E   00A3           00508     movwf AUDIO_PWMDCL
009F   0A01           00509     incf T,W
00A0   2???           00510     call tone_pr
00A1   00A6           00511     movwf AUDIO_PWMPRH
00A2   3689           00512     lsrf WREG
00A3   00A4           00513     movwf AUDIO_PWMDCH
00A4   1803           00514     skpnc
00A5   17A3           00515     bsf AUDIO_PWMDCL,7
                      00516     drop  ; n
00A6   317F               M    addfsr SP,-1
                      00517     pop   ; WREG=t
00A7   0017               M     moviw SP--
00A8   00??           00518     movwf tone_tmr
00A9   17AB           00519     bsf AUDIO_PWMCON,EN
00AA   17AF           00520     bsf AUDIO_PWMLDCON,LDA
00AB   1680           00521     bsf flags,F_SND
00AC   0008           00522     return
                      00523 #endif
                      00524     
                      00525 ; set_yptr    
                      00526 ; set FSR0 to point to
                      00527 ; video_buffer line y    
                      00528 ; input:
                      00529 ;   y  line number {0:YZISE-1}
                      00530 ; output:
                      00531 ;   FSR0 point to first byte of line y  in VIDEO_BUFFER
00AD                  00532 set_yptr: ; ( y -- )
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-19-2016  23:27:58         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00AD   3030           00533     movlw VIDEO_BUFFER&0xff
00AE   0084           00534     movwf FSR0L
00AF   3020           00535     movlw VIDEO_BUFFER>>8
00B0   0085           00536     movwf FSR0H
00B1   3581           00537     lslf T,F ; y*BPL
00B2   3501           00538     lslf T,W
00B3   0781           00539     addwf T,F
                      00540     pop
00B4   0017               M     moviw SP--
00B5   0784           00541     addwf FSR0L
00B6   0103           00542     clrw 
00B7   3D85           00543     addwfc FSR0H
00B8   0008           00544     return
                      00545     
                      00546 ;video_serialize
                      00547 ; serialise video pixels to output pin
                      00548 ; use EUSART in synchronous mode    
                      00549 ; called from isr    
                      00550 ; input:
                      00551 ;   none
                      00552 ; output:
                      00553 ;   none    
                      00554 ; NOTE: EUSART output Least Significant Bit first
                      00555 ;       LSB appear left on screen.
00B9                  00556 video_serialize: 
                      00557     tcyDelay HORZ_DLY ; horizontal center display
  0000                    M     variable r=HORZ_DLY%5
  000A                    M     variable q=HORZ_DLY/5
                          M     while r>1
                          M     bra $+1
                          M r-=2
                          M     endw
                          M     if r==1
                          M     nop
                          M     endif
                          M     if q
00B9   300A               M     movlw q
00BA   3???               M     bra $+1
00BB   0B89               M     decfsz WREG
00BC   3???               M     bra $-2
                          M     endif
                      00558 ; save FSR0    
00BD   0804           00559     movfw FSR0L
                      00560     push
00BE   001C               M     movwi ++SP
00BF   0805           00561     movfw FSR0H
                      00562     push
00C0   001C               M     movwi ++SP
                      00563 ;convert scanline to buffer line    
00C1   3046           00564     movlw FIRST_VIDEO
00C2   02??           00565     subwf lcountL,W
00C3   3689           00566     lsrf WREG  ; a pixel is 4 scan lines
00C4   3689           00567     lsrf WREG
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-19-2016  23:27:58         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00568     push      ; FSR0L FSR0H y
00C5   001C               M     movwi ++SP
00C6   2???           00569     call set_yptr ; FSR0L FSR0H
                      00570     lit BPL ; FSR0L FSR0H BPL
00C7   3006               M    movlw BPL
00C8   001C               M    movwi ++SP 
00C9   0023           00571     banksel RCSTA
00CA   179D           00572     bsf RCSTA,SPEN
                      00573 ;output BPL bytes through EUSART TX    
00CB                  00574 byte_serialize:    
00CB   0023           00575     banksel PIXEL_TXREG
00CC   0012           00576     moviw FSR0++
00CD   009A           00577     movwf PIXEL_TXREG
00CE   0020           00578     banksel TX_PIR
00CF   1E11           00579     btfss TX_PIR,TXIF
00D0   3???           00580     bra $-1
00D1   0B81           00581     decfsz T
00D2   3???           00582     bra byte_serialize
                      00583     drop ; discard bytes counter
00D3   317F               M    addfsr SP,-1
00D4   0023           00584     banksel PIXEL_TXREG
00D5   019A           00585     clrf PIXEL_TXREG
00D6   0020           00586     banksel TX_PIR
00D7   1E11           00587     btfss TX_PIR,TXIF
00D8   3???           00588     bra $-1
00D9   0023           00589     banksel RCSTA
00DA   139D           00590     bcf RCSTA, SPEN
                      00591 ;restore FSR0    
                      00592     pop
00DB   0017               M     moviw SP--
00DC   0085           00593     movwf FSR0H
                      00594     pop
00DD   0017               M     moviw SP--
00DE   0084           00595     movwf FSR0L
00DF   0008           00596     return
                      00597 
                      00598 ;set_pixel_ptr    
                      00599 ;set FSR0 pointer at byte containing pixel x,y
                      00600 ; input:
                      00601 ;   x,y coordinates of pixel in video_buffer    
                      00602 ; output:
                      00603 ;   WREG = pixel mask  
00E0                  00604 set_pixel_ptr:  ; ( x y -- )
00E0   2???           00605     call set_yptr
                      00606 ; FSR0+x/8
00E1   3601           00607     lsrf T,W   
00E2   3689           00608     lsrf WREG
00E3   3689           00609     lsrf WREG
00E4   0784           00610     addwf FSR0L
00E5   0103           00611     clrw
00E6   3D85           00612     addwfc FSR0H
                      00613 ;create bit mask    
00E7   3007           00614     movlw 7
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-19-2016  23:27:58         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00E8   0581           00615     andwf T,F ; T=bit position
00E9   3001           00616     movlw 0x1
00EA   1903           00617     skpnz 
00EB   3???           00618     bra mask01 ; least significant bit
00EC                  00619 mask00:
00EC   3589           00620     lslf WREG
00ED   0B81           00621     decfsz T
00EE   3???           00622     bra mask00
00EF                  00623 mask01:
                      00624     drop ; discard shift counter
00EF   317F               M    addfsr SP,-1
00F0   0008           00625     return
                      00626 
                      00627 ; xor_pixel
                      00628 ; inverse pixel at x,y coordinates
                      00629 ; input:
                      00630 ;   x,y pixel coordinates x{0:XSIZE-1},y{0:YSIZE-1}
                      00631 ; output:
                      00632 ;   set F_COLL boolean flag if collision
00F1                  00633 xor_pixel: ; ( x y -- )
00F1   2???           00634     call set_pixel_ptr
00F2   0680           00635     xorwf INDF0,F
00F3   0500           00636     andwf INDF0,W
00F4   1903           00637     skpnz
00F5   1600           00638     bsf flags, F_COLL
00F6   0008           00639     return
                      00640 
                      00641 ;xor_row    
                      00642 ; draw row of 4 pixels
                      00643 ; stop when n==0    
                      00644 ; input:
                      00645 ;   {x,y} left coordinates
                      00646 ;   n pixels to draw, 4 bits in high nibble
                      00647 ; output:
                      00648 ;   none
00F7                  00649 xor_row: ; ( n x y -- )
                      00650 ; check for empty row
                      00651     pick 2 ; check if n==0
00F7   3F7E               M     moviw -2[SP]
00F8   1903           00652     skpnz
00F9   3???           00653     bra xor_row_done ; row empty nothing to do
00FA   3589           00654     lslf WREG
                      00655     insert 2  ; save shifted n
00FB   3FFE               M    movwi -2[SP]
00FC   1C03           00656     skpc
00FD   3???           00657     bra xor_row02 ; bit==0 no draw
                      00658 ; bounds check x{0:XSIZE-1}    
                      00659     pick 1  ; WREG=x
00FE   3F7F               M     moviw -1[SP]
00FF   1B89           00660     btfsc WREG,7 
0100   3???           00661     bra xor_row02 ; x<0 out of screen
                      00662     over ; n x y x 
0101   3F7F               M     moviw -1[SP]
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-19-2016  23:27:58         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     push
0102   001C               M     movwi ++SP
                      00663     over ; n x y x y
0103   3F7F               M     moviw -1[SP]
                          M     push
0104   001C               M     movwi ++SP
0105   2???           00664     call xor_pixel ; -- n x y
0106                  00665 xor_row02:
                      00666     inc_n 1  ; x+=1
0106   3F7F               M     moviw -1[SP]
0107   0A89               M     incf WREG,F
0108   3FFF               M     movwi -1[SP]
0109   3???           00667     bra xor_row
010A                  00668 xor_row_done: ; n x y
                      00669     drop_n 3  ; clean stack
010A   317D               M     addfsr SP,-3
010B   0008           00670     return
                      00671 
                      00672 ;get_flash_word    
                      00673 ; read program memory word
                      00674 ; input:
                      00675 ;   ofs offset in table {0:255}    
                      00676 ;   caller prepare PMADR to point table
                      00677 ; output:
                      00678 ;   PMDATH:PMDAL contain 14 bits data word
                      00679 ; side effect:    
                      00680 ;   set 'nibble' counter 
                      00681 ;   modify BSR    
010C                  00682 get_flash_word: ; ( ofs -- )
010C   0023           00683     banksel PMADR
                      00684     pop
010D   0017               M     moviw SP--
010E   0791           00685     addwf PMADRL,F
010F   0103           00686     clrw 
0110   3D92           00687     addwfc PMADRH,F
0111                  00688 read_flash:    
0111   1315           00689     bcf PMCON1,CFGS
0112   1415           00690     bsf PMCON1, RD
0113   0000           00691     nop
0114   0000           00692     nop
0115   0E14           00693     swapf PMDATH,W
0116   3903           00694     andlw 3
0117   1903           00695     skpnz
0118   3003           00696     movlw 3
0119   00??           00697     movwf nibble
011A   0008           00698     return
                      00699 
                      00700 ;next_flash_word    
                      00701 ; increment PMADR 
                      00702 ; and read next flash word    
                      00703 ; input:
                      00704 ;   none
                      00705 ; output:
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-19-2016  23:27:58         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00706 ;   PMDAT    
                      00707 ; side effect:
                      00708 ;   set 'nibble' counter    
                      00709 ;   modify BSR
011B                  00710 next_flash_word:
011B   0023           00711     banksel PMADR
011C   0A91           00712     incf PMADRL
011D   1903           00713     skpnz
011E   0A92           00714     incf PMADRH
011F   3???           00715     bra read_flash
                      00716 
                      00717 ;get_nibble    
                      00718 ;get nibble from PMDAT
                      00719 ; input:
                      00720 ;   none    
                      00721 ; output:
                      00722 ;   T=nibble in bits 7:4
                      00723 ; side effect:    
                      00724 ;   decrement 'nibble' variable    
                      00725 ;   modify BSR
0120                  00726 get_nibble: ; ( -- nibble )
0120   08??           00727     movfw nibble
0121   1903           00728     skpnz 
0122   2???           00729     call next_flash_word
                      00730 ; select nibble in word    
0123   3A03           00731     xorlw 3
0124   1903           00732     skpnz
0125   3???           00733     bra row0
0126   3A03           00734     xorlw 3
0127   3A02           00735     xorlw 2
0128   1903           00736     skpnz
0129   3???           00737     bra row1
012A                  00738 row2:
012A   0E13           00739     swapf PMDATL,W
012B   3???           00740     bra nibble_mask
012C                  00741 row1:    
012C   0813           00742     movfw PMDATL
012D   3???           00743     bra nibble_mask
012E                  00744 row0:    
012E   0E14           00745     swapf PMDATH,W
012F                  00746 nibble_mask:
012F   39F0           00747     andlw 0xf0
                      00748     push
0130   001C               M     movwi ++SP
0131   03??           00749     decf nibble,F ; advance nibble counter
0132   0008           00750     return
                      00751 
                      00752 ;bitmap
                      00753 ; apply a bitmap from program memory to video_buffer
                      00754 ; a bitmap is 4 pixels wide and any number of rows    
                      00755 ; input:
                      00756 ;   PMADR  point to table in program memory    
                      00757 ;   x,y  left/top coordinates in video_buffer
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-19-2016  23:27:58         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00758 ;   ofs  offset of bitmap in table
                      00759 ; output:
                      00760 ;   none
0133                  00761 bitmap: ; ( x y ofs -- )
0133   2???           00762     call get_flash_word  ; x y ofs -- x y 
0134                  00763 bmp00:
0134   08??           00764     movfw nibble
                      00765     push    ; x y cntr
0135   001C               M     movwi ++SP
0136                  00766 bmp02:    
0136   2???           00767     call get_nibble ; x y cntr -- x y cntr n 
                      00768     pick 3 ; x
0137   3F7D               M     moviw -3[SP]
                      00769     push    ; x y cntr n x
0138   001C               M     movwi ++SP
                      00770     pick 3  ; y
0139   3F7D               M     moviw -3[SP]
                      00771     push      ; x y cntr n x y
013A   001C               M     movwi ++SP
013B   2???           00772     call xor_row ; x y cntr n x y -- x y cntr
                      00773     inc_n 1 ; y+=1
013C   3F7F               M     moviw -1[SP]
013D   0A89               M     incf WREG,F
013E   3FFF               M     movwi -1[SP]
013F   0B81           00774     decfsz T
0140   3???           00775     bra bmp02
0141   0E14           00776     swapf PMDATH,W
0142   3903           00777     andlw 3
0143   1903           00778     skpnz
0144   3???           00779     bra bmp01
                      00780     drop_n 3  ; clean stack
0145   317D               M     addfsr SP,-3
0146   0008           00781     return
0147                  00782 bmp01: ; this bitmap use another program word
                      00783     drop  ; x y 
0147   317F               M    addfsr SP,-1
0148   2???           00784     call next_flash_word
0149   3???           00785     bra bmp00
                      00786     
                      00787 ;print_char     
                      00788 ; draw character in video_buffer 
                      00789 ; input:
                      00790 ;   x,y left/top coordinates
                      00791 ;   c   character to print 
                      00792 ; output:
                      00793 ;   none    
014A                  00794 print_char: ; ( x y c -- )
014A   3581           00795     lslf T ; 2 words per table entry
014B   0023           00796     banksel PMADR
014C   30??           00797     movlw low(digits)
014D   0091           00798     movwf PMADRL
014E   30??           00799     movlw high(digits)
014F   0092           00800     movwf PMADRH
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-19-2016  23:27:58         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0150   2???           00801     call bitmap ; x y ofs -- 
0151   0008           00802     return
                      00803 
                      00804 ;print_tetrim    
                      00805 ; print current tetriminos
                      00806 ; input:
                      00807 ;   none
                      00808 ; use game variables   
                      00809 ;   titrim: tetriminos id
                      00810 ;   angle: rotation angle    
                      00811 ;   tx,ty  left/top coordinates
                      00812 ; output:
                      00813 ;   f boolean collision flag   
                      00814 ; side effect:    
                      00815 ;   modify BSR
0152                  00816 print_tetrim: ; ( -- f )
0152   1200           00817     bcf flags, F_COLL ; if collision will be set by xor_pixel
0153   0020           00818     banksel GAME_VAR
0154   08??           00819     movfw tx
                      00820     push    ; -- x
0155   001C               M     movwi ++SP
0156   08??           00821     movfw ty
                      00822     push    ; -- x y 
0157   001C               M     movwi ++SP
0158   08??           00823     movfw angle
                      00824     push    ; -- x y a
0159   001C               M     movwi ++SP
015A   35??           00825     lslf tetrim,W   ; 4 words per table entry, one for each angle
015B   3589           00826     lslf WREG
015C   3A18           00827     xorlw 24
015D   1903           00828     skpnz
015E   3581           00829     lslf T,F
015F   3A18           00830     xorlw 24
0160   0781           00831     addwf T,F  ; x y ofs
0161   0023           00832     banksel PMADR
0162   30??           00833     movlw low(tetriminos)
0163   0091           00834     movwf PMADRL
0164   30??           00835     movlw high(tetriminos)
0165   0092           00836     movwf PMADRH
0166   2???           00837     call bitmap
                      00838     lit 0
0167   3000               M    movlw 0
0168   001C               M    movwi ++SP 
0169   1A00           00839     btfsc flags, F_COLL
016A   0A81           00840     incf T,F
016B   0008           00841     return
                      00842 
                      00843 ;print_label    
                      00844 ;print a text line stored in program memory
                      00845 ; text terminated by 255
                      00846 ; input: 
                      00847 ;  x,y left coordinates
                      00848 ;  PCLH= high(table)
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-19-2016  23:27:58         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00849 ;  T=low(table) 
                      00850 ; output:
                      00851 ;   none
016C                  00852 print_label: ; ( x y tableL -- )
016C   0801           00853     movfw T     ; WREG= labelL
016D   000A           00854     callw      
016E   1B89           00855     btfsc WREG,7
016F   3???           00856     bra prt_lbl_done
0170   00??           00857     movwf t1
                      00858     pick 2  ; WREG=x
0171   3F7E               M     moviw -2[SP]
                      00859     push    ; x y labelL x 
0172   001C               M     movwi ++SP
                      00860     pick 2  ; WREG=y
0173   3F7E               M     moviw -2[SP]
                      00861     push    ; x y labelL x y
0174   001C               M     movwi ++SP
0175   08??           00862     movfw t1  ; WREG = c
                      00863     push    ; x y labelL x y c
0176   001C               M     movwi ++SP
0177   2???           00864     call print_char ; x y labelL x y c -- x y labelL
0178   3001           00865     movlw 1
0179   0781           00866     addwf T,F ; advance to next character in table
017A   0103           00867     clrw
017B   3D8A           00868     addwfc PCLATH,F
                      00869     pick 2    ; x
017C   3F7E               M     moviw -2[SP]
017D   3E04           00870     addlw 4   ; x+=4
                      00871     insert 2  
017E   3FFE               M    movwi -2[SP]
017F   3???           00872     bra print_label
0180                  00873 prt_lbl_done:
                      00874     drop_n 3
0180   317D               M     addfsr SP,-3
0181   0008           00875     return
                      00876     
                      00877 ;print_int
                      00878 ;print an integer
                      00879 ;from right to left ( least significant digit first)
                      00880 ; input:    
                      00881 ;   y  line number 
                      00882 ;   number to print in acca    
                      00883 ; output:
                      00884 ;   none
                      00885 ; condition:    
                      00886 ;   accbL contain digit after div10 call    
0182                  00887 print_int: ; ( y -- )
                      00888     dup     ; y y
0182   0801               M     movfw T
0183   001C               M     movwi ++SP
0184   302B           00889     movlw XSIZE-5 ; print begin at right border
                      00890     insert 1    ; x y
0185   3FFF               M    movwi -1[SP]
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-19-2016  23:27:58         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0186                  00891 print_int00:    
0186   08??           00892     movfw accaH
0187   04??           00893     iorwf accaL,W
0188   1903           00894     skpnz
0189   3???           00895     bra print_last
                      00896     over    ; x y x 
018A   3F7F               M     moviw -1[SP]
                          M     push
018B   001C               M     movwi ++SP
                      00897     over    ; x y x y
018C   3F7F               M     moviw -1[SP]
                          M     push
018D   001C               M     movwi ++SP
018E   2???           00898     call div10
018F   08??           00899     movfw accbL ; remainder of division
                      00900     push   ; x y x y d
0190   001C               M     movwi ++SP
0191   2???           00901     call print_char ; -- x y 
                      00902     pick 1  ; x
0192   3F7F               M     moviw -1[SP]
0193   3EFC           00903     addlw 252 ; x-4
                      00904     insert 1
0194   3FFF               M    movwi -1[SP]
0195   3???           00905     bra print_int00
0196                  00906 print_last:
                      00907     pick 1  ; x 
0196   3F7F               M     moviw -1[SP]
0197   3A2B           00908     xorlw XSIZE-5 ; x at right margin?
0198   1D03           00909     skpz
0199   3???           00910     bra no_zero
                      00911     push          ; yes print a zero
019A   001C               M     movwi ++SP
019B   3???           00912     bra print_char
019C                  00913 no_zero:
                      00914     drop_n 2
019C   317E               M     addfsr SP,-2
019D   0008           00915     return
                      00916     
                      00917 ; vline    
                      00918 ;draw well vertical wall ( x y -- )
                      00919 ; inputs:
                      00920 ;   {x,y} bottom coordinates
                      00921 ; output:
                      00922 ;   none    
019E                  00923 vline:  ; ( x y -- ) 
                      00924     over
019E   3F7F               M     moviw -1[SP]
                          M     push
019F   001C               M     movwi ++SP
                      00925     over
01A0   3F7F               M     moviw -1[SP]
                          M     push
01A1   001C               M     movwi ++SP
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-19-2016  23:27:58         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01A2   2???           00926     call xor_pixel
01A3   0B81           00927     decfsz T,F
01A4   3???           00928     bra vline
01A5   2???           00929     call xor_pixel
01A6   0008           00930     return
                      00931     
                      00932 ; drop 1 row
                      00933 ; input:
                      00934 ;   r  row to drop
                      00935 ; output:
                      00936 ;   none
01A7                  00937 drop1: ; ( r -- )
                      00938     reserve 1 ; r x  
01A7   3141               M     addfsr SP, 1 
01A8                  00939 row_loop: ; y{r:1}
01A8   300A           00940     movlw 10
01A9   0081           00941     movwf T ; -- r x
01AA                  00942 col_loop:  ; x{10:1}
                      00943     dup   ; -- r x x
01AA   0801               M     movfw T
01AB   001C               M     movwi ++SP
                      00944     pick 2
01AC   3F7E               M     moviw -2[SP]
01AD   0389           00945     decf WREG
                      00946     push  ; -- r x x r-1
01AE   001C               M     movwi ++SP
01AF   2???           00947     call set_pixel_ptr
01B0   00??           00948     movwf t0
01B1   0500           00949     andwf INDF0,W
01B2   00??           00950     movwf t1
01B3   3006           00951     movlw BPL
01B4   0784           00952     addwf FSR0L
01B5   09??           00953     comf t0,W
01B6   0580           00954     andwf INDF0,F
01B7   08??           00955     movfw t1
01B8   0480           00956     iorwf INDF0,F
01B9                  00957 next_pixel:    
01B9   0B81           00958     decfsz T    ; r x-1 
01BA   3???           00959     bra col_loop
                      00960     dec_n 1  ; dec r
01BB   3F7F               M     moviw -1[SP]
01BC   0389               M     decf WREG,F
01BD   3FFF               M     movwi -1[SP]
01BE   1D03           00961     skpz 
01BF   3???           00962     bra row_loop
                      00963     drop_n 2
01C0   317E               M     addfsr SP,-2
01C1   0008           00964     return
                      00965     
                      00966     
  00000000            00967 ROW_EMPTY equ 0     
  0000000A            00968 ROW_FULL equ 10 ; 10 bits in row
                      00969 ; query_row 
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-19-2016  23:27:58         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00970 ; check the state of well row
                      00971 ; input:
                      00972 ;   s number of bits set initialized at 0 by caller    
                      00973 ;   r row number: 0 top, 21 bottom  
                      00974 ; output:    
                      00975 ;   s={0:10}  number of bits set
01C2                  00976 query_row: ; ( s=0 r -- s=0:10 )
                      00977     lit 10 ; s r x   ; check x from  10 to 1
01C2   300A               M    movlw 10
01C3   001C               M    movwi ++SP 
01C4                  00978 qr00:
                      00979     dup   ; s r x x
01C4   0801               M     movfw T
01C5   001C               M     movwi ++SP
                      00980     pick 2 
01C6   3F7E               M     moviw -2[SP]
                      00981     push  ; s r x x y
01C7   001C               M     movwi ++SP
01C8   2???           00982     call set_pixel_ptr ; -- s r x
01C9   0500           00983     andwf INDF0,W
01CA   1903           00984     skpnz   ; Z modified by get_pixel
01CB   3???           00985     bra qr01
                      00986     inc_n 2
01CC   3F7E               M     moviw -2[SP]
01CD   0A89               M     incf WREG,F
01CE   3FFE               M     movwi -2[SP]
01CF                  00987 qr01:    
01CF   0B81           00988     decfsz T
01D0   3???           00989     bra qr00
                      00990     drop_n 2 ; -- s
01D1   317E               M     addfsr SP,-2
01D2   0008           00991     return
                      00992 
                      00993 ; count and drop full rows
                      00994 ; input:
                      00995 ;   none
                      00996 ; output:
                      00997 ;   n number of droppend rows
                      00998 ;condition:
                      00999 ;  check each row from bottom up
                      01000 ;  stop at first empty row
                      01001 ;  full rows are dropped    
01D3                  01002 count_full: ; ( -- n)
                      01003     lit 0 ; full rows counter
01D3   3000               M    movlw 0
01D4   001C               M    movwi ++SP 
                      01004     lit 21 ; row number {21:1}
01D5   3015               M    movlw 21
01D6   001C               M    movwi ++SP 
01D7                  01005 count_loop:
                      01006     lit 0   ; n r s  number of bits set
01D7   3000               M    movlw 0
01D8   001C               M    movwi ++SP 
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-19-2016  23:27:58         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01007     over    ; n r s r
01D9   3F7F               M     moviw -1[SP]
                          M     push
01DA   001C               M     movwi ++SP
01DB   2???           01008     call query_row ; n r s r -- n r s
                      01009     pop     ; n r
01DC   0017               M     moviw SP--
01DD   1903           01010     skpnz
01DE   3???           01011     bra count_done
01DF   3A0A           01012     xorlw ROW_FULL
01E0   1D03           01013     skpz
01E1   3???           01014     bra next_row
                      01015 ; this is a full row    
                      01016     inc_n 1 ; increment n
01E2   3F7F               M     moviw -1[SP]
01E3   0A89               M     incf WREG,F
01E4   3FFF               M     movwi -1[SP]
                      01017     dup    ; n r r
01E5   0801               M     movfw T
01E6   001C               M     movwi ++SP
01E7   2???           01018     call drop1 ; n r r -- n r
01E8   0A81           01019     incf T,F
01E9                  01020 next_row:
01E9   0B81           01021     decfsz T,F
01EA   3???           01022     bra count_loop
01EB                  01023 count_done:
                      01024     drop   ; n r -- n
01EB   317F               M    addfsr SP,-1
01EC   0008           01025     return
                      01026 
                      01027 ;new_tminos    
                      01028 ; generate a new tetriminos
                      01029 ; input:
                      01030 ;   none
                      01031 ; output:
                      01032 ;   none
01ED                  01033 new_tminos:
01ED   0020           01034     banksel GAME_VAR
01EE   3007           01035     movlw 7
01EF   05??           01036     andwf randL,W
01F0   3A07           01037     xorlw 7
01F1   1D03           01038     skpz
01F2   3A07           01039     xorlw 7
01F3   00??           01040     movwf tetrim
01F4   3003           01041     movlw 3
01F5   05??           01042     andwf randH,W
01F6   00??           01043     movwf angle
01F7   3004           01044     movlw 4
01F8   00??           01045     movwf tx
01F9   01??           01046     clrf ty
01FA   2???           01047     call coll_test
01FB   1D03           01048     skpz
01FC   1580           01049     bsf flags, F_GSTOP
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-19-2016  23:27:58         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01FD   0008           01050     return
                      01051 
                      01052 ;wait_start    
                      01053 ; wait player start signal
                      01054 ; button A pressed    
                      01055 ; input:
                      01056 ;   none
                      01057 ; output:
                      01058 ;   none
01FE                  01059 wait_start:
                      01060 #ifdef SOUND_SUPPORT    
01FE   0103           01061     clrw
01FF   2???           01062     call korobeiniki
                      01063     push    ; count
0200   001C               M     movwi ++SP
                      01064     lit 0   ; sequence
0201   3000               M    movlw 0
0202   001C               M    movwi ++SP 
0203                  01065 koro:
0203   1B00           01066     btfsc flags, F_NO_SND
0204   3???           01067     bra no_sound
0205   0A81           01068     incf T,F ; -- count sequence
0206   0801           01069     movfw T  ; WREG=sequence
0207   2???           01070     call korobeiniki
                      01071     push    ; -- count sequence duration
0208   001C               M     movwi ++SP
                      01072     inc_n 1 ;
0209   3F7F               M     moviw -1[SP]
020A   0A89               M     incf WREG,F
020B   3FFF               M     movwi -1[SP]
                      01073     pick 1  
020C   3F7F               M     moviw -1[SP]
020D   2???           01074     call korobeiniki
                      01075     push    ; -- count nidx duration note
020E   001C               M     movwi ++SP
020F   2???           01076     call tone  ; -- count nidx 
                      01077     wait_sound
0210   1A80               M     btfsc flags,F_SND
0211   3???               M     bra $-1
0212                  01078 no_sound:    
0212   2???           01079     call read_pad
0213   1A00           01080     btfsc buttons, BTN_A
0214   3???           01081     bra wait_end
0215   1A80           01082     btfsc buttons, BTN_B
0216   1700           01083     bsf flags, F_NO_SND
                      01084     dec_n 1
0217   3F7F               M     moviw -1[SP]
0218   0389               M     decf WREG,F
0219   3FFF               M     movwi -1[SP]
021A   1D03           01085     skpz
021B   3???           01086     bra koro
                      01087     drop_n 2
021C   317E               M     addfsr SP,-2
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-19-2016  23:27:58         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

021D   303C           01088     movlw 60
021E   2???           01089     call pause
021F   3???           01090     bra wait_start
0220                  01091 wait_end:    
                      01092     drop_n 2
0220   317E               M     addfsr SP,-2
                      01093 #else
                      01094     movlw 20
                      01095     call pause
                      01096     call read_pad
                      01097     btfss buttons, BTN_A
                      01098     bra wait_start
                      01099 #endif    
0221   1180           01100     bcf flags, F_GSTOP
0222   0008           01101     return
                      01102  
                      01103     
                      01104 ;coll_test
                      01105 ; collision test
                      01106 ; after rotation or translation
                      01107 ; undo last action if collision    
                      01108 ; input:
                      01109 ;   none
                      01110 ; output:
                      01111 ;   WREG=f collision flag 0|1
                      01112 ;   Z==0 no collision    
0223                  01113 coll_test: 
0223   2???           01114     call print_tetrim ; -- f
0224   2???           01115     call print_tetrim ; -- f f
                      01116     drop
0225   317F               M    addfsr SP,-1
0226   0020           01117     banksel GAME_VAR
                      01118     pop
0227   0017               M     moviw SP--
0228   0008           01119     return
                      01120 
                      01121 ;update_display    
                      01122 ; print 'score' and 'dropped' values
                      01123 ; input:
                      01124 ;   none
                      01125 ; output:
                      01126 ;   none
0229                  01127 update_display:    
                      01128 ; print score
0229   0020           01129     banksel GAME_VAR
022A   08??           01130     movfw scoreL
022B   00??           01131     movwf accaL
022C   08??           01132     movfw scoreH
022D   00??           01133     movwf accaH
                      01134     lit 6
022E   3006               M    movlw 6
022F   001C               M    movwi ++SP 
0230   2???           01135     call print_int
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-19-2016  23:27:58         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01136 ;print dropped line
0231   0020           01137     banksel GAME_VAR
0232   08??           01138     movfw droppedL
0233   00??           01139     movwf accaL
0234   08??           01140     movfw droppedH
0235   00??           01141     movwf accaH
                      01142     lit 18
0236   3012               M    movlw 18
0237   001C               M    movwi ++SP 
0238   2???           01143     call print_int
0239   0008           01144     return
                      01145 
                      01146 ;prompt
                      01147 ; print prompt message    
023A                  01148 prompt:
                      01149     lit 0
023A   3000               M    movlw 0
023B   001C               M    movwi ++SP 
                      01150     lit 24
023C   3018               M    movlw 24
023D   001C               M    movwi ++SP 
023E   31??           01151     movlp high(lbl_press)
                      01152     lit low(lbl_press)
023F   30??               M    movlw low(lbl_press)
0240   001C               M    movwi ++SP 
0241   2???           01153     call print_label
0242   0008           01154     return
                      01155     
                      01156 ;;;;;;;;;;;;;;;;;;;;;;;;;;
                      01157 ; hardware initialization
                      01158 ;;;;;;;;;;;;;;;;;;;;;;;;;;    
0243                  01159 init:
                      01160 ; parameter stack initialization    
0243   0187           01161     clrf FSR1H
0244   301F           01162     movlw S0
0245   0086           01163     movwf FSR1L
                      01164 ;configure EUSART in sychronsous mode
                      01165 ;to use as pixel serializer
0246   3002           01166     movlw 2
0247   009B           01167     movwf SPBRGL
0248   019C           01168     clrf SPBRGH
0249   019A           01169     clrf TXREG
024A   30B0           01170     movlw (1<<SYNC)|(1<<CSRC)|(1<<TXEN)
024B   009E           01171     movwf TXSTA
024C   179D           01172     bsf RCSTA, SPEN
024D   30CF           01173     movlw ~((1<<CREN)|(1<<SREN))
024E   059D           01174     andwf RCSTA
                      01175 ; ADC configuration
024F   0021           01176     banksel ADCON0
0250   300C           01177     movlw (PAD_CHS<<CHS0)
0251   009D           01178     movwf ADCON0
0252   3020           01179     movlw (2<<ADCS0)
0253   009E           01180     movwf ADCON1
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-19-2016  23:27:58         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0254   30F8           01181     movlw ~((1<<SYNC_OUT)|(1<<VIDEO_OUT)|(1<<LED_PIN))
0255   058C           01182     andwf TRISA,F
0256   0024           01183     banksel WPUA
0257   120C           01184     bcf WPUA, PAD_PIN
                      01185 ;;;;;;;;;;;;;;;;;;;;;    
0258   0022           01186     banksel VIDEO_LAT
0259   108C           01187     bcf VIDEO_LAT,VIDEO_OUT
025A   100C           01188     bcf LATA,LED_PIN
                      01189 #ifdef SOUND_SUPPORT    
                      01190 ; audio pwm initialization
025B   120C           01191     bcf LATA,AUDIO_PIN
025C   0022           01192     banksel APFCON
025D   149D           01193     bsf APFCON,P2SEL
025E   003B           01194     banksel AUDIO_PWMPHL
025F   01A1           01195     clrf AUDIO_PWMPHL
0260   01A2           01196     clrf AUDIO_PWMPHH
0261   01A7           01197     clrf AUDIO_PWMOFL
0262   01A8           01198     clrf AUDIO_PWMOFH
0263   172B           01199     bsf AUDIO_PWMCON,OE
                      01200 #else
                      01201     banksel SYNC_PWMPH
                      01202 #endif   
                      01203 ; configure pwm video sync for horizontal period
0264   01B1           01204     clrf SYNC_PWMPH
0265   01B2           01205     clrf SYNC_PWMPH+1
0266   01BF           01206     clrf SYNC_PWMLDCON
0267   30F5           01207     movlw HORZ_PERIOD&0XFF
0268   00B5           01208     movwf SYNC_PWMPRL
0269   3004           01209     movlw HORZ_PERIOD>>8
026A   00B6           01210     movwf SYNC_PWMPRH
026B   01BE           01211     clrf SYNC_PWMCLKCON
026C   30D0           01212     movlw (3<<OE)|(1<<POL)
026D   00BB           01213     movwf SYNC_PWMCON
026E   305E           01214     movlw HORZ_PULSE&0xff
026F   00B3           01215     movwf SYNC_PWMDCL
0270   3000           01216     movlw HORZ_PULSE>>8
0271   00B4           01217     movwf SYNC_PWMDCH
0272   17BF           01218     bsf SYNC_PWMLDCON,LDA
                      01219    ;enable video interrupt on period match
0273   103D           01220     bcf SYNC_PWMINTF,PRIF
0274   143C           01221     bsf SYNC_PWMINTE,PRIE
                      01222     ; enable peripheral interrupt
0275   0021           01223     banksel SYNC_PIE
0276   1713           01224     bsf SYNC_PIE,SYNC_IE
                      01225     ;enable interrupts
0277   30C0           01226     movlw (1<<GIE)|(1<<PEIE)
0278   008B           01227     movwf INTCON
0279   01??           01228     clrf lcountL
027A   01??           01229     clrf lcountH
027B   01??           01230     clrf flags
                      01231     ; seed lfsr PRNG
027C   30AC           01232     movlw 0xAC
027D   00??           01233     movwf randL
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-19-2016  23:27:58         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

027E   30E1           01234     movlw 0xE1
027F   00??           01235     movwf randH
                      01236 ;;;;;;;;;;;;;;;;;;;;;
                      01237 ; game initialization
                      01238 ;;;;;;;;;;;;;;;;;;;;;    
  0000000A            01239 WELL_WIDTH equ 10
  00000016            01240 WELL_DEPTH equ 22 
0280                  01241 game_init:
                      01242 ; clear_screen
                      01243     lit 0
0280   3000               M    movlw 0
0281   001C               M    movwi ++SP 
0282   2???           01244     call set_yptr
0283   30C0           01245     movlw BUFFER_SIZE
                      01246     push  ; T=byte count  
0284   001C               M     movwi ++SP
0285   3000           01247     movlw 0
0286                  01248 cls_loop:    
0286   001A           01249     movwi FSR0++
0287   0B81           01250     decfsz T
0288   3???           01251     bra cls_loop
                      01252     drop
0289   317F               M    addfsr SP,-1
                      01253 ; draw game well walls
                      01254     lit 0   ; x 
028A   3000               M    movlw 0
028B   001C               M    movwi ++SP 
                      01255     lit WELL_DEPTH-1  ; x y
028C   3015               M    movlw WELL_DEPTH-1
028D   001C               M    movwi ++SP 
028E   2???           01256     call vline ; x y --
                      01257     lit 11
028F   300B               M    movlw 11
0290   001C               M    movwi ++SP 
                      01258     lit WELL_DEPTH-1
0291   3015               M    movlw WELL_DEPTH-1
0292   001C               M    movwi ++SP 
0293   2???           01259     call vline 
                      01260     lit WELL_WIDTH+1 ; x 
0294   300B               M    movlw WELL_WIDTH+1
0295   001C               M    movwi ++SP 
                      01261     lit WELL_DEPTH   ; x y 
0296   3016               M    movlw WELL_DEPTH
0297   001C               M    movwi ++SP 
                      01262 ; draw well bottom    
0298                  01263 hline:
                      01264     over
0298   3F7F               M     moviw -1[SP]
                          M     push
0299   001C               M     movwi ++SP
                      01265     over
029A   3F7F               M     moviw -1[SP]
                          M     push
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-19-2016  23:27:58         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

029B   001C               M     movwi ++SP
029C   2???           01266     call xor_pixel
                      01267     pick 1
029D   3F7F               M     moviw -1[SP]
029E   0389           01268     decf WREG
                      01269     insert 1
029F   3FFF               M    movwi -1[SP]
02A0   1D03           01270     skpz
02A1   3???           01271     bra hline
02A2   2???           01272     call xor_pixel
                      01273 ; print "SCORE" label    
                      01274     lit WELL_WIDTH+3 ; x
02A3   300D               M    movlw WELL_WIDTH+3
02A4   001C               M    movwi ++SP 
                      01275     lit 0            ; y
02A5   3000               M    movlw 0
02A6   001C               M    movwi ++SP 
02A7   31??           01276     movlp high(lbl_score)
                      01277     lit low(lbl_score)  
02A8   30??               M    movlw low(lbl_score)
02A9   001C               M    movwi ++SP 
02AA   2???           01278     call print_label
                      01279 ; print "LINES" label    
                      01280     lit WELL_WIDTH+3 ; x
02AB   300D               M    movlw WELL_WIDTH+3
02AC   001C               M    movwi ++SP 
                      01281     lit 12           ; y
02AD   300C               M    movlw 12
02AE   001C               M    movwi ++SP 
02AF   31??           01282     movlp high(lbl_lines)
                      01283     lit low(lbl_lines)
02B0   30??               M    movlw low(lbl_lines)
02B1   001C               M    movwi ++SP 
02B2   2???           01284     call print_label
                      01285 ; variables initialization
02B3   1580           01286     bsf flags,F_GSTOP
02B4   0020           01287     banksel GAME_VAR
02B5   01??           01288     clrf scoreL
02B6   01??           01289     clrf scoreH
02B7   01??           01290     clrf droppedL
02B8   01??           01291     clrf droppedH
                      01292 
                      01293 ;;;;;;;;;;;;;;;;;;;;;;;;;
                      01294 ;   game logic
                      01295 ;;;;;;;;;;;;;;;;;;;;;;;;;    
02B9                  01296 tetris:
02B9   2???           01297     call update_display
                      01298 ;print start prompt
02BA   2???           01299     call prompt
                      01300 ; wait button A press
                      01301 ; to start game    
02BB   2???           01302     call wait_start 
                      01303 ; delete prompt
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-19-2016  23:27:58         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02BC   2???           01304     call prompt
                      01305 ; game start here
02BD                  01306 game_loop:
                      01307 ; generate new tetriminos
                      01308 ; if collision at this stage
                      01309 ; game is over
02BD   2???           01310     call new_tminos
02BE   1D80           01311     btfss flags, F_GSTOP
02BF   3???           01312     bra fall_loop
                      01313 ; game_over
02C0                  01314 game_over:
                      01315 #ifdef ANIMATION    
                      01316     lit 10
02C0   300A               M    movlw 10
02C1   001C               M    movwi ++SP 
                      01317     lit 0
02C2   3000               M    movlw 0
02C3   001C               M    movwi ++SP 
02C4                  01318 clr00:    
                      01319     over
02C4   3F7F               M     moviw -1[SP]
                          M     push
02C5   001C               M     movwi ++SP
                      01320     over
02C6   3F7F               M     moviw -1[SP]
                          M     push
02C7   001C               M     movwi ++SP
02C8   2???           01321     call set_pixel_ptr ; x y x y -- x y , WREG=mask
02C9   0989           01322     comf WREG,F
02CA   0580           01323     andwf INDF0,F
                      01324     dec_n 1 ; x-=1
02CB   3F7F               M     moviw -1[SP]
02CC   0389               M     decf WREG,F
02CD   3FFF               M     movwi -1[SP]
02CE   1D03           01325     skpz
02CF   3???           01326     bra clr00
02D0   3015           01327     movlw 21
02D1   0081           01328     movwf T
                      01329     insert 1  ; counter 21
02D2   3FFF               M    movwi -1[SP]
02D3                  01330 drop21:
                      01331     dup    ; counter 21 21
02D3   0801               M     movfw T
02D4   001C               M     movwi ++SP
02D5   2???           01332     call drop1 ; -- counter 21
02D6   3006           01333     movlw 6
02D7   2???           01334     call pause
                      01335     pick 1
02D8   3F7F               M     moviw -1[SP]
02D9   0389           01336     decf WREG
                      01337     insert 1  ; -- counter-1 21
02DA   3FFF               M    movwi -1[SP]
02DB   1D03           01338     skpz
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-19-2016  23:27:58         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02DC   3???           01339     bra drop21
                      01340     drop_n 2
02DD   317E               M     addfsr SP,-2
                      01341 #else
                      01342     movlw 120
                      01343     call pause
                      01344 #endif
02DE   3???           01345     bra game_init
                      01346 ; tetriminos fall in the well    
02DF                  01347 fall_loop: 
02DF   2???           01348     call print_tetrim
                      01349     pop
02E0   0017               M     moviw SP--
02E1   3008           01350     movlw 8
02E2   2???           01351     call pause
02E3   2???           01352     call print_tetrim ; erase tetriminos
                      01353     pop
02E4   0017               M     moviw SP--
                      01354 ; read pad
02E5   2???           01355     call read_pad
02E6   0020           01356     banksel GAME_VAR
                      01357     case BTN_B, drop_tetrim
02E7   1A80               M     btfsc buttons,BTN_B
02E8   3???               M     bra drop_tetrim
                      01358     case BTN_UP, rot_right
02E9   1800               M     btfsc buttons,BTN_UP
02EA   3???               M     bra rot_right
                      01359     case BTN_DN, rot_left
02EB   1880               M     btfsc buttons,BTN_DN
02EC   3???               M     bra rot_left
                      01360     case BTN_RT, move_right
02ED   1980               M     btfsc buttons,BTN_RT
02EE   3???               M     bra move_right
                      01361     case BTN_LT, move_left
02EF   1900               M     btfsc buttons,BTN_LT
02F0   3???               M     bra move_left
02F1   3???           01362     bra move_down
02F2                  01363 drop_tetrim:
02F2   0020           01364     banksel GAME_VAR
02F3   0A??           01365     incf ty,F
02F4   2???           01366     call coll_test
02F5   1903           01367     skpnz
02F6   3???           01368     bra drop_tetrim
02F7   03??           01369     decf ty,F
02F8   2???           01370     call print_tetrim
                      01371     pop
02F9   0017               M     moviw SP--
02FA   3???           01372     bra score_update
02FB                  01373 rot_left:
02FB   03??           01374     decf angle,F
02FC   3003           01375     movlw 3
02FD   05??           01376     andwf angle,F
02FE   2???           01377     call coll_test
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-19-2016  23:27:58         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02FF   1D03           01378     skpz
0300   0A??           01379     incf angle,F
0301   3003           01380     movlw 3
0302   05??           01381     andwf angle,F
0303   3???           01382     bra move_down
0304                  01383 rot_right:
0304   0A??           01384     incf angle,F
0305   3003           01385     movlw 3
0306   05??           01386     andwf angle,F
0307   2???           01387     call coll_test
0308   1D03           01388     skpz
0309   03??           01389     decf angle,F
030A   3003           01390     movlw 3
030B   05??           01391     andwf angle,F
030C   3???           01392     bra move_down
030D                  01393 move_left:
030D   03??           01394     decf tx,F
030E   2???           01395     call coll_test
030F   1D03           01396     skpz
0310   0A??           01397     incf tx,F
0311   3???           01398     bra move_down
0312                  01399 move_right:
0312   0A??           01400     incf tx,F
0313   2???           01401     call coll_test
0314   1D03           01402     skpz
0315   03??           01403     decf tx,F
                      01404 ; move down
0316                  01405 move_down:
                      01406 ;    banksel GAME_VAR
0316   0A??           01407     incf ty,F ; tetriminos fall
0317   2???           01408     call coll_test
0318   1903           01409     skpnz
0319   3???           01410     bra fall_loop
031A   03??           01411     decf ty,F
031B   2???           01412     call print_tetrim
                      01413     pop
031C   0017               M     moviw SP--
031D                  01414 score_update:    
                      01415 ; check full row and clean
031D   2???           01416     call update_display ; erase numbers
031E   2???           01417     call count_full
                      01418 ; add full row count to dropped variable
031F   0020           01419     banksel GAME_VAR
0320   0801           01420     movfw T
0321   07??           01421     addwf droppedL,F ; 
0322   0103           01422     clrw
0323   3D??           01423     addwfc droppedH
                      01424 ; count points = 2^n where n is count of dropped rows {1:4}    
0324   0881           01425     movf T,F
0325   1903           01426     skpnz
0326   3???           01427     bra add_points
0327   3001           01428     movlw 1
0328   3589           01429     lslf WREG
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-19-2016  23:27:58         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0329   0B81           01430     decfsz T,F
032A   3???           01431     bra $-2
032B                  01432 add_points:
032B   07??           01433     addwf scoreL
032C   0103           01434     clrw
032D   3D??           01435     addwfc scoreH
                      01436     drop 
032E   317F               M    addfsr SP,-1
032F   2???           01437     call update_display ; display new values
0330   3???           01438     bra game_loop
                      01439     
                      01440     
                      01441 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      01442 ;   data tables
                      01443 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      01444 
                      01445 ; **************** encoding ************************************************
                      01446 ; enhanced PIC instructions are coded on 14 bits
                      01447 ; these 14 bits can be read as data using program memory
                      01448 ; writing/reading mechanism, see datasheet chapter 10 for detail.
                      01449 ; the 'dw' assembler directive encode data in those 14 bits contrary to 'dt'
                      01450 ; directive which encode a single byte as a RETLW instruction.
                      01451 ; So we get a 50% compression by encoding 3 nibbles/program word. 
                      01452 ; The encoding used in the following tables is as follow:    
                      01453 ; bits 13:12  number of nibbles where 0 means there is more than 3 nibbles
                      01454 ; in this data chunk so 1 or more other words follow this one.    
                      01455 ; other 12 bits are 3 nibbles (i.e. 4 bits slices).
                      01456 ;****************************************************************************
                      01457 
0331                  01458 digits: ; each digit is 5 rows
0331   0EAA 20AE      01459     dw 0x0EAA,0x20AE ; 0
0333   04C4 204E      01460     dw 0x04C4,0x204E ; 1
0335   0E2E 208E      01461     dw 0x0E2E,0x208E ; 2
0337   0E2E 202E      01462     dw 0x0E2E,0x202E ; 3
0339   0AAE 2022      01463     dw 0x0AAE,0x2022 ; 4
033B   0E8E 202E      01464     dw 0x0E8E,0x202E ; 5
033D   088E 20AE      01465     dw 0x088E,0x20AE ; 6
033F   0E22 2022      01466     dw 0x0E22,0x2022 ; 7
0341   0EAE 20AE      01467     dw 0x0EAE,0x20AE ; 8
0343   0EAE 2022      01468     dw 0x0EAE,0x2022 ; 9
                      01469 ; letters needed for 'SCORE' and 'LINES" labels
0345   0EAE 20AA      01470     dw 0x0EAE,0x20AA ; A  code 10
0347   0688 2086      01471     dw 0x0688,0x2086 ; C  code 11
0349   0E8E 208E      01472     dw 0x0E8E,0x208E ; E  code 12
034B   0E44 204E      01473     dw 0x0E44,0x204E ; I  code 13
034D   0888 208E      01474     dw 0x0888,0x208E ; L  code 14
034F   08CA 20AA      01475     dw 0x08CA,0x20AA ; N  code 15
0351   04AA 20A4      01476     dw 0x04AA,0x20A4 ; O  code 16
0353   0EAE 2088      01477     dw 0x0EAE,0x2088 ; P  code 17
0355   08EA 2088      01478     dw 0x08EA,0x2088 ; R  code 18
0357   0684 202C      01479     dw 0x0684,0x202C ; S  code 19
0359   0040 2040      01480     dw 0x0040,0x2040 ; :  code 20
035B   1000 0000      01481     dw 0x1000,0x0000 ; space code 21
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-19-2016  23:27:58         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01482 
                      01483 ; comments notation: Rn clockwise rotation n*90 degr.    
                      01484 ; note that vertical I as 4 rows so it needs 2 words    
035D                  01485 tetriminos: 
035D   388C           01486     dw 0x388C ; L R0
035E   30E8           01487     dw 0x30E8 ; L R1
035F   3C44           01488     dw 0x3C44 ; L R2
0360   202E           01489     dw 0x202E ; L R3
0361   344C           01490     dw 0x344C ; J R0
0362   208E           01491     dw 0x208E ; J R1
0363   3644           01492     dw 0x3644 ; J R2
0364   30E2           01493     dw 0x30E2 ; J R3
0365   20CC           01494     dw 0x20CC ; O R0 
0366   20CC           01495     dw 0x20CC ; O R2 
0367   20CC           01496     dw 0x20CC ; O R2 
0368   20CC           01497     dw 0x20CC ; O R3 
0369   206C           01498     dw 0x206C ; S R0
036A   3462           01499     dw 0x3462 ; S R1
036B   206C           01500     dw 0x206C ; S R2
036C   3462           01501     dw 0x3462 ; S R3
036D   20E4           01502     dw 0x20E4 ; T R0
036E   3262           01503     dw 0x3262 ; T R1
036F   304E           01504     dw 0x304E ; T R2
0370   38C8           01505     dw 0x38C8 ; T R3
0371   20C6           01506     dw 0x20C6 ; Z R0
0372   34C8           01507     dw 0x34C8 ; Z R1
0373   20C6           01508     dw 0x20C6 ; Z R3
0374   34C8           01509     dw 0x34C8 ; Z R4
                      01510 ; annoying! I tetriminos need a special treatment 
                      01511 ; because vertical I need 2 words for encoding.   
0375   0444 1004      01512     dw 0x0444,0x1004 ; I R0  
0377   200F 0000      01513     dw 0x200F,0x0000 ; I R1  second word is filling for alignment
0379   0444 1004      01514     dw 0x0444,0x1004 ; I R2
037B   200F 0000      01515     dw 0x200F,0x0000 ; I R3  
                      01516 
                      01517 #ifdef SOUND_SUPPORT
                      01518 ; tempered scale timer period values    
037D                  01519 tone_pr:
037D   000B           01520     brw
037E   3402 34ED      01521     dt 0x02, 0xed   ; 330   (MI4)   0
0380   34B5 34DF      01522     dt 0xb5, 0xdf   ; 349   (FA4)   1
0382   3428 34D3      01523     dt 0x28, 0xd3   ; 370   (FA4#)  2
0384   344C 34C7      01524     dt 0x4c, 0xc7   ; 392   (SOL4)  3
0386   341E 34BC      01525     dt 0x1e, 0xbc   ; 415   (SOL4#) 4
0388   348F 34B1      01526     dt 0x8f, 0xb1   ; 440   (LA4)   5
038A   3498 34A7      01527     dt 0x98, 0xa7   ; 466   (LA4#)  6
038C   3430 349E      01528     dt 0x30, 0x9e   ; 494   (SI4)   7
038E   344F 3495      01529     dt 0x4f, 0x95   ; 523hz (DO5)   8
0390   34ED 348C      01530     dt 0xed, 0x8c   ; 554   (DO5#)  9
0392   3404 3485      01531     dt 0x04, 0x85   ; 587   (RÉ5)   10
0394   348D 347D      01532     dt 0x8d, 0x7d   ; 622   (RÉ5#)  11
0396   3481 3476      01533     dt 0x81, 0x76   ; 659   (MI5)   12
0398   34DA 346F      01534     dt 0xda, 0x6f   ; 698   (FA5)   13
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-19-2016  23:27:58         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

039A   3493 3469      01535     dt 0x93, 0x69   ; 740   (FA5#)  14
039C   34A6 3463      01536     dt 0xa6, 0x63   ; 784   (SOL5)  15
039E   340F 345E      01537     dt 0x0f, 0x5e   ; 831   (SOL5#) 16
03A0   34C7 3458      01538     dt 0xc7, 0x58   ; 880   (LA5)   17
03A2   34CC 3453      01539     dt 0xcc, 0x53   ; 932   (LA5#)  18
03A4   3418 344F      01540     dt 0x18, 0x4f   ; 988   (SI5)   19
03A6   3482 3442      01541     dt 0x82, 0x42   ; 1046hz (do6)  20
03A8   3400 3400      01542     dt 0, 0         ; silence       21
                      01543 
                      01544     
                      01545 ; a russian folklore soung    
03AA                  01546 korobeiniki:
                      01547     ;nombre de notes
03AA   000B           01548     brw
03AB   3422           01549     dt 34
                      01550     ; duré, note
03AC   342D 3400      01551     dt 45, 0 
03AE   340F 3404      01552     dt 15, 4
03B0   341E 3407      01553     dt 30, 7
03B2   340F 3403      01554     dt 15, 3
03B4   340F 3400      01555     dt 15, 0
                      01556     
03B6   342D 3405      01557     dt 45, 5
03B8   340F 3409      01558     dt 15, 9
03BA   341E 340C      01559     dt 30, 12
03BC   340F 340A      01560     dt 15, 10
03BE   340F 3408      01561     dt 15, 8
                      01562     
03C0   342D 3407      01563     dt 45, 7
03C2   340F 3408      01564     dt 15, 8
03C4   341E 340A      01565     dt 30, 10
03C6   341E 340C      01566     dt 30, 12
                      01567     
03C8   341E 3408      01568     dt 30, 8
03CA   341E 3405      01569     dt 30, 5
03CC   343C 3405      01570     dt 60, 5
                      01571     
03CE   342D 340D      01572     dt 45, 13
03D0   340F 340F      01573     dt 15, 15
03D2   341E 3411      01574     dt 30, 17
03D4   340F 340F      01575     dt 15, 15
03D6   340F 340D      01576     dt 15, 13
                      01577     
03D8   342D 340C      01578     dt 45, 12
03DA   340F 340D      01579     dt 15, 13
03DC   341E 340C      01580     dt 30, 12
03DE   340F 340A      01581     dt 15, 10
03E0   340F 3408      01582     dt 15, 8
                      01583     
03E2   342D 3407      01584     dt 45, 7
03E4   340F 3408      01585     dt 15, 8
03E6   341E 340A      01586     dt 30, 10
03E8   341E 340C      01587     dt 30, 12
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-19-2016  23:27:58         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01588     
03EA   341E 3408      01589     dt 30, 8
03EC   341E 3405      01590     dt 30, 5
03EE   343C 3405      01591     dt 60, 5
                      01592     
                      01593  #endif
                      01594 
03F0                  01595 lbl_score: ; "SCORE" label
03F0   3413 340B 3410 01596     dt 19,11,16,18,12,20,255
       3412 340C 3414 
       34FF 
                      01597     
03F7                  01598 lbl_lines: ; "LINES"  label
03F7   340E 340D 340F 01599     dt 14,13,15,12,19,20,255
       340C 3413 3414 
       34FF 
                      01600 
03FE                  01601 lbl_press: ; "PRESS A" label
03FE   3411 3412 340C 01602     dt 17,18,12,19,19,21,10,255
       3413 3413 3415 
       340A 34FF 
                      01603 
                      01604     
                      01605  
3FE7 1EFF             01606     end
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-19-2016  23:27:58         PAGE 37


SYMBOL TABLE
  LABEL                             VALUE 

ABDEN                             00000000
ABDOVF                            00000007
ADCON0                            0000009D
ADCON1                            0000009E
ADCON2                            0000009F
ADCS0                             00000004
ADCS1                             00000005
ADCS2                             00000006
ADC_PIN                           00000004
ADDEN                             00000003
ADFM                              00000007
ADFVR0                            00000000
ADFVR1                            00000001
ADGO                              00000001
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADPREF0                           00000000
ADPREF1                           00000001
ADRES                             0000009B
ADRESH                            0000009C
ADRESL                            0000009B
ANIMATION                         
ANSA0                             00000000
ANSA1                             00000001
ANSA2                             00000002
ANSA4                             00000004
ANSELA                            0000018C
APFCON                            0000011D
APFCON0                           0000011D
AUDIO_PIN                         00000004
AUDIO_PWMCLKCON                   00000DAE
AUDIO_PWMCON                      00000DAB
AUDIO_PWMDCH                      00000DA4
AUDIO_PWMDCL                      00000DA3
AUDIO_PWMLDCON                    00000DAF
AUDIO_PWMOFH                      00000DA8
AUDIO_PWMOFL                      00000DA7
AUDIO_PWMPHH                      00000DA2
AUDIO_PWMPHL                      00000DA1
AUDIO_PWMPRH                      00000DA6
AUDIO_PWMPRL                      00000DA5
AUDIO_PWMTMR                      00000DA9
A_THR                             00000040
BAUDCON                           0000019F
BORCON                            00000116
BORFS                             00000006
BORRDY                            00000000
BPL                               00000006
BRG16                             00000003
BRGH                              00000002
BSR                               00000008
BSR0                              00000000
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-19-2016  23:27:58         PAGE 38


SYMBOL TABLE
  LABEL                             VALUE 

BSR1                              00000001
BSR2                              00000002
BSR3                              00000003
BSR4                              00000004
BSR_SHAD                          00000FE6
BTN_A                             00000004
BTN_B                             00000005
BTN_DN                            00000001
BTN_LT                            00000002
BTN_RT                            00000003
BTN_UP                            00000000
BUFFER_SIZE                       000000C0
B_THR                             00000095
C                                 00000000
C1HYS                             00000001
C1IE                              00000005
C1IF                              00000005
C1INTN                            00000006
C1INTP                            00000007
C1NCH0                            00000000
C1NCH1                            00000001
C1NCH2                            00000002
C1OE                              00000005
C1ON                              00000007
C1OUT                             00000006
C1PCH0                            00000004
C1PCH1                            00000005
C1POL                             00000004
C1SP                              00000002
C1SYNC                            00000000
CDAFVR0                           00000002
CDAFVR1                           00000003
CFGS                              00000006
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CHS4                              00000006
CM1CON0                           00000111
CM1CON1                           00000112
CMOUT                             00000115
CREN                              00000004
CS0                               00000000
CS1                               00000001
CSRC                              00000007
CWG1CON0                          00000693
CWG1CON1                          00000694
CWG1CON2                          00000695
CWG1DBF                           00000692
CWG1DBF0                          00000000
CWG1DBF1                          00000001
CWG1DBF2                          00000002
CWG1DBF3                          00000003
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-19-2016  23:27:58         PAGE 39


SYMBOL TABLE
  LABEL                             VALUE 

CWG1DBF4                          00000004
CWG1DBF5                          00000005
CWG1DBR                           00000691
CWG1DBR0                          00000000
CWG1DBR1                          00000001
CWG1DBR2                          00000002
CWG1DBR3                          00000003
CWG1DBR4                          00000004
CWG1DBR5                          00000005
CWGASEL                           00000006
CWGBSEL                           00000005
C_SHAD                            00000000
DACCON0                           00000118
DACCON1                           00000119
DACEN                             00000007
DACLPS                            00000006
DACOE                             00000005
DACPSS0                           00000002
DACPSS1                           00000003
DACR0                             00000000
DACR1                             00000001
DACR2                             00000002
DACR3                             00000003
DACR4                             00000004
DC                                00000001
DCIE                              00000001
DCIF                              00000001
DC_SHAD                           00000001
DN_THR                            000000D8
EN                                00000007
F                                 00000001
FCY                               004C4B40
FERR                              00000002
FIRST_VIDEO                       00000046
FOSC                              01312D00
FREE                              00000004
FSR0                              00000004
FSR0H                             00000005
FSR0H_SHAD                        00000FE9
FSR0L                             00000004
FSR0L_SHAD                        00000FE8
FSR0_SHAD                         00000FE8
FSR1                              00000006
FSR1H                             00000007
FSR1H_SHAD                        00000FEB
FSR1L                             00000006
FSR1L_SHAD                        00000FEA
FSR1_SHAD                         00000FEA
FVRCON                            00000117
FVREN                             00000007
FVRRDY                            00000006
F_COLL                            00000004
F_EVEN                            00000001
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-19-2016  23:27:58         PAGE 40


SYMBOL TABLE
  LABEL                             VALUE 

F_GSTOP                           00000003
F_GTMR                            00000002
F_NO_SND                          00000006
F_SND                             00000005
F_VSYNC                           00000000
G1ARSEN                           00000006
G1ASDLA0                          00000004
G1ASDLA1                          00000005
G1ASDLB0                          00000006
G1ASDLB1                          00000007
G1ASDSC1                          00000002
G1ASDSFLT                         00000001
G1ASE                             00000007
G1CS0                             00000000
G1EN                              00000007
G1IS0                             00000000
G1IS1                             00000001
G1IS2                             00000002
G1OEA                             00000005
G1OEB                             00000006
G1POLA                            00000003
G1POLB                            00000004
GAME_VAR                          00000000
GIE                               00000007
GO                                00000001
GO_NOT_DONE                       00000001
HFIOFL                            00000003
HFIOFR                            00000004
HFIOFS                            00000000
HORZ_DLY                          00000032
HORZ_PERIOD                       000004F5
HORZ_PULSE                        0000005E
INDF0                             00000000
INDF1                             00000001
INLVLA                            0000038C
INLVLA0                           00000000
INLVLA1                           00000001
INLVLA2                           00000002
INLVLA3                           00000003
INLVLA4                           00000004
INLVLA5                           00000005
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IOCAF                             00000393
IOCAF0                            00000000
IOCAF1                            00000001
IOCAF2                            00000002
IOCAF3                            00000003
IOCAF4                            00000004
IOCAF5                            00000005
IOCAN                             00000392
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-19-2016  23:27:58         PAGE 41


SYMBOL TABLE
  LABEL                             VALUE 

IOCAN0                            00000000
IOCAN1                            00000001
IOCAN2                            00000002
IOCAN3                            00000003
IOCAN4                            00000004
IOCAN5                            00000005
IOCAP                             00000391
IOCAP0                            00000000
IOCAP1                            00000001
IOCAP2                            00000002
IOCAP3                            00000003
IOCAP4                            00000004
IOCAP5                            00000005
IOCIE                             00000003
IOCIF                             00000000
IRCF0                             00000003
IRCF1                             00000004
IRCF2                             00000005
IRCF3                             00000006
LAST_LINE                         00000106
LAST_VIDEO                        000000C5
LATA                              0000010C
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA4                             00000004
LATA5                             00000005
LDA                               00000007
LDS0                              00000000
LDS1                              00000001
LDT                               00000006
LED_PIN                           00000000
LFIOFR                            00000001
LFSR_TAPS                         000000B4
LT_THR                            000000D1
LWLO                              00000005
MC1OUT                            00000000
MFIOFR                            00000002
MODE0                             00000002
MODE1                             00000003
MPWM1EN                           00000000
MPWM1LD                           00000000
MPWM1OUT                          00000000
MPWM2EN                           00000001
MPWM2LD                           00000001
MPWM2OUT                          00000001
MPWM3EN                           00000002
MPWM3LD                           00000002
MPWM3OUT                          00000002
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_PD                            00000003
NOT_POR                           00000001
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-19-2016  23:27:58         PAGE 42


SYMBOL TABLE
  LABEL                             VALUE 

NOT_RI                            00000002
NOT_RMCLR                         00000003
NOT_RWDT                          00000004
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_WPUEN                         00000007
ODA0                              00000000
ODA1                              00000001
ODA2                              00000002
ODA4                              00000004
ODA5                              00000005
ODCONA                            0000028C
OE                                00000006
OERR                              00000001
OFIE                              00000003
OFIF                              00000003
OFM0                              00000005
OFM1                              00000006
OFO                               00000004
OFS0                              00000000
OFS1                              00000001
OPTION_REG                        00000095
OSCCON                            00000099
OSCSTAT                           0000009A
OSCTUNE                           00000098
OSTS                              00000005
OUT                               00000005
P1SEL                             00000000
P2SEL                             00000001
PAD_CHS                           00000003
PAD_PIN                           00000004
PCL                               00000002
PCLATH                            0000000A
PCLATH_SHAD                       00000FE7
PCON                              00000096
PEIE                              00000006
PHIE                              00000002
PHIF                              00000002
PIE1                              00000091
PIE2                              00000092
PIE3                              00000093
PIR1                              00000011
PIR2                              00000012
PIR3                              00000013
PIXEL_TXREG                       0000019A
PLLR                              00000006
PMADR                             00000191
PMADRH                            00000192
PMADRL                            00000191
PMCON1                            00000195
PMCON2                            00000196
PMDAT                             00000193
PMDATH                            00000194
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-19-2016  23:27:58         PAGE 43


SYMBOL TABLE
  LABEL                             VALUE 

PMDATL                            00000193
POL                               00000004
PORTA                             0000000C
PR2                               0000001B
PRIE                              00000000
PRIF                              00000000
PS0_OPTION_REG                    00000000
PS0_PWM1CLKCON                    00000004
PS0_PWM2CLKCON                    00000004
PS0_PWM3CLKCON                    00000004
PS1_OPTION_REG                    00000001
PS1_PWM1CLKCON                    00000005
PS1_PWM2CLKCON                    00000005
PS1_PWM3CLKCON                    00000005
PS2_OPTION_REG                    00000002
PS2_PWM1CLKCON                    00000006
PS2_PWM2CLKCON                    00000006
PS2_PWM3CLKCON                    00000006
PSA                               00000003
PWM1CLKCON                        00000D9E
PWM1CON                           00000D9B
PWM1CS0                           00000000
PWM1CS1                           00000001
PWM1DC                            00000D93
PWM1DCH                           00000D94
PWM1DCH0                          00000000
PWM1DCH1                          00000001
PWM1DCH2                          00000002
PWM1DCH3                          00000003
PWM1DCH4                          00000004
PWM1DCH5                          00000005
PWM1DCH6                          00000006
PWM1DCH7                          00000007
PWM1DCIE                          00000001
PWM1DCIF                          00000001
PWM1DCL                           00000D93
PWM1DCL0                          00000000
PWM1DCL1                          00000001
PWM1DCL2                          00000002
PWM1DCL3                          00000003
PWM1DCL4                          00000004
PWM1DCL5                          00000005
PWM1DCL6                          00000006
PWM1DCL7                          00000007
PWM1EN                            00000007
PWM1EN_A                          00000000
PWM1IE                            00000004
PWM1IF                            00000004
PWM1INTCON                        00000D9C
PWM1INTE                          00000D9C
PWM1INTF                          00000D9D
PWM1INTFLG                        00000D9D
PWM1LD                            00000007
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-19-2016  23:27:58         PAGE 44


SYMBOL TABLE
  LABEL                             VALUE 

PWM1LDA_A                         00000000
PWM1LDCON                         00000D9F
PWM1LDM                           00000006
PWM1LDS0                          00000000
PWM1LDS1                          00000001
PWM1MODE0                         00000002
PWM1MODE1                         00000003
PWM1OE                            00000006
PWM1OF                            00000D97
PWM1OFCON                         00000DA0
PWM1OFH                           00000D98
PWM1OFH0                          00000000
PWM1OFH1                          00000001
PWM1OFH2                          00000002
PWM1OFH3                          00000003
PWM1OFH4                          00000004
PWM1OFH5                          00000005
PWM1OFH6                          00000006
PWM1OFH7                          00000007
PWM1OFIE                          00000003
PWM1OFIF                          00000003
PWM1OFL                           00000D97
PWM1OFL0                          00000000
PWM1OFL1                          00000001
PWM1OFL2                          00000002
PWM1OFL3                          00000003
PWM1OFL4                          00000004
PWM1OFL5                          00000005
PWM1OFL6                          00000006
PWM1OFL7                          00000007
PWM1OFM0                          00000005
PWM1OFM1                          00000006
PWM1OFMC                          00000004
PWM1OFS0                          00000000
PWM1OFS1                          00000001
PWM1OUT                           00000005
PWM1OUT_A                         00000000
PWM1PH                            00000D91
PWM1PHH                           00000D92
PWM1PHH0                          00000000
PWM1PHH1                          00000001
PWM1PHH2                          00000002
PWM1PHH3                          00000003
PWM1PHH4                          00000004
PWM1PHH5                          00000005
PWM1PHH6                          00000006
PWM1PHH7                          00000007
PWM1PHIE                          00000002
PWM1PHIF                          00000002
PWM1PHL                           00000D91
PWM1PHL0                          00000000
PWM1PHL1                          00000001
PWM1PHL2                          00000002
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-19-2016  23:27:58         PAGE 45


SYMBOL TABLE
  LABEL                             VALUE 

PWM1PHL3                          00000003
PWM1PHL4                          00000004
PWM1PHL5                          00000005
PWM1PHL6                          00000006
PWM1PHL7                          00000007
PWM1POL                           00000004
PWM1PR                            00000D95
PWM1PRH                           00000D96
PWM1PRH0                          00000000
PWM1PRH1                          00000001
PWM1PRH2                          00000002
PWM1PRH3                          00000003
PWM1PRH4                          00000004
PWM1PRH5                          00000005
PWM1PRH6                          00000006
PWM1PRH7                          00000007
PWM1PRIE                          00000000
PWM1PRIF                          00000000
PWM1PRL                           00000D95
PWM1PRL0                          00000000
PWM1PRL1                          00000001
PWM1PRL2                          00000002
PWM1PRL3                          00000003
PWM1PRL4                          00000004
PWM1PRL5                          00000005
PWM1PRL6                          00000006
PWM1PRL7                          00000007
PWM1PS0                           00000004
PWM1PS1                           00000005
PWM1PS2                           00000006
PWM1TMR                           00000D99
PWM1TMRH                          00000D9A
PWM1TMRH0                         00000000
PWM1TMRH1                         00000001
PWM1TMRH2                         00000002
PWM1TMRH3                         00000003
PWM1TMRH4                         00000004
PWM1TMRH5                         00000005
PWM1TMRH6                         00000006
PWM1TMRH7                         00000007
PWM1TMRL                          00000D99
PWM1TMRL0                         00000000
PWM1TMRL1                         00000001
PWM1TMRL2                         00000002
PWM1TMRL3                         00000003
PWM1TMRL4                         00000004
PWM1TMRL5                         00000005
PWM1TMRL6                         00000006
PWM1TMRL7                         00000007
PWM2CLKCON                        00000DAE
PWM2CON                           00000DAB
PWM2CS0                           00000000
PWM2CS1                           00000001
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-19-2016  23:27:58         PAGE 46


SYMBOL TABLE
  LABEL                             VALUE 

PWM2DC                            00000DA3
PWM2DCH                           00000DA4
PWM2DCH0                          00000000
PWM2DCH1                          00000001
PWM2DCH2                          00000002
PWM2DCH3                          00000003
PWM2DCH4                          00000004
PWM2DCH5                          00000005
PWM2DCH6                          00000006
PWM2DCH7                          00000007
PWM2DCIE                          00000001
PWM2DCIF                          00000001
PWM2DCL                           00000DA3
PWM2DCL0                          00000000
PWM2DCL1                          00000001
PWM2DCL2                          00000002
PWM2DCL3                          00000003
PWM2DCL4                          00000004
PWM2DCL5                          00000005
PWM2DCL6                          00000006
PWM2DCL7                          00000007
PWM2EN                            00000007
PWM2EN_A                          00000001
PWM2IE                            00000005
PWM2IF                            00000005
PWM2INTCON                        00000DAC
PWM2INTE                          00000DAC
PWM2INTF                          00000DAD
PWM2INTFLG                        00000DAD
PWM2LD                            00000007
PWM2LDA_A                         00000001
PWM2LDCON                         00000DAF
PWM2LDM                           00000006
PWM2LDS0                          00000000
PWM2LDS1                          00000001
PWM2MODE0                         00000002
PWM2MODE1                         00000003
PWM2OE                            00000006
PWM2OF                            00000DA7
PWM2OFCON                         00000DB0
PWM2OFH                           00000DA8
PWM2OFH0                          00000000
PWM2OFH1                          00000001
PWM2OFH2                          00000002
PWM2OFH3                          00000003
PWM2OFH4                          00000004
PWM2OFH5                          00000005
PWM2OFH6                          00000006
PWM2OFH7                          00000007
PWM2OFIE                          00000003
PWM2OFIF                          00000003
PWM2OFL                           00000DA7
PWM2OFL0                          00000000
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-19-2016  23:27:58         PAGE 47


SYMBOL TABLE
  LABEL                             VALUE 

PWM2OFL1                          00000001
PWM2OFL2                          00000002
PWM2OFL3                          00000003
PWM2OFL4                          00000004
PWM2OFL5                          00000005
PWM2OFL6                          00000006
PWM2OFL7                          00000007
PWM2OFM0                          00000005
PWM2OFM1                          00000006
PWM2OFMC                          00000004
PWM2OFS0                          00000000
PWM2OFS1                          00000001
PWM2OUT                           00000005
PWM2OUT_A                         00000001
PWM2PH                            00000DA1
PWM2PHH                           00000DA2
PWM2PHH0                          00000000
PWM2PHH1                          00000001
PWM2PHH2                          00000002
PWM2PHH3                          00000003
PWM2PHH4                          00000004
PWM2PHH5                          00000005
PWM2PHH6                          00000006
PWM2PHH7                          00000007
PWM2PHIE                          00000002
PWM2PHIF                          00000002
PWM2PHL                           00000DA1
PWM2PHL0                          00000000
PWM2PHL1                          00000001
PWM2PHL2                          00000002
PWM2PHL3                          00000003
PWM2PHL4                          00000004
PWM2PHL5                          00000005
PWM2PHL6                          00000006
PWM2PHL7                          00000007
PWM2POL                           00000004
PWM2PR                            00000DA5
PWM2PRH                           00000DA6
PWM2PRH0                          00000000
PWM2PRH1                          00000001
PWM2PRH2                          00000002
PWM2PRH3                          00000003
PWM2PRH4                          00000004
PWM2PRH5                          00000005
PWM2PRH6                          00000006
PWM2PRH7                          00000007
PWM2PRIE                          00000000
PWM2PRIF                          00000000
PWM2PRL                           00000DA5
PWM2PRL0                          00000000
PWM2PRL1                          00000001
PWM2PRL2                          00000002
PWM2PRL3                          00000003
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-19-2016  23:27:58         PAGE 48


SYMBOL TABLE
  LABEL                             VALUE 

PWM2PRL4                          00000004
PWM2PRL5                          00000005
PWM2PRL6                          00000006
PWM2PRL7                          00000007
PWM2PS0                           00000004
PWM2PS1                           00000005
PWM2PS2                           00000006
PWM2TMR                           00000DA9
PWM2TMRH                          00000DAA
PWM2TMRH0                         00000000
PWM2TMRH1                         00000001
PWM2TMRH2                         00000002
PWM2TMRH3                         00000003
PWM2TMRH4                         00000004
PWM2TMRH5                         00000005
PWM2TMRH6                         00000006
PWM2TMRH7                         00000007
PWM2TMRL                          00000DA9
PWM2TMRL0                         00000000
PWM2TMRL1                         00000001
PWM2TMRL2                         00000002
PWM2TMRL3                         00000003
PWM2TMRL4                         00000004
PWM2TMRL5                         00000005
PWM2TMRL6                         00000006
PWM2TMRL7                         00000007
PWM3CLKCON                        00000DBE
PWM3CON                           00000DBB
PWM3CS0                           00000000
PWM3CS1                           00000001
PWM3DC                            00000DB3
PWM3DCH                           00000DB4
PWM3DCH0                          00000000
PWM3DCH1                          00000001
PWM3DCH2                          00000002
PWM3DCH3                          00000003
PWM3DCH4                          00000004
PWM3DCH5                          00000005
PWM3DCH6                          00000006
PWM3DCH7                          00000007
PWM3DCIE                          00000001
PWM3DCIF                          00000001
PWM3DCL                           00000DB3
PWM3DCL0                          00000000
PWM3DCL1                          00000001
PWM3DCL2                          00000002
PWM3DCL3                          00000003
PWM3DCL4                          00000004
PWM3DCL5                          00000005
PWM3DCL6                          00000006
PWM3DCL7                          00000007
PWM3EN                            00000007
PWM3EN_A                          00000002
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-19-2016  23:27:58         PAGE 49


SYMBOL TABLE
  LABEL                             VALUE 

PWM3IE                            00000006
PWM3IF                            00000006
PWM3INTCON                        00000DBC
PWM3INTE                          00000DBC
PWM3INTF                          00000DBD
PWM3INTFLG                        00000DBD
PWM3LD                            00000007
PWM3LDA_A                         00000002
PWM3LDCON                         00000DBF
PWM3LDM                           00000006
PWM3LDS0                          00000000
PWM3LDS1                          00000001
PWM3MODE0                         00000002
PWM3MODE1                         00000003
PWM3OE                            00000006
PWM3OF                            00000DB7
PWM3OFCON                         00000DC0
PWM3OFH                           00000DB8
PWM3OFH0                          00000000
PWM3OFH1                          00000001
PWM3OFH2                          00000002
PWM3OFH3                          00000003
PWM3OFH4                          00000004
PWM3OFH5                          00000005
PWM3OFH6                          00000006
PWM3OFH7                          00000007
PWM3OFIE                          00000003
PWM3OFIF                          00000003
PWM3OFL                           00000DB7
PWM3OFL0                          00000000
PWM3OFL1                          00000001
PWM3OFL2                          00000002
PWM3OFL3                          00000003
PWM3OFL4                          00000004
PWM3OFL5                          00000005
PWM3OFL6                          00000006
PWM3OFL7                          00000007
PWM3OFM0                          00000005
PWM3OFM1                          00000006
PWM3OFMC                          00000004
PWM3OFS0                          00000000
PWM3OFS1                          00000001
PWM3OUT                           00000005
PWM3OUT_A                         00000002
PWM3PH                            00000DB1
PWM3PHH                           00000DB2
PWM3PHH0                          00000000
PWM3PHH1                          00000001
PWM3PHH2                          00000002
PWM3PHH3                          00000003
PWM3PHH4                          00000004
PWM3PHH5                          00000005
PWM3PHH6                          00000006
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-19-2016  23:27:58         PAGE 50


SYMBOL TABLE
  LABEL                             VALUE 

PWM3PHH7                          00000007
PWM3PHIE                          00000002
PWM3PHIF                          00000002
PWM3PHL                           00000DB1
PWM3PHL0                          00000000
PWM3PHL1                          00000001
PWM3PHL2                          00000002
PWM3PHL3                          00000003
PWM3PHL4                          00000004
PWM3PHL5                          00000005
PWM3PHL6                          00000006
PWM3PHL7                          00000007
PWM3POL                           00000004
PWM3PR                            00000DB5
PWM3PRH                           00000DB6
PWM3PRH0                          00000000
PWM3PRH1                          00000001
PWM3PRH2                          00000002
PWM3PRH3                          00000003
PWM3PRH4                          00000004
PWM3PRH5                          00000005
PWM3PRH6                          00000006
PWM3PRH7                          00000007
PWM3PRIE                          00000000
PWM3PRIF                          00000000
PWM3PRL                           00000DB5
PWM3PRL0                          00000000
PWM3PRL1                          00000001
PWM3PRL2                          00000002
PWM3PRL3                          00000003
PWM3PRL4                          00000004
PWM3PRL5                          00000005
PWM3PRL6                          00000006
PWM3PRL7                          00000007
PWM3PS0                           00000004
PWM3PS1                           00000005
PWM3PS2                           00000006
PWM3TMR                           00000DB9
PWM3TMRH                          00000DBA
PWM3TMRH0                         00000000
PWM3TMRH1                         00000001
PWM3TMRH2                         00000002
PWM3TMRH3                         00000003
PWM3TMRH4                         00000004
PWM3TMRH5                         00000005
PWM3TMRH6                         00000006
PWM3TMRH7                         00000007
PWM3TMRL                          00000DB9
PWM3TMRL0                         00000000
PWM3TMRL1                         00000001
PWM3TMRL2                         00000002
PWM3TMRL3                         00000003
PWM3TMRL4                         00000004
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-19-2016  23:27:58         PAGE 51


SYMBOL TABLE
  LABEL                             VALUE 

PWM3TMRL5                         00000005
PWM3TMRL6                         00000006
PWM3TMRL7                         00000007
PWMEN                             00000D8E
PWMLD                             00000D8F
PWMOUT                            00000D90
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCREG                             00000199
RCSTA                             0000019D
RD                                00000000
ROW_EMPTY                         00000000
ROW_FULL                          0000000A
RT_THR                            000000B5
RX9                               00000006
RX9D                              00000000
RXDTSEL                           00000007
S0                                0000001F
SBOREN                            00000007
SCKP                              00000004
SCS0                              00000000
SCS1                              00000001
SENDB                             00000003
SLRA0                             00000000
SLRA1                             00000001
SLRA2                             00000002
SLRA4                             00000004
SLRA5                             00000005
SLRCONA                           0000030C
SOUND_SUPPORT                     
SP                                FSR1
SPBRG                             0000019B
SPBRGH                            0000019C
SPBRGL                            0000019B
SPEN                              00000007
SPLLEN                            00000007
SREN                              00000005
STACK_SIZE                        00000020
STATUS                            00000003
STATUS_SHAD                       00000FE4
STKOVF                            00000007
STKPTR                            00000FED
STKUNF                            00000006
SWDTEN                            00000000
SYNC                              00000004
SYNC_IE                           00000006
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-19-2016  23:27:58         PAGE 52


SYMBOL TABLE
  LABEL                             VALUE 

SYNC_IF                           00000006
SYNC_OUT                          00000002
SYNC_PIE                          00000093
SYNC_PIR                          00000013
SYNC_PWMCLKCON                    00000DBE
SYNC_PWMCON                       00000DBB
SYNC_PWMDCH                       00000DB4
SYNC_PWMDCL                       00000DB3
SYNC_PWMINTE                      00000DBC
SYNC_PWMINTF                      00000DBD
SYNC_PWMLDCON                     00000DBF
SYNC_PWMOF                        00000DB7
SYNC_PWMOFCON                     00000DC0
SYNC_PWMPH                        00000DB1
SYNC_PWMPRH                       00000DB6
SYNC_PWMPRL                       00000DB5
SYNC_PWMTMR                       00000DB9
T                                 INDF1
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000018
T1GCON                            00000019
T1GGO                             00000003
T1GGO_NOT_DONE                    00000003
T1GPOL                            00000006
T1GSEL                            00000003
T1GSPM                            00000004
T1GSS0                            00000000
T1GSS1                            00000001
T1GTM                             00000005
T1GVAL                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             0000001C
T2OUTPS0                          00000003
T2OUTPS1                          00000004
T2OUTPS2                          00000005
T2OUTPS3                          00000006
TC                                00000032
TCY                               000000C8
TMR0                              00000015
TMR0CS                            00000005
TMR0IE                            00000005
TMR0IF                            00000002
TMR0SE                            00000004
TMR1                              00000016
TMR1CS0                           00000006
TMR1CS1                           00000007
TMR1GE                            00000007
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-19-2016  23:27:58         PAGE 53


SYMBOL TABLE
  LABEL                             VALUE 

TMR1GIE                           00000007
TMR1GIF                           00000007
TMR1H                             00000017
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             00000016
TMR1ON                            00000000
TMR2                              0000001A
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOS                               00000FEE
TOSH                              00000FEF
TOSL                              00000FEE
TRIGSEL0                          00000004
TRIGSEL1                          00000005
TRIGSEL2                          00000006
TRIGSEL3                          00000007
TRISA                             0000008C
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRMT                              00000001
TSEN                              00000005
TSRNG                             00000004
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TUN5                              00000005
TX9                               00000006
TX9D                              00000000
TXCKSEL                           00000002
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             0000019A
TXSTA                             0000019E
TX_PIR                            00000011
UP_THR                            000000C6
VDD                               00000400
VERT_DLY                          00000032
VIDEO_BUFFER                      00002030
VIDEO_LAT                         0000010C
VIDEO_OUT                         00000001
VREGCON                           00000197
VREGPM                            00000001
W                                 00000000
WDTCON                            00000097
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-19-2016  23:27:58         PAGE 54


SYMBOL TABLE
  LABEL                             VALUE 

WDTPS0                            00000001
WDTPS1                            00000002
WDTPS2                            00000003
WDTPS3                            00000004
WDTPS4                            00000005
WELL_DEPTH                        00000016
WELL_WIDTH                        0000000A
WPUA                              0000020C
WPUA0                             00000000
WPUA1                             00000001
WPUA2                             00000002
WPUA3                             00000003
WPUA4                             00000004
WPUA5                             00000005
WR                                00000001
WREG                              00000009
WREG_SHAD                         00000FE5
WREN                              00000002
WRERR                             00000003
WUE                               00000001
XSIZE                             00000030
YSIZE                             00000020
Z                                 00000002
Z_SHAD                            00000002
_.org_1_0057                      00000057
_.org_1_006B                      0000006B
_.org_1_006D                      0000006D
_.org_1_0070                      00000070
_.org_1_00BA                      000000BA
_.org_1_00BC                      000000BC
_.org_1_00D0                      000000D0
_.org_1_00D8                      000000D8
_.org_1_0211                      00000211
_.org_1_032A                      0000032A
_BOREN_NSLEEP                     00003DFF
_BOREN_OFF                        000039FF
_BOREN_ON                         00003FFF
_BOREN_SBODEN                     00003BFF
_BORV_19                          00003FFF
_BORV_HI                          00003BFF
_BORV_LO                          00003FFF
_CLKOUTEN_OFF                     00003FFF
_CLKOUTEN_ON                      000037FF
_CONFIG1                          00008007
_CONFIG2                          00008008
_CP_OFF                           00003FFF
_CP_ON                            00003F7F
_DEVID1                           00008006
_FOSC_ECH                         00003FFF
_FOSC_ECL                         00003FFD
_FOSC_ECM                         00003FFE
_FOSC_INTOSC                      00003FFC
_IDLOC0                           00008000
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-19-2016  23:27:58         PAGE 55


SYMBOL TABLE
  LABEL                             VALUE 

_IDLOC1                           00008001
_IDLOC2                           00008002
_IDLOC3                           00008003
_LPBOREN_OFF                      00003FFF
_LPBOREN_ON                       000037FF
_LVP_OFF                          00001FFF
_LVP_ON                           00003FFF
_MCLRE_OFF                        00003FBF
_MCLRE_ON                         00003FFF
_PLLEN_OFF                        00003EFF
_PLLEN_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FDF
_STVREN_OFF                       00003DFF
_STVREN_ON                        00003FFF
_WDTE_NSLEEP                      00003FF7
_WDTE_OFF                         00003FE7
_WDTE_ON                          00003FFF
_WDTE_SWDTEN                      00003FEF
_WRT_ALL                          00003FFC
_WRT_BOOT                         00003FFE
_WRT_HALF                         00003FFD
_WRT_OFF                          00003FFF
__12F1572                         00000001
_stack                            00000020
accaH                             00000009
accaL                             00000008
accbH                             0000000B
accbL                             0000000A
add_points                        0000032B
angle                             00000041
bitmap                            00000133
bmp00                             00000134
bmp01                             00000147
bmp02                             00000136
buttons                           0000000C
byte_serialize                    000000CB
case                              
clr00                             000002C4
cls_loop                          00000286
col_loop                          000001AA
coll_test                         00000223
count_done                        000001EB
count_full                        000001D3
count_loop                        000001D7
dec_n                             
digits                            00000331
div10                             00000059
div10_loop                        0000005C
drop                              
drop1                             000001A7
drop21                            000002D3
drop_n                            
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-19-2016  23:27:58         PAGE 56


SYMBOL TABLE
  LABEL                             VALUE 

drop_tetrim                       000002F2
droppedH                          00000047
droppedL                          00000046
dup                               
fall_loop                         000002DF
flags                             00000002
game_init                         00000280
game_loop                         000002BD
game_over                         000002C0
get_flash_word                    0000010C
get_nibble                        00000120
gt_255                            00000026
gtimer                            00000003
hline                             00000298
inc_n                             
init                              00000243
insert                            
isr                               00000004
isr_exit                          00000050
koro                              00000203
korobeiniki                       000003AA
lbl_lines                         000003F7
lbl_press                         000003FE
lbl_score                         000003F0
lcountH                           00000001
lcountL                           00000000
lit                               
mask00                            000000EC
mask01                            000000EF
move_down                         00000316
move_left                         0000030D
move_right                        00000312
new_tminos                        000001ED
next_flash_word                   0000011B
next_pixel                        000001B9
next_row                          000001E9
nibble                            0000000D
nibble_mask                       0000012F
no_sound                          00000212
no_zero                           0000019C
over                              
pause                             00000054
pick                              
pop                               
print_char                        0000014A
print_int                         00000182
print_int00                       00000186
print_label                       0000016C
print_last                        00000196
print_tetrim                      00000152
prompt                            0000023A
prt_lbl_done                      00000180
push                              
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-19-2016  23:27:58         PAGE 57


SYMBOL TABLE
  LABEL                             VALUE 

q                                 0000000A
qr00                              000001C4
qr01                              000001CF
query_row                         000001C2
r                                 00000000
randH                             00000006
randL                             00000005
rcount                            00000007
read_exit                         00000095
read_flash                        00000111
read_pad                          00000067
reserve                           
rot_left                          000002FB
rot_right                         00000304
row0                              0000012E
row1                              0000012C
row2                              0000012A
row_loop                          000001A8
rst                               00000010
scoreH                            00000045
scoreL                            00000044
score_update                      0000031D
set_pixel_ptr                     000000E0
set_yptr                          000000AD
t0                                0000000E
t1                                0000000F
task0                             0000003B
task1                             00000046
task2                             0000004B
tasks                             00000031
tcyDelay                          
tetrim                            00000040
tetriminos                        0000035D
tetris                            000002B9
tone                              00000096
tone_pr                           0000037D
tone_tmr                          00000004
try_a                             00000072
try_b                             00000078
try_button                        
try_dn                            00000090
try_lt                            0000008A
try_rt                            0000007E
try_up                            00000084
tx                                00000042
ty                                00000043
update_display                    00000229
video_buffer_b0                   00000050
video_buffer_b1                   000000A0
video_buffer_b2                   00000120
video_serialize                   000000B9
vline                             0000019E
vsync_end                         0000001E
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-19-2016  23:27:58         PAGE 58


SYMBOL TABLE
  LABEL                             VALUE 

vsync_start                       00000016
wait_end                          00000220
wait_sound                        
wait_start                        000001FE
xor_pixel                         000000F1
xor_row                           000000F7
xor_row02                         00000106
xor_row_done                      0000010A

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,   126 suppressed

