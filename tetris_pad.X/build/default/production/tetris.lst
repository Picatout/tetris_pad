MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-14-2016  20:45:37         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001     include p12f1572.inc
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Sep 13 2016
                      00005 ;  MPASM PIC12F1572 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2016 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01601         LIST
                      00002     
                      00003     radix dec
                      00004     errorlevel 0, -302, -305
                      00005     
8007   3FE7           00006     __config _CONFIG1, _FOSC_ECH&_WDTE_OFF
8008   1EFF           00007     __config _CONFIG2, _PLLEN_OFF&_LVP_OFF 
                      00008 
  01312D00            00009 FOSC equ 20000000 ; 20Mhz
  00000032            00010 TC equ 50 ; nanosecondes 
  004C4B40            00011 FCY equ FOSC/4    ; 5Mhz
  000000C8            00012 TCY equ 200 ; nanoseconds
                      00013 
                      00014 
  00000030            00015 XSIZE equ 48  ; horizontal pixels
  00000020            00016 YSIZE equ 32  ; vertical pixels
  00000006            00017 BPL equ XSIZE/8 ; bytes per line 
  000000C0            00018 BUFFER_SIZE equ  YSIZE*BPL  ; video buffer size
  00002030            00019 VIDEO_BUFFER equ 0x2000+(3*80-BUFFER_SIZE) ; buffer address
  00000032            00020 VERT_DLY equ 50
  00000046            00021 FIRST_VIDEO equ VERT_DLY+20  ; first video output line
  000000C5            00022 LAST_VIDEO equ FIRST_VIDEO+4*YSIZE-1  ; last video output line
  0000019A            00023 PIXEL_TXREG equ TXREG
  00000011            00024 TX_PIR equ PIR1
  00000032            00025 HORZ_DLY equ 10*5  ; there is 5 TCY/µsec
                      00026  
  00000001            00027 VIDEO_OUT equ RA1
  0000010C            00028 VIDEO_LAT equ LATA
  00000002            00029 SYNC_OUT equ RA2 
  00000DB3            00030 SYNC_PWMDCL equ PWM3DCL ; duty cycle low byte
  00000DB4            00031 SYNC_PWMDCH equ PWM3DCH ; high byte    
  00000DB5            00032 SYNC_PWMPRL equ PWM3PRL ; pwm period low byte
  00000DB6            00033 SYNC_PWMPRH equ PWM3PRH ; high byte 
  00000DB1            00034 SYNC_PWMPH equ PWM3PH ; pwm phase
  00000DB7            00035 SYNC_PWMOF equ PWM3OF ; pwm offset
  00000DB9            00036 SYNC_PWMTMR equ PWM3TMR ; timer
  00000DBB            00037 SYNC_PWMCON equ PWM3CON ; control SFR
  00000DBE            00038 SYNC_PWMCLKCON equ PWM3CLKCON  ; clock control SFR
  00000DC0            00039 SYNC_PWMOFCON equ PWM3OFCON ; offset control SFR
  00000DBF            00040 SYNC_PWMLDCON equ PWM3LDCON ; load control SFR
  00000006            00041 SYNC_IE equ PWM3IE  ; interrupt enable bit
  00000006            00042 SYNC_IF equ PWM3IF  ; interrupt flag bit
  00000093            00043 SYNC_PIE equ PIE3 ; interrupt enable SFR
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-14-2016  20:45:37         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000013            00044 SYNC_PIR equ PIR3 ; interrupt flag SFR 
  00000DBC            00045 SYNC_PWMINTE equ PWM3INTE
  00000DBD            00046 SYNC_PWMINTF equ PWM3INTF
                      00047  
  000004F5            00048 HORZ_PERIOD equ FOSC/15748-1 ; 15748 hertz
  0000005E            00049 HORZ_PULSE equ 4700/TC ; 4.7µsec 
  00000106            00050 LAST_LINE equ 262
                      00051 
  00000000            00052 LED_PIN equ RA0
  00000004            00053 ADC_PIN equ RA4
                      00054  
  00000004            00055 AUDIO_PIN equ RA4
  00000DA3            00056 AUDIO_PWMDCL equ PWM2DCL
  00000DA4            00057 AUDIO_PWMDCH equ PWM2DCH
  00000DA5            00058 AUDIO_PWMPRL equ PWM2PRL
  00000DA6            00059 AUDIO_PWMPRH equ PWM2PRH
  00000DA9            00060 AUDIO_PWMTMR equ PWM2TMR
  00000DAE            00061 AUDIO_PWMCLKCON equ PWM2CLKCON
  00000DAF            00062 AUDIO_PWMLDCON equ PWM2LDCON
  00000DAB            00063 AUDIO_PWMCON equ PWM2CON
                      00064  
                      00065 ; game pad resource
                      00066 ; use ADC 
  00000004            00067 PAD_PIN equ ANSA4
  00000003            00068 PAD_CHS equ 3 
  00000000            00069 BTN_UP equ 0
  00000001            00070 BTN_DN equ 1
  00000002            00071 BTN_LT equ 2
  00000003            00072 BTN_RT equ 3
  00000004            00073 BTN_A equ 4
  00000005            00074 BTN_B equ 5
                      00075 ; threshold level for each button
                      00076 ; lower_btn_thr >= BTN_? < btn_thr
                      00077 ; exemple: BTN_UP if RT_THR<=Vadc<UP_THR  
  00000400            00078 VDD equ 1024
  000000D8            00079 DN_THR equ 216 ;(VDD*(6/7+5/6)/2)>>2
  000000D1            00080 LT_THR equ 209 ; (VDD*(5/6+4/5)/2)>>2
  000000C6            00081 UP_THR equ 198 ;(VDD*(4/5+3/4)/2)>>2
  000000B5            00082 RT_THR equ 181 ;(VDD*(3/4+2/3)/2)>>2
  00000095            00083 B_THR  equ 149 ; (VDD*(2/3+1/2)/2)>>2
  00000040            00084 A_THR  equ 64 ;(VDD/4)>>2
                      00085  
                      00086 try_button macro btn, label 
                      00087     movlw btn
                      00088     subwf ADRESH,W
                      00089     skpnc
                      00090     bra label
                      00091     endm
                      00092     
                      00093 ;boolean flags 
  00000000            00094 F_VSYNC equ 0 ; vertical sync active
  00000001            00095 F_EVEN equ 1  ; even field
  00000002            00096 F_MUTEX equ 2 ; video routine lock out
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-14-2016  20:45:37         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000003            00097 F_GTMR equ 3  ; game timer active
  00000004            00098 F_GSTOP equ 4 ; game stopped
  00000005            00099 F_SND equ 5 ; sound timer active 
  00000006            00100 F_COLL equ 6 ; collision flag
                      00101  
  000000B4            00102 LFSR_TAPS equ 0xB4 ; xor mask
                      00103  
                      00104 disable_video macro ; lockout video_serialize
                      00105     bsf flags, F_MUTEX
                      00106     endm
                      00107     
                      00108 enable_video macro ; unlock video_serialize
                      00109     bcf flags, F_MUTEX
                      00110     endm
                      00111     
                      00112 tcyDelay macro n ; delay in TCY cycles  5TCY per µsec.  
                      00113     variable r=n%5
                      00114     variable q=n/5
                      00115     while r>1
                      00116     bra $+1
                      00117 r-=2
                      00118     endw
                      00119     if r==1
                      00120     nop
                      00121     endif
                      00122     if q
                      00123     movlw q
                      00124     bra $+1
                      00125     decfsz WREG
                      00126     bra $-2
                      00127     endif
                      00128     endm
                      00129 
                      00130 ; button selector case    
                      00131 case macro n, label
                      00132     btfsc buttons,n
                      00133     bra label
                      00134     endm
                      00135  
                      00136 start_timer macro value ; start game timer
                      00137     movlw value
                      00138     movwf gtimer
                      00139     bsf flags, F_GTMR
                      00140     endm
                      00141     
                      00142 wait_timer macro ; wait timer expiration
                      00143     btfsc flags, F_GTMR
                      00144     bra $-1
                      00145     endm
                      00146     
                      00147 pause macro value ; suspend execution (busy loop)
                      00148     start_timer value
                      00149     wait_timer
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-14-2016  20:45:37         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00150     endm
                      00151  
                      00152 wait_sound macro ; wait sound end
                      00153     btfsc flags,F_SND
                      00154     bra $-1
                      00155     endm
                      00156     
                      00157 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00158 ; software stack for arguments passing
                      00159 ; SP is Stack Pointer
                      00160 ; T is Top Of Stack
                      00161 #define SP FSR1
                      00162 #define T INDF1
  00000020            00163 STACK_SIZE equ 32
                      00164  
  0000001F            00165 S0 equ 0x1F ; stack base address - 1
                      00166 
                      00167 pstack_init macro ; initialise stack pointer
                      00168     clrf FSR1H
                      00169     movlw S0
                      00170     movwf FSR1L
                      00171     endm
                      00172     
                      00173 push macro   ; ( -- n ) push WREG on stack
                      00174     movwi ++SP
                      00175     endm
                      00176 
                      00177 pop macro   ; ( n -- )  pop T in WREG
                      00178     moviw SP--
                      00179     endm
                      00180     
                      00181 drop macro  ; ( n -- ) ; discard T
                      00182    addfsr SP,-1
                      00183    endm
                      00184 
                      00185 drop_n macro n  ; discard n elements  n<32
                      00186     addfsr SP,-n
                      00187     endm
                      00188     
                      00189 lit macro  n ; ( -- n ) ; push a literal
                      00190    movlw n
                      00191    movwi ++SP 
                      00192    endm
                      00193 
                      00194 dup macro ; ( n -- n n ) duplicate T
                      00195     movfw T
                      00196     movwi ++SP
                      00197     endm
                      00198     
                      00199 over macro ; ( n1 n2 -- n1 n2 n1 )
                      00200     moviw -1[SP]
                      00201     push
                      00202     endm
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-14-2016  20:45:37         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00203     
                      00204 swap macro ; exchange WREG and T
                      00205     xorwf T
                      00206     xorwf T,W
                      00207     xorwf T
                      00208     endm
                      00209  
                      00210 store macro var ; ( n -- ) pop T in variable
                      00211    moviw SP--
                      00212    movwf var
                      00213    endm
                      00214    
                      00215 pick macro n  ; pick nth element of stack to WREG
                      00216     moviw -n[SP]
                      00217     endm
                      00218 
                      00219 insert macro n ;  insert WREG at position n on stack
                      00220    movwi -n[SP]
                      00221    endm
                      00222    
                      00223 inc_n macro n ; increament nth element of stack
                      00224     moviw -n[SP]
                      00225     incf WREG,F
                      00226     movwi -n[SP]
                      00227     endm
                      00228     
                      00229 dec_n macro n ; decreament nth element of stack
                      00230     moviw -n[SP]
                      00231     decf WREG,F
                      00232     movwi -n[SP]
                      00233     endm
                      00234     
                      00235 reserve macro n ; reserve n bytes on stack for local variables
                      00236     addfsr SP, n 
                      00237     endm
                      00238  
                      00239 rot macro ; ( n1 n2 n3 -- n2 n3 n1 )
                      00240     pick 2
                      00241     push        ; n1 n2 n3 n1
                      00242     pick 2
                      00243     insert 3   ;  n2 n2 n3 n1
                      00244     pick 1
                      00245     insert 2   ; n2 n3 n3 n1
                      00246     pop        ; n2 n3 n3 
                      00247     movwf T    ; n2 n3 n1
                      00248     endm
                      00249  
                      00250 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00251 ; parameter stack section    
                      00252 dstack udata 0x20
0020                  00253 _stack res 32
                      00254 ; game variables section 
  00000000            00255 GAME_VAR equ 0 ; game variables bank
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-14-2016  20:45:37         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00256 game_var udata 0x40 
                      00257 ; tetris game state
0040                  00258 tetrim res 1 ; active tretriminos 
0041                  00259 angle res 1 ; tetriminos rotatation angle in multiple of 90degr. {0:3}
0042                  00260 tx  res 1 ; x coordinate
0043                  00261 ty  res 1 ; y coordinate
0044                  00262 scoreL res 1 ; game score  16 bits
0045                  00263 scoreH res 1 
0046                  00264 droppedL res 1  ; total
0047                  00265 droppedH res 1  ; dropped lines
                      00266   
                      00267  
                      00268 ; These 3 sections are used for video pixels buffering
                      00269 ; with indirect access using FSR0
                      00270 ; to form a contiguous address space. 
                      00271 ; total size 192 bytes 
                      00272 vb_b0    udata 0x50
0050                  00273 video_buffer_b0 res 32
                      00274 vb_b1    udata 0xA0
00A0                  00275 video_buffer_b2 res 80
                      00276 vb_b2    udata 0x120
0120                  00277 video_buffer_b3 res 80
                      00278  
                      00279  
                      00280     udata_shr
                      00281 ;scan lines counter 16 bits
0000                  00282 lcountL res 1
0001                  00283 lcountH res 1
                      00284 ; boolean flags 
0002                  00285 flags res 1
                      00286 ; game timer
0003                  00287 gtimer res 1 
                      00288 ; sound timer
0004                  00289 tone_tmr res 1 
                      00290 ; lfsr PRNG register
0005                  00291 randL res 1 
0006                  00292 randH res 1 
                      00293 ; loop counter
0007                  00294 rcount res 1
                      00295 ; arithmetic accumulator A 24 bits
0008                  00296 accaL res 1
0009                  00297 accaH res 1
                      00298 ; arithmetic accumulator B 16 bits
000A                  00299 accbL res 1
000B                  00300 accbH res 1
                      00301 ; game pad buttons state
000C                  00302 buttons res 1
                      00303 ; flash reader next nibble {0-3}
000D                  00304 nibble res 1
                      00305 ; temporary registers
000E                  00306 t0  res 1
000F                  00307 t1  res 1
                      00308   
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-14-2016  20:45:37         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00309 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00310 ; reset entry point
                      00311 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0010                  00312 rst: 
                      00313     org 0
0000   0023           00314     banksel ANSELA
0001   018C           00315     clrf ANSELA
0002   160C           00316     bsf ANSELA,PAD_PIN
0003   2???           00317     goto init
                      00318     
                      00319     org 4
                      00320 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;   
                      00321 ; interrupt service routine
                      00322 ; the only interrupt is on SYNC_PWM timer
                      00323 ; this intterrupt trigger once 
                      00324 ; for each horizontal line, i.e. 15748/sec.    
                      00325 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
0004                  00326 isr:
0004   003B           00327     banksel SYNC_PWMINTF
0005   103D           00328     bcf SYNC_PWMINTF,PRIF
0006   1800           00329     btfsc lcountH,0
0007   3???           00330     bra gt_255 ; lcount > 255
0008   08??           00331     movfw lcountL
0009   1903           00332     skpnz
000A   3???           00333     bra vsync_start
000B   3A03           00334     xorlw 3
000C   1903           00335     skpnz
000D   3???           00336     bra vsync_end
                      00337 ; scanline < 256
                      00338 ; check if visible line    
000E                  00339 lt_256:
000E   1900           00340     btfsc flags, F_MUTEX ; video output lockout
000F   3???           00341     bra isr_exit
0010   08??           00342     movfw lcountL
0011   3C45           00343     sublw FIRST_VIDEO-1
0012   1803           00344     skpnc
0013   3???           00345     bra isr_exit
0014   08??           00346     movfw lcountL
0015   3CC5           00347     sublw LAST_VIDEO
0016   1C03           00348     skpc
0017   3???           00349     bra isr_exit
                      00350 ; output video pixels for this line    
0018   2???           00351     call video_serialize 
0019   3???           00352     bra isr_exit 
                      00353 ; scanline 0 start vertical sync pulse    
001A                  00354 vsync_start: 
001A   003B           00355     banksel SYNC_PWMDCL
001B   3097           00356     movlw (HORZ_PERIOD-HORZ_PULSE)&0xff
001C   00B3           00357     movwf SYNC_PWMDCL
001D   3004           00358     movlw (HORZ_PERIOD-HORZ_PULSE)>>8
001E   00B4           00359     movwf SYNC_PWMDCH
001F   17BF           00360     bsf SYNC_PWMLDCON,LDA
0020   1400           00361     bsf flags, F_VSYNC
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-14-2016  20:45:37         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0021   3???           00362     bra isr_exit
                      00363 ; scanline 3 end vertical sync pulse
0022                  00364 vsync_end: 
0022   003B           00365     banksel SYNC_PWMDCL
0023   305E           00366     movlw HORZ_PULSE&0xff
0024   00B3           00367     movwf SYNC_PWMDCL
0025   3000           00368     movlw HORZ_PULSE>>8
0026   00B4           00369     movwf SYNC_PWMDCH
0027   17BF           00370     bsf SYNC_PWMLDCON,LDA
0028   1000           00371     bcf flags, F_VSYNC
0029   3???           00372     bra isr_exit
                      00373 ; scan line > 255    
002A                  00374 gt_255:
                      00375 ; check for end of field    
002A   3006           00376     movlw LAST_LINE&0xff
002B   1C80           00377     btfss flags,F_EVEN
002C   3E01           00378     addlw 1
002D   06??           00379     xorwf lcountL,W
002E   1D03           00380     skpz
002F   3???           00381     bra tasks
                      00382 ; this is end of field
                      00383 ; reset line counter    
0030   01??           00384     clrf lcountL
0031   01??           00385     clrf lcountH
0032   3002           00386     movlw 1<<F_EVEN
0033   06??           00387     xorwf flags,F ; toggle field flag
0034   0009           00388     retfie
                      00389 ; round robin task scheduler
                      00390 ; each task execute once every 1/60th sec.
                      00391 ; condition:    
                      00392 ;   Task must complete inside
                      00393 ;   horizontal period. i.e. before SYNC_PWM period end
                      00394 ; 6 tasks slots available    
0035                  00395 tasks:
                      00396 ; task selector    
0035   08??           00397     movfw lcountL
0036   1903           00398     skpnz
0037   3???           00399     bra task0
0038   0389           00400     decf WREG
0039   1903           00401     skpnz 
003A   3???           00402     bra task1
003B   0389           00403     decf WREG
003C   1903           00404     skpnz
003D   3???           00405     bra task2
003E   3???           00406     bra isr_exit
003F                  00407 task0:
                      00408 ; sound timer    
003F   08??           00409     movfw tone_tmr
0040   1903           00410     skpnz
0041   3???           00411     bra isr_exit
0042   0B??           00412     decfsz tone_tmr,F
0043   3???           00413     bra isr_exit
0044   1280           00414     bcf flags,F_SND
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-14-2016  20:45:37         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0045   003B           00415     banksel AUDIO_PWMCON
0046   13AB           00416     bcf AUDIO_PWMCON,EN
0047   3???           00417     bra isr_exit
0048                  00418 task1:   
                      00419 ; game timer    
0048   08??           00420     movf gtimer,F ; 
0049   1903           00421     skpnz
004A   3???           00422     bra isr_exit
004B   0B??           00423     decfsz gtimer,F ; 
004C   3???           00424     bra isr_exit ;
004D   1180           00425     bcf flags, F_GTMR
004E   3???           00426     bra isr_exit ;
004F                  00427 task2:
                      00428 ; rotate lfsr
004F   36??           00429     lsrf randH
0050   0C??           00430     rrf randL
0051   1803           00431     skpnc
0052   30B4           00432     movlw LFSR_TAPS
0053   06??           00433     xorwf randH
0054                  00434 isr_exit:
0054   0A??           00435     incf lcountL
0055   1903           00436     skpnz
0056   0A??           00437     incf lcountH
0057   0009           00438     retfie
                      00439 
                      00440 ;divsion by 10    
                      00441 ;needed to convert binary to BCD
                      00442 ; input:
                      00443 ;   acca dividend  16 bits
                      00444 ; output:
                      00445 ;   acca: quotient
                      00446 ;   accbL: remainder    
0058                  00447 div10:
                      00448     disable_video
0058   1500               M     bsf flags, F_MUTEX
0059   3011           00449     movlw 17
005A   00??           00450     movwf rcount
005B   01??           00451     clrf accbL
005C                  00452 div10_loop:
005C   300A           00453     movlw 10
005D   02??           00454     subwf accbL,W
005E   1803           00455     skpnc
005F   00??           00456     movwf accbL
0060   0D??           00457     rlf accaL
0061   0D??           00458     rlf accaH
0062   0D??           00459     rlf accbL
0063   0B??           00460     decfsz rcount
0064   3???           00461     bra div10_loop
0065   36??           00462     lsrf accbL
                      00463     enable_video
0066   1100               M     bcf flags, F_MUTEX
0067   0008           00464     return
                      00465     
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-14-2016  20:45:37         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00466     
                      00467 ; WREG*6  because BPL=6
                      00468 ; WREG*6=WREG*4+WREG*2    
0068                  00469 mult6: 
0068   00??           00470     movwf accbH
0069   35??           00471     lslf accbH    ; accbH=2*WREG
006A   35??           00472     lslf accbH,W  ; WREG=4*WREG
006B   07??           00473     addwf accbH,W ; WREG=6*WREG
006C   0008           00474     return
                      00475 
                      00476 ;read game pad
                      00477 ; store value in
                      00478 ; buttons
                      00479 ; a button is accepted if
                      00480 ; the Vadc value is below its threshold
006D                  00481 read_pad:
006D   01??           00482     clrf buttons
006E   1A80           00483     btfsc flags, F_SND
006F   0008           00484     return ; can't read while tone playing
0070   0021           00485     banksel TRISA
0071   160C           00486     bsf TRISA,ADC_PIN
0072   0021           00487     banksel ADCON0
0073   141D           00488     bsf ADCON0,ADON
                      00489     tcyDelay 8*4 ; délais d'acquisition 4µsec
  0002                    M     variable r=8*4%5
  0006                    M     variable q=8*4/5
                          M     while r>1
0074   3???               M     bra $+1
  00000000                M r-=2
                          M     endw
                          M     if r==1
                          M     nop
                          M     endif
                          M     if q
0075   3006               M     movlw q
0076   3???               M     bra $+1
0077   0B89               M     decfsz WREG
0078   3???               M     bra $-2
                          M     endif
0079   149D           00490     bsf ADCON0,GO
007A   189D           00491     btfsc ADCON0,NOT_DONE
007B   3???           00492     bra $-1
007C   101D           00493     bcf ADCON0,ADON
                      00494 ; try each button from lower to upper
007D                  00495 try_a:
                      00496     try_button A_THR, try_b
007D   3040               M     movlw A_THR
007E   021C               M     subwf ADRESH,W
007F   1803               M     skpnc
0080   3???               M     bra try_b
0081   1600           00497     bsf buttons,BTN_A
0082   3???           00498     bra read_exit
0083                  00499 try_b:    
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-14-2016  20:45:37         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00500     try_button B_THR, try_rt
0083   3095               M     movlw B_THR
0084   021C               M     subwf ADRESH,W
0085   1803               M     skpnc
0086   3???               M     bra try_rt
0087   1680           00501     bsf buttons,BTN_B
0088   3???           00502     bra read_exit
0089                  00503 try_rt:
                      00504     try_button RT_THR, try_up
0089   30B5               M     movlw RT_THR
008A   021C               M     subwf ADRESH,W
008B   1803               M     skpnc
008C   3???               M     bra try_up
008D   1580           00505     bsf buttons,BTN_RT
008E   3???           00506     bra read_exit
008F                  00507 try_up:
                      00508     try_button UP_THR, try_lt
008F   30C6               M     movlw UP_THR
0090   021C               M     subwf ADRESH,W
0091   1803               M     skpnc
0092   3???               M     bra try_lt
0093   1400           00509     bsf buttons,BTN_UP
0094   3???           00510     bra read_exit
0095                  00511 try_lt:
                      00512     try_button LT_THR, try_dn
0095   30D1               M     movlw LT_THR
0096   021C               M     subwf ADRESH,W
0097   1803               M     skpnc
0098   3???               M     bra try_dn
0099   1500           00513     bsf buttons,BTN_LT
009A   3???           00514     bra read_exit
009B                  00515 try_dn:
                      00516     try_button DN_THR, read_exit
009B   30D8               M     movlw DN_THR
009C   021C               M     subwf ADRESH,W
009D   1803               M     skpnc
009E   3???               M     bra read_exit
009F   1480           00517     bsf buttons,BTN_DN
00A0                  00518 read_exit:
00A0   0021           00519     banksel TRISA
00A1   120C           00520     bcf TRISA,ADC_PIN
00A2   0008           00521     return
                      00522     
                      00523 ; play a tone
                      00524 ; input:
                      00525 ;   t   duration in multiple of 1/60 sec.
                      00526 ;   n   note number
00A3                  00527 tone: ; ( t n -- )
00A3   0021           00528     banksel TRISA
00A4   120C           00529     bcf TRISA,AUDIO_PIN
00A5   003B           00530     banksel AUDIO_PWMPRL
00A6   3581           00531     lslf T
00A7   0801           00532     movfw T
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-14-2016  20:45:37         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00A8   2???           00533     call tone_pr
00A9   00A5           00534     movwf AUDIO_PWMPRL
00AA   3689           00535     lsrf WREG
00AB   00A3           00536     movwf AUDIO_PWMDCL
00AC   0A01           00537     incf T,W
00AD   2???           00538     call tone_pr
00AE   00A6           00539     movwf AUDIO_PWMPRH
00AF   3689           00540     lsrf WREG
00B0   00A4           00541     movwf AUDIO_PWMDCH
00B1   1803           00542     skpnc
00B2   17A3           00543     bsf AUDIO_PWMDCL,7
                      00544     pop
00B3   0017               M     moviw SP--
                      00545     pop
00B4   0017               M     moviw SP--
00B5   00??           00546     movwf tone_tmr
00B6   17AB           00547     bsf AUDIO_PWMCON,EN
00B7   17AF           00548     bsf AUDIO_PWMLDCON,LDA
00B8   1680           00549     bsf flags,F_SND
00B9   0008           00550     return
                      00551     
                      00552     
                      00553 ; serialise video pixels to output
00BA                  00554 video_serialize: 
                      00555     tcyDelay HORZ_DLY
  0000                    M     variable r=HORZ_DLY%5
  000A                    M     variable q=HORZ_DLY/5
                          M     while r>1
                          M     bra $+1
                          M r-=2
                          M     endw
                          M     if r==1
                          M     nop
                          M     endif
                          M     if q
00BA   300A               M     movlw q
00BB   3???               M     bra $+1
00BC   0B89               M     decfsz WREG
00BD   3???               M     bra $-2
                          M     endif
00BE   0804           00556     movfw FSR0L
                      00557     push
00BF   001C               M     movwi ++SP
00C0   0805           00558     movfw FSR0H
                      00559     push
00C1   001C               M     movwi ++SP
                      00560     lit 0 ;  x 
00C2   3000               M    movlw 0
00C3   001C               M    movwi ++SP 
00C4   3030           00561     movlw VIDEO_BUFFER&0xff
00C5   0084           00562     movwf FSR0L
00C6   3020           00563     movlw VIDEO_BUFFER>>8
00C7   0085           00564     movwf FSR0H
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-14-2016  20:45:37         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00C8   3046           00565     movlw FIRST_VIDEO
00C9   02??           00566     subwf lcountL,W
00CA   3689           00567     lsrf WREG
00CB   3689           00568     lsrf WREG
00CC   2???           00569     call mult6  ; 6 byte per line
00CD   0784           00570     addwf FSR0L
00CE   0103           00571     clrw
00CF   3D85           00572     addwfc FSR0H
00D0   3006           00573     movlw XSIZE/8 ; 8 pixels per byte
00D1   00??           00574     movwf rcount  ;
00D2   0023           00575     banksel RCSTA
00D3   179D           00576     bsf RCSTA,SPEN
00D4                  00577 pixels_loop:    
00D4   0012           00578     moviw FSR0++
00D5   0023           00579     banksel PIXEL_TXREG
00D6   009A           00580     movwf PIXEL_TXREG
00D7   0020           00581     banksel TX_PIR
00D8   1E11           00582     btfss TX_PIR,TXIF
00D9   3???           00583     bra $-1
00DA   0B??           00584     decfsz rcount
00DB   3???           00585     bra pixels_loop
00DC   0023           00586     banksel PIXEL_TXREG
00DD   019A           00587     clrf PIXEL_TXREG
00DE   0020           00588     banksel TX_PIR
00DF   1E11           00589     btfss TX_PIR,TXIF
00E0   3???           00590     bra $-1
00E1   0023           00591     banksel RCSTA
00E2   139D           00592     bcf RCSTA, SPEN
                      00593     pop
00E3   0017               M     moviw SP--
00E4   0085           00594     movwf FSR0H
                      00595     pop
00E5   0017               M     moviw SP--
00E6   0084           00596     movwf FSR0L
00E7   0008           00597     return
                      00598 
                      00599 ; clear_screen
                      00600 ; all pixels black
                      00601 ; input:
                      00602 ;   none
                      00603 ; output:
                      00604 ;   none    
00E8                  00605 clear_screen: 
                      00606     disable_video
00E8   1500               M     bsf flags, F_MUTEX
00E9   3020           00607     movlw high(VIDEO_BUFFER)
00EA   0085           00608     movwf FSR0H
00EB   3030           00609     movlw low(VIDEO_BUFFER)
00EC   0084           00610     movwf FSR0L
00ED   30C0           00611     movlw BUFFER_SIZE
                      00612     push  ; T=byte count  
00EE   001C               M     movwi ++SP
00EF   3000           00613     movlw 0
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-14-2016  20:45:37         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00F0                  00614 cls_loop:    
00F0   001A           00615     movwi FSR0++
00F1   0B81           00616     decfsz T
00F2   3???           00617     bra cls_loop
                      00618     drop
00F3   317F               M    addfsr SP,-1
                      00619     enable_video
00F4   1100               M     bcf flags, F_MUTEX
00F5   0008           00620     return
                      00621 
                      00622     
                      00623 ;set video pointer at 
                      00624 ; input:
                      00625 ;   x,y coordinates of pixel in video_buffer    
                      00626 ; output:
                      00627 ;   T = pixel offset, 0 left, 7 right  
                      00628 ;   Z=0 if offset==0 
                      00629 ; NOTE: EUSART output least significant bit first
                      00630 ;       so bit 0 appear left on screen.    
00F6                  00631 set_video_ptr:  ; ( x y -- b )
00F6   3020           00632     movlw high(VIDEO_BUFFER)
00F7   0085           00633     movwf FSR0H
00F8   3030           00634     movlw low(VIDEO_BUFFER)
00F9   0084           00635     movwf FSR0L
                      00636 ; buffer_addr+y*BPL
                      00637     pop         ; ( x y -- x )
00FA   0017               M     moviw SP--
00FB   2???           00638     call mult6
00FC   0784           00639     addwf FSR0L
00FD   0103           00640     clrw
00FE   3D85           00641     addwfc FSR0H
                      00642 ; buffer_addr+x/8
00FF   3601           00643     lsrf T,W   
0100   3689           00644     lsrf WREG
0101   3689           00645     lsrf WREG
0102   0784           00646     addwf FSR0L
0103   0103           00647     clrw
0104   3D85           00648     addwfc FSR0H
0105   3007           00649     movlw 7
0106   0581           00650     andwf T,F
0107   0008           00651     return
                      00652 
                      00653 ; return state of pixel
                      00654 ; input:
                      00655 ;   x,y coordinates of pixel
                      00656 ; output:
                      00657 ;   T=0|2^n  where n{0:7}
                      00658 ;   Z=1 when T==0    
0108                  00659 get_pixel: ; ( x y -- 0|2^n ) n{0:7)
                      00660     lit TEST_OP
0108   3003               M    movlw TEST_OP
0109   001C               M    movwi ++SP 
010A   2???           00661     call bitop
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-14-2016  20:45:37         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

010B   0801           00662     movfw T  ; 
010C   0008           00663     return
                      00664     
                      00665     
  00000000            00666 CLR_OP equ 0    ; put pixel to 0
  00000001            00667 SET_OP equ 1    ; put pixel to 1         
  00000002            00668 XOR_OP equ 2    ; invert pixel
  00000003            00669 TEST_OP  equ 3  ; test bit value  return its value as flag
                      00670 ;operation on pixel    
                      00671 ; inputs:
                      00672 ;   {x,y} coordinates
                      00673 ;   op operation XOR_OP|CLR_OP 
                      00674 ; output:
                      00675 ;   WREG=collision flag, 0 if collision 
                      00676 ; >> no bank dependency << 
010D                  00677 bitop: ; ( x y op -- f )
                      00678     disable_video
010D   1500               M     bsf flags, F_MUTEX
                      00679     pick 2
010E   3F7E               M     moviw -2[SP]
                      00680     push        ; x y op x
010F   001C               M     movwi ++SP
                      00681     pick 2
0110   3F7E               M     moviw -2[SP]
                      00682     push        ; x y op x y
0111   001C               M     movwi ++SP
                      00683 ; preserve FSR0    
0112   0804           00684     movfw FSR0L
                      00685     insert 4
0113   3FFC               M    movwi -4[SP]
0114   0805           00686     movfw FSR0H
                      00687     insert 3    ; -- FSR0L FSR0H op x y 
0115   3FFD               M    movwi -3[SP]
0116   2???           00688     call set_video_ptr  ; -- FSR0L FSR0H op bit
0117   3001           00689     movlw 0x1
0118   1903           00690     skpnz ; bit Z modified before leaving set_video_ptr
0119   3???           00691     bra bitop01 ; least significant bit
011A                  00692 bitop00:
011A   3589           00693     lslf WREG
011B   0B81           00694     decfsz T
011C   3???           00695     bra bitop00
011D                  00696 bitop01: 
                      00697     ; WREG= bit mask
011D   0081           00698     movwf T    ; -- FSR0L FSR0H op mask
                      00699 ;operation selector    
                      00700     pick 1  ; WREG= op
011E   3F7F               M     moviw -1[SP]
011F   000B           00701     brw
0120   3???           00702     bra clear_bit
0121   3???           00703     bra set_bit
0122   3???           00704     bra xor_bit
0123                  00705 test_bit:  ; TEST_OP
0123   0801           00706     movfw T
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-14-2016  20:45:37         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0124   0500           00707     andwf INDF0,W
0125   0081           00708     movwf T     ; FSR0L FSR0H op bit
0126   3???           00709     bra bitop02
0127                  00710 clear_bit:  ; CLR_OP
0127   0901           00711     comf T,W
0128   0580           00712     andwf INDF0,F
0129   3???           00713     bra bitop02 ; -- FSR0L FSR0H op mask
012A                  00714 set_bit:
012A   0801           00715     movfw T
012B   0480           00716     iorwf INDF0,F
012C   3???           00717     bra bitop02
012D                  00718 xor_bit: ; XOR_OP
012D   0801           00719     movfw T   ; -- FSR0L FSR0H op mask
012E   0680           00720     xorwf INDF0,F
012F   0500           00721     andwf INDF0,W
0130   0601           00722     xorwf T,W ; on screen bit value, 0 if no collision
0131   0081           00723     movwf T  ; -- FSR0L FSR0H op f
0132                  00724 bitop02:    
                      00725 ; restore FSR0    
                      00726     pick 2  
0132   3F7E               M     moviw -2[SP]
0133   0085           00727     movwf FSR0H
                      00728     pick 3
0134   3F7D               M     moviw -3[SP]
0135   0084           00729     movwf FSR0L
                      00730     pop  ; collision flag
0136   0017               M     moviw SP--
                      00731     drop_n 3 ; drop parameters frame
0137   317D               M     addfsr SP,-3
                      00732     push ; store collision flag
0138   001C               M     movwi ++SP
                      00733     enable_video
0139   1100               M     bcf flags, F_MUTEX
013A   0008           00734     return
                      00735 
                      00736 ; draw row of 4 pixels
                      00737 ; stop when n==0    
                      00738 ; input:
                      00739 ;   {x,y} left coordinates
                      00740 ;   n pixels to draw
                      00741 ;   f collision flag to be modified    
                      00742 ; output:
                      00743 ;   f=collision flag, return modified value   
                      00744 ; >> no bank dependency << 
013B                  00745 xor_row: ; ( f n x y -- f )
                      00746 ; bounds check y
013B   1B81           00747     btfsc T,7
013C   3???           00748     bra xor_row_done ; y<0
013D   3020           00749     movlw YSIZE
013E   0201           00750     subwf T,W
013F   1803           00751     skpnc
0140   3???           00752     bra xor_row_done ; y>=YSIZE
0141                  00753 xor_row01:    
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-14-2016  20:45:37         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00754     pick 2 ; check if n==0
0141   3F7E               M     moviw -2[SP]
0142   1903           00755     skpnz
0143   3???           00756     bra xor_row_done ; row empty nothing to do
0144   3589           00757     lslf WREG
                      00758     insert 2  ; save shifted n
0145   3FFE               M    movwi -2[SP]
0146   1C03           00759     skpc
0147   3???           00760     bra xor_row02 ; bit==0 no draw
                      00761 ; bounds check x{0:43}    
                      00762     pick 1
0148   3F7F               M     moviw -1[SP]
0149   1B89           00763     btfsc WREG,7 
014A   3???           00764     bra xor_row02 ; x<0 don't print
014B   3C2F           00765     sublw XSIZE-1
014C   1C03           00766     skpc
014D   3???           00767     bra xor_row_done ; x>=XSIZE
                      00768 ; check for empty row
                      00769     over ; f n x y x 
014E   3F7F               M     moviw -1[SP]
                          M     push
014F   001C               M     movwi ++SP
                      00770     over ; f n x y x y
0150   3F7F               M     moviw -1[SP]
                          M     push
0151   001C               M     movwi ++SP
                      00771     lit XOR_OP ; f n x y x y op
0152   3002               M    movlw XOR_OP
0153   001C               M    movwi ++SP 
0154   2???           00772     call bitop ; -- f n x y f
                      00773     pick 4 ; pick flag
0155   3F7C               M     moviw -4[SP]
0156   0481           00774     iorwf T
                      00775     pop      ; -- f n x y
0157   0017               M     moviw SP--
                      00776     insert 3 ; store modified flag
0158   3FFD               M    movwi -3[SP]
0159                  00777 xor_row02:
                      00778     inc_n 1  ; x+=1
0159   3F7F               M     moviw -1[SP]
015A   0A89               M     incf WREG,F
015B   3FFF               M     movwi -1[SP]
015C   3???           00779     bra xor_row01
015D                  00780 xor_row_done: ; f n x y
                      00781     drop_n 3  ; only keep f
015D   317D               M     addfsr SP,-3
015E   0008           00782     return
                      00783 
                      00784 ; read flash memory word
                      00785 ; input:
                      00786 ;   lo is low byte of address
                      00787 ;   hi is high byte of address
                      00788 ;   ofs offset in table (limited to 255 )    
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-14-2016  20:45:37         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00789 ; output:
                      00790 ;   PMDATH: PMDAL
                      00791 ;reset <nibble> variable 
                      00792 ; >> modify BSR <<    
015F                  00793 get_flash_word: ; ( ofs lo hi -- )
015F   0023           00794     banksel PMADR
                      00795     pop
0160   0017               M     moviw SP--
0161   0092           00796     movwf PMADRH
                      00797     pop
0162   0017               M     moviw SP--
0163   0091           00798     movwf PMADRL
                      00799     pop
0164   0017               M     moviw SP--
0165   0791           00800     addwf PMADRL
0166   0103           00801     clrw 
0167   3D92           00802     addwfc PMADRH
0168                  00803 read_flash:    
0168   1315           00804     bcf PMCON1,CFGS
0169   1415           00805     bsf PMCON1, RD
016A   0000           00806     nop
016B   0000           00807     nop
016C   01??           00808     clrf nibble
016D   0008           00809     return
                      00810 
                      00811 ; increament pointer 
                      00812 ; and read next flash word    
                      00813 ; >> modify BSR <<    
016E                  00814 next_flash_word:
016E   0023           00815     banksel PMADR
016F   0A91           00816     incf PMADRL
0170   1903           00817     skpnz
0171   0A92           00818     incf PMADRH
0172   3???           00819     bra read_flash
                      00820     
                      00821 ;get nibble from PMDAT
                      00822 ; output:
                      00823 ;   stack nibble in bits 7:4
                      00824 ; increment nibble variable    
                      00825 ; >> modify BSR <<    
0173                  00826 get_nibble: ; ( -- nibble )
0173   3003           00827     movlw 3
0174   06??           00828     xorwf nibble,W
0175   1903           00829     skpnz ; if set all nibbles of this word read
0176   2???           00830     call next_flash_word
0177   0023           00831     banksel PMDAT
0178   08??           00832     movfw nibble
0179   1903           00833     skpnz
017A   3???           00834     bra row0
017B   0B89           00835     decfsz WREG
017C   3???           00836     bra row2
017D                  00837 row1:    
017D   0813           00838     movfw PMDATL
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-14-2016  20:45:37         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

017E   3???           00839     bra nibble_mask
017F                  00840 row2:
017F   0E13           00841     swapf PMDATL,W
0180   3???           00842     bra nibble_mask
0181                  00843 row0:    
0181   0E14           00844     swapf PMDATH,W
0182                  00845 nibble_mask:
0182   39F0           00846     andlw 0xf0
                      00847     push
0183   001C               M     movwi ++SP
0184   0A??           00848     incf nibble,F ; advance nibble pointer
0185   0008           00849     return
                      00850 
                      00851 ; print 4 pixels row
                      00852 ; inputs:
                      00853 ;   x,y left coordinates
                      00854 ;   f  collision flag
                      00855 ; output:    
                      00856 ;   advance y coordinate for next row    
0186                  00857 print_row: ; ( x y f -- x y f )     
0186   2???           00858     call get_nibble ; -- x y f n 
                      00859     pick 3 
0187   3F7D               M     moviw -3[SP]
                      00860     push    ; x y f n x
0188   001C               M     movwi ++SP
                      00861     pick 3
0189   3F7D               M     moviw -3[SP]
                      00862     push      ; x y f n x y
018A   001C               M     movwi ++SP
018B   2???           00863     call xor_row ; -- x y f
                      00864     inc_n 1 ; y+=1
018C   3F7F               M     moviw -1[SP]
018D   0A89               M     incf WREG,F
018E   3FFF               M     movwi -1[SP]
018F   0008           00865     return
                      00866     
                      00867 ; draw character 
                      00868 ; input:
                      00869 ;   x,y left/top coordinates
                      00870 ;   c   character to print    
0190                  00871 print_char: ; ( x y c -- )
0190   3581           00872     lslf T ; 2 words per digit
                      00873     lit low(digits)
0191   30??               M    movlw low(digits)
0192   001C               M    movwi ++SP 
                      00874     lit high(digits) ; x y ofs adrL adrH
0193   30??               M    movlw high(digits)
0194   001C               M    movwi ++SP 
0195   2???           00875     call get_flash_word  ; x y
                      00876     lit 0   ; x y f=0
0196   3000               M    movlw 0
0197   001C               M    movwi ++SP 
0198   2???           00877     call print_row
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-14-2016  20:45:37         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0199   2???           00878     call print_row
019A   2???           00879     call print_row 
019B   2???           00880     call print_row 
019C   2???           00881     call print_row 
                      00882     drop_n 3  ; ( x y f -- )
019D   317D               M     addfsr SP,-3
019E   0008           00883     return
                      00884 
                      00885 ; print current tetriminos
                      00886 ; input:
                      00887 ;   arguments in game variables   
                      00888 ;   titrim: tetriminos id
                      00889 ;   angle: rotation angle    
                      00890 ;   tx,ty  left/top coordinates
                      00891 ; output:
                      00892 ;   collision flag,  0 if no collision    
                      00893 ; >> modify BSR <<    
019F                  00894 print_tetrim: ; (  -- f )
019F   0020           00895     banksel GAME_VAR
01A0   35??           00896     lslf tetrim,W
01A1   3589           00897     lslf WREG
                      00898     push
01A2   001C               M     movwi ++SP
01A3   3018           00899     movlw 24
01A4   0201           00900     subwf T,W
01A5   1803           00901     skpnc
01A6   3???           00902     bra ti ; I tetrominos
01A7   08??           00903     movfw angle
01A8   0781           00904     addwf T,F
01A9   30??           00905     movlw low(tetriminos)
                      00906     push    ; ofs addrL
01AA   001C               M     movwi ++SP
01AB   30??           00907     movlw high(tetriminos)
                      00908     push    ; ofs addrL addrH
01AC   001C               M     movwi ++SP
01AD   3???           00909     bra prt01
01AE                  00910 ti: ; special treatment for I tetriminos
01AE   0181           00911     clrf T
01AF   35??           00912     lslf angle,W
01B0   0781           00913     addwf T,F
01B1   30??           00914     movlw low(I0) 
                      00915     push     ; ofs addrL
01B2   001C               M     movwi ++SP
01B3   30??           00916     movlw high(I0)
                      00917     push     ; ofs addrL addrH
01B4   001C               M     movwi ++SP
01B5                  00918 prt01:    
01B5   2???           00919     call get_flash_word  ; --
01B6   002?           00920     banksel tx
01B7   08??           00921     movfw tx
                      00922     push    ; -- x
01B8   001C               M     movwi ++SP
01B9   08??           00923     movfw ty
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-14-2016  20:45:37         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00924     push    ; -- x y 
01BA   001C               M     movwi ++SP
                      00925     lit 0   ; -- x y f
01BB   3000               M    movlw 0
01BC   001C               M    movwi ++SP 
01BD   2???           00926     call print_row ; x y f -- x y+1 f
01BE   2???           00927     call print_row
01BF   2???           00928     call print_row
01C0   0023           00929     banksel PMDAT
01C1   3030           00930     movlw 0x30
01C2   0514           00931     andwf PMDATH,W
01C3   1903           00932     skpnz
01C4   2???           00933     call print_row
01C5   0801           00934     movfw T
                      00935     drop_n 3
01C6   317D               M     addfsr SP,-3
                      00936     push  ; -- f
01C7   001C               M     movwi ++SP
01C8   0008           00937     return
                      00938     
                      00939 ;print a text line store in flash
                      00940 ; text terminated by 0xff
                      00941 ; input: 
                      00942 ;  x, y left coordinates
                      00943 ;  idx  index of message    
01C9                  00944 print_label: ; ( x y idx -- )
                      00945     lit 0    ; x y idx i
01C9   3000               M    movlw 0
01CA   001C               M    movwi ++SP 
01CB                  00946 prt_lbl_loop:
                      00947     dup      ; x y idx i i
01CB   0801               M     movfw T
01CC   001C               M     movwi ++SP
                      00948     pick 2   ; WREG=idx
01CD   3F7E               M     moviw -2[SP]
01CE   2???           00949     call labels ; x y idx i i -- x y idx i  
01CF   1B89           00950     btfsc WREG,7
01D0   3???           00951     bra prt_lbl_done
                      00952     push ; x y idx i c
01D1   001C               M     movwi ++SP
                      00953     pick 4
01D2   3F7C               M     moviw -4[SP]
                      00954     push    ; x y idx i c x 
01D3   001C               M     movwi ++SP
                      00955     pick 4
01D4   3F7C               M     moviw -4[SP]
                      00956     push    ; x y idx i c x y
01D5   001C               M     movwi ++SP
                      00957     rot     ; x y idx i x y c
                          M     pick 2
01D6   3F7E               M     moviw -2[SP]
                          M     push        ; n1 n2 n3 n1
01D7   001C               M     movwi ++SP
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-14-2016  20:45:37         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     pick 2
01D8   3F7E               M     moviw -2[SP]
                          M     insert 3   ;  n2 n2 n3 n1
01D9   3FFD               M    movwi -3[SP]
                          M     pick 1
01DA   3F7F               M     moviw -1[SP]
                          M     insert 2   ; n2 n3 n3 n1
01DB   3FFE               M    movwi -2[SP]
                          M     pop        ; n2 n3 n3 
01DC   0017               M     moviw SP--
01DD   0081               M     movwf T    ; n2 n3 n1
01DE   2???           00958     call print_char ; -- x y idx i 
01DF   0A81           00959     incf T
                      00960     pick 3    ; x
01E0   3F7D               M     moviw -3[SP]
01E1   3E04           00961     addlw 4   ; x+=4
                      00962     insert 3  
01E2   3FFD               M    movwi -3[SP]
01E3   3???           00963     bra prt_lbl_loop
01E4                  00964 prt_lbl_done:
                      00965     drop_n 4
01E4   317C               M     addfsr SP,-4
01E5   0008           00966     return
                      00967 
                      00968 ;print an integer
                      00969 ;from right to left ( least first)
                      00970 ; input:    
                      00971 ;   x,y  coordinate right end
                      00972 ;   number to print in acca    
                      00973 ;   accbL contain digit after div10 call    
01E6                  00974 print_int: ; ( x y -- )
01E6   08??           00975     movfw accaH
01E7   04??           00976     iorwf accaL,W
01E8   1903           00977     skpnz
01E9   3???           00978     bra print_last
                      00979     over
01EA   3F7F               M     moviw -1[SP]
                          M     push
01EB   001C               M     movwi ++SP
                      00980     over    ; x y x y
01EC   3F7F               M     moviw -1[SP]
                          M     push
01ED   001C               M     movwi ++SP
01EE   2???           00981     call div10
01EF   08??           00982     movfw accbL ; remainder of division
                      00983     push   ; x y x y d
01F0   001C               M     movwi ++SP
01F1   2???           00984     call print_char ; -- x y 
                      00985     pick 1
01F2   3F7F               M     moviw -1[SP]
                      00986     push
01F3   001C               M     movwi ++SP
01F4   3004           00987     movlw 4
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-14-2016  20:45:37         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01F5   0281           00988     subwf T
                      00989     pop
01F6   0017               M     moviw SP--
                      00990     insert 1
01F7   3FFF               M    movwi -1[SP]
01F8   3???           00991     bra print_int
01F9                  00992 print_last:
                      00993     pick 1
01F9   3F7F               M     moviw -1[SP]
01FA   3A2B           00994     xorlw 43
01FB   1D03           00995     skpz
01FC   3???           00996     bra no_zero
                      00997     push
01FD   001C               M     movwi ++SP
01FE   3???           00998     bra print_char
01FF                  00999 no_zero:
                      01000     drop_n 2
01FF   317E               M     addfsr SP,-2
0200   0008           01001     return
                      01002     
                      01003 ; draw horizontal line ( length  y x -- )
                      01004 ; inputs:
                      01005 ;   length of line
                      01006 ;   {x,y} left coordinates       
0201                  01007 hline:
                      01008     pick 2
0201   3F7E               M     moviw -2[SP]
0202   1903           01009     skpnz
0203   3???           01010     bra hline_done
0204   0389           01011     decf WREG
                      01012     insert 2
0205   3FFE               M    movwi -2[SP]
                      01013     dup     ; len y x x
0206   0801               M     movfw T
0207   001C               M     movwi ++SP
                      01014     pick 2
0208   3F7E               M     moviw -2[SP]
                      01015     push    ; len y x x y
0209   001C               M     movwi ++SP
                      01016     lit XOR_OP
020A   3002               M    movlw XOR_OP
020B   001C               M    movwi ++SP 
020C   2???           01017     call bitop
                      01018     drop
020D   317F               M    addfsr SP,-1
020E   0A81           01019     incf T  ; len y x+1
020F   3???           01020     bra hline
0210                  01021 hline_done:    
                      01022     drop_n 3
0210   317D               M     addfsr SP,-3
0211   0008           01023     return
                      01024 
                      01025 ;draw vertical line ( length x y -- )
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-14-2016  20:45:37         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01026 ; inputs:
                      01027 ;   length of line
                      01028 ;   {x,y} top coordinate
0212                  01029 vline:  ; len y x
                      01030     pick 2 
0212   3F7E               M     moviw -2[SP]
0213   1903           01031     skpnz
0214   3???           01032     bra vline_done
0215   0389           01033     decf WREG
                      01034     insert 2
0216   3FFE               M    movwi -2[SP]
                      01035     pick 1      
0217   3F7F               M     moviw -1[SP]
                      01036     push    ; len x y x
0218   001C               M     movwi ++SP
                      01037     pick 1
0219   3F7F               M     moviw -1[SP]
                      01038     push    ; len x y x y
021A   001C               M     movwi ++SP
                      01039     lit XOR_OP
021B   3002               M    movlw XOR_OP
021C   001C               M    movwi ++SP 
021D   2???           01040     call bitop
                      01041     drop
021E   317F               M    addfsr SP,-1
021F   0A81           01042     incf T
0220   3???           01043     bra vline
0221                  01044 vline_done:
                      01045     drop_n 3
0221   317D               M     addfsr SP,-3
0222   0008           01046     return
                      01047     
  0000000A            01048 WELL_WIDTH equ 10
  00000016            01049 WELL_DEPTH equ 22 
0223                  01050 game_init:
0223   2???           01051     call clear_screen
                      01052 ; draw game well    
                      01053     lit WELL_DEPTH
0224   3016               M    movlw WELL_DEPTH
0225   001C               M    movwi ++SP 
                      01054     lit 0
0226   3000               M    movlw 0
0227   001C               M    movwi ++SP 
                      01055     lit 0
0228   3000               M    movlw 0
0229   001C               M    movwi ++SP 
022A   2???           01056      call vline
                      01057     lit WELL_DEPTH
022B   3016               M    movlw WELL_DEPTH
022C   001C               M    movwi ++SP 
                      01058     lit WELL_WIDTH+1
022D   300B               M    movlw WELL_WIDTH+1
022E   001C               M    movwi ++SP 
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-14-2016  20:45:37         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01059     lit 0
022F   3000               M    movlw 0
0230   001C               M    movwi ++SP 
0231   2???           01060     call vline
                      01061     lit WELL_WIDTH+2
0232   300C               M    movlw WELL_WIDTH+2
0233   001C               M    movwi ++SP 
                      01062     lit WELL_DEPTH
0234   3016               M    movlw WELL_DEPTH
0235   001C               M    movwi ++SP 
                      01063     lit 0
0236   3000               M    movlw 0
0237   001C               M    movwi ++SP 
0238   2???           01064     call hline
                      01065 ; print "SCORE" label    
                      01066     lit WELL_WIDTH+3 ; x
0239   300D               M    movlw WELL_WIDTH+3
023A   001C               M    movwi ++SP 
                      01067     lit 0            ; y
023B   3000               M    movlw 0
023C   001C               M    movwi ++SP 
                      01068     lit LBL_SCORE         
023D   3000               M    movlw LBL_SCORE
023E   001C               M    movwi ++SP 
023F   2???           01069     call print_label
                      01070 ; print "LINES" label    
                      01071     lit WELL_WIDTH+3 ; x
0240   300D               M    movlw WELL_WIDTH+3
0241   001C               M    movwi ++SP 
                      01072     lit 12           ; y
0242   300C               M    movlw 12
0243   001C               M    movwi ++SP 
                      01073     lit LBL_LINES
0244   3001               M    movlw LBL_LINES
0245   001C               M    movwi ++SP 
0246   2???           01074     call print_label
                      01075 ; variables initialization
0247   1600           01076     bsf flags,F_GSTOP
0248                  01077 clear_score:
0248   0020           01078     banksel GAME_VAR
0249   01??           01079     clrf scoreL
024A   01??           01080     clrf scoreH
024B   01??           01081     clrf droppedL
024C   01??           01082     clrf droppedH
024D   0008           01083     return
                      01084 
                      01085 ; drop 1 row
                      01086 ; input:
                      01087 ;   r  row to drop
                      01088 ; output:
                      01089 ;   none
024E                  01090 drop1: ; ( r -- )
                      01091     reserve 1 ; r x  
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-14-2016  20:45:37         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

024E   3141               M     addfsr SP, 1 
024F                  01092 row_loop: ; y{r:1}
024F   300A           01093     movlw 10
0250   0081           01094     movwf T ; -- r x
0251                  01095 col_loop:  ; x{10:1}
                      01096     dup   ; -- r x x
0251   0801               M     movfw T
0252   001C               M     movwi ++SP
                      01097     pick 2
0253   3F7E               M     moviw -2[SP]
0254   0389           01098     decf WREG
                      01099     push  ; -- r x x r-1
0255   001C               M     movwi ++SP
0256   2???           01100     call get_pixel ; -- r x p
                      01101     over        ; r x p x
0257   3F7F               M     moviw -1[SP]
                          M     push
0258   001C               M     movwi ++SP
                      01102     pick 3
0259   3F7D               M     moviw -3[SP]
                      01103     push        ; r x p x r
025A   001C               M     movwi ++SP
                      01104     pick 2 
025B   3F7E               M     moviw -2[SP]
025C   1D03           01105     skpz
025D   3001           01106     movlw 1
                      01107     push
025E   001C               M     movwi ++SP
025F   2???           01108     call bitop ;  r x p x r op -- r x p f 
                      01109     drop_n 2
0260   317E               M     addfsr SP,-2
0261   0B81           01110     decfsz T    ; r x-1 
0262   3???           01111     bra col_loop
                      01112     dec_n 1  ; dec r
0263   3F7F               M     moviw -1[SP]
0264   0389               M     decf WREG,F
0265   3FFF               M     movwi -1[SP]
0266   1D03           01113     skpz 
0267   3???           01114     bra row_loop
                      01115     drop_n 2
0268   317E               M     addfsr SP,-2
0269   0008           01116     return
                      01117     
                      01118     
  00000000            01119 ROW_EMPTY equ 0     
  0000000A            01120 ROW_FULL equ 10 ; 10 bits in row
                      01121 ; check the state of well row
                      01122 ; input:
                      01123 ;   s number of bits set initialized at 0 by caller    
                      01124 ;   r row number: 0 top, 22 bottom  
                      01125 ; output:    
                      01126 ;   s={0:10}  number of bits set
026A                  01127 query_row: ; ( s=0 r -- s=0:10 )
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-14-2016  20:45:37         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01128     lit 10 ; s r x   ; check x from  10 to 1
026A   300A               M    movlw 10
026B   001C               M    movwi ++SP 
026C                  01129 qr00:
                      01130     dup   ; s r x x
026C   0801               M     movfw T
026D   001C               M     movwi ++SP
                      01131     pick 2 
026E   3F7E               M     moviw -2[SP]
                      01132     push  ; s r x x y
026F   001C               M     movwi ++SP
0270   2???           01133     call get_pixel ; -- s r x n
0271   1903           01134     skpnz   ; Z modified by get_pixel
0272   3???           01135     bra qr01
                      01136     inc_n 3
0273   3F7D               M     moviw -3[SP]
0274   0A89               M     incf WREG,F
0275   3FFD               M     movwi -3[SP]
0276                  01137 qr01:    
                      01138     drop     ; -- s r x 
0276   317F               M    addfsr SP,-1
0277   0B81           01139     decfsz T
0278   3???           01140     bra qr00
                      01141     drop_n 2 ; -- s
0279   317E               M     addfsr SP,-2
027A   0008           01142     return
                      01143 
                      01144 ; count and drop full rows
                      01145 ; input:
                      01146 ;   none
                      01147 ; output:
                      01148 ;   n number of droppend rows
                      01149 ;condition:
                      01150 ;  check each row from bottom up
                      01151 ;  stop at first empty row
                      01152 ;  full rows are dropped    
027B                  01153 count_full: ; ( -- n)
                      01154     lit 0 ; full rows counter
027B   3000               M    movlw 0
027C   001C               M    movwi ++SP 
                      01155     lit 21 ; row number {21:1}
027D   3015               M    movlw 21
027E   001C               M    movwi ++SP 
027F                  01156 count_loop:
                      01157     lit 0   ; n r s  number of bits set
027F   3000               M    movlw 0
0280   001C               M    movwi ++SP 
                      01158     over    ; n r s r
0281   3F7F               M     moviw -1[SP]
                          M     push
0282   001C               M     movwi ++SP
0283   2???           01159     call query_row ; n r s r -- n r s
                      01160     pop     ; n r
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-14-2016  20:45:37         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0284   0017               M     moviw SP--
0285   1903           01161     skpnz
0286   3???           01162     bra count_done
0287   3A0A           01163     xorlw 10
0288   1D03           01164     skpz
0289   3???           01165     bra next_row
                      01166 ; this is a full row    
                      01167     inc_n 1 ; increment n
028A   3F7F               M     moviw -1[SP]
028B   0A89               M     incf WREG,F
028C   3FFF               M     movwi -1[SP]
                      01168     dup    ; n r r
028D   0801               M     movfw T
028E   001C               M     movwi ++SP
028F   2???           01169     call drop1 ; n r r -- n r
0290   0A81           01170     incf T,F
0291                  01171 next_row:
0291   0B81           01172     decfsz T,F
0292   3???           01173     bra count_loop
0293                  01174 count_done:
                      01175     drop   ; n r -- n
0293   317F               M    addfsr SP,-1
0294   0008           01176     return
                      01177     
                      01178 ; generate a new tetriminos
                      01179 ; input:
                      01180 ;   none
                      01181 ; output:
                      01182 ;   none
0295                  01183 new_tminos:
0295   0020           01184     banksel GAME_VAR
0296   3007           01185     movlw 7
0297   05??           01186     andwf randL,W
0298   3A07           01187     xorlw 7
0299   1D03           01188     skpz
029A   3A07           01189     xorlw 7
029B   00??           01190     movwf tetrim
029C   3003           01191     movlw 3
029D   05??           01192     andwf randH,W
029E   00??           01193     movwf angle
029F   3004           01194     movlw 4
02A0   00??           01195     movwf tx
02A1   01??           01196     clrf ty
02A2   2???           01197     call print_tetrim
                      01198     pop
02A3   0017               M     moviw SP--
02A4   1D03           01199     skpz
02A5   1600           01200     bsf flags, F_GSTOP
02A6   2???           01201     call print_tetrim
                      01202     pop
02A7   0017               M     moviw SP--
02A8   0008           01203     return
                      01204  
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-14-2016  20:45:37         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01205 ; wait player start signal
                      01206 ; button A pressed    
02A9                  01207 wait_start:
02A9   0103           01208     clrw
02AA   2???           01209     call korobeiniki
                      01210     push    ; count
02AB   001C               M     movwi ++SP
                      01211     lit 0   ; sequence
02AC   3000               M    movlw 0
02AD   001C               M    movwi ++SP 
02AE                  01212 koro:
02AE   0A81           01213     incf T,F ; -- count sequence
02AF   0801           01214     movfw T  ; WREG=sequence
02B0   2???           01215     call korobeiniki
                      01216     push    ; -- count sequence duration
02B1   001C               M     movwi ++SP
                      01217     inc_n 1 ;
02B2   3F7F               M     moviw -1[SP]
02B3   0A89               M     incf WREG,F
02B4   3FFF               M     movwi -1[SP]
                      01218     pick 1  
02B5   3F7F               M     moviw -1[SP]
02B6   2???           01219     call korobeiniki
                      01220     push    ; -- count nidx duration note
02B7   001C               M     movwi ++SP
02B8   2???           01221     call tone  ; -- count nidx 
                      01222     wait_sound
02B9   1A80               M     btfsc flags,F_SND
02BA   3???               M     bra $-1
02BB   2???           01223     call read_pad
02BC   1A00           01224     btfsc buttons, BTN_A
02BD   3???           01225     bra wait_end
                      01226     dec_n 1
02BE   3F7F               M     moviw -1[SP]
02BF   0389               M     decf WREG,F
02C0   3FFF               M     movwi -1[SP]
02C1   1D03           01227     skpz
02C2   3???           01228     bra koro
                      01229     drop_n 2
02C3   317E               M     addfsr SP,-2
                      01230     pause 60
                          M     start_timer 60
02C4   303C               M     movlw 60
02C5   00??               M     movwf gtimer
02C6   1580               M     bsf flags, F_GTMR
                          M     wait_timer
02C7   1980               M     btfsc flags, F_GTMR
02C8   3???               M     bra $-1
02C9   3???           01231     bra wait_start
02CA                  01232 wait_end:    
                      01233     drop_n 2
02CA   317E               M     addfsr SP,-2
02CB   2???           01234     call clear_score
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-14-2016  20:45:37         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02CC   1200           01235     bcf flags, F_GSTOP
02CD   0008           01236     return
                      01237  
                      01238 ; collision test
                      01239 ; after rotation or translation
                      01240 ; input:
                      01241 ;   none
                      01242 ; output:
                      01243 ;   none
02CE                  01244 coll_test: 
02CE   1300           01245     bcf flags, F_COLL
02CF   2???           01246     call print_tetrim ; collision test
                      01247     pop
02D0   0017               M     moviw SP--
02D1   1D03           01248     skpz
02D2   1700           01249     bsf flags, F_COLL
02D3   2???           01250     call print_tetrim ; erase it
                      01251     pop
02D4   0017               M     moviw SP--
02D5   1F00           01252     btfss flags, F_COLL
02D6   0008           01253     return
02D7   0020           01254     banksel GAME_VAR
                      01255 ;    movfw buttons
                      01256     case BTN_A, undo_hard_drop
02D8   1A00               M     btfsc buttons,BTN_A
02D9   3???               M     bra undo_hard_drop
                      01257     case BTN_B, undo_soft_drop
02DA   1A80               M     btfsc buttons,BTN_B
02DB   3???               M     bra undo_soft_drop
                      01258     case BTN_UP, undo_rot_right
02DC   1800               M     btfsc buttons,BTN_UP
02DD   3???               M     bra undo_rot_right
                      01259     case BTN_DN, undo_rot_left
02DE   1880               M     btfsc buttons,BTN_DN
02DF   3???               M     bra undo_rot_left
                      01260     case BTN_RT, undo_move_right
02E0   1980               M     btfsc buttons,BTN_RT
02E1   3???               M     bra undo_move_right
                      01261     case BTN_LT, undo_move_left
02E2   1900               M     btfsc buttons,BTN_LT
02E3   3???               M     bra undo_move_left
02E4   0008           01262     return
02E5                  01263 undo_hard_drop:
02E5   0008           01264     return
02E6                  01265 undo_soft_drop:
02E6   0008           01266     return
02E7                  01267 undo_rot_right:
02E7   03??           01268     decf angle,F
02E8   3003           01269     movlw 3
02E9   05??           01270     andwf angle,F
02EA   0008           01271     return
02EB                  01272 undo_rot_left:
02EB   0A??           01273     incf angle,F
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-14-2016  20:45:37         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02EC   3003           01274     movlw 3
02ED   05??           01275     andwf angle,F
02EE   0008           01276     return
02EF                  01277 undo_move_right:
02EF   03??           01278     decf tx,F
02F0   0008           01279     return
02F1                  01280 undo_move_left:
02F1   0A??           01281     incf tx,F
02F2   0008           01282     return
                      01283 
                      01284 ; print score and lines
                      01285 ; input:
                      01286 ;   none
                      01287 ; output:
                      01288 ;   none
02F3                  01289 update_display:    
                      01290 ; print score
02F3   0020           01291     banksel GAME_VAR
02F4   08??           01292     movfw scoreL
02F5   00??           01293     movwf accaL
02F6   08??           01294     movfw scoreH
02F7   00??           01295     movwf accaH
                      01296     lit 43
02F8   302B               M    movlw 43
02F9   001C               M    movwi ++SP 
                      01297     lit 6
02FA   3006               M    movlw 6
02FB   001C               M    movwi ++SP 
02FC   2???           01298     call print_int
                      01299 ;print dropped line
02FD   0020           01300     banksel GAME_VAR
02FE   08??           01301     movfw droppedL
02FF   00??           01302     movwf accaL
0300   08??           01303     movfw droppedH
0301   00??           01304     movwf accaH
                      01305     lit 43
0302   302B               M    movlw 43
0303   001C               M    movwi ++SP 
                      01306     lit 18
0304   3012               M    movlw 18
0305   001C               M    movwi ++SP 
0306   2???           01307     call print_int
0307   0008           01308     return
                      01309     
                      01310 ;;;;;;;;;;;;;;;;;;;;;;;;;
                      01311 ;   game logic
                      01312 ;;;;;;;;;;;;;;;;;;;;;;;;;    
0308                  01313 tetris:
0308   2???           01314     call update_display
                      01315 ;print start prompt
                      01316     lit 0
0309   3000               M    movlw 0
030A   001C               M    movwi ++SP 
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-14-2016  20:45:37         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01317     lit 24
030B   3018               M    movlw 24
030C   001C               M    movwi ++SP 
                      01318     lit LBL_PRESS
030D   3002               M    movlw LBL_PRESS
030E   001C               M    movwi ++SP 
030F   2???           01319     call print_label
                      01320 ; wait button A press
                      01321 ; to start game    
0310   2???           01322     call wait_start 
                      01323 ; delete prompt
                      01324     lit 0
0311   3000               M    movlw 0
0312   001C               M    movwi ++SP 
                      01325     lit 24
0313   3018               M    movlw 24
0314   001C               M    movwi ++SP 
                      01326     lit LBL_PRESS
0315   3002               M    movlw LBL_PRESS
0316   001C               M    movwi ++SP 
0317   2???           01327     call print_label
                      01328 ; game start here
0318                  01329 game_loop:
                      01330 ; generate new tetriminos
                      01331 ; if collision at this stage
                      01332 ; game is over
0318   2???           01333     call new_tminos
0319   1E00           01334     btfss flags, F_GSTOP
031A   3???           01335     bra fall_loop
                      01336     lit 30
031B   301E               M    movlw 30
031C   001C               M    movwi ++SP 
                      01337     lit 19
031D   3013               M    movlw 19
031E   001C               M    movwi ++SP 
031F   2???           01338     call tone
                      01339     wait_sound
0320   1A80               M     btfsc flags,F_SND
0321   3???               M     bra $-1
0322   2???           01340     call game_init
0323   3???           01341     bra tetris
0324                  01342 fall_loop: ; tetriminos fall in the well
0324   2???           01343     call print_tetrim
                      01344     pop
0325   0017               M     moviw SP--
                      01345     pause 10
                          M     start_timer 10
0326   300A               M     movlw 10
0327   00??               M     movwf gtimer
0328   1580               M     bsf flags, F_GTMR
                          M     wait_timer
0329   1980               M     btfsc flags, F_GTMR
032A   3???               M     bra $-1
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-14-2016  20:45:37         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

032B   2???           01346     call print_tetrim ; erase tetriminos
                      01347     pop
032C   0017               M     moviw SP--
                      01348 ; read pad
032D   2???           01349     call read_pad
032E   0020           01350     banksel GAME_VAR
                      01351     case BTN_A, hard_drop
032F   1A00               M     btfsc buttons,BTN_A
0330   3???               M     bra hard_drop
                      01352     case BTN_B, soft_drop
0331   1A80               M     btfsc buttons,BTN_B
0332   3???               M     bra soft_drop
                      01353     case BTN_UP, rot_right
0333   1800               M     btfsc buttons,BTN_UP
0334   3???               M     bra rot_right
                      01354     case BTN_DN, rot_left
0335   1880               M     btfsc buttons,BTN_DN
0336   3???               M     bra rot_left
                      01355     case BTN_RT, move_right
0337   1980               M     btfsc buttons,BTN_RT
0338   3???               M     bra move_right
                      01356     case BTN_LT, move_left
0339   1900               M     btfsc buttons,BTN_LT
033A   3???               M     bra move_left
033B   3???           01357     bra move_down
033C                  01358 hard_drop:
033C   3???           01359     bra move_down
033D                  01360 soft_drop:
033D   3???           01361     bra move_down
033E                  01362 rot_left:
033E   03??           01363     decf angle,F
033F   3003           01364     movlw 3
0340   05??           01365     andwf angle,F
0341   2???           01366     call coll_test
0342   3???           01367     bra move_down
0343                  01368 rot_right:
0343   0A??           01369     incf angle,F
0344   3003           01370     movlw 3
0345   05??           01371     andwf angle,F
0346   2???           01372     call coll_test
0347   3???           01373     bra move_down
0348                  01374 move_left:
0348   03??           01375     decf tx,F
0349   2???           01376     call coll_test
034A   3???           01377     bra move_down
034B                  01378 move_right:
034B   0A??           01379     incf tx,F
034C   2???           01380     call coll_test
                      01381 ; move down
034D                  01382 move_down:
034D   1300           01383     bcf flags, F_COLL
034E   0020           01384     banksel GAME_VAR
034F   0A??           01385     incf ty,F ; tetriminos fall
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-14-2016  20:45:37         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0350   2???           01386     call print_tetrim ; collision test
                      01387     pop
0351   0017               M     moviw SP--
0352   1D03           01388     skpz
0353   1700           01389     bsf flags, F_COLL
0354   2???           01390     call print_tetrim
                      01391     pop
0355   0017               M     moviw SP--
0356   1F00           01392     btfss flags, F_COLL
0357   3???           01393     bra fall_loop
0358   0020           01394     banksel GAME_VAR
0359   03??           01395     decf ty,F
035A   2???           01396     call print_tetrim
                      01397     pop
035B   0017               M     moviw SP--
                      01398 ; check full row and clean
035C   2???           01399     call update_display ; erase numbers
035D   2???           01400     call count_full
                      01401 ; add full row count to dropped variable
035E   0020           01402     banksel GAME_VAR
035F   0801           01403     movfw T
0360   07??           01404     addwf droppedL,F ; 
0361   0103           01405     clrw
0362   3D??           01406     addwfc droppedH
                      01407 ; count points = 2^n where n is count of dropped rows {1:4}    
0363   0881           01408     movf T,F
0364   1903           01409     skpnz
0365   3???           01410     bra add_points
0366   3001           01411     movlw 1
0367   3589           01412     lslf WREG
0368   0B81           01413     decfsz T,F
0369   3???           01414     bra $-2
036A                  01415 add_points:
036A   07??           01416     addwf scoreL
036B   0103           01417     clrw
036C   3D??           01418     addwfc scoreH
                      01419     drop 
036D   317F               M    addfsr SP,-1
036E   2???           01420     call update_display ; display new values
036F   3???           01421     bra game_loop
0370   0008           01422     return
                      01423     
0371                  01424 init:
                      01425     pstack_init
0371   0187               M     clrf FSR1H
0372   301F               M     movlw S0
0373   0086               M     movwf FSR1L
                      01426 ; ADC configuration
0374   0021           01427     banksel ADCON0
0375   300C           01428     movlw (PAD_CHS<<CHS0)
0376   009D           01429     movwf ADCON0
0377   3020           01430     movlw (2<<ADCS0)
0378   009E           01431     movwf ADCON1
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-14-2016  20:45:37         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0379   0024           01432     banksel WPUA
037A   120C           01433     bcf WPUA, PAD_PIN
                      01434 ;;;;;;;;;;;;;;;;;;;;;    
037B   0021           01435     banksel TRISA
037C   30F8           01436     movlw ~((1<<SYNC_OUT)|(1<<VIDEO_OUT)|(1<<LED_PIN))
037D   058C           01437     andwf TRISA,F
037E   0022           01438     banksel VIDEO_LAT
037F   108C           01439     bcf VIDEO_LAT,VIDEO_OUT
0380   100C           01440     bcf LATA,LED_PIN
                      01441 ; audio pwm initialization
0381   120C           01442     bcf LATA,AUDIO_PIN
0382   003B           01443     banksel PWM2PH
0383   01A1           01444     clrf PWM2PHL
0384   01A2           01445     clrf PWM2PHH
0385   01A7           01446     clrf PWM2OFL
0386   01A8           01447     clrf PWM2OFH
0387   172B           01448     bsf AUDIO_PWMCON,OE
0388   0022           01449     banksel APFCON
0389   149D           01450     bsf APFCON,P2SEL
                      01451    
                      01452 ;configure EUSART in sychronsous mode
                      01453 ;to use as pixel serializer
038A   0023           01454     banksel SPBRG
038B   3002           01455     movlw 2
038C   009B           01456     movwf SPBRGL
038D   019C           01457     clrf SPBRGH
038E   019A           01458     clrf TXREG
038F   30B0           01459     movlw (1<<SYNC)|(1<<CSRC)|(1<<TXEN)
0390   009E           01460     movwf TXSTA
0391   179D           01461     bsf RCSTA, SPEN
0392   30CF           01462     movlw ~((1<<CREN)|(1<<SREN))
0393   059D           01463     andwf RCSTA
                      01464 ; configure pwm video sync for horizontal period
0394   003B           01465     banksel SYNC_PWMDCH
0395   01B1           01466     clrf SYNC_PWMPH
0396   01B2           01467     clrf SYNC_PWMPH+1
0397   01BF           01468     clrf SYNC_PWMLDCON
0398   30F5           01469     movlw HORZ_PERIOD&0XFF
0399   00B5           01470     movwf SYNC_PWMPRL
039A   3004           01471     movlw HORZ_PERIOD>>8
039B   00B6           01472     movwf SYNC_PWMPRH
039C   01BE           01473     clrf SYNC_PWMCLKCON
039D   30D0           01474     movlw (3<<OE)|(1<<POL)
039E   00BB           01475     movwf SYNC_PWMCON
039F   305E           01476     movlw HORZ_PULSE&0xff
03A0   00B3           01477     movwf SYNC_PWMDCL
03A1   3000           01478     movlw HORZ_PULSE>>8
03A2   00B4           01479     movwf SYNC_PWMDCH
03A3   17BF           01480     bsf SYNC_PWMLDCON,LDA
                      01481    ;enable video interrupt on period match
03A4   103D           01482     bcf SYNC_PWMINTF,PRIF
03A5   143C           01483     bsf SYNC_PWMINTE,PRIE
                      01484     ; enable peripheral interrupt
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-14-2016  20:45:37         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03A6   0021           01485     banksel SYNC_PIE
03A7   1713           01486     bsf SYNC_PIE,SYNC_IE
                      01487     ;enable interrupts
03A8   30C0           01488     movlw (1<<GIE)|(1<<PEIE)
03A9   008B           01489     movwf INTCON
03AA   01??           01490     clrf lcountL
03AB   01??           01491     clrf lcountH
03AC   01??           01492     clrf flags
                      01493     ; seed lfsr PRNG
03AD   30AC           01494     movlw 0xAC
03AE   00??           01495     movwf randL
03AF   30E1           01496     movlw 0xE1
03B0   00??           01497     movwf randH
                      01498 
                      01499 
                      01500 ;;;;;;; test code ;;;;;;;;;;;;;;
                      01501 
                      01502 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
03B1                  01503 main:
03B1   2???           01504     call game_init
03B2   2???           01505     call tetris
03B3   3???           01506     bra main
                      01507   
                      01508 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      01509 ;   data tables
                      01510 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      01511 
                      01512 ; **************** encoding ************************************************
                      01513 ; enhanced PIC instructions are coded on 14 bits
                      01514 ; these 14 bits can be read as data using flash memory
                      01515 ; writing/reading mechanism, see datasheet chapter 10 for detail.
                      01516 ; the 'dw' assembler directive encode data in those 14 bits contrary to 'dt'
                      01517 ; directive which encode a single byte as a RETLW instruction.
                      01518 ; So we get a 50% compression by encoding 3 nibbles/flash word. 
                      01519 ; the encoding used in the following tables is as follow:    
                      01520 ; bits 13:12  number of nibbles where 0 means there is more than 3 nibbles
                      01521 ; in this data chunk so 1 or more other words follow this one.    
                      01522 ; other 12 bits are sliced in 4 bits nibbles.
                      01523 ;****************************************************************************
                      01524 
03B4                  01525 digits: ; each digit is 5 rows
03B4   0EAA 2AE0      01526     dw 0x0EAA,0x2AE0 ; 0
03B6   04C4 24E0      01527     dw 0x04C4,0x24E0 ; 1
03B8   0E2E 28E0      01528     dw 0x0E2E,0x28E0 ; 2
03BA   0E2E 22E0      01529     dw 0x0E2E,0x22E0 ; 3
03BC   0AAE 2220      01530     dw 0x0AAE,0x2220 ; 4
03BE   0E8E 22E0      01531     dw 0x0E8E,0x22E0 ; 5
03C0   088E 2AE0      01532     dw 0x088E,0x2AE0 ; 6
03C2   0E22 2220      01533     dw 0x0E22,0x2220 ; 7
03C4   0EAE 2AE0      01534     dw 0x0EAE,0x2AE0 ; 8
03C6   0EAE 2220      01535     dw 0x0EAE,0x2220 ; 9
                      01536 ; letters needed for 'SCORE' and 'LINES" labels
03C8   0EAE 2AA0      01537     dw 0x0EAE,0x2AA0 ; A  code 10
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-14-2016  20:45:37         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03CA   0688 2860      01538     dw 0x0688,0x2860 ; C  code 11
03CC   0E8E 28E0      01539     dw 0x0E8E,0x28E0 ; E  code 12
03CE   0E44 24E0      01540     dw 0x0E44,0x24E0 ; I  code 13
03D0   0888 28E0      01541     dw 0x0888,0x28E0 ; L  code 14
03D2   08CA 2AA0      01542     dw 0x08CA,0x2AA0 ; N  code 15
03D4   04AA 2A40      01543     dw 0x04AA,0x2A40 ; O  code 16
03D6   0EAE 2880      01544     dw 0x0EAE,0x2880 ; P  code 17
03D8   08EA 2880      01545     dw 0x08EA,0x2880 ; R  code 18
03DA   0684 22C0      01546     dw 0x0684,0x22C0 ; S  code 19
03DC   0040 2400      01547     dw 0x0040,0x2400 ; :  code 20
03DE   2000 2000      01548     dw 0x2000,0x2000 ; space code 21
                      01549 
                      01550 ; comments notation: Rn clockwise rotation n*90 degr.    
                      01551 ; note that vertical I as 4 rows so it needs 2 words    
03E0                  01552 tetriminos: 
03E0   388C           01553     dw 0x388C ; L R0
03E1   30E8           01554     dw 0x30E8 ; L R1
03E2   3C44           01555     dw 0x3C44 ; L R2
03E3   32E0           01556     dw 0x32E0 ; L R3
03E4   344C           01557     dw 0x344C ; J R0
03E5   38E0           01558     dw 0x38E0 ; J R1
03E6   3644           01559     dw 0x3644 ; J R2
03E7   30E2           01560     dw 0x30E2 ; J R3
03E8   3CC0           01561     dw 0x3CC0 ; O R0 
03E9   3CC0           01562     dw 0x3CC0 ; O R2 
03EA   3CC0           01563     dw 0x3CC0 ; O R2 
03EB   3CC0           01564     dw 0x3CC0 ; O R3 
03EC   36C0           01565     dw 0x36C0 ; S R0
03ED   3462           01566     dw 0x3462 ; S R1
03EE   36C0           01567     dw 0x36C0 ; S R2
03EF   3462           01568     dw 0x3462 ; S R3
03F0   3E40           01569     dw 0x3E40 ; T R0
03F1   3262           01570     dw 0x3262 ; T R1
03F2   304E           01571     dw 0x304E ; T R2
03F3   38C8           01572     dw 0x38C8 ; T R3
03F4   3C60           01573     dw 0x3C60 ; Z R0
03F5   34C8           01574     dw 0x34C8 ; Z R1
03F6   3C60           01575     dw 0x3C60 ; Z R3
03F7   34C8           01576     dw 0x34C8 ; Z R4
                      01577 ; annoying! I tetriminos need a special treatment 
                      01578 ; because vertical I need 2 words for encoding.   
03F8   0444 1400      01579 I0: dw 0x0444,0x1400 ; I R0  
03FA   300F 1000      01580     dw 0x300F,0x1000 ; I R1  second word is filling for alignment
03FC   0222 1200      01581     dw 0x0222,0x1200 ; I R2
03FE   10F0 1000      01582     dw 0x10F0,0x1000 ; I R3  
                      01583 
  00000000            01584 LBL_SCORE equ 0
  00000001            01585 LBL_LINES equ 1
  00000002            01586 LBL_PRESS equ 2
                      01587  
0400                  01588 labels:
0400   000B           01589     brw
0401   3???           01590     bra txt_score
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-14-2016  20:45:37         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0402   3???           01591     bra txt_lines
0403   3???           01592     bra txt_press
                      01593     
0404                  01594 txt_score: ; "SCORE"
                      01595     pop
0404   0017               M     moviw SP--
0405   000B           01596     brw
0406   3413 340B 3410 01597     dt 19,11,16,18,12,20,255
       3412 340C 3414 
       34FF 
                      01598     
040D                  01599 txt_lines: ; "LINES"
                      01600     pop
040D   0017               M     moviw SP--
040E   000B           01601     brw
040F   340E 340D 340F 01602     dt 14,13,15,12,19,20,255
       340C 3413 3414 
       34FF 
                      01603 
0416                  01604 txt_press: ; "PRESS A"
                      01605     pop
0416   0017               M     moviw SP--
0417   000B           01606     brw
0418   3411 3412 340C 01607     dt 17,18,12,19,19,21,10,255
       3413 3413 3415 
       340A 34FF 
                      01608     
                      01609 
0420                  01610 tone_pr:
0420   000B           01611     brw
0421   3402 34ED      01612     dt 0x02, 0xed   ; 330   (MI4)   0
0423   34B5 34DF      01613     dt 0xb5, 0xdf   ; 349   (FA4)   1
0425   3428 34D3      01614     dt 0x28, 0xd3   ; 370   (FA4#)  2
0427   344C 34C7      01615     dt 0x4c, 0xc7   ; 392   (SOL4)  3
0429   341E 34BC      01616     dt 0x1e, 0xbc   ; 415   (SOL4#) 4
042B   348F 34B1      01617     dt 0x8f, 0xb1   ; 440   (LA4)   5
042D   3498 34A7      01618     dt 0x98, 0xa7   ; 466   (LA4#)  6
042F   3430 349E      01619     dt 0x30, 0x9e   ; 494   (SI4)   7
0431   344F 3495      01620     dt 0x4f, 0x95   ; 523hz (DO5)   8
0433   34ED 348C      01621     dt 0xed, 0x8c   ; 554   (DO5#)  9
0435   3404 3485      01622     dt 0x04, 0x85   ; 587   (RÉ5)   10
0437   348D 347D      01623     dt 0x8d, 0x7d   ; 622   (RÉ5#)  11
0439   3481 3476      01624     dt 0x81, 0x76   ; 659   (MI5)   12
043B   34DA 346F      01625     dt 0xda, 0x6f   ; 698   (FA5)   13
043D   3493 3469      01626     dt 0x93, 0x69   ; 740   (FA5#)  14
043F   34A6 3463      01627     dt 0xa6, 0x63   ; 784   (SOL5)  15
0441   340F 345E      01628     dt 0x0f, 0x5e   ; 831   (SOL5#) 16
0443   34C7 3458      01629     dt 0xc7, 0x58   ; 880   (LA5)   17
0445   34CC 3453      01630     dt 0xcc, 0x53   ; 932   (LA5#)  18
0447   3418 344F      01631     dt 0x18, 0x4f   ; 988   (SI5)   19
0449   3482 3442      01632     dt 0x82, 0x42   ; 1046hz (do6)  20
044B   3400 3400      01633     dt 0, 0         ; silence       21
                      01634     
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-14-2016  20:45:37         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

044D                  01635 korobeiniki: ;folklore russe
                      01636     ;nombre de notes
044D   000B           01637     brw
044E   3422           01638     dt 34
                      01639     ; duré, note
044F   342D 3400      01640     dt 45, 0 
0451   340F 3404      01641     dt 15, 4
0453   341E 3407      01642     dt 30, 7
0455   340F 3403      01643     dt 15, 3
0457   340F 3400      01644     dt 15, 0
                      01645     
0459   342D 3405      01646     dt 45, 5
045B   340F 3409      01647     dt 15, 9
045D   341E 340C      01648     dt 30, 12
045F   340F 340A      01649     dt 15, 10
0461   340F 3408      01650     dt 15, 8
                      01651     
0463   342D 3407      01652     dt 45, 7
0465   340F 3408      01653     dt 15, 8
0467   341E 340A      01654     dt 30, 10
0469   341E 340C      01655     dt 30, 12
                      01656     
046B   341E 3408      01657     dt 30, 8
046D   341E 3405      01658     dt 30, 5
046F   343C 3405      01659     dt 60, 5
                      01660     
0471   342D 340D      01661     dt 45, 13
0473   340F 340F      01662     dt 15, 15
0475   341E 3411      01663     dt 30, 17
0477   340F 340F      01664     dt 15, 15
0479   340F 340D      01665     dt 15, 13
                      01666     
047B   342D 340C      01667     dt 45, 12
047D   340F 340D      01668     dt 15, 13
047F   341E 340C      01669     dt 30, 12
0481   340F 340A      01670     dt 15, 10
0483   340F 3408      01671     dt 15, 8
                      01672     
0485   342D 3407      01673     dt 45, 7
0487   340F 3408      01674     dt 15, 8
0489   341E 340A      01675     dt 30, 10
048B   341E 340C      01676     dt 30, 12
                      01677     
048D   341E 3408      01678     dt 30, 8
048F   341E 3405      01679     dt 30, 5
0491   343C 3405      01680     dt 60, 5
                      01681     
                      01682     
3FE7 1EFF             01683     end
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-14-2016  20:45:37         PAGE 40


SYMBOL TABLE
  LABEL                             VALUE 

ABDEN                             00000000
ABDOVF                            00000007
ADCON0                            0000009D
ADCON1                            0000009E
ADCON2                            0000009F
ADCS0                             00000004
ADCS1                             00000005
ADCS2                             00000006
ADC_PIN                           00000004
ADDEN                             00000003
ADFM                              00000007
ADFVR0                            00000000
ADFVR1                            00000001
ADGO                              00000001
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADPREF0                           00000000
ADPREF1                           00000001
ADRES                             0000009B
ADRESH                            0000009C
ADRESL                            0000009B
ANSA0                             00000000
ANSA1                             00000001
ANSA2                             00000002
ANSA4                             00000004
ANSELA                            0000018C
APFCON                            0000011D
APFCON0                           0000011D
AUDIO_PIN                         00000004
AUDIO_PWMCLKCON                   00000DAE
AUDIO_PWMCON                      00000DAB
AUDIO_PWMDCH                      00000DA4
AUDIO_PWMDCL                      00000DA3
AUDIO_PWMLDCON                    00000DAF
AUDIO_PWMPRH                      00000DA6
AUDIO_PWMPRL                      00000DA5
AUDIO_PWMTMR                      00000DA9
A_THR                             00000040
BAUDCON                           0000019F
BORCON                            00000116
BORFS                             00000006
BORRDY                            00000000
BPL                               00000006
BRG16                             00000003
BRGH                              00000002
BSR                               00000008
BSR0                              00000000
BSR1                              00000001
BSR2                              00000002
BSR3                              00000003
BSR4                              00000004
BSR_SHAD                          00000FE6
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-14-2016  20:45:37         PAGE 41


SYMBOL TABLE
  LABEL                             VALUE 

BTN_A                             00000004
BTN_B                             00000005
BTN_DN                            00000001
BTN_LT                            00000002
BTN_RT                            00000003
BTN_UP                            00000000
BUFFER_SIZE                       000000C0
B_THR                             00000095
C                                 00000000
C1HYS                             00000001
C1IE                              00000005
C1IF                              00000005
C1INTN                            00000006
C1INTP                            00000007
C1NCH0                            00000000
C1NCH1                            00000001
C1NCH2                            00000002
C1OE                              00000005
C1ON                              00000007
C1OUT                             00000006
C1PCH0                            00000004
C1PCH1                            00000005
C1POL                             00000004
C1SP                              00000002
C1SYNC                            00000000
CDAFVR0                           00000002
CDAFVR1                           00000003
CFGS                              00000006
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CHS4                              00000006
CLR_OP                            00000000
CM1CON0                           00000111
CM1CON1                           00000112
CMOUT                             00000115
CREN                              00000004
CS0                               00000000
CS1                               00000001
CSRC                              00000007
CWG1CON0                          00000693
CWG1CON1                          00000694
CWG1CON2                          00000695
CWG1DBF                           00000692
CWG1DBF0                          00000000
CWG1DBF1                          00000001
CWG1DBF2                          00000002
CWG1DBF3                          00000003
CWG1DBF4                          00000004
CWG1DBF5                          00000005
CWG1DBR                           00000691
CWG1DBR0                          00000000
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-14-2016  20:45:37         PAGE 42


SYMBOL TABLE
  LABEL                             VALUE 

CWG1DBR1                          00000001
CWG1DBR2                          00000002
CWG1DBR3                          00000003
CWG1DBR4                          00000004
CWG1DBR5                          00000005
CWGASEL                           00000006
CWGBSEL                           00000005
C_SHAD                            00000000
DACCON0                           00000118
DACCON1                           00000119
DACEN                             00000007
DACLPS                            00000006
DACOE                             00000005
DACPSS0                           00000002
DACPSS1                           00000003
DACR0                             00000000
DACR1                             00000001
DACR2                             00000002
DACR3                             00000003
DACR4                             00000004
DC                                00000001
DCIE                              00000001
DCIF                              00000001
DC_SHAD                           00000001
DN_THR                            000000D8
EN                                00000007
F                                 00000001
FCY                               004C4B40
FERR                              00000002
FIRST_VIDEO                       00000046
FOSC                              01312D00
FREE                              00000004
FSR0                              00000004
FSR0H                             00000005
FSR0H_SHAD                        00000FE9
FSR0L                             00000004
FSR0L_SHAD                        00000FE8
FSR0_SHAD                         00000FE8
FSR1                              00000006
FSR1H                             00000007
FSR1H_SHAD                        00000FEB
FSR1L                             00000006
FSR1L_SHAD                        00000FEA
FSR1_SHAD                         00000FEA
FVRCON                            00000117
FVREN                             00000007
FVRRDY                            00000006
F_COLL                            00000006
F_EVEN                            00000001
F_GSTOP                           00000004
F_GTMR                            00000003
F_MUTEX                           00000002
F_SND                             00000005
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-14-2016  20:45:37         PAGE 43


SYMBOL TABLE
  LABEL                             VALUE 

F_VSYNC                           00000000
G1ARSEN                           00000006
G1ASDLA0                          00000004
G1ASDLA1                          00000005
G1ASDLB0                          00000006
G1ASDLB1                          00000007
G1ASDSC1                          00000002
G1ASDSFLT                         00000001
G1ASE                             00000007
G1CS0                             00000000
G1EN                              00000007
G1IS0                             00000000
G1IS1                             00000001
G1IS2                             00000002
G1OEA                             00000005
G1OEB                             00000006
G1POLA                            00000003
G1POLB                            00000004
GAME_VAR                          00000000
GIE                               00000007
GO                                00000001
GO_NOT_DONE                       00000001
HFIOFL                            00000003
HFIOFR                            00000004
HFIOFS                            00000000
HORZ_DLY                          00000032
HORZ_PERIOD                       000004F5
HORZ_PULSE                        0000005E
I0                                000003F8
INDF0                             00000000
INDF1                             00000001
INLVLA                            0000038C
INLVLA0                           00000000
INLVLA1                           00000001
INLVLA2                           00000002
INLVLA3                           00000003
INLVLA4                           00000004
INLVLA5                           00000005
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IOCAF                             00000393
IOCAF0                            00000000
IOCAF1                            00000001
IOCAF2                            00000002
IOCAF3                            00000003
IOCAF4                            00000004
IOCAF5                            00000005
IOCAN                             00000392
IOCAN0                            00000000
IOCAN1                            00000001
IOCAN2                            00000002
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-14-2016  20:45:37         PAGE 44


SYMBOL TABLE
  LABEL                             VALUE 

IOCAN3                            00000003
IOCAN4                            00000004
IOCAN5                            00000005
IOCAP                             00000391
IOCAP0                            00000000
IOCAP1                            00000001
IOCAP2                            00000002
IOCAP3                            00000003
IOCAP4                            00000004
IOCAP5                            00000005
IOCIE                             00000003
IOCIF                             00000000
IRCF0                             00000003
IRCF1                             00000004
IRCF2                             00000005
IRCF3                             00000006
LAST_LINE                         00000106
LAST_VIDEO                        000000C5
LATA                              0000010C
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA4                             00000004
LATA5                             00000005
LBL_LINES                         00000001
LBL_PRESS                         00000002
LBL_SCORE                         00000000
LDA                               00000007
LDS0                              00000000
LDS1                              00000001
LDT                               00000006
LED_PIN                           00000000
LFIOFR                            00000001
LFSR_TAPS                         000000B4
LT_THR                            000000D1
LWLO                              00000005
MC1OUT                            00000000
MFIOFR                            00000002
MODE0                             00000002
MODE1                             00000003
MPWM1EN                           00000000
MPWM1LD                           00000000
MPWM1OUT                          00000000
MPWM2EN                           00000001
MPWM2LD                           00000001
MPWM2OUT                          00000001
MPWM3EN                           00000002
MPWM3LD                           00000002
MPWM3OUT                          00000002
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_PD                            00000003
NOT_POR                           00000001
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-14-2016  20:45:37         PAGE 45


SYMBOL TABLE
  LABEL                             VALUE 

NOT_RI                            00000002
NOT_RMCLR                         00000003
NOT_RWDT                          00000004
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_WPUEN                         00000007
ODA0                              00000000
ODA1                              00000001
ODA2                              00000002
ODA4                              00000004
ODA5                              00000005
ODCONA                            0000028C
OE                                00000006
OERR                              00000001
OFIE                              00000003
OFIF                              00000003
OFM0                              00000005
OFM1                              00000006
OFO                               00000004
OFS0                              00000000
OFS1                              00000001
OPTION_REG                        00000095
OSCCON                            00000099
OSCSTAT                           0000009A
OSCTUNE                           00000098
OSTS                              00000005
OUT                               00000005
P1SEL                             00000000
P2SEL                             00000001
PAD_CHS                           00000003
PAD_PIN                           00000004
PCL                               00000002
PCLATH                            0000000A
PCLATH_SHAD                       00000FE7
PCON                              00000096
PEIE                              00000006
PHIE                              00000002
PHIF                              00000002
PIE1                              00000091
PIE2                              00000092
PIE3                              00000093
PIR1                              00000011
PIR2                              00000012
PIR3                              00000013
PIXEL_TXREG                       0000019A
PLLR                              00000006
PMADR                             00000191
PMADRH                            00000192
PMADRL                            00000191
PMCON1                            00000195
PMCON2                            00000196
PMDAT                             00000193
PMDATH                            00000194
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-14-2016  20:45:37         PAGE 46


SYMBOL TABLE
  LABEL                             VALUE 

PMDATL                            00000193
POL                               00000004
PORTA                             0000000C
PR2                               0000001B
PRIE                              00000000
PRIF                              00000000
PS0_OPTION_REG                    00000000
PS0_PWM1CLKCON                    00000004
PS0_PWM2CLKCON                    00000004
PS0_PWM3CLKCON                    00000004
PS1_OPTION_REG                    00000001
PS1_PWM1CLKCON                    00000005
PS1_PWM2CLKCON                    00000005
PS1_PWM3CLKCON                    00000005
PS2_OPTION_REG                    00000002
PS2_PWM1CLKCON                    00000006
PS2_PWM2CLKCON                    00000006
PS2_PWM3CLKCON                    00000006
PSA                               00000003
PWM1CLKCON                        00000D9E
PWM1CON                           00000D9B
PWM1CS0                           00000000
PWM1CS1                           00000001
PWM1DC                            00000D93
PWM1DCH                           00000D94
PWM1DCH0                          00000000
PWM1DCH1                          00000001
PWM1DCH2                          00000002
PWM1DCH3                          00000003
PWM1DCH4                          00000004
PWM1DCH5                          00000005
PWM1DCH6                          00000006
PWM1DCH7                          00000007
PWM1DCIE                          00000001
PWM1DCIF                          00000001
PWM1DCL                           00000D93
PWM1DCL0                          00000000
PWM1DCL1                          00000001
PWM1DCL2                          00000002
PWM1DCL3                          00000003
PWM1DCL4                          00000004
PWM1DCL5                          00000005
PWM1DCL6                          00000006
PWM1DCL7                          00000007
PWM1EN                            00000007
PWM1EN_A                          00000000
PWM1IE                            00000004
PWM1IF                            00000004
PWM1INTCON                        00000D9C
PWM1INTE                          00000D9C
PWM1INTF                          00000D9D
PWM1INTFLG                        00000D9D
PWM1LD                            00000007
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-14-2016  20:45:37         PAGE 47


SYMBOL TABLE
  LABEL                             VALUE 

PWM1LDA_A                         00000000
PWM1LDCON                         00000D9F
PWM1LDM                           00000006
PWM1LDS0                          00000000
PWM1LDS1                          00000001
PWM1MODE0                         00000002
PWM1MODE1                         00000003
PWM1OE                            00000006
PWM1OF                            00000D97
PWM1OFCON                         00000DA0
PWM1OFH                           00000D98
PWM1OFH0                          00000000
PWM1OFH1                          00000001
PWM1OFH2                          00000002
PWM1OFH3                          00000003
PWM1OFH4                          00000004
PWM1OFH5                          00000005
PWM1OFH6                          00000006
PWM1OFH7                          00000007
PWM1OFIE                          00000003
PWM1OFIF                          00000003
PWM1OFL                           00000D97
PWM1OFL0                          00000000
PWM1OFL1                          00000001
PWM1OFL2                          00000002
PWM1OFL3                          00000003
PWM1OFL4                          00000004
PWM1OFL5                          00000005
PWM1OFL6                          00000006
PWM1OFL7                          00000007
PWM1OFM0                          00000005
PWM1OFM1                          00000006
PWM1OFMC                          00000004
PWM1OFS0                          00000000
PWM1OFS1                          00000001
PWM1OUT                           00000005
PWM1OUT_A                         00000000
PWM1PH                            00000D91
PWM1PHH                           00000D92
PWM1PHH0                          00000000
PWM1PHH1                          00000001
PWM1PHH2                          00000002
PWM1PHH3                          00000003
PWM1PHH4                          00000004
PWM1PHH5                          00000005
PWM1PHH6                          00000006
PWM1PHH7                          00000007
PWM1PHIE                          00000002
PWM1PHIF                          00000002
PWM1PHL                           00000D91
PWM1PHL0                          00000000
PWM1PHL1                          00000001
PWM1PHL2                          00000002
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-14-2016  20:45:37         PAGE 48


SYMBOL TABLE
  LABEL                             VALUE 

PWM1PHL3                          00000003
PWM1PHL4                          00000004
PWM1PHL5                          00000005
PWM1PHL6                          00000006
PWM1PHL7                          00000007
PWM1POL                           00000004
PWM1PR                            00000D95
PWM1PRH                           00000D96
PWM1PRH0                          00000000
PWM1PRH1                          00000001
PWM1PRH2                          00000002
PWM1PRH3                          00000003
PWM1PRH4                          00000004
PWM1PRH5                          00000005
PWM1PRH6                          00000006
PWM1PRH7                          00000007
PWM1PRIE                          00000000
PWM1PRIF                          00000000
PWM1PRL                           00000D95
PWM1PRL0                          00000000
PWM1PRL1                          00000001
PWM1PRL2                          00000002
PWM1PRL3                          00000003
PWM1PRL4                          00000004
PWM1PRL5                          00000005
PWM1PRL6                          00000006
PWM1PRL7                          00000007
PWM1PS0                           00000004
PWM1PS1                           00000005
PWM1PS2                           00000006
PWM1TMR                           00000D99
PWM1TMRH                          00000D9A
PWM1TMRH0                         00000000
PWM1TMRH1                         00000001
PWM1TMRH2                         00000002
PWM1TMRH3                         00000003
PWM1TMRH4                         00000004
PWM1TMRH5                         00000005
PWM1TMRH6                         00000006
PWM1TMRH7                         00000007
PWM1TMRL                          00000D99
PWM1TMRL0                         00000000
PWM1TMRL1                         00000001
PWM1TMRL2                         00000002
PWM1TMRL3                         00000003
PWM1TMRL4                         00000004
PWM1TMRL5                         00000005
PWM1TMRL6                         00000006
PWM1TMRL7                         00000007
PWM2CLKCON                        00000DAE
PWM2CON                           00000DAB
PWM2CS0                           00000000
PWM2CS1                           00000001
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-14-2016  20:45:37         PAGE 49


SYMBOL TABLE
  LABEL                             VALUE 

PWM2DC                            00000DA3
PWM2DCH                           00000DA4
PWM2DCH0                          00000000
PWM2DCH1                          00000001
PWM2DCH2                          00000002
PWM2DCH3                          00000003
PWM2DCH4                          00000004
PWM2DCH5                          00000005
PWM2DCH6                          00000006
PWM2DCH7                          00000007
PWM2DCIE                          00000001
PWM2DCIF                          00000001
PWM2DCL                           00000DA3
PWM2DCL0                          00000000
PWM2DCL1                          00000001
PWM2DCL2                          00000002
PWM2DCL3                          00000003
PWM2DCL4                          00000004
PWM2DCL5                          00000005
PWM2DCL6                          00000006
PWM2DCL7                          00000007
PWM2EN                            00000007
PWM2EN_A                          00000001
PWM2IE                            00000005
PWM2IF                            00000005
PWM2INTCON                        00000DAC
PWM2INTE                          00000DAC
PWM2INTF                          00000DAD
PWM2INTFLG                        00000DAD
PWM2LD                            00000007
PWM2LDA_A                         00000001
PWM2LDCON                         00000DAF
PWM2LDM                           00000006
PWM2LDS0                          00000000
PWM2LDS1                          00000001
PWM2MODE0                         00000002
PWM2MODE1                         00000003
PWM2OE                            00000006
PWM2OF                            00000DA7
PWM2OFCON                         00000DB0
PWM2OFH                           00000DA8
PWM2OFH0                          00000000
PWM2OFH1                          00000001
PWM2OFH2                          00000002
PWM2OFH3                          00000003
PWM2OFH4                          00000004
PWM2OFH5                          00000005
PWM2OFH6                          00000006
PWM2OFH7                          00000007
PWM2OFIE                          00000003
PWM2OFIF                          00000003
PWM2OFL                           00000DA7
PWM2OFL0                          00000000
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-14-2016  20:45:37         PAGE 50


SYMBOL TABLE
  LABEL                             VALUE 

PWM2OFL1                          00000001
PWM2OFL2                          00000002
PWM2OFL3                          00000003
PWM2OFL4                          00000004
PWM2OFL5                          00000005
PWM2OFL6                          00000006
PWM2OFL7                          00000007
PWM2OFM0                          00000005
PWM2OFM1                          00000006
PWM2OFMC                          00000004
PWM2OFS0                          00000000
PWM2OFS1                          00000001
PWM2OUT                           00000005
PWM2OUT_A                         00000001
PWM2PH                            00000DA1
PWM2PHH                           00000DA2
PWM2PHH0                          00000000
PWM2PHH1                          00000001
PWM2PHH2                          00000002
PWM2PHH3                          00000003
PWM2PHH4                          00000004
PWM2PHH5                          00000005
PWM2PHH6                          00000006
PWM2PHH7                          00000007
PWM2PHIE                          00000002
PWM2PHIF                          00000002
PWM2PHL                           00000DA1
PWM2PHL0                          00000000
PWM2PHL1                          00000001
PWM2PHL2                          00000002
PWM2PHL3                          00000003
PWM2PHL4                          00000004
PWM2PHL5                          00000005
PWM2PHL6                          00000006
PWM2PHL7                          00000007
PWM2POL                           00000004
PWM2PR                            00000DA5
PWM2PRH                           00000DA6
PWM2PRH0                          00000000
PWM2PRH1                          00000001
PWM2PRH2                          00000002
PWM2PRH3                          00000003
PWM2PRH4                          00000004
PWM2PRH5                          00000005
PWM2PRH6                          00000006
PWM2PRH7                          00000007
PWM2PRIE                          00000000
PWM2PRIF                          00000000
PWM2PRL                           00000DA5
PWM2PRL0                          00000000
PWM2PRL1                          00000001
PWM2PRL2                          00000002
PWM2PRL3                          00000003
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-14-2016  20:45:37         PAGE 51


SYMBOL TABLE
  LABEL                             VALUE 

PWM2PRL4                          00000004
PWM2PRL5                          00000005
PWM2PRL6                          00000006
PWM2PRL7                          00000007
PWM2PS0                           00000004
PWM2PS1                           00000005
PWM2PS2                           00000006
PWM2TMR                           00000DA9
PWM2TMRH                          00000DAA
PWM2TMRH0                         00000000
PWM2TMRH1                         00000001
PWM2TMRH2                         00000002
PWM2TMRH3                         00000003
PWM2TMRH4                         00000004
PWM2TMRH5                         00000005
PWM2TMRH6                         00000006
PWM2TMRH7                         00000007
PWM2TMRL                          00000DA9
PWM2TMRL0                         00000000
PWM2TMRL1                         00000001
PWM2TMRL2                         00000002
PWM2TMRL3                         00000003
PWM2TMRL4                         00000004
PWM2TMRL5                         00000005
PWM2TMRL6                         00000006
PWM2TMRL7                         00000007
PWM3CLKCON                        00000DBE
PWM3CON                           00000DBB
PWM3CS0                           00000000
PWM3CS1                           00000001
PWM3DC                            00000DB3
PWM3DCH                           00000DB4
PWM3DCH0                          00000000
PWM3DCH1                          00000001
PWM3DCH2                          00000002
PWM3DCH3                          00000003
PWM3DCH4                          00000004
PWM3DCH5                          00000005
PWM3DCH6                          00000006
PWM3DCH7                          00000007
PWM3DCIE                          00000001
PWM3DCIF                          00000001
PWM3DCL                           00000DB3
PWM3DCL0                          00000000
PWM3DCL1                          00000001
PWM3DCL2                          00000002
PWM3DCL3                          00000003
PWM3DCL4                          00000004
PWM3DCL5                          00000005
PWM3DCL6                          00000006
PWM3DCL7                          00000007
PWM3EN                            00000007
PWM3EN_A                          00000002
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-14-2016  20:45:37         PAGE 52


SYMBOL TABLE
  LABEL                             VALUE 

PWM3IE                            00000006
PWM3IF                            00000006
PWM3INTCON                        00000DBC
PWM3INTE                          00000DBC
PWM3INTF                          00000DBD
PWM3INTFLG                        00000DBD
PWM3LD                            00000007
PWM3LDA_A                         00000002
PWM3LDCON                         00000DBF
PWM3LDM                           00000006
PWM3LDS0                          00000000
PWM3LDS1                          00000001
PWM3MODE0                         00000002
PWM3MODE1                         00000003
PWM3OE                            00000006
PWM3OF                            00000DB7
PWM3OFCON                         00000DC0
PWM3OFH                           00000DB8
PWM3OFH0                          00000000
PWM3OFH1                          00000001
PWM3OFH2                          00000002
PWM3OFH3                          00000003
PWM3OFH4                          00000004
PWM3OFH5                          00000005
PWM3OFH6                          00000006
PWM3OFH7                          00000007
PWM3OFIE                          00000003
PWM3OFIF                          00000003
PWM3OFL                           00000DB7
PWM3OFL0                          00000000
PWM3OFL1                          00000001
PWM3OFL2                          00000002
PWM3OFL3                          00000003
PWM3OFL4                          00000004
PWM3OFL5                          00000005
PWM3OFL6                          00000006
PWM3OFL7                          00000007
PWM3OFM0                          00000005
PWM3OFM1                          00000006
PWM3OFMC                          00000004
PWM3OFS0                          00000000
PWM3OFS1                          00000001
PWM3OUT                           00000005
PWM3OUT_A                         00000002
PWM3PH                            00000DB1
PWM3PHH                           00000DB2
PWM3PHH0                          00000000
PWM3PHH1                          00000001
PWM3PHH2                          00000002
PWM3PHH3                          00000003
PWM3PHH4                          00000004
PWM3PHH5                          00000005
PWM3PHH6                          00000006
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-14-2016  20:45:37         PAGE 53


SYMBOL TABLE
  LABEL                             VALUE 

PWM3PHH7                          00000007
PWM3PHIE                          00000002
PWM3PHIF                          00000002
PWM3PHL                           00000DB1
PWM3PHL0                          00000000
PWM3PHL1                          00000001
PWM3PHL2                          00000002
PWM3PHL3                          00000003
PWM3PHL4                          00000004
PWM3PHL5                          00000005
PWM3PHL6                          00000006
PWM3PHL7                          00000007
PWM3POL                           00000004
PWM3PR                            00000DB5
PWM3PRH                           00000DB6
PWM3PRH0                          00000000
PWM3PRH1                          00000001
PWM3PRH2                          00000002
PWM3PRH3                          00000003
PWM3PRH4                          00000004
PWM3PRH5                          00000005
PWM3PRH6                          00000006
PWM3PRH7                          00000007
PWM3PRIE                          00000000
PWM3PRIF                          00000000
PWM3PRL                           00000DB5
PWM3PRL0                          00000000
PWM3PRL1                          00000001
PWM3PRL2                          00000002
PWM3PRL3                          00000003
PWM3PRL4                          00000004
PWM3PRL5                          00000005
PWM3PRL6                          00000006
PWM3PRL7                          00000007
PWM3PS0                           00000004
PWM3PS1                           00000005
PWM3PS2                           00000006
PWM3TMR                           00000DB9
PWM3TMRH                          00000DBA
PWM3TMRH0                         00000000
PWM3TMRH1                         00000001
PWM3TMRH2                         00000002
PWM3TMRH3                         00000003
PWM3TMRH4                         00000004
PWM3TMRH5                         00000005
PWM3TMRH6                         00000006
PWM3TMRH7                         00000007
PWM3TMRL                          00000DB9
PWM3TMRL0                         00000000
PWM3TMRL1                         00000001
PWM3TMRL2                         00000002
PWM3TMRL3                         00000003
PWM3TMRL4                         00000004
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-14-2016  20:45:37         PAGE 54


SYMBOL TABLE
  LABEL                             VALUE 

PWM3TMRL5                         00000005
PWM3TMRL6                         00000006
PWM3TMRL7                         00000007
PWMEN                             00000D8E
PWMLD                             00000D8F
PWMOUT                            00000D90
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCREG                             00000199
RCSTA                             0000019D
RD                                00000000
ROW_EMPTY                         00000000
ROW_FULL                          0000000A
RT_THR                            000000B5
RX9                               00000006
RX9D                              00000000
RXDTSEL                           00000007
S0                                0000001F
SBOREN                            00000007
SCKP                              00000004
SCS0                              00000000
SCS1                              00000001
SENDB                             00000003
SET_OP                            00000001
SLRA0                             00000000
SLRA1                             00000001
SLRA2                             00000002
SLRA4                             00000004
SLRA5                             00000005
SLRCONA                           0000030C
SP                                FSR1
SPBRG                             0000019B
SPBRGH                            0000019C
SPBRGL                            0000019B
SPEN                              00000007
SPLLEN                            00000007
SREN                              00000005
STACK_SIZE                        00000020
STATUS                            00000003
STATUS_SHAD                       00000FE4
STKOVF                            00000007
STKPTR                            00000FED
STKUNF                            00000006
SWDTEN                            00000000
SYNC                              00000004
SYNC_IE                           00000006
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-14-2016  20:45:37         PAGE 55


SYMBOL TABLE
  LABEL                             VALUE 

SYNC_IF                           00000006
SYNC_OUT                          00000002
SYNC_PIE                          00000093
SYNC_PIR                          00000013
SYNC_PWMCLKCON                    00000DBE
SYNC_PWMCON                       00000DBB
SYNC_PWMDCH                       00000DB4
SYNC_PWMDCL                       00000DB3
SYNC_PWMINTE                      00000DBC
SYNC_PWMINTF                      00000DBD
SYNC_PWMLDCON                     00000DBF
SYNC_PWMOF                        00000DB7
SYNC_PWMOFCON                     00000DC0
SYNC_PWMPH                        00000DB1
SYNC_PWMPRH                       00000DB6
SYNC_PWMPRL                       00000DB5
SYNC_PWMTMR                       00000DB9
T                                 INDF1
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000018
T1GCON                            00000019
T1GGO                             00000003
T1GGO_NOT_DONE                    00000003
T1GPOL                            00000006
T1GSEL                            00000003
T1GSPM                            00000004
T1GSS0                            00000000
T1GSS1                            00000001
T1GTM                             00000005
T1GVAL                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             0000001C
T2OUTPS0                          00000003
T2OUTPS1                          00000004
T2OUTPS2                          00000005
T2OUTPS3                          00000006
TC                                00000032
TCY                               000000C8
TEST_OP                           00000003
TMR0                              00000015
TMR0CS                            00000005
TMR0IE                            00000005
TMR0IF                            00000002
TMR0SE                            00000004
TMR1                              00000016
TMR1CS0                           00000006
TMR1CS1                           00000007
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-14-2016  20:45:37         PAGE 56


SYMBOL TABLE
  LABEL                             VALUE 

TMR1GE                            00000007
TMR1GIE                           00000007
TMR1GIF                           00000007
TMR1H                             00000017
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             00000016
TMR1ON                            00000000
TMR2                              0000001A
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOS                               00000FEE
TOSH                              00000FEF
TOSL                              00000FEE
TRIGSEL0                          00000004
TRIGSEL1                          00000005
TRIGSEL2                          00000006
TRIGSEL3                          00000007
TRISA                             0000008C
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRMT                              00000001
TSEN                              00000005
TSRNG                             00000004
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TUN5                              00000005
TX9                               00000006
TX9D                              00000000
TXCKSEL                           00000002
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             0000019A
TXSTA                             0000019E
TX_PIR                            00000011
UP_THR                            000000C6
VDD                               00000400
VERT_DLY                          00000032
VIDEO_BUFFER                      00002030
VIDEO_LAT                         0000010C
VIDEO_OUT                         00000001
VREGCON                           00000197
VREGPM                            00000001
W                                 00000000
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-14-2016  20:45:37         PAGE 57


SYMBOL TABLE
  LABEL                             VALUE 

WDTCON                            00000097
WDTPS0                            00000001
WDTPS1                            00000002
WDTPS2                            00000003
WDTPS3                            00000004
WDTPS4                            00000005
WELL_DEPTH                        00000016
WELL_WIDTH                        0000000A
WPUA                              0000020C
WPUA0                             00000000
WPUA1                             00000001
WPUA2                             00000002
WPUA3                             00000003
WPUA4                             00000004
WPUA5                             00000005
WR                                00000001
WREG                              00000009
WREG_SHAD                         00000FE5
WREN                              00000002
WRERR                             00000003
WUE                               00000001
XOR_OP                            00000002
XSIZE                             00000030
YSIZE                             00000020
Z                                 00000002
Z_SHAD                            00000002
_.org_1_0074                      00000074
_.org_1_0076                      00000076
_.org_1_0078                      00000078
_.org_1_007B                      0000007B
_.org_1_00BB                      000000BB
_.org_1_00BD                      000000BD
_.org_1_00D9                      000000D9
_.org_1_00E0                      000000E0
_.org_1_02BA                      000002BA
_.org_1_02C8                      000002C8
_.org_1_0321                      00000321
_.org_1_032A                      0000032A
_.org_1_0369                      00000369
_BOREN_NSLEEP                     00003DFF
_BOREN_OFF                        000039FF
_BOREN_ON                         00003FFF
_BOREN_SBODEN                     00003BFF
_BORV_19                          00003FFF
_BORV_HI                          00003BFF
_BORV_LO                          00003FFF
_CLKOUTEN_OFF                     00003FFF
_CLKOUTEN_ON                      000037FF
_CONFIG1                          00008007
_CONFIG2                          00008008
_CP_OFF                           00003FFF
_CP_ON                            00003F7F
_DEVID1                           00008006
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-14-2016  20:45:37         PAGE 58


SYMBOL TABLE
  LABEL                             VALUE 

_FOSC_ECH                         00003FFF
_FOSC_ECL                         00003FFD
_FOSC_ECM                         00003FFE
_FOSC_INTOSC                      00003FFC
_IDLOC0                           00008000
_IDLOC1                           00008001
_IDLOC2                           00008002
_IDLOC3                           00008003
_LPBOREN_OFF                      00003FFF
_LPBOREN_ON                       000037FF
_LVP_OFF                          00001FFF
_LVP_ON                           00003FFF
_MCLRE_OFF                        00003FBF
_MCLRE_ON                         00003FFF
_PLLEN_OFF                        00003EFF
_PLLEN_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FDF
_STVREN_OFF                       00003DFF
_STVREN_ON                        00003FFF
_WDTE_NSLEEP                      00003FF7
_WDTE_OFF                         00003FE7
_WDTE_ON                          00003FFF
_WDTE_SWDTEN                      00003FEF
_WRT_ALL                          00003FFC
_WRT_BOOT                         00003FFE
_WRT_HALF                         00003FFD
_WRT_OFF                          00003FFF
__12F1572                         00000001
_stack                            00000020
accaH                             00000009
accaL                             00000008
accbH                             0000000B
accbL                             0000000A
add_points                        0000036A
angle                             00000041
bitop                             0000010D
bitop00                           0000011A
bitop01                           0000011D
bitop02                           00000132
buttons                           0000000C
case                              
clear_bit                         00000127
clear_score                       00000248
clear_screen                      000000E8
cls_loop                          000000F0
col_loop                          00000251
coll_test                         000002CE
count_done                        00000293
count_full                        0000027B
count_loop                        0000027F
dec_n                             
digits                            000003B4
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-14-2016  20:45:37         PAGE 59


SYMBOL TABLE
  LABEL                             VALUE 

disable_video                     
div10                             00000058
div10_loop                        0000005C
drop                              
drop1                             0000024E
drop_n                            
droppedH                          00000047
droppedL                          00000046
dup                               
enable_video                      
fall_loop                         00000324
flags                             00000002
game_init                         00000223
game_loop                         00000318
get_flash_word                    0000015F
get_nibble                        00000173
get_pixel                         00000108
gt_255                            0000002A
gtimer                            00000003
hard_drop                         0000033C
hline                             00000201
hline_done                        00000210
inc_n                             
init                              00000371
insert                            
isr                               00000004
isr_exit                          00000054
koro                              000002AE
korobeiniki                       0000044D
labels                            00000400
lcountH                           00000001
lcountL                           00000000
lit                               
lt_256                            0000000E
main                              000003B1
move_down                         0000034D
move_left                         00000348
move_right                        0000034B
mult6                             00000068
new_tminos                        00000295
next_flash_word                   0000016E
next_row                          00000291
nibble                            0000000D
nibble_mask                       00000182
no_zero                           000001FF
over                              
pause                             
pick                              
pixels_loop                       000000D4
pop                               
print_char                        00000190
print_int                         000001E6
print_label                       000001C9
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-14-2016  20:45:37         PAGE 60


SYMBOL TABLE
  LABEL                             VALUE 

print_last                        000001F9
print_row                         00000186
print_tetrim                      0000019F
prt01                             000001B5
prt_lbl_done                      000001E4
prt_lbl_loop                      000001CB
pstack_init                       
push                              
q                                 0000000A
qr00                              0000026C
qr01                              00000276
query_row                         0000026A
r                                 00000000
randH                             00000006
randL                             00000005
rcount                            00000007
read_exit                         000000A0
read_flash                        00000168
read_pad                          0000006D
reserve                           
rot                               
rot_left                          0000033E
rot_right                         00000343
row0                              00000181
row1                              0000017D
row2                              0000017F
row_loop                          0000024F
rst                               00000010
scoreH                            00000045
scoreL                            00000044
set_bit                           0000012A
set_video_ptr                     000000F6
soft_drop                         0000033D
start_timer                       
store                             
swap                              
t0                                0000000E
t1                                0000000F
task0                             0000003F
task1                             00000048
task2                             0000004F
tasks                             00000035
tcyDelay                          
test_bit                          00000123
tetrim                            00000040
tetriminos                        000003E0
tetris                            00000308
ti                                000001AE
tone                              000000A3
tone_pr                           00000420
tone_tmr                          00000004
try_a                             0000007D
try_b                             00000083
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-14-2016  20:45:37         PAGE 61


SYMBOL TABLE
  LABEL                             VALUE 

try_button                        
try_dn                            0000009B
try_lt                            00000095
try_rt                            00000089
try_up                            0000008F
tx                                00000042
txt_lines                         0000040D
txt_press                         00000416
txt_score                         00000404
ty                                00000043
undo_hard_drop                    000002E5
undo_move_left                    000002F1
undo_move_right                   000002EF
undo_rot_left                     000002EB
undo_rot_right                    000002E7
undo_soft_drop                    000002E6
update_display                    000002F3
video_buffer_b0                   00000050
video_buffer_b2                   000000A0
video_buffer_b3                   00000120
video_serialize                   000000BA
vline                             00000212
vline_done                        00000221
vsync_end                         00000022
vsync_start                       0000001A
wait_end                          000002CA
wait_sound                        
wait_start                        000002A9
wait_timer                        
xor_bit                           0000012D
xor_row                           0000013B
xor_row01                         00000141
xor_row02                         00000159
xor_row_done                      0000015D

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,   133 suppressed

