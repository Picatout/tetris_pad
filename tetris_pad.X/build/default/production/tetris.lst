MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-13-2016  19:46:46         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001     include p12f1572.inc
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Sep 13 2016
                      00005 ;  MPASM PIC12F1572 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2016 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01601         LIST
                      00002     
                      00003     radix dec
                      00004     errorlevel 0, -302, -305
                      00005     
8007   3FE7           00006     __config _CONFIG1, _FOSC_ECH&_WDTE_OFF
8008   1EFF           00007     __config _CONFIG2, _PLLEN_OFF&_LVP_OFF 
                      00008 
  01312D00            00009 FOSC equ 20000000 ; 20Mhz
  00000032            00010 TC equ 50 ; nanosecondes 
  004C4B40            00011 FCY equ FOSC/4    ; 5Mhz
  000000C8            00012 TCY equ 200 ; nanoseconds
                      00013 
                      00014 
  00000030            00015 XSIZE equ 48  ; horizontal pixels
  00000020            00016 YSIZE equ 32  ; vertical pixels
  00000006            00017 BPL equ XSIZE/8 ; bytes per line 
  000000C0            00018 BUFFER_SIZE equ  YSIZE*BPL  ; video buffer size
  00002030            00019 VIDEO_BUFFER equ 0x2000+(3*80-BUFFER_SIZE) ; buffer address
  00000032            00020 VERT_DLY equ 50
  00000046            00021 FIRST_VIDEO equ VERT_DLY+20  ; first video output line
  000000C5            00022 LAST_VIDEO equ FIRST_VIDEO+4*YSIZE-1  ; last video output line
  0000019A            00023 PIXEL_TXREG equ TXREG
  00000011            00024 TX_PIR equ PIR1
  00000032            00025 HORZ_DLY equ 10*5  ; there is 5 TCY/µsec
                      00026  
  00000001            00027 VIDEO_OUT equ RA1
  0000010C            00028 VIDEO_LAT equ LATA
  00000002            00029 SYNC_OUT equ RA2 
  00000DB3            00030 SYNC_PWMDCL equ PWM3DCL ; duty cycle low byte
  00000DB4            00031 SYNC_PWMDCH equ PWM3DCH ; high byte    
  00000DB5            00032 SYNC_PWMPRL equ PWM3PRL ; pwm period low byte
  00000DB6            00033 SYNC_PWMPRH equ PWM3PRH ; high byte 
  00000DB1            00034 SYNC_PWMPH equ PWM3PH ; pwm phase
  00000DB7            00035 SYNC_PWMOF equ PWM3OF ; pwm offset
  00000DB9            00036 SYNC_PWMTMR equ PWM3TMR ; timer
  00000DBB            00037 SYNC_PWMCON equ PWM3CON ; control SFR
  00000DBE            00038 SYNC_PWMCLKCON equ PWM3CLKCON  ; clock control SFR
  00000DC0            00039 SYNC_PWMOFCON equ PWM3OFCON ; offset control SFR
  00000DBF            00040 SYNC_PWMLDCON equ PWM3LDCON ; load control SFR
  00000006            00041 SYNC_IE equ PWM3IE  ; interrupt enable bit
  00000006            00042 SYNC_IF equ PWM3IF  ; interrupt flag bit
  00000093            00043 SYNC_PIE equ PIE3 ; interrupt enable SFR
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-13-2016  19:46:46         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000013            00044 SYNC_PIR equ PIR3 ; interrupt flag SFR 
  00000DBC            00045 SYNC_PWMINTE equ PWM3INTE
  00000DBD            00046 SYNC_PWMINTF equ PWM3INTF
                      00047  
  000004F5            00048 HORZ_PERIOD equ FOSC/15748-1 ; 15748 hertz
  0000005E            00049 HORZ_PULSE equ 4700/TC ; 4.7µsec 
  00000106            00050 LAST_LINE equ 262
                      00051 
  00000000            00052 LED_PIN equ RA0
  00000004            00053 ADC_PIN equ RA4
                      00054  
  00000004            00055 AUDIO_PIN equ RA4
  00000DA3            00056 AUDIO_PWMDCL equ PWM2DCL
  00000DA4            00057 AUDIO_PWMDCH equ PWM2DCH
  00000DA5            00058 AUDIO_PWMPRL equ PWM2PRL
  00000DA6            00059 AUDIO_PWMPRH equ PWM2PRH
  00000DA9            00060 AUDIO_PWMTMR equ PWM2TMR
  00000DAE            00061 AUDIO_PWMCLKCON equ PWM2CLKCON
  00000DAF            00062 AUDIO_PWMLDCON equ PWM2LDCON
  00000DAB            00063 AUDIO_PWMCON equ PWM2CON
                      00064  
                      00065 ; game pad resource
                      00066 ; use ADC 
  00000004            00067 PAD_PIN equ ANSA4
  00000003            00068 PAD_CHS equ 3 
  00000000            00069 BTN_UP equ 0
  00000001            00070 BTN_DN equ 1
  00000002            00071 BTN_LT equ 2
  00000003            00072 BTN_RT equ 3
  00000004            00073 BTN_A equ 4
  00000005            00074 BTN_B equ 5
                      00075 ; threshold level for each button
                      00076 ; lower_btn_thr >= BTN_? < btn_thr
                      00077 ; exemple: BTN_UP if RT_THR<=Vadc<UP_THR  
  00000400            00078 VDD equ 1024
  000000D8            00079 DN_THR equ 216 ;(VDD*(6/7+5/6)/2)>>2
  000000D1            00080 LT_THR equ 209 ; (VDD*(5/6+4/5)/2)>>2
  000000C6            00081 UP_THR equ 198 ;(VDD*(4/5+3/4)/2)>>2
  000000B5            00082 RT_THR equ 181 ;(VDD*(3/4+2/3)/2)>>2
  00000095            00083 B_THR  equ 149 ; (VDD*(2/3+1/2)/2)>>2
  00000040            00084 A_THR  equ 64 ;(VDD/4)>>2
                      00085  
                      00086 try_button macro btn, label 
                      00087     movlw btn
                      00088     subwf ADRESH,W
                      00089     skpnc
                      00090     bra label
                      00091     endm
                      00092     
                      00093 ;boolean flags 
  00000000            00094 F_VSYNC equ 0 ; vertical sync active
  00000001            00095 F_EVEN equ 1  ; even field
  00000002            00096 F_MUTEX equ 2 ; video routine lock out
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-13-2016  19:46:46         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000003            00097 F_GTMR equ 3  ; game timer active
  00000004            00098 F_GSTOP equ 4 ; game stopped
  00000005            00099 F_SND equ 5 ; sound timer active 
  00000006            00100 F_COLL equ 6 ; collision flag
                      00101  
  000000B4            00102 LFSR_TAPS equ 0xB4 ; xor mask
                      00103  
                      00104 disable_video macro ; lockout video_serialize
                      00105     bsf flags, F_MUTEX
                      00106     endm
                      00107     
                      00108 enable_video macro ; unlock video_serialize
                      00109     bcf flags, F_MUTEX
                      00110     endm
                      00111     
                      00112 tcyDelay macro n ; delay in TCY cycles  5TCY per µsec.  
                      00113     variable r=n%5
                      00114     variable q=n/5
                      00115     while r>1
                      00116     bra $+1
                      00117 r-=2
                      00118     endw
                      00119     if r==1
                      00120     nop
                      00121     endif
                      00122     if q
                      00123     movlw q
                      00124     bra $+1
                      00125     decfsz WREG
                      00126     bra $-2
                      00127     endif
                      00128     endm
                      00129 
                      00130 case macro n, label
                      00131     xorlw n
                      00132     skpnz
                      00133     bra label
                      00134     xorlw n
                      00135     endm
                      00136  
                      00137 ldpmadr macro addr ; load PMADR register
                      00138     movlw low(addr)
                      00139     movwf PMADRL
                      00140     movlw high(addr)
                      00141     movwf PMADRH
                      00142     endm
                      00143     
                      00144 addpmadr macro value ; add value to PMADR
                      00145     movlw value
                      00146     addwf PMADRL
                      00147     clrw
                      00148     addwfc PMADRH
                      00149     endm
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-13-2016  19:46:46         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00150     
                      00151 start_timer macro value ; start game timer
                      00152     movlw value
                      00153     movwf gtimer
                      00154     bsf flags, F_GTMR
                      00155     endm
                      00156     
                      00157 wait_timer macro ; wait timer expiration
                      00158     btfsc flags, F_GTMR
                      00159     bra $-1
                      00160     endm
                      00161     
                      00162 pause macro value ; suspend execution (busy loop)
                      00163     start_timer value
                      00164     wait_timer
                      00165     endm
                      00166  
                      00167 wait_sound macro ; wait sound end
                      00168     btfsc flags,F_SND
                      00169     bra $-1
                      00170     endm
                      00171     
                      00172 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00173 ; software stack for arguments passing
                      00174 ; SP is Stack Pointer
                      00175 ; T is Top Of Stack
                      00176 #define SP FSR1
                      00177 #define T INDF1
  00000020            00178 STACK_SIZE equ 32
                      00179  
  0000001F            00180 S0 equ 0x1F ; stack base address - 1
                      00181 
                      00182 pstack_init macro ; initialise stack pointer
                      00183     clrf FSR1H
                      00184     movlw S0
                      00185     movwf FSR1L
                      00186     endm
                      00187     
                      00188 push macro   ; ( -- n ) push WREG on stack
                      00189     movwi ++SP
                      00190     endm
                      00191 
                      00192 pop macro   ; ( n -- )  pop T in WREG
                      00193     moviw SP--
                      00194     endm
                      00195     
                      00196 drop macro  ; ( n -- ) ; discard T
                      00197    addfsr SP,-1
                      00198    endm
                      00199 
                      00200 drop_n macro n  ; discard n elements  n<32
                      00201     addfsr SP,-n
                      00202     endm
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-13-2016  19:46:46         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00203     
                      00204 lit macro  n ; ( -- n ) ; push a literal
                      00205    movlw n
                      00206    movwi ++SP 
                      00207    endm
                      00208 
                      00209 dup macro ; ( n -- n n ) duplicate T
                      00210     movfw T
                      00211     movwi ++SP
                      00212     endm
                      00213     
                      00214 over macro ; ( n1 n2 -- n1 n2 n1 )
                      00215     moviw -1[SP]
                      00216     push
                      00217     endm
                      00218     
                      00219 swap macro ; exchange WREG and T
                      00220     xorwf T
                      00221     xorwf T,W
                      00222     xorwf T
                      00223     endm
                      00224  
                      00225 store macro var ; ( n -- ) pop T in variable
                      00226    moviw SP--
                      00227    movwf var
                      00228    endm
                      00229    
                      00230 fetch macro var  ; ( -- n ) push var on stack
                      00231    movfw var
                      00232    movwi ++SP
                      00233    endm
                      00234 
                      00235 pick macro n  ; pick nth element of stack to WREG
                      00236     moviw -n[SP]
                      00237     endm
                      00238 
                      00239 insert macro n ;  insert WREG at position n on stack
                      00240    movwi -n[SP]
                      00241    endm
                      00242    
                      00243 movtw macro ; ( n -- n ) overwrite WREG with T
                      00244    movfw T
                      00245    endm
                      00246    
                      00247 movwt macro ; ( n1 -- n2 ) overwrite T with WREG
                      00248     movwf T
                      00249     endm
                      00250     
                      00251 add macro  ; add WREG to T result on T
                      00252     addwf T,F
                      00253    endm
                      00254    
                      00255 sub macro  ; substract WREG from T result on T
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-13-2016  19:46:46         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00256    subwf T,F
                      00257    endm
                      00258 
                      00259 inc_n macro n ; increament nth element of stack
                      00260     moviw -n[SP]
                      00261     incf WREG,F
                      00262     movwi -n[SP]
                      00263     endm
                      00264     
                      00265 dec_n macro n ; decreament nth element of stack
                      00266     moviw -n[SP]
                      00267     decf WREG,F
                      00268     movwi -n[SP]
                      00269     endm
                      00270     
                      00271 zbranch macro label ; branch if T == 0
                      00272     pop
                      00273     skpnz
                      00274     bra label
                      00275     endm
                      00276     
                      00277 tbranch macro label ; branch if T != 0
                      00278     pop
                      00279     skpz
                      00280     bra label
                      00281     endm
                      00282     
                      00283 reserve macro n ; reserve n bytes on stack for local variables
                      00284     addfsr SP, n 
                      00285     endm
                      00286  
                      00287 rot macro ; ( n1 n2 n3 -- n2 n3 n1 )
                      00288     pick 2
                      00289     push        ; n1 n2 n3 n1
                      00290     pick 2
                      00291     insert 3   ;  n2 n2 n3 n1
                      00292     pick 1
                      00293     insert 2   ; n2 n3 n3 n1
                      00294     pop        ; n2 n3 n3 
                      00295     movwf T    ; n2 n3 n1
                      00296     endm
                      00297  
                      00298 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00299 ; parameter stack section    
                      00300 dstack udata 0x20
0020                  00301 _stack res 32
                      00302 ; game variables section 
  00000000            00303 GAME_VAR equ 0 ; variables bank
                      00304 game_var udata 0x40 
                      00305 ; tetris game state
0040                  00306 tetrim res 1 ; active tretriminos 
0041                  00307 angle res 1 ; tetriminos rotatation angle in multiple of 90degr. {0:3}
0042                  00308 tx  res 1 ; x coordinate
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-13-2016  19:46:46         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0043                  00309 ty  res 1 ; y coordinate
0044                  00310 scoreL res 1 ; game score  16 bits
0045                  00311 scoreH res 1 
0046                  00312 droppedL res 1  ; total
0047                  00313 droppedH res 1  ; dropped lines
                      00314   
                      00315  
                      00316 ; These 3 sections are used for video pixels buffering
                      00317 ; with indirect access using FSR0
                      00318 ; to form a contiguous address space. 
                      00319 vb_b0    udata 0x50
0050                  00320 video_buffer_b0 res 32
                      00321 vb_b1    udata 0xA0
00A0                  00322 video_buffer_b2 res 80
                      00323 vb_b2    udata 0x120
0120                  00324 video_buffer_b3 res 80
                      00325  
                      00326  
                      00327     udata_shr
                      00328 ;scan lines counter 16 bits
0000                  00329 lcountL res 1
0001                  00330 lcountH res 1
                      00331 ; boolean flags 
0002                  00332 flags res 1
                      00333 ; game timer
0003                  00334 gtimer res 1 
                      00335 ; sound timer
0004                  00336 tone_tmr res 1 
                      00337 ; lfsr PRNG register
0005                  00338 randL res 1 
0006                  00339 randH res 1 
                      00340 ; loop counter
0007                  00341 rcount res 1
                      00342 ; arithmetic accumulator A 24 bits
0008                  00343 accaL res 1
0009                  00344 accaH res 1
                      00345 ; arithmetic accumulator B 16 bits
000A                  00346 accbL res 1
000B                  00347 accbH res 1
                      00348 ; game pad buttons state
000C                  00349 buttons res 1
                      00350 ; flash reader next nibble {0-3}
000D                  00351 nibble res 1
                      00352  
                      00353 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
000E                  00354 rst: 
                      00355     org 0
0000   0023           00356     banksel ANSELA
0001   018C           00357     clrf ANSELA
0002   160C           00358     bsf ANSELA,PAD_PIN
0003   2???           00359     goto init
                      00360     
                      00361     org 4
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-13-2016  19:46:46         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0004                  00362 isr:
0004   003B           00363     banksel SYNC_PWMINTF
0005   103D           00364     bcf SYNC_PWMINTF,PRIF
0006   1800           00365     btfsc lcountH,0
0007   3???           00366     bra gt_255 ; lcount > 255
0008   08??           00367     movfw lcountL
0009   1903           00368     skpnz
000A   3???           00369     bra vsync_start
000B   3A03           00370     xorlw 3
000C   1903           00371     skpnz
000D   3???           00372     bra vsync_end
000E                  00373 lt_256: ; lcount < 256
000E   1900           00374     btfsc flags, F_MUTEX
000F   3???           00375     bra isr_exit
0010   08??           00376     movfw lcountL
0011   3C45           00377     sublw FIRST_VIDEO-1
0012   1803           00378     skpnc
0013   3???           00379     bra isr_exit
0014   08??           00380     movfw lcountL
0015   3CC5           00381     sublw LAST_VIDEO
0016   1C03           00382     skpc
0017   3???           00383     bra isr_exit
0018   2???           00384     call video_serialize
0019   3???           00385     bra isr_exit    
001A                  00386 vsync_start: ; scanline 0 start vertical sync pulse
001A   003B           00387     banksel SYNC_PWMDCL
001B   3097           00388     movlw (HORZ_PERIOD-HORZ_PULSE)&0xff
001C   00B3           00389     movwf SYNC_PWMDCL
001D   3004           00390     movlw (HORZ_PERIOD-HORZ_PULSE)>>8
001E   00B4           00391     movwf SYNC_PWMDCH
001F   17BF           00392     bsf SYNC_PWMLDCON,LDA
0020   1400           00393     bsf flags, F_VSYNC
0021   3???           00394     bra isr_exit
0022                  00395 vsync_end: ; scanline 3 end vertical sync pulse
0022   003B           00396     banksel SYNC_PWMDCL
0023   305E           00397     movlw HORZ_PULSE&0xff
0024   00B3           00398     movwf SYNC_PWMDCL
0025   3000           00399     movlw HORZ_PULSE>>8
0026   00B4           00400     movwf SYNC_PWMDCH
0027   17BF           00401     bsf SYNC_PWMLDCON,LDA
0028   1000           00402     bcf flags, F_VSYNC
0029   3???           00403     bra isr_exit
002A                  00404 gt_255: ; lcount>255
002A   3006           00405     movlw LAST_LINE&0xff
002B   1C80           00406     btfss flags,F_EVEN
002C   3E01           00407     addlw 1
002D   06??           00408     xorwf lcountL,W
002E   1D03           00409     skpz
002F   3???           00410     bra tasks
0030   01??           00411     clrf lcountL
0031   01??           00412     clrf lcountH
0032   3002           00413     movlw 1<<F_EVEN
0033   06??           00414     xorwf flags,F
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-13-2016  19:46:46         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0034   0009           00415     retfie
                      00416 ; round robin task scheduler
                      00417 ; each task execute once every 1/60th sec.
                      00418 ; condition:    
                      00419 ;   Task must complete inside
                      00420 ;   horizontal period.
0035                  00421 tasks:
0035   08??           00422     movfw lcountL
0036   1903           00423     skpnz
0037   3???           00424     bra task0
0038   0389           00425     decf WREG
0039   1903           00426     skpnz 
003A   3???           00427     bra task1
003B   0389           00428     decf WREG
003C   1903           00429     skpnz
003D   3???           00430     bra task2
003E   3???           00431     bra isr_exit
003F                  00432 task0:
                      00433 ; sound timer    
003F   08??           00434     movfw tone_tmr
0040   1903           00435     skpnz
0041   3???           00436     bra isr_exit
0042   0B??           00437     decfsz tone_tmr,F
0043   3???           00438     bra isr_exit
0044   1280           00439     bcf flags,F_SND
0045   003B           00440     banksel AUDIO_PWMCON
0046   13AB           00441     bcf AUDIO_PWMCON,EN
0047   3???           00442     bra isr_exit
0048                  00443 task1:   
                      00444 ; decrement game timer    
0048   08??           00445     movf gtimer,F ; 
0049   1903           00446     skpnz
004A   3???           00447     bra isr_exit
004B   0B??           00448     decfsz gtimer,F ; 
004C   3???           00449     bra isr_exit ;
004D   1180           00450     bcf flags, F_GTMR
004E   3???           00451     bra isr_exit ;
004F                  00452 task2:
                      00453 ; rotate lfsr
004F   36??           00454     lsrf randH
0050   0C??           00455     rrf randL
0051   1803           00456     skpnc
0052   30B4           00457     movlw LFSR_TAPS
0053   06??           00458     xorwf randH
0054   3???           00459     bra isr_exit 
0055                  00460 isr_exit:
0055   0A??           00461     incf lcountL
0056   1903           00462     skpnz
0057   0A??           00463     incf lcountH
0058   0009           00464     retfie
                      00465 
                      00466 ;divsion by 10    
                      00467 ;needed to convert binary to BCD
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-13-2016  19:46:46         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00468 ; input:
                      00469 ;   acca dividend  16 bits
                      00470 ; output:
                      00471 ;   acca: quotient
                      00472 ;   accbL: remainder    
0059                  00473 div10:
                      00474     disable_video
0059   1500               M     bsf flags, F_MUTEX
005A   3011           00475     movlw 17
005B   00??           00476     movwf rcount
005C   01??           00477     clrf accbL
005D                  00478 div10_loop:
005D   300A           00479     movlw 10
005E   02??           00480     subwf accbL,W
005F   1803           00481     skpnc
0060   00??           00482     movwf accbL
0061   0D??           00483     rlf accaL
0062   0D??           00484     rlf accaH
0063   0D??           00485     rlf accbL
0064   0B??           00486     decfsz rcount
0065   3???           00487     bra div10_loop
0066   36??           00488     lsrf accbL
                      00489     enable_video
0067   1100               M     bcf flags, F_MUTEX
0068   0008           00490     return
                      00491     
                      00492     
                      00493 ; WREG*6  because BPL=6
                      00494 ; WREG*6=WREG*4+WREG*2    
0069                  00495 mult6: 
0069   00??           00496     movwf accbH
006A   35??           00497     lslf accbH    ; accbH=2*WREG
006B   35??           00498     lslf accbH,W  ; WREG=4*WREG
006C   07??           00499     addwf accbH,W ; WREG=6*WREG
006D   0008           00500     return
                      00501 
                      00502 ;read game pad
                      00503 ; store value in
                      00504 ; buttons
                      00505 ; a button is accepted if
                      00506 ; the Vadc value is below its threshold
006E                  00507 read_pad:
006E   01??           00508     clrf buttons
006F   1A80           00509     btfsc flags, F_SND
0070   0008           00510     return ; can't read while tone playing
0071   0021           00511     banksel TRISA
0072   160C           00512     bsf TRISA,ADC_PIN
0073   0021           00513     banksel ADCON0
0074   141D           00514     bsf ADCON0,ADON
                      00515     tcyDelay 8*4 ; délais d'acquisition 4µsec
  0002                    M     variable r=8*4%5
  0006                    M     variable q=8*4/5
                          M     while r>1
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-13-2016  19:46:46         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0075   3???               M     bra $+1
  00000000                M r-=2
                          M     endw
                          M     if r==1
                          M     nop
                          M     endif
                          M     if q
0076   3006               M     movlw q
0077   3???               M     bra $+1
0078   0B89               M     decfsz WREG
0079   3???               M     bra $-2
                          M     endif
007A   149D           00516     bsf ADCON0,GO
007B   189D           00517     btfsc ADCON0,NOT_DONE
007C   3???           00518     bra $-1
007D   101D           00519     bcf ADCON0,ADON
                      00520 ; try each button from lower to upper
007E                  00521 try_a:
                      00522     try_button A_THR, try_b
007E   3040               M     movlw A_THR
007F   021C               M     subwf ADRESH,W
0080   1803               M     skpnc
0081   3???               M     bra try_b
0082   1600           00523     bsf buttons,BTN_A
0083   3???           00524     bra read_exit
0084                  00525 try_b:    
                      00526     try_button B_THR, try_rt
0084   3095               M     movlw B_THR
0085   021C               M     subwf ADRESH,W
0086   1803               M     skpnc
0087   3???               M     bra try_rt
0088   1680           00527     bsf buttons,BTN_B
0089   3???           00528     bra read_exit
008A                  00529 try_rt:
                      00530     try_button RT_THR, try_up
008A   30B5               M     movlw RT_THR
008B   021C               M     subwf ADRESH,W
008C   1803               M     skpnc
008D   3???               M     bra try_up
008E   1580           00531     bsf buttons,BTN_RT
008F   3???           00532     bra read_exit
0090                  00533 try_up:
                      00534     try_button UP_THR, try_lt
0090   30C6               M     movlw UP_THR
0091   021C               M     subwf ADRESH,W
0092   1803               M     skpnc
0093   3???               M     bra try_lt
0094   1400           00535     bsf buttons,BTN_UP
0095   3???           00536     bra read_exit
0096                  00537 try_lt:
                      00538     try_button LT_THR, try_dn
0096   30D1               M     movlw LT_THR
0097   021C               M     subwf ADRESH,W
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-13-2016  19:46:46         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0098   1803               M     skpnc
0099   3???               M     bra try_dn
009A   1500           00539     bsf buttons,BTN_LT
009B   3???           00540     bra read_exit
009C                  00541 try_dn:
                      00542     try_button DN_THR, read_exit
009C   30D8               M     movlw DN_THR
009D   021C               M     subwf ADRESH,W
009E   1803               M     skpnc
009F   3???               M     bra read_exit
00A0   1480           00543     bsf buttons,BTN_DN
00A1                  00544 read_exit:
00A1   0021           00545     banksel TRISA
00A2   120C           00546     bcf TRISA,ADC_PIN
00A3   0008           00547     return
                      00548     
                      00549 ; play a tone
                      00550 ; input:
                      00551 ;   t   duration in multiple of 1/60 sec.
                      00552 ;   n   note number
00A4                  00553 tone: ; ( t n -- )
00A4   0021           00554     banksel TRISA
00A5   120C           00555     bcf TRISA,AUDIO_PIN
00A6   003B           00556     banksel AUDIO_PWMPRL
00A7   3581           00557     lslf T
00A8   0801           00558     movfw T
00A9   2???           00559     call tone_pr
00AA   00A5           00560     movwf AUDIO_PWMPRL
00AB   3689           00561     lsrf WREG
00AC   00A3           00562     movwf AUDIO_PWMDCL
00AD   0A01           00563     incf T,W
00AE   2???           00564     call tone_pr
00AF   00A6           00565     movwf AUDIO_PWMPRH
00B0   3689           00566     lsrf WREG
00B1   00A4           00567     movwf AUDIO_PWMDCH
00B2   1803           00568     skpnc
00B3   17A3           00569     bsf AUDIO_PWMDCL,7
                      00570     pop
00B4   0017               M     moviw SP--
                      00571     pop
00B5   0017               M     moviw SP--
00B6   00??           00572     movwf tone_tmr
00B7   17AB           00573     bsf AUDIO_PWMCON,EN
00B8   17AF           00574     bsf AUDIO_PWMLDCON,LDA
00B9   1680           00575     bsf flags,F_SND
00BA   0008           00576     return
                      00577     
                      00578     
                      00579 ; serialise video pixels to output
00BB                  00580 video_serialize: 
                      00581     tcyDelay HORZ_DLY
  0000                    M     variable r=HORZ_DLY%5
  000A                    M     variable q=HORZ_DLY/5
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-13-2016  19:46:46         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     while r>1
                          M     bra $+1
                          M r-=2
                          M     endw
                          M     if r==1
                          M     nop
                          M     endif
                          M     if q
00BB   300A               M     movlw q
00BC   3???               M     bra $+1
00BD   0B89               M     decfsz WREG
00BE   3???               M     bra $-2
                          M     endif
00BF   0804           00582     movfw FSR0L
                      00583     push
00C0   001C               M     movwi ++SP
00C1   0805           00584     movfw FSR0H
                      00585     push
00C2   001C               M     movwi ++SP
                      00586     lit 0 ;  x 
00C3   3000               M    movlw 0
00C4   001C               M    movwi ++SP 
00C5   3030           00587     movlw VIDEO_BUFFER&0xff
00C6   0084           00588     movwf FSR0L
00C7   3020           00589     movlw VIDEO_BUFFER>>8
00C8   0085           00590     movwf FSR0H
00C9   3046           00591     movlw FIRST_VIDEO
00CA   02??           00592     subwf lcountL,W
00CB   3689           00593     lsrf WREG
00CC   3689           00594     lsrf WREG
00CD   2???           00595     call mult6  ; 6 byte per line
00CE   0784           00596     addwf FSR0L
00CF   0103           00597     clrw
00D0   3D85           00598     addwfc FSR0H
00D1   3006           00599     movlw XSIZE/8 ; 8 pixels per byte
00D2   00??           00600     movwf rcount  ;
00D3   0023           00601     banksel RCSTA
00D4   179D           00602     bsf RCSTA,SPEN
00D5                  00603 pixels_loop:    
00D5   0012           00604     moviw FSR0++
00D6   0023           00605     banksel PIXEL_TXREG
00D7   009A           00606     movwf PIXEL_TXREG
00D8   0020           00607     banksel TX_PIR
00D9   1E11           00608     btfss TX_PIR,TXIF
00DA   3???           00609     bra $-1
00DB   0B??           00610     decfsz rcount
00DC   3???           00611     bra pixels_loop
00DD   0023           00612     banksel PIXEL_TXREG
00DE   019A           00613     clrf PIXEL_TXREG
00DF   0020           00614     banksel TX_PIR
00E0   1E11           00615     btfss TX_PIR,TXIF
00E1   3???           00616     bra $-1
00E2   0023           00617     banksel RCSTA
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-13-2016  19:46:46         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00E3   139D           00618     bcf RCSTA, SPEN
                      00619     pop
00E4   0017               M     moviw SP--
00E5   0085           00620     movwf FSR0H
                      00621     pop
00E6   0017               M     moviw SP--
00E7   0084           00622     movwf FSR0L
00E8   0008           00623     return
                      00624 
                      00625 ; fill_buffer
                      00626 ; fill screen buffer with WREG value    
00E9                  00627 fill_buffer: ; ( c -- )
                      00628     disable_video
00E9   1500               M     bsf flags, F_MUTEX
00EA   3020           00629     movlw high(VIDEO_BUFFER)
00EB   0085           00630     movwf FSR0H
00EC   3030           00631     movlw low(VIDEO_BUFFER)
00ED   0084           00632     movwf FSR0L
00EE   30C0           00633     movlw BUFFER_SIZE
                      00634     push    ; c size
00EF   001C               M     movwi ++SP
                      00635     pick 1
00F0   3F7F               M     moviw -1[SP]
00F1                  00636 fill_loop:    
00F1   001A           00637     movwi FSR0++
00F2   0B81           00638     decfsz T
00F3   3???           00639     bra fill_loop
                      00640     drop_n 2
00F4   317E               M     addfsr SP,-2
                      00641     enable_video
00F5   1100               M     bcf flags, F_MUTEX
00F6   0008           00642     return
                      00643 
                      00644     
                      00645 ;set video pointer at 
                      00646 ; input:
                      00647 ;   x,y coordinates of pixel in video_buffer    
                      00648 ; output:
                      00649 ;   T = pixel offset, 0 left, 7 right  
                      00650 ;   Z=0 if offset==0 
                      00651 ; NOTE: EUSART output least significant bit first
                      00652 ;       so bit 0 appear left on screen.    
00F7                  00653 set_video_ptr:  ; ( x y -- b )
00F7   3020           00654     movlw high(VIDEO_BUFFER)
00F8   0085           00655     movwf FSR0H
00F9   3030           00656     movlw low(VIDEO_BUFFER)
00FA   0084           00657     movwf FSR0L
                      00658 ; buffer_addr+y*BPL
                      00659     pop         ; ( x y -- x )
00FB   0017               M     moviw SP--
00FC   2???           00660     call mult6
00FD   0784           00661     addwf FSR0L
00FE   0103           00662     clrw
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-13-2016  19:46:46         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00FF   3D85           00663     addwfc FSR0H
                      00664 ; buffer_addr+x/8
0100   3601           00665     lsrf T,W   
0101   3689           00666     lsrf WREG
0102   3689           00667     lsrf WREG
0103   0784           00668     addwf FSR0L
0104   0103           00669     clrw
0105   3D85           00670     addwfc FSR0H
0106   3007           00671     movlw 7
0107   0581           00672     andwf T,F
0108   0008           00673     return
                      00674 
                      00675 ; return state of pixel
                      00676 ; input:
                      00677 ;   x,y coordinates of pixel
                      00678 ; output:
                      00679 ;   T=0|2^n  where n{0:7}
                      00680 ;   Z=1 when T==0    
0109                  00681 get_pixel: ; ( x y -- 0|2^n ) n{0:7)
                      00682     lit TEST_OP
0109   3002               M    movlw TEST_OP
010A   001C               M    movwi ++SP 
010B   2???           00683     call bitop
010C   0801           00684     movfw T  ; 
010D   0008           00685     return
                      00686     
                      00687     
  00000000            00688 CLR_OP equ 0 ; put pixel to 0
  00000001            00689 XOR_OP equ 1 ; invert pixel
  00000002            00690 TEST_OP  equ 2  ; test bit value  return its value as flag
  00000003            00691 SET_OP equ 3 ; put pixel to 1    
                      00692 ;operation on pixel    
                      00693 ; inputs:
                      00694 ;   {x,y} coordinates
                      00695 ;   op operation XOR_OP|CLR_OP 
                      00696 ; output:
                      00697 ;   WREG=collision flag, 0 if collision 
                      00698 ; >> no bank dependency << 
010E                  00699 bitop: ; ( x y op -- f )
                      00700     disable_video
010E   1500               M     bsf flags, F_MUTEX
                      00701     pick 2
010F   3F7E               M     moviw -2[SP]
                      00702     push        ; x y op x
0110   001C               M     movwi ++SP
                      00703     pick 2
0111   3F7E               M     moviw -2[SP]
                      00704     push        ; x y op x y
0112   001C               M     movwi ++SP
                      00705 ; preserve FSR0    
0113   0804           00706     movfw FSR0L
                      00707     insert 4
0114   3FFC               M    movwi -4[SP]
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-13-2016  19:46:46         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0115   0805           00708     movfw FSR0H
                      00709     insert 3    ; -- FSR0L FSR0H op x y 
0116   3FFD               M    movwi -3[SP]
0117   2???           00710     call set_video_ptr  ; -- FSR0L FSR0H op bit
0118   3001           00711     movlw 0x1
0119   1903           00712     skpnz ; bit Z modified before leaving set_video_ptr
011A   3???           00713     bra bitop01 ; least significant bit
011B                  00714 bitop00:
011B   3589           00715     lslf WREG
011C   0B81           00716     decfsz T
011D   3???           00717     bra bitop00
011E                  00718 bitop01: 
                      00719     ; WREG= bit mask
011E   0081           00720     movwf T    ; -- FSR0L FSR0H op mask
                      00721 ;operation selector    
                      00722     pick 1  ; WREG= op
011F   3F7F               M     moviw -1[SP]
0120   1903           00723     skpnz
0121   3???           00724     bra clear_bit
0122   0389           00725     decf WREG
0123   1903           00726     skpnz
0124   3???           00727     bra xor_bit  ;
0125   0389           00728     decf WREG
0126   1903           00729     skpnz
0127   3???           00730     bra test_bit
                      00731 ; set bit  SET_OP
0128   0801           00732     movfw T
0129   0480           00733     iorwf INDF0,F
012A   3???           00734     bra bitop02
012B                  00735 test_bit:  ; TEST_OP
012B   0801           00736     movfw T
012C   0500           00737     andwf INDF0,W
012D   0081           00738     movwf T     ; FSR0L FSR0H op bit
012E   3???           00739     bra bitop02
012F                  00740 clear_bit:  ; CLR_OP
012F   0901           00741     comf T,W
0130   0580           00742     andwf INDF0,F
0131   3???           00743     bra bitop02 ; -- FSR0L FSR0H op mask
0132                  00744 xor_bit: ; XOR_OP
0132   0801           00745     movfw T   ; -- FSR0L FSR0H op mask
0133   0680           00746     xorwf INDF0,F
0134   0500           00747     andwf INDF0,W
0135   0601           00748     xorwf T,W ; on screen bit value, 0 if no collision
0136   0081           00749     movwf T  ; -- FSR0L FSR0H op f
0137                  00750 bitop02:    
                      00751 ; restore FSR0    
                      00752     pick 2  
0137   3F7E               M     moviw -2[SP]
0138   0085           00753     movwf FSR0H
                      00754     pick 3
0139   3F7D               M     moviw -3[SP]
013A   0084           00755     movwf FSR0L
                      00756     pop  ; collision flag
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-13-2016  19:46:46         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

013B   0017               M     moviw SP--
                      00757     drop_n 3 ; drop parameters frame
013C   317D               M     addfsr SP,-3
                      00758     push ; store collision flag
013D   001C               M     movwi ++SP
                      00759     enable_video
013E   1100               M     bcf flags, F_MUTEX
013F   0008           00760     return
                      00761 
                      00762 ; draw row of 4 pixels
                      00763 ; stop when n==0    
                      00764 ; input:
                      00765 ;   {x,y} left coordinates
                      00766 ;   n pixels to draw
                      00767 ;   f collision flag to be modified    
                      00768 ; output:
                      00769 ;   f=collision flag, return modified value   
                      00770 ; >> no bank dependency << 
0140                  00771 xor_row: ; ( f n x y -- f )
                      00772 ; bounds check y
0140   1B81           00773     btfsc T,7
0141   3???           00774     bra xor_row_done ; y<0
0142   3020           00775     movlw YSIZE
0143   0201           00776     subwf T,W
0144   1803           00777     skpnc
0145   3???           00778     bra xor_row_done ; y>=YSIZE
0146                  00779 xor_row01:    
                      00780     pick 2 ; check if n==0
0146   3F7E               M     moviw -2[SP]
0147   1903           00781     skpnz
0148   3???           00782     bra xor_row_done ; row empty nothing to do
0149   3589           00783     lslf WREG
                      00784     insert 2  ; save shifted n
014A   3FFE               M    movwi -2[SP]
014B   1C03           00785     skpc
014C   3???           00786     bra xor_row02 ; bit==0 no draw
                      00787 ; bounds check x{0:43}    
                      00788     pick 1
014D   3F7F               M     moviw -1[SP]
014E   1B89           00789     btfsc WREG,7 
014F   3???           00790     bra xor_row02 ; x<0 don't print
0150   3C2F           00791     sublw XSIZE-1
0151   1C03           00792     skpc
0152   3???           00793     bra xor_row_done ; x>=XSIZE
                      00794 ; check for empty row
                      00795     over ; f n x y x 
0153   3F7F               M     moviw -1[SP]
                          M     push
0154   001C               M     movwi ++SP
                      00796     over ; f n x y x y
0155   3F7F               M     moviw -1[SP]
                          M     push
0156   001C               M     movwi ++SP
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-13-2016  19:46:46         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00797     lit XOR_OP ; f n x y x y op
0157   3001               M    movlw XOR_OP
0158   001C               M    movwi ++SP 
0159   2???           00798     call bitop ; -- f n x y f
                      00799     pick 4 ; pick flag
015A   3F7C               M     moviw -4[SP]
015B   0481           00800     iorwf T
                      00801     pop      ; -- f n x y
015C   0017               M     moviw SP--
                      00802     insert 3 ; store modified flag
015D   3FFD               M    movwi -3[SP]
015E                  00803 xor_row02:
                      00804     inc_n 1  ; x+=1
015E   3F7F               M     moviw -1[SP]
015F   0A89               M     incf WREG,F
0160   3FFF               M     movwi -1[SP]
0161   3???           00805     bra xor_row01
0162                  00806 xor_row_done: ; f n x y
                      00807     drop_n 3  ; only keep f
0162   317D               M     addfsr SP,-3
0163   0008           00808     return
                      00809 
                      00810 ; read flash memory word
                      00811 ; input:
                      00812 ;   lo is low byte of address
                      00813 ;   hi is high byte of address
                      00814 ;   ofs offset in table (limited to 255 )    
                      00815 ; output:
                      00816 ;   PMDATH: PMDAL
                      00817 ;reset <nibble> variable 
                      00818 ; >> modify BSR <<    
0164                  00819 get_flash_word: ; ( ofs lo hi -- )
0164   0023           00820     banksel PMADR
                      00821     pop
0165   0017               M     moviw SP--
0166   0092           00822     movwf PMADRH
                      00823     pop
0167   0017               M     moviw SP--
0168   0091           00824     movwf PMADRL
                      00825     pop
0169   0017               M     moviw SP--
016A   0791           00826     addwf PMADRL
016B   0103           00827     clrw 
016C   3D92           00828     addwfc PMADRH
016D                  00829 read_flash:    
016D   1315           00830     bcf PMCON1,CFGS
016E   1415           00831     bsf PMCON1, RD
016F   0000           00832     nop
0170   0000           00833     nop
0171   01??           00834     clrf nibble
0172   0008           00835     return
                      00836 
                      00837 ; increament pointer 
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-13-2016  19:46:46         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00838 ; and read next flash word    
                      00839 ; >> modify BSR <<    
0173                  00840 next_flash_word:
0173   0023           00841     banksel PMADR
0174   0A91           00842     incf PMADRL
0175   1903           00843     skpnz
0176   0A92           00844     incf PMADRH
0177   3???           00845     bra read_flash
                      00846     
                      00847 ;get nibble from PMDAT
                      00848 ; output:
                      00849 ;   stack nibble in bits 7:4
                      00850 ; increment nibble variable    
                      00851 ; >> modify BSR <<    
0178                  00852 get_nibble: ; ( -- nibble )
0178   3003           00853     movlw 3
0179   06??           00854     xorwf nibble,W
017A   1903           00855     skpnz ; if set all nibbles of this word read
017B   2???           00856     call next_flash_word
017C   0023           00857     banksel PMDAT
017D   08??           00858     movfw nibble
017E   1903           00859     skpnz
017F   3???           00860     bra row0
0180   0B89           00861     decfsz WREG
0181   3???           00862     bra row2
0182                  00863 row1:    
0182   0813           00864     movfw PMDATL
0183   3???           00865     bra nibble_mask
0184                  00866 row2:
0184   0E13           00867     swapf PMDATL,W
0185   3???           00868     bra nibble_mask
0186                  00869 row0:    
0186   0E14           00870     swapf PMDATH,W
0187                  00871 nibble_mask:
0187   39F0           00872     andlw 0xf0
                      00873     push
0188   001C               M     movwi ++SP
0189   0A??           00874     incf nibble,F ; advance nibble pointer
018A   0008           00875     return
                      00876 
                      00877 ; print 4 pixels row
                      00878 ; inputs:
                      00879 ;   x,y left coordinates
                      00880 ;   f  collision flag
                      00881 ; output:    
                      00882 ;   advance y coordinate for next row    
018B                  00883 print_row: ; ( x y f -- x y f )     
018B   2???           00884     call get_nibble ; -- x y f n 
                      00885     pick 3 
018C   3F7D               M     moviw -3[SP]
                      00886     push    ; x y f n x
018D   001C               M     movwi ++SP
                      00887     pick 3
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-13-2016  19:46:46         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

018E   3F7D               M     moviw -3[SP]
                      00888     push      ; x y f n x y
018F   001C               M     movwi ++SP
0190   2???           00889     call xor_row ; -- x y f
                      00890     inc_n 1 ; y+=1
0191   3F7F               M     moviw -1[SP]
0192   0A89               M     incf WREG,F
0193   3FFF               M     movwi -1[SP]
0194   0008           00891     return
                      00892     
                      00893 ; draw character 
                      00894 ; input:
                      00895 ;   x,y left/top coordinates
                      00896 ;   c   character to print    
0195                  00897 print_char: ; ( x y c -- )
0195   3581           00898     lslf T ; 2 words per digit
                      00899     lit low(digits)
0196   30??               M    movlw low(digits)
0197   001C               M    movwi ++SP 
                      00900     lit high(digits) ; x y ofs adrL adrH
0198   30??               M    movlw high(digits)
0199   001C               M    movwi ++SP 
019A   2???           00901     call get_flash_word  ; x y
                      00902     lit 0   ; x y f=0
019B   3000               M    movlw 0
019C   001C               M    movwi ++SP 
019D   2???           00903     call print_row
019E   2???           00904     call print_row
019F   2???           00905     call print_row 
01A0   2???           00906     call print_row 
01A1   2???           00907     call print_row 
                      00908     drop_n 3  ; ( x y f -- )
01A2   317D               M     addfsr SP,-3
01A3   0008           00909     return
                      00910 
                      00911 ; print current tetriminos
                      00912 ; input:
                      00913 ;   arguments in game variables   
                      00914 ;   titrim: tetriminos id
                      00915 ;   angle: rotation angle    
                      00916 ;   tx,ty  left/top coordinates
                      00917 ; output:
                      00918 ;   collision flag,  0 if no collision    
                      00919 ; >> modify BSR <<    
01A4                  00920 print_tetrim: ; (  -- f )
01A4   0020           00921     banksel GAME_VAR
01A5   35??           00922     lslf tetrim,W
01A6   3589           00923     lslf WREG
                      00924     push
01A7   001C               M     movwi ++SP
01A8   3018           00925     movlw 24
01A9   0201           00926     subwf T,W
01AA   1803           00927     skpnc
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-13-2016  19:46:46         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01AB   3???           00928     bra ti ; I tetrominos
01AC   08??           00929     movfw angle
01AD   0781           00930     addwf T,F
01AE   30??           00931     movlw low(tetriminos)
                      00932     push    ; ofs addrL
01AF   001C               M     movwi ++SP
01B0   30??           00933     movlw high(tetriminos)
                      00934     push    ; ofs addrL addrH
01B1   001C               M     movwi ++SP
01B2   3???           00935     bra prt01
01B3                  00936 ti: ; special treatment for I tetriminos
01B3   0181           00937     clrf T
01B4   35??           00938     lslf angle,W
01B5   0781           00939     addwf T,F
01B6   30??           00940     movlw low(I0) 
                      00941     push     ; ofs addrL
01B7   001C               M     movwi ++SP
01B8   30??           00942     movlw high(I0)
                      00943     push     ; ofs addrL addrH
01B9   001C               M     movwi ++SP
01BA                  00944 prt01:    
01BA   2???           00945     call get_flash_word  ; --
01BB   002?           00946     banksel tx
01BC   08??           00947     movfw tx
                      00948     push    ; -- x
01BD   001C               M     movwi ++SP
01BE   08??           00949     movfw ty
                      00950     push    ; -- x y 
01BF   001C               M     movwi ++SP
                      00951     lit 0   ; -- x y f
01C0   3000               M    movlw 0
01C1   001C               M    movwi ++SP 
01C2   2???           00952     call print_row ; x y f -- x y+1 f
01C3   2???           00953     call print_row
01C4   2???           00954     call print_row
01C5   0023           00955     banksel PMDAT
01C6   3030           00956     movlw 0x30
01C7   0514           00957     andwf PMDATH,W
01C8   1903           00958     skpnz
01C9   2???           00959     call print_row
01CA   0801           00960     movfw T
                      00961     drop_n 3
01CB   317D               M     addfsr SP,-3
                      00962     push  ; -- f
01CC   001C               M     movwi ++SP
01CD   0008           00963     return
                      00964     
                      00965 ;print a text line store in flash
                      00966 ; text terminated by 0xff
                      00967 ; input: 
                      00968 ;  x, y left coordinates
                      00969 ;  idx  index of message    
01CE                  00970 print_label: ; ( x y idx -- )
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-13-2016  19:46:46         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00971     lit 0    ; x y idx i
01CE   3000               M    movlw 0
01CF   001C               M    movwi ++SP 
01D0                  00972 prt_lbl_loop:
                      00973     dup      ; x y idx i i
01D0   0801               M     movfw T
01D1   001C               M     movwi ++SP
                      00974     pick 2   ; WREG=idx
01D2   3F7E               M     moviw -2[SP]
01D3   2???           00975     call labels ; x y idx i i -- x y idx i  
01D4   1B89           00976     btfsc WREG,7
01D5   3???           00977     bra prt_lbl_done
                      00978     push ; x y idx i c
01D6   001C               M     movwi ++SP
                      00979     pick 4
01D7   3F7C               M     moviw -4[SP]
                      00980     push    ; x y idx i c x 
01D8   001C               M     movwi ++SP
                      00981     pick 4
01D9   3F7C               M     moviw -4[SP]
                      00982     push    ; x y idx i c x y
01DA   001C               M     movwi ++SP
                      00983     rot     ; x y idx i x y c
                          M     pick 2
01DB   3F7E               M     moviw -2[SP]
                          M     push        ; n1 n2 n3 n1
01DC   001C               M     movwi ++SP
                          M     pick 2
01DD   3F7E               M     moviw -2[SP]
                          M     insert 3   ;  n2 n2 n3 n1
01DE   3FFD               M    movwi -3[SP]
                          M     pick 1
01DF   3F7F               M     moviw -1[SP]
                          M     insert 2   ; n2 n3 n3 n1
01E0   3FFE               M    movwi -2[SP]
                          M     pop        ; n2 n3 n3 
01E1   0017               M     moviw SP--
01E2   0081               M     movwf T    ; n2 n3 n1
01E3   2???           00984     call print_char ; -- x y idx i 
01E4   0A81           00985     incf T
                      00986     pick 3    ; x
01E5   3F7D               M     moviw -3[SP]
01E6   3E04           00987     addlw 4   ; x+=4
                      00988     insert 3  
01E7   3FFD               M    movwi -3[SP]
01E8   3???           00989     bra prt_lbl_loop
01E9                  00990 prt_lbl_done:
                      00991     drop_n 4
01E9   317C               M     addfsr SP,-4
01EA   0008           00992     return
                      00993 
                      00994 ;print an integer
                      00995 ;from right to left ( least first)
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-13-2016  19:46:46         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00996 ; input:    
                      00997 ;   x,y  coordinate right end
                      00998 ;   number to print in acca    
                      00999 ;   accbL contain digit after div10 call    
01EB                  01000 print_int: ; ( x y -- )
01EB   08??           01001     movfw accaH
01EC   04??           01002     iorwf accaL,W
01ED   1903           01003     skpnz
01EE   3???           01004     bra print_last
                      01005     over
01EF   3F7F               M     moviw -1[SP]
                          M     push
01F0   001C               M     movwi ++SP
                      01006     over    ; x y x y
01F1   3F7F               M     moviw -1[SP]
                          M     push
01F2   001C               M     movwi ++SP
01F3   2???           01007     call div10
01F4   08??           01008     movfw accbL ; remainder of division
                      01009     push   ; x y x y d
01F5   001C               M     movwi ++SP
01F6   2???           01010     call print_char ; -- x y 
                      01011     pick 1
01F7   3F7F               M     moviw -1[SP]
                      01012     push
01F8   001C               M     movwi ++SP
01F9   3004           01013     movlw 4
01FA   0281           01014     subwf T
                      01015     pop
01FB   0017               M     moviw SP--
                      01016     insert 1
01FC   3FFF               M    movwi -1[SP]
01FD   3???           01017     bra print_int
01FE                  01018 print_last:
                      01019     pick 1
01FE   3F7F               M     moviw -1[SP]
01FF   3A2B           01020     xorlw 43
0200   1D03           01021     skpz
0201   3???           01022     bra no_zero
                      01023     push
0202   001C               M     movwi ++SP
0203   3???           01024     bra print_char
0204                  01025 no_zero:
                      01026     drop_n 2
0204   317E               M     addfsr SP,-2
0205   0008           01027     return
                      01028     
                      01029 ; draw horizontal line ( length  y x -- )
                      01030 ; inputs:
                      01031 ;   length of line
                      01032 ;   {x,y} left coordinates       
0206                  01033 hline:
                      01034     pick 2
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-13-2016  19:46:46         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0206   3F7E               M     moviw -2[SP]
0207   1903           01035     skpnz
0208   3???           01036     bra hline_done
0209   0389           01037     decf WREG
                      01038     insert 2
020A   3FFE               M    movwi -2[SP]
                      01039     dup     ; len y x x
020B   0801               M     movfw T
020C   001C               M     movwi ++SP
                      01040     pick 2
020D   3F7E               M     moviw -2[SP]
                      01041     push    ; len y x x y
020E   001C               M     movwi ++SP
                      01042     lit XOR_OP
020F   3001               M    movlw XOR_OP
0210   001C               M    movwi ++SP 
0211   2???           01043     call bitop
                      01044     drop
0212   317F               M    addfsr SP,-1
0213   0A81           01045     incf T  ; len y x+1
0214   3???           01046     bra hline
0215                  01047 hline_done:    
                      01048     drop_n 3
0215   317D               M     addfsr SP,-3
0216   0008           01049     return
                      01050 
                      01051 ;draw vertical line ( length x y -- )
                      01052 ; inputs:
                      01053 ;   length of line
                      01054 ;   {x,y} top coordinate
0217                  01055 vline:  ; len y x
                      01056     pick 2 
0217   3F7E               M     moviw -2[SP]
0218   1903           01057     skpnz
0219   3???           01058     bra vline_done
021A   0389           01059     decf WREG
                      01060     insert 2
021B   3FFE               M    movwi -2[SP]
                      01061     pick 1      
021C   3F7F               M     moviw -1[SP]
                      01062     push    ; len x y x
021D   001C               M     movwi ++SP
                      01063     pick 1
021E   3F7F               M     moviw -1[SP]
                      01064     push    ; len x y x y
021F   001C               M     movwi ++SP
                      01065     lit XOR_OP
0220   3001               M    movlw XOR_OP
0221   001C               M    movwi ++SP 
0222   2???           01066     call bitop
                      01067     drop
0223   317F               M    addfsr SP,-1
0224   0A81           01068     incf T
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-13-2016  19:46:46         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0225   3???           01069     bra vline
0226                  01070 vline_done:
                      01071     drop_n 3
0226   317D               M     addfsr SP,-3
0227   0008           01072     return
                      01073     
  0000000A            01074 WELL_WIDTH equ 10
  00000016            01075 WELL_DEPTH equ 22 
0228                  01076 game_init:
                      01077 ;clear screen    
                      01078     lit 0  
0228   3000               M    movlw 0
0229   001C               M    movwi ++SP 
022A   2???           01079     call fill_buffer
                      01080 ; draw game well    
                      01081     lit WELL_DEPTH
022B   3016               M    movlw WELL_DEPTH
022C   001C               M    movwi ++SP 
                      01082     lit 0
022D   3000               M    movlw 0
022E   001C               M    movwi ++SP 
                      01083     lit 0
022F   3000               M    movlw 0
0230   001C               M    movwi ++SP 
0231   2???           01084      call vline
                      01085     lit WELL_DEPTH
0232   3016               M    movlw WELL_DEPTH
0233   001C               M    movwi ++SP 
                      01086     lit WELL_WIDTH+1
0234   300B               M    movlw WELL_WIDTH+1
0235   001C               M    movwi ++SP 
                      01087     lit 0
0236   3000               M    movlw 0
0237   001C               M    movwi ++SP 
0238   2???           01088     call vline
                      01089     lit WELL_WIDTH+2
0239   300C               M    movlw WELL_WIDTH+2
023A   001C               M    movwi ++SP 
                      01090     lit WELL_DEPTH
023B   3016               M    movlw WELL_DEPTH
023C   001C               M    movwi ++SP 
                      01091     lit 0
023D   3000               M    movlw 0
023E   001C               M    movwi ++SP 
023F   2???           01092     call hline
                      01093 ; print "SCORE" label    
                      01094     lit WELL_WIDTH+3 ; x
0240   300D               M    movlw WELL_WIDTH+3
0241   001C               M    movwi ++SP 
                      01095     lit 0            ; y
0242   3000               M    movlw 0
0243   001C               M    movwi ++SP 
                      01096     lit LBL_SCORE         
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-13-2016  19:46:46         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0244   3000               M    movlw LBL_SCORE
0245   001C               M    movwi ++SP 
0246   2???           01097     call print_label
                      01098 ; print "LINES" label    
                      01099     lit WELL_WIDTH+3 ; x
0247   300D               M    movlw WELL_WIDTH+3
0248   001C               M    movwi ++SP 
                      01100     lit 12           ; y
0249   300C               M    movlw 12
024A   001C               M    movwi ++SP 
                      01101     lit LBL_LINES
024B   3001               M    movlw LBL_LINES
024C   001C               M    movwi ++SP 
024D   2???           01102     call print_label
                      01103 ; variables initialization
024E   0020           01104     banksel 0
024F   3004           01105     movlw 4
0250   00??           01106     movwf tx
0251   01??           01107     clrf ty
0252   01??           01108     clrf tetrim
0253   01??           01109     clrf angle
0254   01??           01110     clrf scoreL
0255   01??           01111     clrf scoreH
0256   01??           01112     clrf droppedL
0257   01??           01113     clrf droppedH
0258   01??           01114     clrf buttons
0259   1600           01115     bsf flags,F_GSTOP
025A   0008           01116     return
                      01117 
                      01118 ; slide well row down
                      01119 ; input:
                      01120 ;   b  bottom row to slide
                      01121 ;   t  target row
                      01122 ; output:
                      01123 ;   none
025B                  01124 slide_down: ; ( b t -- )
                      01125     reserve 1
025B   3141               M     addfsr SP, 1 
025C                  01126 row_loop: ; y{b:1}
025C   300A           01127     movlw 10
025D   0081           01128     movwf T ; -- b t x
025E                  01129 col_loop:  ; x{10:1}
                      01130     dup   ; -- b t x x
025E   0801               M     movfw T
025F   001C               M     movwi ++SP
                      01131     pick 3
0260   3F7D               M     moviw -3[SP]
                      01132     push  ; -- b t x x y
0261   001C               M     movwi ++SP
0262   2???           01133     call get_pixel
0263   1903           01134     skpnz
                      01135     lit CLR_OP
0264   3000               M    movlw CLR_OP
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-13-2016  19:46:46         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0265   001C               M    movwi ++SP 
0266   1D03           01136     skpz
                      01137     lit SET_OP
0267   3003               M    movlw SET_OP
0268   001C               M    movwi ++SP 
0269   2???           01138     call bitop ; b t x x y op -- b t x f
                      01139     drop   ; no need for f
026A   317F               M    addfsr SP,-1
026B   0B81           01140     decfsz T
026C   3???           01141     bra col_loop
                      01142     dec_n 1  ; dec t
026D   3F7F               M     moviw -1[SP]
026E   0389               M     decf WREG,F
026F   3FFF               M     movwi -1[SP]
                      01143     dec_n 2  ; dec b
0270   3F7E               M     moviw -2[SP]
0271   0389               M     decf WREG,F
0272   3FFE               M     movwi -2[SP]
0273   1D03           01144     skpz 
0274   3???           01145     bra row_loop
                      01146     drop_n 3
0275   317D               M     addfsr SP,-3
0276   0008           01147     return
                      01148     
                      01149     
  00000000            01150 ROW_EMPTY equ 0     
  0000000A            01151 ROW_FULL equ 10 ; 10 bits in row
                      01152 ; check the state of well row
                      01153 ; input:
                      01154 ;   s number of bits set initialized at 0 by caller    
                      01155 ;   r row number: 0 top, 22 bottom  
                      01156 ; output:    
                      01157 ;   s={0:10}  number of bits set
0277                  01158 query_row: ; ( s=0 r -- s=0:10 )
                      01159     lit 10 ; s r x   ; check x from  10 to 1
0277   300A               M    movlw 10
0278   001C               M    movwi ++SP 
0279                  01160 qr00:
                      01161     dup   ; s r x x
0279   0801               M     movfw T
027A   001C               M     movwi ++SP
                      01162     pick 2 
027B   3F7E               M     moviw -2[SP]
                      01163     push  ; s r x x y
027C   001C               M     movwi ++SP
027D   2???           01164     call get_pixel ; -- s r x n
027E   1903           01165     skpnz   ; Z modified by get_pixel
027F   3???           01166     bra qr01
                      01167     inc_n 3
0280   3F7D               M     moviw -3[SP]
0281   0A89               M     incf WREG,F
0282   3FFD               M     movwi -3[SP]
0283                  01168 qr01:    
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-13-2016  19:46:46         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01169     drop     ; -- s r x 
0283   317F               M    addfsr SP,-1
0284   0B81           01170     decfsz T
0285   3???           01171     bra qr00
                      01172     drop_n 2 ; -- s
0286   317E               M     addfsr SP,-2
0287   0008           01173     return
                      01174 
                      01175 ; count and drop full rows
                      01176 ; input:
                      01177 ;   none
                      01178 ; output:
                      01179 ;   n number of droppend rows
                      01180 ;condition:
                      01181 ;  check each row from bottom up
                      01182 ;  stop at first empty row
                      01183 ;  full rows are dropped    
0288                  01184 count_full: ; ( -- n)
                      01185     lit 0 ; full rows counter
0288   3000               M    movlw 0
0289   001C               M    movwi ++SP 
                      01186     lit 21 ; row number {21:1}
028A   3015               M    movlw 21
028B   001C               M    movwi ++SP 
028C                  01187 count_loop:
                      01188     lit 0
028C   3000               M    movlw 0
028D   001C               M    movwi ++SP 
                      01189     over 
028E   3F7F               M     moviw -1[SP]
                          M     push
028F   001C               M     movwi ++SP
0290   2???           01190     call query_row ; n r s r -- n r s
                      01191     pop     ; n r
0291   0017               M     moviw SP--
0292   1903           01192     skpnz
0293   3???           01193     bra count_done
0294   3A0A           01194     xorlw 10
0295   1D03           01195     skpz
0296   3???           01196     bra next_row
                      01197 ; this is a full row    
                      01198     inc_n 1 ; increment n
0297   3F7F               M     moviw -1[SP]
0298   0A89               M     incf WREG,F
0299   3FFF               M     movwi -1[SP]
029A   0301           01199     decf T,W
                      01200     push      ; n r b 
029B   001C               M     movwi ++SP
                      01201     over      ; n r b r
029C   3F7F               M     moviw -1[SP]
                          M     push
029D   001C               M     movwi ++SP
029E   2???           01202     call slide_down ; n r b r -- n r
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-13-2016  19:46:46         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

029F   3???           01203     bra $
02A0   0A81           01204     incf T,F
02A1                  01205 next_row:
02A1   0B81           01206     decfsz T,F
02A2   3???           01207     bra count_loop
02A3                  01208 count_done:
                      01209     drop   ; n r -- n
02A3   317F               M    addfsr SP,-1
02A4   0008           01210     return
                      01211     
                      01212 ; generate a new tetriminos
                      01213 ; input:
                      01214 ;   none
                      01215 ; output:
                      01216 ;   none
02A5                  01217 new_tminos:
02A5   0020           01218     banksel GAME_VAR
02A6   3007           01219     movlw 7
02A7   00??           01220     movwf tetrim
02A8   01??           01221     clrf angle
                      01222 ;    movlw 7
                      01223 ;    andwf randL,W
                      01224 ;    xorlw 7
                      01225 ;    skpz
                      01226 ;    xorlw 7
                      01227 ;    movwf tetrim
                      01228 ;    movlw 3
                      01229 ;    andwf randH,W
                      01230 ;    movwf angle
                      01231 ;    movlw 4
02A9   00??           01232     movwf tx
02AA   01??           01233     clrf ty
02AB   2???           01234     call print_tetrim
                      01235     pop
02AC   0017               M     moviw SP--
02AD   1D03           01236     skpz
02AE   1600           01237     bsf flags, F_GSTOP
02AF   2???           01238     call print_tetrim
                      01239     pop
02B0   0017               M     moviw SP--
02B1   0008           01240     return
                      01241  
                      01242 ; wait player start signal
                      01243 ; button A pressed    
02B2                  01244 wait_start:
02B2   0103           01245     clrw
02B3   2???           01246     call korobeiniki
                      01247     push    ; count
02B4   001C               M     movwi ++SP
                      01248     lit 0   ; sequence
02B5   3000               M    movlw 0
02B6   001C               M    movwi ++SP 
02B7                  01249 koro:
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-13-2016  19:46:46         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02B7   0A81           01250     incf T,F ; -- count sequence
02B8   0801           01251     movfw T  ; WREG=sequence
02B9   2???           01252     call korobeiniki
                      01253     push    ; -- count sequence duration
02BA   001C               M     movwi ++SP
                      01254     inc_n 1 ;
02BB   3F7F               M     moviw -1[SP]
02BC   0A89               M     incf WREG,F
02BD   3FFF               M     movwi -1[SP]
                      01255     pick 1  
02BE   3F7F               M     moviw -1[SP]
02BF   2???           01256     call korobeiniki
                      01257     push    ; -- count nidx duration note
02C0   001C               M     movwi ++SP
02C1   2???           01258     call tone  ; -- count nidx 
                      01259     wait_sound
02C2   1A80               M     btfsc flags,F_SND
02C3   3???               M     bra $-1
02C4   2???           01260     call read_pad
02C5   1A00           01261     btfsc buttons, BTN_A
02C6   3???           01262     bra wait_end
                      01263     dec_n 1
02C7   3F7F               M     moviw -1[SP]
02C8   0389               M     decf WREG,F
02C9   3FFF               M     movwi -1[SP]
02CA   1D03           01264     skpz
02CB   3???           01265     bra koro
                      01266     drop_n 2
02CC   317E               M     addfsr SP,-2
                      01267     pause 60
                          M     start_timer 60
02CD   303C               M     movlw 60
02CE   00??               M     movwf gtimer
02CF   1580               M     bsf flags, F_GTMR
                          M     wait_timer
02D0   1980               M     btfsc flags, F_GTMR
02D1   3???               M     bra $-1
02D2   3???           01268     bra wait_start
02D3                  01269 wait_end:    
                      01270     drop_n 2
02D3   317E               M     addfsr SP,-2
02D4   0008           01271     return
                      01272  
                      01273 ; collision test
                      01274 ; after rotation or translation
                      01275 ; input:
                      01276 ;   none
                      01277 ; output:
                      01278 ;   none
02D5                  01279 coll_test: 
02D5   1300           01280     bcf flags, F_COLL
02D6   2???           01281     call print_tetrim ; collision test
                      01282     pop
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-13-2016  19:46:46         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02D7   0017               M     moviw SP--
02D8   1D03           01283     skpz
02D9   1700           01284     bsf flags, F_COLL
02DA   2???           01285     call print_tetrim ; erase it
                      01286     pop
02DB   0017               M     moviw SP--
02DC   1F00           01287     btfss flags, F_COLL
02DD   0008           01288     return
02DE   0020           01289     banksel GAME_VAR
02DF   08??           01290     movfw buttons
                      01291     case 1<<BTN_A, undo_hard_drop
02E0   3A10               M     xorlw 1<<BTN_A
02E1   1903               M     skpnz
02E2   3???               M     bra undo_hard_drop
02E3   3A10               M     xorlw 1<<BTN_A
                      01292     case 1<<BTN_B, undo_soft_drop
02E4   3A20               M     xorlw 1<<BTN_B
02E5   1903               M     skpnz
02E6   3???               M     bra undo_soft_drop
02E7   3A20               M     xorlw 1<<BTN_B
                      01293     case 1<<BTN_UP, undo_rot_right
02E8   3A01               M     xorlw 1<<BTN_UP
02E9   1903               M     skpnz
02EA   3???               M     bra undo_rot_right
02EB   3A01               M     xorlw 1<<BTN_UP
                      01294     case 1<<BTN_DN, undo_rot_left
02EC   3A02               M     xorlw 1<<BTN_DN
02ED   1903               M     skpnz
02EE   3???               M     bra undo_rot_left
02EF   3A02               M     xorlw 1<<BTN_DN
                      01295     case 1<<BTN_RT, undo_move_right
02F0   3A08               M     xorlw 1<<BTN_RT
02F1   1903               M     skpnz
02F2   3???               M     bra undo_move_right
02F3   3A08               M     xorlw 1<<BTN_RT
                      01296     case 1<<BTN_LT, undo_move_left
02F4   3A04               M     xorlw 1<<BTN_LT
02F5   1903               M     skpnz
02F6   3???               M     bra undo_move_left
02F7   3A04               M     xorlw 1<<BTN_LT
02F8   0008           01297     return
02F9                  01298 undo_hard_drop:
02F9   0008           01299     return
02FA                  01300 undo_soft_drop:
02FA   0008           01301     return
02FB                  01302 undo_rot_right:
02FB   03??           01303     decf angle,F
02FC   3003           01304     movlw 3
02FD   05??           01305     andwf angle,F
02FE   0008           01306     return
02FF                  01307 undo_rot_left:
02FF   0A??           01308     incf angle,F
0300   3003           01309     movlw 3
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-13-2016  19:46:46         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0301   05??           01310     andwf angle,F
0302   0008           01311     return
0303                  01312 undo_move_right:
0303   03??           01313     decf tx,F
0304   0008           01314     return
0305                  01315 undo_move_left:
0305   0A??           01316     incf tx,F
0306   0008           01317     return
                      01318 
                      01319 ; print score and lines
                      01320 ; input:
                      01321 ;   none
                      01322 ; output:
                      01323 ;   none
0307                  01324 update_display    
                      01325 ; print score
0307   002?           01326     banksel scoreL
0308   08??           01327     movfw scoreL
0309   00??           01328     movwf accaL
030A   08??           01329     movfw scoreH
030B   00??           01330     movwf accaH
                      01331     lit 43
030C   302B               M    movlw 43
030D   001C               M    movwi ++SP 
                      01332     lit 6
030E   3006               M    movlw 6
030F   001C               M    movwi ++SP 
0310   2???           01333     call print_int
                      01334 ;print dropped line
0311   002?           01335     banksel droppedL
0312   08??           01336     movfw droppedL
0313   00??           01337     movwf accaL
0314   00??           01338     movwf droppedH
0315   00??           01339     movwf accaH
                      01340     lit 43
0316   302B               M    movlw 43
0317   001C               M    movwi ++SP 
                      01341     lit 18
0318   3012               M    movlw 18
0319   001C               M    movwi ++SP 
031A   2???           01342     call print_int
031B   0008           01343     return
                      01344     
                      01345 ;;;;;;;;;;;;;;;;;;;;;;;;;
                      01346 ;   game logic
                      01347 ;;;;;;;;;;;;;;;;;;;;;;;;;    
031C                  01348 tetris:
031C   2???           01349     call update_display
                      01350 ;print start prompt
                      01351     lit 0
031D   3000               M    movlw 0
031E   001C               M    movwi ++SP 
                      01352     lit 24
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-13-2016  19:46:46         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

031F   3018               M    movlw 24
0320   001C               M    movwi ++SP 
                      01353     lit LBL_PRESS
0321   3002               M    movlw LBL_PRESS
0322   001C               M    movwi ++SP 
0323   2???           01354     call print_label
                      01355 ; wait button A press
                      01356 ; to start game    
0324   2???           01357     call wait_start 
0325   1200           01358     bcf flags, F_GSTOP
                      01359 ; delete prompt
                      01360     lit 0
0326   3000               M    movlw 0
0327   001C               M    movwi ++SP 
                      01361     lit 24
0328   3018               M    movlw 24
0329   001C               M    movwi ++SP 
                      01362     lit LBL_PRESS
032A   3002               M    movlw LBL_PRESS
032B   001C               M    movwi ++SP 
032C   2???           01363     call print_label
                      01364 ; game start
032D                  01365 game_loop:
                      01366 ; generate new tetriminos
                      01367 ; if collision at this stage
                      01368 ; game is over
032D   2???           01369     call new_tminos
032E   1E00           01370     btfss flags, F_GSTOP
032F   3???           01371     bra fall_loop
                      01372     lit 30
0330   301E               M    movlw 30
0331   001C               M    movwi ++SP 
                      01373     lit 19
0332   3013               M    movlw 19
0333   001C               M    movwi ++SP 
0334   2???           01374     call tone
                      01375     wait_sound
0335   1A80               M     btfsc flags,F_SND
0336   3???               M     bra $-1
0337   2???           01376     call game_init
0338   3???           01377     bra tetris
0339                  01378 fall_loop: ; tetriminos fall in the well
0339   2???           01379     call print_tetrim
                      01380     pop
033A   0017               M     moviw SP--
                      01381     pause 10
                          M     start_timer 10
033B   300A               M     movlw 10
033C   00??               M     movwf gtimer
033D   1580               M     bsf flags, F_GTMR
                          M     wait_timer
033E   1980               M     btfsc flags, F_GTMR
033F   3???               M     bra $-1
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-13-2016  19:46:46         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0340   2???           01382     call print_tetrim ; erase tetriminos
                      01383     pop
0341   0017               M     moviw SP--
                      01384 ; read pad
0342   2???           01385     call read_pad
0343   0020           01386     banksel GAME_VAR
0344   08??           01387     movfw buttons
                      01388     case 1<<BTN_A, hard_drop
0345   3A10               M     xorlw 1<<BTN_A
0346   1903               M     skpnz
0347   3???               M     bra hard_drop
0348   3A10               M     xorlw 1<<BTN_A
                      01389     case 1<<BTN_B, soft_drop
0349   3A20               M     xorlw 1<<BTN_B
034A   1903               M     skpnz
034B   3???               M     bra soft_drop
034C   3A20               M     xorlw 1<<BTN_B
                      01390     case 1<<BTN_UP, rot_right
034D   3A01               M     xorlw 1<<BTN_UP
034E   1903               M     skpnz
034F   3???               M     bra rot_right
0350   3A01               M     xorlw 1<<BTN_UP
                      01391     case 1<<BTN_DN, rot_left
0351   3A02               M     xorlw 1<<BTN_DN
0352   1903               M     skpnz
0353   3???               M     bra rot_left
0354   3A02               M     xorlw 1<<BTN_DN
                      01392     case 1<<BTN_RT, move_right
0355   3A08               M     xorlw 1<<BTN_RT
0356   1903               M     skpnz
0357   3???               M     bra move_right
0358   3A08               M     xorlw 1<<BTN_RT
                      01393     case 1<<BTN_LT, move_left
0359   3A04               M     xorlw 1<<BTN_LT
035A   1903               M     skpnz
035B   3???               M     bra move_left
035C   3A04               M     xorlw 1<<BTN_LT
035D   3???           01394     bra move_down
035E                  01395 hard_drop:
035E   3???           01396     bra move_down
035F                  01397 soft_drop:
035F   3???           01398     bra move_down
0360                  01399 rot_left:
0360   03??           01400     decf angle,F
0361   3003           01401     movlw 3
0362   05??           01402     andwf angle,F
0363   2???           01403     call coll_test
0364   3???           01404     bra move_down
0365                  01405 rot_right:
0365   0A??           01406     incf angle,F
0366   3003           01407     movlw 3
0367   05??           01408     andwf angle,F
0368   2???           01409     call coll_test
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-13-2016  19:46:46         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0369   3???           01410     bra move_down
036A                  01411 move_left:
036A   03??           01412     decf tx,F
036B   2???           01413     call coll_test
036C   3???           01414     bra move_down
036D                  01415 move_right:
036D   0A??           01416     incf tx,F
036E   2???           01417     call coll_test
                      01418 ; move down
036F                  01419 move_down:
036F   1300           01420     bcf flags, F_COLL
0370   0020           01421     banksel GAME_VAR
0371   0A??           01422     incf ty,F ; tetriminos fall
0372   2???           01423     call print_tetrim ; collision test
                      01424     pop
0373   0017               M     moviw SP--
0374   1D03           01425     skpz
0375   1700           01426     bsf flags, F_COLL
0376   2???           01427     call print_tetrim
                      01428     pop
0377   0017               M     moviw SP--
0378   1F00           01429     btfss flags, F_COLL
0379   3???           01430     bra fall_loop
037A   0020           01431     banksel GAME_VAR
037B   03??           01432     decf ty,F
037C   2???           01433     call print_tetrim
                      01434     pop
037D   0017               M     moviw SP--
                      01435 ; check full row and clean
037E   2???           01436     call update_display ; erase numbers
037F   2???           01437     call count_full
0380                  01438 shift_score:
0380   0020           01439     banksel GAME_VAR
0381   0801           01440     movfw T
0382   07??           01441     addwf droppedL
0383   0103           01442     clrw
0384   3D??           01443     addwfc droppedH
0385   0881           01444     movf T,F
0386   1903           01445     skpnz
0387   3???           01446     bra adjust_score
0388   3001           01447     movlw 1
0389   3589           01448     lslf WREG
038A   0B81           01449     decfsz T,F
038B   3???           01450     bra $-2
                      01451 ; adjust score 
038C                  01452 adjust_score:
038C   07??           01453     addwf scoreL
038D   0103           01454     clrw
038E   3D??           01455     addwfc scoreH
                      01456     drop 
038F   317F               M    addfsr SP,-1
0390   2???           01457     call update_display ; display new values
0391   3???           01458     bra game_loop
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-13-2016  19:46:46         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0392   0008           01459     return
                      01460     
0393                  01461 init:
                      01462     pstack_init
0393   0187               M     clrf FSR1H
0394   301F               M     movlw S0
0395   0086               M     movwf FSR1L
                      01463 ; ADC configuration
0396   0021           01464     banksel ADCON0
0397   300C           01465     movlw (PAD_CHS<<CHS0)
0398   009D           01466     movwf ADCON0
0399   3020           01467     movlw (2<<ADCS0)
039A   009E           01468     movwf ADCON1
039B   0024           01469     banksel WPUA
039C   120C           01470     bcf WPUA, PAD_PIN
                      01471 ;;;;;;;;;;;;;;;;;;;;;    
039D   0021           01472     banksel TRISA
039E   30F8           01473     movlw ~((1<<SYNC_OUT)|(1<<VIDEO_OUT)|(1<<LED_PIN))
039F   058C           01474     andwf TRISA,F
03A0   0022           01475     banksel VIDEO_LAT
03A1   108C           01476     bcf VIDEO_LAT,VIDEO_OUT
03A2   100C           01477     bcf LATA,LED_PIN
                      01478 ; audio pwm initialization
03A3   120C           01479     bcf LATA,AUDIO_PIN
03A4   003B           01480     banksel PWM2PH
03A5   01A1           01481     clrf PWM2PHL
03A6   01A2           01482     clrf PWM2PHH
03A7   01A7           01483     clrf PWM2OFL
03A8   01A8           01484     clrf PWM2OFH
03A9   172B           01485     bsf AUDIO_PWMCON,OE
03AA   0022           01486     banksel APFCON
03AB   149D           01487     bsf APFCON,P2SEL
                      01488    
                      01489 ;configure EUSART in sychronsous mode
                      01490 ;to use as pixel serializer
03AC   0023           01491     banksel SPBRG
03AD   3002           01492     movlw 2
03AE   009B           01493     movwf SPBRGL
03AF   019C           01494     clrf SPBRGH
03B0   019A           01495     clrf TXREG
03B1   30B0           01496     movlw (1<<SYNC)|(1<<CSRC)|(1<<TXEN)
03B2   009E           01497     movwf TXSTA
03B3   179D           01498     bsf RCSTA, SPEN
03B4   30CF           01499     movlw ~((1<<CREN)|(1<<SREN))
03B5   059D           01500     andwf RCSTA
                      01501 ; configure pwm video sync for horizontal period
03B6   003B           01502     banksel SYNC_PWMDCH
03B7   01B1           01503     clrf SYNC_PWMPH
03B8   01B2           01504     clrf SYNC_PWMPH+1
03B9   01BF           01505     clrf SYNC_PWMLDCON
03BA   30F5           01506     movlw HORZ_PERIOD&0XFF
03BB   00B5           01507     movwf SYNC_PWMPRL
03BC   3004           01508     movlw HORZ_PERIOD>>8
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-13-2016  19:46:46         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03BD   00B6           01509     movwf SYNC_PWMPRH
03BE   01BE           01510     clrf SYNC_PWMCLKCON
03BF   30D0           01511     movlw (3<<OE)|(1<<POL)
03C0   00BB           01512     movwf SYNC_PWMCON
03C1   305E           01513     movlw HORZ_PULSE&0xff
03C2   00B3           01514     movwf SYNC_PWMDCL
03C3   3000           01515     movlw HORZ_PULSE>>8
03C4   00B4           01516     movwf SYNC_PWMDCH
03C5   17BF           01517     bsf SYNC_PWMLDCON,LDA
                      01518    ;enable video interrupt on period match
03C6   103D           01519     bcf SYNC_PWMINTF,PRIF
03C7   143C           01520     bsf SYNC_PWMINTE,PRIE
                      01521     ; enable peripheral interrupt
03C8   0021           01522     banksel SYNC_PIE
03C9   1713           01523     bsf SYNC_PIE,SYNC_IE
                      01524     ;enable interrupts
03CA   30C0           01525     movlw (1<<GIE)|(1<<PEIE)
03CB   008B           01526     movwf INTCON
03CC   01??           01527     clrf lcountL
03CD   01??           01528     clrf lcountH
03CE   01??           01529     clrf flags
                      01530     ; seed lfsr PRNG
03CF   30AC           01531     movlw 0xAC
03D0   00??           01532     movwf randL
03D1   30E1           01533     movlw 0xE1
03D2   00??           01534     movwf randH
                      01535 
                      01536     
03D3                  01537 main:
03D3   2???           01538     call game_init
03D4   2???           01539     call tetris
03D5   3???           01540     bra main
                      01541   
                      01542 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      01543 ;   data tables
                      01544 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      01545 
                      01546 ; **************** encoding ************************************************
                      01547 ; enhanced PIC instructions are coded on 14 bits
                      01548 ; these 14 bits can be read as data using flash memory
                      01549 ; writing/reading mechanism, see datasheet chapter 10 for detail.
                      01550 ; the 'dw' assembler directive encode data in those 14 bits contrary to 'dt'
                      01551 ; directive which encode a single byte as a RETLW instruction.
                      01552 ; So we get a 50% compression by encoding 3 nibbles/flash word. 
                      01553 ; the encoding used in the following tables is as follow:    
                      01554 ; bits 13:12  number of nibbles where 0 means there is more than 3 nibbles
                      01555 ; in this data chunk so 1 or more other words follow this one.    
                      01556 ; other 12 bits are sliced in 4 bits nibbles.
                      01557 ;****************************************************************************
                      01558 
03D6                  01559 digits: ; each digit is 5 rows
03D6   0EAA 2AE0      01560     dw 0x0EAA,0x2AE0 ; 0
03D8   04C4 24E0      01561     dw 0x04C4,0x24E0 ; 1
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-13-2016  19:46:46         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03DA   0E2E 28E0      01562     dw 0x0E2E,0x28E0 ; 2
03DC   0E2E 22E0      01563     dw 0x0E2E,0x22E0 ; 3
03DE   0AAE 2220      01564     dw 0x0AAE,0x2220 ; 4
03E0   0E8E 22E0      01565     dw 0x0E8E,0x22E0 ; 5
03E2   088E 2AE0      01566     dw 0x088E,0x2AE0 ; 6
03E4   0E22 2220      01567     dw 0x0E22,0x2220 ; 7
03E6   0EAE 2AE0      01568     dw 0x0EAE,0x2AE0 ; 8
03E8   0EAE 2220      01569     dw 0x0EAE,0x2220 ; 9
                      01570 ; letters needed for 'SCORE' and 'LINES" labels
03EA   0EAE 2AA0      01571     dw 0x0EAE,0x2AA0 ; A  code 10
03EC   0688 2860      01572     dw 0x0688,0x2860 ; C  code 11
03EE   0E8E 28E0      01573     dw 0x0E8E,0x28E0 ; E  code 12
03F0   0E44 24E0      01574     dw 0x0E44,0x24E0 ; I  code 13
03F2   0888 28E0      01575     dw 0x0888,0x28E0 ; L  code 14
03F4   08CA 2AA0      01576     dw 0x08CA,0x2AA0 ; N  code 15
03F6   04AA 2A40      01577     dw 0x04AA,0x2A40 ; O  code 16
03F8   0EAE 2880      01578     dw 0x0EAE,0x2880 ; P  code 17
03FA   08EA 2880      01579     dw 0x08EA,0x2880 ; R  code 18
03FC   0684 22C0      01580     dw 0x0684,0x22C0 ; S  code 19
03FE   0040 2400      01581     dw 0x0040,0x2400 ; :  code 20
0400   2000 2000      01582     dw 0x2000,0x2000 ; space code 21
                      01583 
                      01584 ; comments notation: Rn clockwise rotation n*90 degr.    
                      01585 ; note that vertical I as 4 rows so it needs 2 words    
0402                  01586 tetriminos: 
0402   388C           01587     dw 0x388C ; L R0
0403   30E8           01588     dw 0x30E8 ; L R1
0404   3C44           01589     dw 0x3C44 ; L R2
0405   32E0           01590     dw 0x32E0 ; L R3
0406   344C           01591     dw 0x344C ; J R0
0407   38E0           01592     dw 0x38E0 ; J R1
0408   3644           01593     dw 0x3644 ; J R2
0409   30E2           01594     dw 0x30E2 ; J R3
040A   3CC0           01595     dw 0x3CC0 ; O R0 
040B   3CC0           01596     dw 0x3CC0 ; O R2 
040C   3CC0           01597     dw 0x3CC0 ; O R2 
040D   3CC0           01598     dw 0x3CC0 ; O R3 
040E   36C0           01599     dw 0x36C0 ; S R0
040F   3462           01600     dw 0x3462 ; S R1
0410   36C0           01601     dw 0x36C0 ; S R2
0411   3462           01602     dw 0x3462 ; S R3
0412   3E40           01603     dw 0x3E40 ; T R0
0413   3262           01604     dw 0x3262 ; T R1
0414   304E           01605     dw 0x304E ; T R2
0415   38C8           01606     dw 0x38C8 ; T R3
0416   3C60           01607     dw 0x3C60 ; Z R0
0417   34C8           01608     dw 0x34C8 ; Z R1
0418   3C60           01609     dw 0x3C60 ; Z R3
0419   34C8           01610     dw 0x34C8 ; Z R4
                      01611 ; annoying! I tetriminos need a special treatment 
                      01612 ; because vertical I need 2 words for encoding.   
041A   0444 1400      01613 I0: dw 0x0444,0x1400 ; I R0  
041C   300F 1000      01614     dw 0x300F,0x1000 ; I R1  second word is filling for alignment
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-13-2016  19:46:46         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

041E   0222 1200      01615     dw 0x0222,0x1200 ; I R2
0420   10F0 1000      01616     dw 0x10F0,0x1000 ; I R3  
                      01617 
  00000000            01618 LBL_SCORE equ 0
  00000001            01619 LBL_LINES equ 1
  00000002            01620 LBL_PRESS equ 2
                      01621  
0422                  01622 labels:
0422   000B           01623     brw
0423   3???           01624     bra txt_score
0424   3???           01625     bra txt_lines
0425   3???           01626     bra txt_press
                      01627     
0426                  01628 txt_score: ; "SCORE"
                      01629     pop
0426   0017               M     moviw SP--
0427   000B           01630     brw
0428   3413 340B 3410 01631     dt 19,11,16,18,12,20,255
       3412 340C 3414 
       34FF 
                      01632     
042F                  01633 txt_lines: ; "LINES"
                      01634     pop
042F   0017               M     moviw SP--
0430   000B           01635     brw
0431   340E 340D 340F 01636     dt 14,13,15,12,19,20,255
       340C 3413 3414 
       34FF 
                      01637 
0438                  01638 txt_press: ; "PRESS A"
                      01639     pop
0438   0017               M     moviw SP--
0439   000B           01640     brw
043A   3411 3412 340C 01641     dt 17,18,12,19,19,21,10,255
       3413 3413 3415 
       340A 34FF 
                      01642     
                      01643 
0442                  01644 tone_pr:
0442   000B           01645     brw
0443   3402 34ED      01646     dt 0x02, 0xed   ; 330   (MI4)   0
0445   34B5 34DF      01647     dt 0xb5, 0xdf   ; 349   (FA4)   1
0447   3428 34D3      01648     dt 0x28, 0xd3   ; 370   (FA4#)  2
0449   344C 34C7      01649     dt 0x4c, 0xc7   ; 392   (SOL4)  3
044B   341E 34BC      01650     dt 0x1e, 0xbc   ; 415   (SOL4#) 4
044D   348F 34B1      01651     dt 0x8f, 0xb1   ; 440   (LA4)   5
044F   3498 34A7      01652     dt 0x98, 0xa7   ; 466   (LA4#)  6
0451   3430 349E      01653     dt 0x30, 0x9e   ; 494   (SI4)   7
0453   344F 3495      01654     dt 0x4f, 0x95   ; 523hz (DO5)   8
0455   34ED 348C      01655     dt 0xed, 0x8c   ; 554   (DO5#)  9
0457   3404 3485      01656     dt 0x04, 0x85   ; 587   (RÉ5)   10
0459   348D 347D      01657     dt 0x8d, 0x7d   ; 622   (RÉ5#)  11
045B   3481 3476      01658     dt 0x81, 0x76   ; 659   (MI5)   12
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-13-2016  19:46:46         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

045D   34DA 346F      01659     dt 0xda, 0x6f   ; 698   (FA5)   13
045F   3493 3469      01660     dt 0x93, 0x69   ; 740   (FA5#)  14
0461   34A6 3463      01661     dt 0xa6, 0x63   ; 784   (SOL5)  15
0463   340F 345E      01662     dt 0x0f, 0x5e   ; 831   (SOL5#) 16
0465   34C7 3458      01663     dt 0xc7, 0x58   ; 880   (LA5)   17
0467   34CC 3453      01664     dt 0xcc, 0x53   ; 932   (LA5#)  18
0469   3418 344F      01665     dt 0x18, 0x4f   ; 988   (SI5)   19
046B   3482 3442      01666     dt 0x82, 0x42   ; 1046hz (do6)  20
046D   3400 3400      01667     dt 0, 0         ; silence       21
                      01668     
046F                  01669 korobeiniki: ;folklore russe
                      01670     ;nombre de notes
046F   000B           01671     brw
0470   3422           01672     dt 34
                      01673     ; duré, note
0471   342D 3400      01674     dt 45, 0 
0473   340F 3404      01675     dt 15, 4
0475   341E 3407      01676     dt 30, 7
0477   340F 3403      01677     dt 15, 3
0479   340F 3400      01678     dt 15, 0
                      01679     
047B   342D 3405      01680     dt 45, 5
047D   340F 3409      01681     dt 15, 9
047F   341E 340C      01682     dt 30, 12
0481   340F 340A      01683     dt 15, 10
0483   340F 3408      01684     dt 15, 8
                      01685     
0485   342D 3407      01686     dt 45, 7
0487   340F 3408      01687     dt 15, 8
0489   341E 340A      01688     dt 30, 10
048B   341E 340C      01689     dt 30, 12
                      01690     
048D   341E 3408      01691     dt 30, 8
048F   341E 3405      01692     dt 30, 5
0491   343C 3405      01693     dt 60, 5
                      01694     
0493   342D 340D      01695     dt 45, 13
0495   340F 340F      01696     dt 15, 15
0497   341E 3411      01697     dt 30, 17
0499   340F 340F      01698     dt 15, 15
049B   340F 340D      01699     dt 15, 13
                      01700     
049D   342D 340C      01701     dt 45, 12
049F   340F 340D      01702     dt 15, 13
04A1   341E 340C      01703     dt 30, 12
04A3   340F 340A      01704     dt 15, 10
04A5   340F 3408      01705     dt 15, 8
                      01706     
04A7   342D 3407      01707     dt 45, 7
04A9   340F 3408      01708     dt 15, 8
04AB   341E 340A      01709     dt 30, 10
04AD   341E 340C      01710     dt 30, 12
                      01711     
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-13-2016  19:46:46         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

04AF   341E 3408      01712     dt 30, 8
04B1   341E 3405      01713     dt 30, 5
04B3   343C 3405      01714     dt 60, 5
                      01715     
                      01716     
3FE7 1EFF             01717     end
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-13-2016  19:46:46         PAGE 42


SYMBOL TABLE
  LABEL                             VALUE 

ABDEN                             00000000
ABDOVF                            00000007
ADCON0                            0000009D
ADCON1                            0000009E
ADCON2                            0000009F
ADCS0                             00000004
ADCS1                             00000005
ADCS2                             00000006
ADC_PIN                           00000004
ADDEN                             00000003
ADFM                              00000007
ADFVR0                            00000000
ADFVR1                            00000001
ADGO                              00000001
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADPREF0                           00000000
ADPREF1                           00000001
ADRES                             0000009B
ADRESH                            0000009C
ADRESL                            0000009B
ANSA0                             00000000
ANSA1                             00000001
ANSA2                             00000002
ANSA4                             00000004
ANSELA                            0000018C
APFCON                            0000011D
APFCON0                           0000011D
AUDIO_PIN                         00000004
AUDIO_PWMCLKCON                   00000DAE
AUDIO_PWMCON                      00000DAB
AUDIO_PWMDCH                      00000DA4
AUDIO_PWMDCL                      00000DA3
AUDIO_PWMLDCON                    00000DAF
AUDIO_PWMPRH                      00000DA6
AUDIO_PWMPRL                      00000DA5
AUDIO_PWMTMR                      00000DA9
A_THR                             00000040
BAUDCON                           0000019F
BORCON                            00000116
BORFS                             00000006
BORRDY                            00000000
BPL                               00000006
BRG16                             00000003
BRGH                              00000002
BSR                               00000008
BSR0                              00000000
BSR1                              00000001
BSR2                              00000002
BSR3                              00000003
BSR4                              00000004
BSR_SHAD                          00000FE6
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-13-2016  19:46:46         PAGE 43


SYMBOL TABLE
  LABEL                             VALUE 

BTN_A                             00000004
BTN_B                             00000005
BTN_DN                            00000001
BTN_LT                            00000002
BTN_RT                            00000003
BTN_UP                            00000000
BUFFER_SIZE                       000000C0
B_THR                             00000095
C                                 00000000
C1HYS                             00000001
C1IE                              00000005
C1IF                              00000005
C1INTN                            00000006
C1INTP                            00000007
C1NCH0                            00000000
C1NCH1                            00000001
C1NCH2                            00000002
C1OE                              00000005
C1ON                              00000007
C1OUT                             00000006
C1PCH0                            00000004
C1PCH1                            00000005
C1POL                             00000004
C1SP                              00000002
C1SYNC                            00000000
CDAFVR0                           00000002
CDAFVR1                           00000003
CFGS                              00000006
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CHS4                              00000006
CLR_OP                            00000000
CM1CON0                           00000111
CM1CON1                           00000112
CMOUT                             00000115
CREN                              00000004
CS0                               00000000
CS1                               00000001
CSRC                              00000007
CWG1CON0                          00000693
CWG1CON1                          00000694
CWG1CON2                          00000695
CWG1DBF                           00000692
CWG1DBF0                          00000000
CWG1DBF1                          00000001
CWG1DBF2                          00000002
CWG1DBF3                          00000003
CWG1DBF4                          00000004
CWG1DBF5                          00000005
CWG1DBR                           00000691
CWG1DBR0                          00000000
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-13-2016  19:46:46         PAGE 44


SYMBOL TABLE
  LABEL                             VALUE 

CWG1DBR1                          00000001
CWG1DBR2                          00000002
CWG1DBR3                          00000003
CWG1DBR4                          00000004
CWG1DBR5                          00000005
CWGASEL                           00000006
CWGBSEL                           00000005
C_SHAD                            00000000
DACCON0                           00000118
DACCON1                           00000119
DACEN                             00000007
DACLPS                            00000006
DACOE                             00000005
DACPSS0                           00000002
DACPSS1                           00000003
DACR0                             00000000
DACR1                             00000001
DACR2                             00000002
DACR3                             00000003
DACR4                             00000004
DC                                00000001
DCIE                              00000001
DCIF                              00000001
DC_SHAD                           00000001
DN_THR                            000000D8
EN                                00000007
F                                 00000001
FCY                               004C4B40
FERR                              00000002
FIRST_VIDEO                       00000046
FOSC                              01312D00
FREE                              00000004
FSR0                              00000004
FSR0H                             00000005
FSR0H_SHAD                        00000FE9
FSR0L                             00000004
FSR0L_SHAD                        00000FE8
FSR0_SHAD                         00000FE8
FSR1                              00000006
FSR1H                             00000007
FSR1H_SHAD                        00000FEB
FSR1L                             00000006
FSR1L_SHAD                        00000FEA
FSR1_SHAD                         00000FEA
FVRCON                            00000117
FVREN                             00000007
FVRRDY                            00000006
F_COLL                            00000006
F_EVEN                            00000001
F_GSTOP                           00000004
F_GTMR                            00000003
F_MUTEX                           00000002
F_SND                             00000005
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-13-2016  19:46:46         PAGE 45


SYMBOL TABLE
  LABEL                             VALUE 

F_VSYNC                           00000000
G1ARSEN                           00000006
G1ASDLA0                          00000004
G1ASDLA1                          00000005
G1ASDLB0                          00000006
G1ASDLB1                          00000007
G1ASDSC1                          00000002
G1ASDSFLT                         00000001
G1ASE                             00000007
G1CS0                             00000000
G1EN                              00000007
G1IS0                             00000000
G1IS1                             00000001
G1IS2                             00000002
G1OEA                             00000005
G1OEB                             00000006
G1POLA                            00000003
G1POLB                            00000004
GAME_VAR                          00000000
GIE                               00000007
GO                                00000001
GO_NOT_DONE                       00000001
HFIOFL                            00000003
HFIOFR                            00000004
HFIOFS                            00000000
HORZ_DLY                          00000032
HORZ_PERIOD                       000004F5
HORZ_PULSE                        0000005E
I0                                0000041A
INDF0                             00000000
INDF1                             00000001
INLVLA                            0000038C
INLVLA0                           00000000
INLVLA1                           00000001
INLVLA2                           00000002
INLVLA3                           00000003
INLVLA4                           00000004
INLVLA5                           00000005
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IOCAF                             00000393
IOCAF0                            00000000
IOCAF1                            00000001
IOCAF2                            00000002
IOCAF3                            00000003
IOCAF4                            00000004
IOCAF5                            00000005
IOCAN                             00000392
IOCAN0                            00000000
IOCAN1                            00000001
IOCAN2                            00000002
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-13-2016  19:46:46         PAGE 46


SYMBOL TABLE
  LABEL                             VALUE 

IOCAN3                            00000003
IOCAN4                            00000004
IOCAN5                            00000005
IOCAP                             00000391
IOCAP0                            00000000
IOCAP1                            00000001
IOCAP2                            00000002
IOCAP3                            00000003
IOCAP4                            00000004
IOCAP5                            00000005
IOCIE                             00000003
IOCIF                             00000000
IRCF0                             00000003
IRCF1                             00000004
IRCF2                             00000005
IRCF3                             00000006
LAST_LINE                         00000106
LAST_VIDEO                        000000C5
LATA                              0000010C
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA4                             00000004
LATA5                             00000005
LBL_LINES                         00000001
LBL_PRESS                         00000002
LBL_SCORE                         00000000
LDA                               00000007
LDS0                              00000000
LDS1                              00000001
LDT                               00000006
LED_PIN                           00000000
LFIOFR                            00000001
LFSR_TAPS                         000000B4
LT_THR                            000000D1
LWLO                              00000005
MC1OUT                            00000000
MFIOFR                            00000002
MODE0                             00000002
MODE1                             00000003
MPWM1EN                           00000000
MPWM1LD                           00000000
MPWM1OUT                          00000000
MPWM2EN                           00000001
MPWM2LD                           00000001
MPWM2OUT                          00000001
MPWM3EN                           00000002
MPWM3LD                           00000002
MPWM3OUT                          00000002
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_PD                            00000003
NOT_POR                           00000001
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-13-2016  19:46:46         PAGE 47


SYMBOL TABLE
  LABEL                             VALUE 

NOT_RI                            00000002
NOT_RMCLR                         00000003
NOT_RWDT                          00000004
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_WPUEN                         00000007
ODA0                              00000000
ODA1                              00000001
ODA2                              00000002
ODA4                              00000004
ODA5                              00000005
ODCONA                            0000028C
OE                                00000006
OERR                              00000001
OFIE                              00000003
OFIF                              00000003
OFM0                              00000005
OFM1                              00000006
OFO                               00000004
OFS0                              00000000
OFS1                              00000001
OPTION_REG                        00000095
OSCCON                            00000099
OSCSTAT                           0000009A
OSCTUNE                           00000098
OSTS                              00000005
OUT                               00000005
P1SEL                             00000000
P2SEL                             00000001
PAD_CHS                           00000003
PAD_PIN                           00000004
PCL                               00000002
PCLATH                            0000000A
PCLATH_SHAD                       00000FE7
PCON                              00000096
PEIE                              00000006
PHIE                              00000002
PHIF                              00000002
PIE1                              00000091
PIE2                              00000092
PIE3                              00000093
PIR1                              00000011
PIR2                              00000012
PIR3                              00000013
PIXEL_TXREG                       0000019A
PLLR                              00000006
PMADR                             00000191
PMADRH                            00000192
PMADRL                            00000191
PMCON1                            00000195
PMCON2                            00000196
PMDAT                             00000193
PMDATH                            00000194
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-13-2016  19:46:46         PAGE 48


SYMBOL TABLE
  LABEL                             VALUE 

PMDATL                            00000193
POL                               00000004
PORTA                             0000000C
PR2                               0000001B
PRIE                              00000000
PRIF                              00000000
PS0_OPTION_REG                    00000000
PS0_PWM1CLKCON                    00000004
PS0_PWM2CLKCON                    00000004
PS0_PWM3CLKCON                    00000004
PS1_OPTION_REG                    00000001
PS1_PWM1CLKCON                    00000005
PS1_PWM2CLKCON                    00000005
PS1_PWM3CLKCON                    00000005
PS2_OPTION_REG                    00000002
PS2_PWM1CLKCON                    00000006
PS2_PWM2CLKCON                    00000006
PS2_PWM3CLKCON                    00000006
PSA                               00000003
PWM1CLKCON                        00000D9E
PWM1CON                           00000D9B
PWM1CS0                           00000000
PWM1CS1                           00000001
PWM1DC                            00000D93
PWM1DCH                           00000D94
PWM1DCH0                          00000000
PWM1DCH1                          00000001
PWM1DCH2                          00000002
PWM1DCH3                          00000003
PWM1DCH4                          00000004
PWM1DCH5                          00000005
PWM1DCH6                          00000006
PWM1DCH7                          00000007
PWM1DCIE                          00000001
PWM1DCIF                          00000001
PWM1DCL                           00000D93
PWM1DCL0                          00000000
PWM1DCL1                          00000001
PWM1DCL2                          00000002
PWM1DCL3                          00000003
PWM1DCL4                          00000004
PWM1DCL5                          00000005
PWM1DCL6                          00000006
PWM1DCL7                          00000007
PWM1EN                            00000007
PWM1EN_A                          00000000
PWM1IE                            00000004
PWM1IF                            00000004
PWM1INTCON                        00000D9C
PWM1INTE                          00000D9C
PWM1INTF                          00000D9D
PWM1INTFLG                        00000D9D
PWM1LD                            00000007
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-13-2016  19:46:46         PAGE 49


SYMBOL TABLE
  LABEL                             VALUE 

PWM1LDA_A                         00000000
PWM1LDCON                         00000D9F
PWM1LDM                           00000006
PWM1LDS0                          00000000
PWM1LDS1                          00000001
PWM1MODE0                         00000002
PWM1MODE1                         00000003
PWM1OE                            00000006
PWM1OF                            00000D97
PWM1OFCON                         00000DA0
PWM1OFH                           00000D98
PWM1OFH0                          00000000
PWM1OFH1                          00000001
PWM1OFH2                          00000002
PWM1OFH3                          00000003
PWM1OFH4                          00000004
PWM1OFH5                          00000005
PWM1OFH6                          00000006
PWM1OFH7                          00000007
PWM1OFIE                          00000003
PWM1OFIF                          00000003
PWM1OFL                           00000D97
PWM1OFL0                          00000000
PWM1OFL1                          00000001
PWM1OFL2                          00000002
PWM1OFL3                          00000003
PWM1OFL4                          00000004
PWM1OFL5                          00000005
PWM1OFL6                          00000006
PWM1OFL7                          00000007
PWM1OFM0                          00000005
PWM1OFM1                          00000006
PWM1OFMC                          00000004
PWM1OFS0                          00000000
PWM1OFS1                          00000001
PWM1OUT                           00000005
PWM1OUT_A                         00000000
PWM1PH                            00000D91
PWM1PHH                           00000D92
PWM1PHH0                          00000000
PWM1PHH1                          00000001
PWM1PHH2                          00000002
PWM1PHH3                          00000003
PWM1PHH4                          00000004
PWM1PHH5                          00000005
PWM1PHH6                          00000006
PWM1PHH7                          00000007
PWM1PHIE                          00000002
PWM1PHIF                          00000002
PWM1PHL                           00000D91
PWM1PHL0                          00000000
PWM1PHL1                          00000001
PWM1PHL2                          00000002
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-13-2016  19:46:46         PAGE 50


SYMBOL TABLE
  LABEL                             VALUE 

PWM1PHL3                          00000003
PWM1PHL4                          00000004
PWM1PHL5                          00000005
PWM1PHL6                          00000006
PWM1PHL7                          00000007
PWM1POL                           00000004
PWM1PR                            00000D95
PWM1PRH                           00000D96
PWM1PRH0                          00000000
PWM1PRH1                          00000001
PWM1PRH2                          00000002
PWM1PRH3                          00000003
PWM1PRH4                          00000004
PWM1PRH5                          00000005
PWM1PRH6                          00000006
PWM1PRH7                          00000007
PWM1PRIE                          00000000
PWM1PRIF                          00000000
PWM1PRL                           00000D95
PWM1PRL0                          00000000
PWM1PRL1                          00000001
PWM1PRL2                          00000002
PWM1PRL3                          00000003
PWM1PRL4                          00000004
PWM1PRL5                          00000005
PWM1PRL6                          00000006
PWM1PRL7                          00000007
PWM1PS0                           00000004
PWM1PS1                           00000005
PWM1PS2                           00000006
PWM1TMR                           00000D99
PWM1TMRH                          00000D9A
PWM1TMRH0                         00000000
PWM1TMRH1                         00000001
PWM1TMRH2                         00000002
PWM1TMRH3                         00000003
PWM1TMRH4                         00000004
PWM1TMRH5                         00000005
PWM1TMRH6                         00000006
PWM1TMRH7                         00000007
PWM1TMRL                          00000D99
PWM1TMRL0                         00000000
PWM1TMRL1                         00000001
PWM1TMRL2                         00000002
PWM1TMRL3                         00000003
PWM1TMRL4                         00000004
PWM1TMRL5                         00000005
PWM1TMRL6                         00000006
PWM1TMRL7                         00000007
PWM2CLKCON                        00000DAE
PWM2CON                           00000DAB
PWM2CS0                           00000000
PWM2CS1                           00000001
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-13-2016  19:46:46         PAGE 51


SYMBOL TABLE
  LABEL                             VALUE 

PWM2DC                            00000DA3
PWM2DCH                           00000DA4
PWM2DCH0                          00000000
PWM2DCH1                          00000001
PWM2DCH2                          00000002
PWM2DCH3                          00000003
PWM2DCH4                          00000004
PWM2DCH5                          00000005
PWM2DCH6                          00000006
PWM2DCH7                          00000007
PWM2DCIE                          00000001
PWM2DCIF                          00000001
PWM2DCL                           00000DA3
PWM2DCL0                          00000000
PWM2DCL1                          00000001
PWM2DCL2                          00000002
PWM2DCL3                          00000003
PWM2DCL4                          00000004
PWM2DCL5                          00000005
PWM2DCL6                          00000006
PWM2DCL7                          00000007
PWM2EN                            00000007
PWM2EN_A                          00000001
PWM2IE                            00000005
PWM2IF                            00000005
PWM2INTCON                        00000DAC
PWM2INTE                          00000DAC
PWM2INTF                          00000DAD
PWM2INTFLG                        00000DAD
PWM2LD                            00000007
PWM2LDA_A                         00000001
PWM2LDCON                         00000DAF
PWM2LDM                           00000006
PWM2LDS0                          00000000
PWM2LDS1                          00000001
PWM2MODE0                         00000002
PWM2MODE1                         00000003
PWM2OE                            00000006
PWM2OF                            00000DA7
PWM2OFCON                         00000DB0
PWM2OFH                           00000DA8
PWM2OFH0                          00000000
PWM2OFH1                          00000001
PWM2OFH2                          00000002
PWM2OFH3                          00000003
PWM2OFH4                          00000004
PWM2OFH5                          00000005
PWM2OFH6                          00000006
PWM2OFH7                          00000007
PWM2OFIE                          00000003
PWM2OFIF                          00000003
PWM2OFL                           00000DA7
PWM2OFL0                          00000000
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-13-2016  19:46:46         PAGE 52


SYMBOL TABLE
  LABEL                             VALUE 

PWM2OFL1                          00000001
PWM2OFL2                          00000002
PWM2OFL3                          00000003
PWM2OFL4                          00000004
PWM2OFL5                          00000005
PWM2OFL6                          00000006
PWM2OFL7                          00000007
PWM2OFM0                          00000005
PWM2OFM1                          00000006
PWM2OFMC                          00000004
PWM2OFS0                          00000000
PWM2OFS1                          00000001
PWM2OUT                           00000005
PWM2OUT_A                         00000001
PWM2PH                            00000DA1
PWM2PHH                           00000DA2
PWM2PHH0                          00000000
PWM2PHH1                          00000001
PWM2PHH2                          00000002
PWM2PHH3                          00000003
PWM2PHH4                          00000004
PWM2PHH5                          00000005
PWM2PHH6                          00000006
PWM2PHH7                          00000007
PWM2PHIE                          00000002
PWM2PHIF                          00000002
PWM2PHL                           00000DA1
PWM2PHL0                          00000000
PWM2PHL1                          00000001
PWM2PHL2                          00000002
PWM2PHL3                          00000003
PWM2PHL4                          00000004
PWM2PHL5                          00000005
PWM2PHL6                          00000006
PWM2PHL7                          00000007
PWM2POL                           00000004
PWM2PR                            00000DA5
PWM2PRH                           00000DA6
PWM2PRH0                          00000000
PWM2PRH1                          00000001
PWM2PRH2                          00000002
PWM2PRH3                          00000003
PWM2PRH4                          00000004
PWM2PRH5                          00000005
PWM2PRH6                          00000006
PWM2PRH7                          00000007
PWM2PRIE                          00000000
PWM2PRIF                          00000000
PWM2PRL                           00000DA5
PWM2PRL0                          00000000
PWM2PRL1                          00000001
PWM2PRL2                          00000002
PWM2PRL3                          00000003
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-13-2016  19:46:46         PAGE 53


SYMBOL TABLE
  LABEL                             VALUE 

PWM2PRL4                          00000004
PWM2PRL5                          00000005
PWM2PRL6                          00000006
PWM2PRL7                          00000007
PWM2PS0                           00000004
PWM2PS1                           00000005
PWM2PS2                           00000006
PWM2TMR                           00000DA9
PWM2TMRH                          00000DAA
PWM2TMRH0                         00000000
PWM2TMRH1                         00000001
PWM2TMRH2                         00000002
PWM2TMRH3                         00000003
PWM2TMRH4                         00000004
PWM2TMRH5                         00000005
PWM2TMRH6                         00000006
PWM2TMRH7                         00000007
PWM2TMRL                          00000DA9
PWM2TMRL0                         00000000
PWM2TMRL1                         00000001
PWM2TMRL2                         00000002
PWM2TMRL3                         00000003
PWM2TMRL4                         00000004
PWM2TMRL5                         00000005
PWM2TMRL6                         00000006
PWM2TMRL7                         00000007
PWM3CLKCON                        00000DBE
PWM3CON                           00000DBB
PWM3CS0                           00000000
PWM3CS1                           00000001
PWM3DC                            00000DB3
PWM3DCH                           00000DB4
PWM3DCH0                          00000000
PWM3DCH1                          00000001
PWM3DCH2                          00000002
PWM3DCH3                          00000003
PWM3DCH4                          00000004
PWM3DCH5                          00000005
PWM3DCH6                          00000006
PWM3DCH7                          00000007
PWM3DCIE                          00000001
PWM3DCIF                          00000001
PWM3DCL                           00000DB3
PWM3DCL0                          00000000
PWM3DCL1                          00000001
PWM3DCL2                          00000002
PWM3DCL3                          00000003
PWM3DCL4                          00000004
PWM3DCL5                          00000005
PWM3DCL6                          00000006
PWM3DCL7                          00000007
PWM3EN                            00000007
PWM3EN_A                          00000002
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-13-2016  19:46:46         PAGE 54


SYMBOL TABLE
  LABEL                             VALUE 

PWM3IE                            00000006
PWM3IF                            00000006
PWM3INTCON                        00000DBC
PWM3INTE                          00000DBC
PWM3INTF                          00000DBD
PWM3INTFLG                        00000DBD
PWM3LD                            00000007
PWM3LDA_A                         00000002
PWM3LDCON                         00000DBF
PWM3LDM                           00000006
PWM3LDS0                          00000000
PWM3LDS1                          00000001
PWM3MODE0                         00000002
PWM3MODE1                         00000003
PWM3OE                            00000006
PWM3OF                            00000DB7
PWM3OFCON                         00000DC0
PWM3OFH                           00000DB8
PWM3OFH0                          00000000
PWM3OFH1                          00000001
PWM3OFH2                          00000002
PWM3OFH3                          00000003
PWM3OFH4                          00000004
PWM3OFH5                          00000005
PWM3OFH6                          00000006
PWM3OFH7                          00000007
PWM3OFIE                          00000003
PWM3OFIF                          00000003
PWM3OFL                           00000DB7
PWM3OFL0                          00000000
PWM3OFL1                          00000001
PWM3OFL2                          00000002
PWM3OFL3                          00000003
PWM3OFL4                          00000004
PWM3OFL5                          00000005
PWM3OFL6                          00000006
PWM3OFL7                          00000007
PWM3OFM0                          00000005
PWM3OFM1                          00000006
PWM3OFMC                          00000004
PWM3OFS0                          00000000
PWM3OFS1                          00000001
PWM3OUT                           00000005
PWM3OUT_A                         00000002
PWM3PH                            00000DB1
PWM3PHH                           00000DB2
PWM3PHH0                          00000000
PWM3PHH1                          00000001
PWM3PHH2                          00000002
PWM3PHH3                          00000003
PWM3PHH4                          00000004
PWM3PHH5                          00000005
PWM3PHH6                          00000006
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-13-2016  19:46:46         PAGE 55


SYMBOL TABLE
  LABEL                             VALUE 

PWM3PHH7                          00000007
PWM3PHIE                          00000002
PWM3PHIF                          00000002
PWM3PHL                           00000DB1
PWM3PHL0                          00000000
PWM3PHL1                          00000001
PWM3PHL2                          00000002
PWM3PHL3                          00000003
PWM3PHL4                          00000004
PWM3PHL5                          00000005
PWM3PHL6                          00000006
PWM3PHL7                          00000007
PWM3POL                           00000004
PWM3PR                            00000DB5
PWM3PRH                           00000DB6
PWM3PRH0                          00000000
PWM3PRH1                          00000001
PWM3PRH2                          00000002
PWM3PRH3                          00000003
PWM3PRH4                          00000004
PWM3PRH5                          00000005
PWM3PRH6                          00000006
PWM3PRH7                          00000007
PWM3PRIE                          00000000
PWM3PRIF                          00000000
PWM3PRL                           00000DB5
PWM3PRL0                          00000000
PWM3PRL1                          00000001
PWM3PRL2                          00000002
PWM3PRL3                          00000003
PWM3PRL4                          00000004
PWM3PRL5                          00000005
PWM3PRL6                          00000006
PWM3PRL7                          00000007
PWM3PS0                           00000004
PWM3PS1                           00000005
PWM3PS2                           00000006
PWM3TMR                           00000DB9
PWM3TMRH                          00000DBA
PWM3TMRH0                         00000000
PWM3TMRH1                         00000001
PWM3TMRH2                         00000002
PWM3TMRH3                         00000003
PWM3TMRH4                         00000004
PWM3TMRH5                         00000005
PWM3TMRH6                         00000006
PWM3TMRH7                         00000007
PWM3TMRL                          00000DB9
PWM3TMRL0                         00000000
PWM3TMRL1                         00000001
PWM3TMRL2                         00000002
PWM3TMRL3                         00000003
PWM3TMRL4                         00000004
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-13-2016  19:46:46         PAGE 56


SYMBOL TABLE
  LABEL                             VALUE 

PWM3TMRL5                         00000005
PWM3TMRL6                         00000006
PWM3TMRL7                         00000007
PWMEN                             00000D8E
PWMLD                             00000D8F
PWMOUT                            00000D90
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCREG                             00000199
RCSTA                             0000019D
RD                                00000000
ROW_EMPTY                         00000000
ROW_FULL                          0000000A
RT_THR                            000000B5
RX9                               00000006
RX9D                              00000000
RXDTSEL                           00000007
S0                                0000001F
SBOREN                            00000007
SCKP                              00000004
SCS0                              00000000
SCS1                              00000001
SENDB                             00000003
SET_OP                            00000003
SLRA0                             00000000
SLRA1                             00000001
SLRA2                             00000002
SLRA4                             00000004
SLRA5                             00000005
SLRCONA                           0000030C
SP                                FSR1
SPBRG                             0000019B
SPBRGH                            0000019C
SPBRGL                            0000019B
SPEN                              00000007
SPLLEN                            00000007
SREN                              00000005
STACK_SIZE                        00000020
STATUS                            00000003
STATUS_SHAD                       00000FE4
STKOVF                            00000007
STKPTR                            00000FED
STKUNF                            00000006
SWDTEN                            00000000
SYNC                              00000004
SYNC_IE                           00000006
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-13-2016  19:46:46         PAGE 57


SYMBOL TABLE
  LABEL                             VALUE 

SYNC_IF                           00000006
SYNC_OUT                          00000002
SYNC_PIE                          00000093
SYNC_PIR                          00000013
SYNC_PWMCLKCON                    00000DBE
SYNC_PWMCON                       00000DBB
SYNC_PWMDCH                       00000DB4
SYNC_PWMDCL                       00000DB3
SYNC_PWMINTE                      00000DBC
SYNC_PWMINTF                      00000DBD
SYNC_PWMLDCON                     00000DBF
SYNC_PWMOF                        00000DB7
SYNC_PWMOFCON                     00000DC0
SYNC_PWMPH                        00000DB1
SYNC_PWMPRH                       00000DB6
SYNC_PWMPRL                       00000DB5
SYNC_PWMTMR                       00000DB9
T                                 INDF1
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000018
T1GCON                            00000019
T1GGO                             00000003
T1GGO_NOT_DONE                    00000003
T1GPOL                            00000006
T1GSEL                            00000003
T1GSPM                            00000004
T1GSS0                            00000000
T1GSS1                            00000001
T1GTM                             00000005
T1GVAL                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             0000001C
T2OUTPS0                          00000003
T2OUTPS1                          00000004
T2OUTPS2                          00000005
T2OUTPS3                          00000006
TC                                00000032
TCY                               000000C8
TEST_OP                           00000002
TMR0                              00000015
TMR0CS                            00000005
TMR0IE                            00000005
TMR0IF                            00000002
TMR0SE                            00000004
TMR1                              00000016
TMR1CS0                           00000006
TMR1CS1                           00000007
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-13-2016  19:46:46         PAGE 58


SYMBOL TABLE
  LABEL                             VALUE 

TMR1GE                            00000007
TMR1GIE                           00000007
TMR1GIF                           00000007
TMR1H                             00000017
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             00000016
TMR1ON                            00000000
TMR2                              0000001A
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOS                               00000FEE
TOSH                              00000FEF
TOSL                              00000FEE
TRIGSEL0                          00000004
TRIGSEL1                          00000005
TRIGSEL2                          00000006
TRIGSEL3                          00000007
TRISA                             0000008C
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRMT                              00000001
TSEN                              00000005
TSRNG                             00000004
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TUN5                              00000005
TX9                               00000006
TX9D                              00000000
TXCKSEL                           00000002
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             0000019A
TXSTA                             0000019E
TX_PIR                            00000011
UP_THR                            000000C6
VDD                               00000400
VERT_DLY                          00000032
VIDEO_BUFFER                      00002030
VIDEO_LAT                         0000010C
VIDEO_OUT                         00000001
VREGCON                           00000197
VREGPM                            00000001
W                                 00000000
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-13-2016  19:46:46         PAGE 59


SYMBOL TABLE
  LABEL                             VALUE 

WDTCON                            00000097
WDTPS0                            00000001
WDTPS1                            00000002
WDTPS2                            00000003
WDTPS3                            00000004
WDTPS4                            00000005
WELL_DEPTH                        00000016
WELL_WIDTH                        0000000A
WPUA                              0000020C
WPUA0                             00000000
WPUA1                             00000001
WPUA2                             00000002
WPUA3                             00000003
WPUA4                             00000004
WPUA5                             00000005
WR                                00000001
WREG                              00000009
WREG_SHAD                         00000FE5
WREN                              00000002
WRERR                             00000003
WUE                               00000001
XOR_OP                            00000001
XSIZE                             00000030
YSIZE                             00000020
Z                                 00000002
Z_SHAD                            00000002
_.org_1_0075                      00000075
_.org_1_0077                      00000077
_.org_1_0079                      00000079
_.org_1_007C                      0000007C
_.org_1_00BC                      000000BC
_.org_1_00BE                      000000BE
_.org_1_00DA                      000000DA
_.org_1_00E1                      000000E1
_.org_1_029F                      0000029F
_.org_1_02C3                      000002C3
_.org_1_02D1                      000002D1
_.org_1_0336                      00000336
_.org_1_033F                      0000033F
_.org_1_038B                      0000038B
_BOREN_NSLEEP                     00003DFF
_BOREN_OFF                        000039FF
_BOREN_ON                         00003FFF
_BOREN_SBODEN                     00003BFF
_BORV_19                          00003FFF
_BORV_HI                          00003BFF
_BORV_LO                          00003FFF
_CLKOUTEN_OFF                     00003FFF
_CLKOUTEN_ON                      000037FF
_CONFIG1                          00008007
_CONFIG2                          00008008
_CP_OFF                           00003FFF
_CP_ON                            00003F7F
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-13-2016  19:46:46         PAGE 60


SYMBOL TABLE
  LABEL                             VALUE 

_DEVID1                           00008006
_FOSC_ECH                         00003FFF
_FOSC_ECL                         00003FFD
_FOSC_ECM                         00003FFE
_FOSC_INTOSC                      00003FFC
_IDLOC0                           00008000
_IDLOC1                           00008001
_IDLOC2                           00008002
_IDLOC3                           00008003
_LPBOREN_OFF                      00003FFF
_LPBOREN_ON                       000037FF
_LVP_OFF                          00001FFF
_LVP_ON                           00003FFF
_MCLRE_OFF                        00003FBF
_MCLRE_ON                         00003FFF
_PLLEN_OFF                        00003EFF
_PLLEN_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FDF
_STVREN_OFF                       00003DFF
_STVREN_ON                        00003FFF
_WDTE_NSLEEP                      00003FF7
_WDTE_OFF                         00003FE7
_WDTE_ON                          00003FFF
_WDTE_SWDTEN                      00003FEF
_WRT_ALL                          00003FFC
_WRT_BOOT                         00003FFE
_WRT_HALF                         00003FFD
_WRT_OFF                          00003FFF
__12F1572                         00000001
_stack                            00000020
accaH                             00000009
accaL                             00000008
accbH                             0000000B
accbL                             0000000A
add                               
addpmadr                          
adjust_score                      0000038C
angle                             00000041
bitop                             0000010E
bitop00                           0000011B
bitop01                           0000011E
bitop02                           00000137
buttons                           0000000C
case                              
clear_bit                         0000012F
col_loop                          0000025E
coll_test                         000002D5
count_done                        000002A3
count_full                        00000288
count_loop                        0000028C
dec_n                             
digits                            000003D6
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-13-2016  19:46:46         PAGE 61


SYMBOL TABLE
  LABEL                             VALUE 

disable_video                     
div10                             00000059
div10_loop                        0000005D
drop                              
drop_n                            
droppedH                          00000047
droppedL                          00000046
dup                               
enable_video                      
fall_loop                         00000339
fetch                             
fill_buffer                       000000E9
fill_loop                         000000F1
flags                             00000002
game_init                         00000228
game_loop                         0000032D
get_flash_word                    00000164
get_nibble                        00000178
get_pixel                         00000109
gt_255                            0000002A
gtimer                            00000003
hard_drop                         0000035E
hline                             00000206
hline_done                        00000215
inc_n                             
init                              00000393
insert                            
isr                               00000004
isr_exit                          00000055
koro                              000002B7
korobeiniki                       0000046F
labels                            00000422
lcountH                           00000001
lcountL                           00000000
ldpmadr                           
lit                               
lt_256                            0000000E
main                              000003D3
move_down                         0000036F
move_left                         0000036A
move_right                        0000036D
movtw                             
movwt                             
mult6                             00000069
new_tminos                        000002A5
next_flash_word                   00000173
next_row                          000002A1
nibble                            0000000D
nibble_mask                       00000187
no_zero                           00000204
over                              
pause                             
pick                              
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-13-2016  19:46:46         PAGE 62


SYMBOL TABLE
  LABEL                             VALUE 

pixels_loop                       000000D5
pop                               
print_char                        00000195
print_int                         000001EB
print_label                       000001CE
print_last                        000001FE
print_row                         0000018B
print_tetrim                      000001A4
prt01                             000001BA
prt_lbl_done                      000001E9
prt_lbl_loop                      000001D0
pstack_init                       
push                              
q                                 0000000A
qr00                              00000279
qr01                              00000283
query_row                         00000277
r                                 00000000
randH                             00000006
randL                             00000005
rcount                            00000007
read_exit                         000000A1
read_flash                        0000016D
read_pad                          0000006E
reserve                           
rot                               
rot_left                          00000360
rot_right                         00000365
row0                              00000186
row1                              00000182
row2                              00000184
row_loop                          0000025C
rst                               0000000E
scoreH                            00000045
scoreL                            00000044
set_video_ptr                     000000F7
shift_score                       00000380
slide_down                        0000025B
soft_drop                         0000035F
start_timer                       
store                             
sub                               
swap                              
task0                             0000003F
task1                             00000048
task2                             0000004F
tasks                             00000035
tbranch                           
tcyDelay                          
test_bit                          0000012B
tetrim                            00000040
tetriminos                        00000402
tetris                            0000031C
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-13-2016  19:46:46         PAGE 63


SYMBOL TABLE
  LABEL                             VALUE 

ti                                000001B3
tone                              000000A4
tone_pr                           00000442
tone_tmr                          00000004
try_a                             0000007E
try_b                             00000084
try_button                        
try_dn                            0000009C
try_lt                            00000096
try_rt                            0000008A
try_up                            00000090
tx                                00000042
txt_lines                         0000042F
txt_press                         00000438
txt_score                         00000426
ty                                00000043
undo_hard_drop                    000002F9
undo_move_left                    00000305
undo_move_right                   00000303
undo_rot_left                     000002FF
undo_rot_right                    000002FB
undo_soft_drop                    000002FA
update_display                    00000307
video_buffer_b0                   00000050
video_buffer_b2                   000000A0
video_buffer_b3                   00000120
video_serialize                   000000BB
vline                             00000217
vline_done                        00000226
vsync_end                         00000022
vsync_start                       0000001A
wait_end                          000002D3
wait_sound                        
wait_start                        000002B2
wait_timer                        
xor_bit                           00000132
xor_row                           00000140
xor_row01                         00000146
xor_row02                         0000015E
xor_row_done                      00000162
zbranch                           

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,   135 suppressed

