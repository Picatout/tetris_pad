MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  21:15:53         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001     include p12f1572.inc
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Sep 13 2016
                      00005 ;  MPASM PIC12F1572 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2016 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01601         LIST
                      00002     
                      00003     radix dec
                      00004     errorlevel 0, -302, -305
                      00005     
8007   3FE7           00006     __config _CONFIG1, _FOSC_ECH&_WDTE_OFF
8008   1EFF           00007     __config _CONFIG2, _PLLEN_OFF&_LVP_OFF 
                      00008 
                      00009 #define SOUND_SUPPORT
                      00010     
  01312D00            00011 FOSC equ 20000000 ; 20Mhz
  00000032            00012 TC equ 50 ; nanosecondes 
  004C4B40            00013 FCY equ FOSC/4    ; 5Mhz
  000000C8            00014 TCY equ 200 ; nanoseconds
                      00015 
                      00016 
  00000030            00017 XSIZE equ 48  ; horizontal pixels
  00000020            00018 YSIZE equ 32  ; vertical pixels
  00000006            00019 BPL equ XSIZE/8 ; bytes per line 
  000000C0            00020 BUFFER_SIZE equ  YSIZE*BPL  ; video buffer size
  00002030            00021 VIDEO_BUFFER equ 0x2000+(3*80-BUFFER_SIZE) ; buffer address
  00000032            00022 VERT_DLY equ 50
  00000046            00023 FIRST_VIDEO equ VERT_DLY+20  ; first video output line
  000000C5            00024 LAST_VIDEO equ FIRST_VIDEO+4*YSIZE-1  ; last video output line
  0000019A            00025 PIXEL_TXREG equ TXREG
  00000011            00026 TX_PIR equ PIR1
  00000032            00027 HORZ_DLY equ 10*5  ; there is 5 TCY/µsec
                      00028  
  00000001            00029 VIDEO_OUT equ RA1
  0000010C            00030 VIDEO_LAT equ LATA
  00000002            00031 SYNC_OUT equ RA2 
  00000DB3            00032 SYNC_PWMDCL equ PWM3DCL ; duty cycle low byte
  00000DB4            00033 SYNC_PWMDCH equ PWM3DCH ; high byte    
  00000DB5            00034 SYNC_PWMPRL equ PWM3PRL ; pwm period low byte
  00000DB6            00035 SYNC_PWMPRH equ PWM3PRH ; high byte 
  00000DB1            00036 SYNC_PWMPH equ PWM3PH ; pwm phase
  00000DB7            00037 SYNC_PWMOF equ PWM3OF ; pwm offset
  00000DB9            00038 SYNC_PWMTMR equ PWM3TMR ; timer
  00000DBB            00039 SYNC_PWMCON equ PWM3CON ; control SFR
  00000DBE            00040 SYNC_PWMCLKCON equ PWM3CLKCON  ; clock control SFR
  00000DC0            00041 SYNC_PWMOFCON equ PWM3OFCON ; offset control SFR
  00000DBF            00042 SYNC_PWMLDCON equ PWM3LDCON ; load control SFR
  00000006            00043 SYNC_IE equ PWM3IE  ; interrupt enable bit
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  21:15:53         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000006            00044 SYNC_IF equ PWM3IF  ; interrupt flag bit
  00000093            00045 SYNC_PIE equ PIE3 ; interrupt enable SFR
  00000013            00046 SYNC_PIR equ PIR3 ; interrupt flag SFR 
  00000DBC            00047 SYNC_PWMINTE equ PWM3INTE
  00000DBD            00048 SYNC_PWMINTF equ PWM3INTF
                      00049  
  000004F5            00050 HORZ_PERIOD equ FOSC/15748-1 ; 15748 hertz
  0000005E            00051 HORZ_PULSE equ 4700/TC ; 4.7µsec 
  00000106            00052 LAST_LINE equ 262
                      00053 
  00000000            00054 LED_PIN equ RA0
  00000004            00055 ADC_PIN equ RA4
                      00056 
                      00057 #ifdef SOUND_SUPPORT 
  00000004            00058 AUDIO_PIN equ RA4
  00000DA3            00059 AUDIO_PWMDCL equ PWM2DCL
  00000DA4            00060 AUDIO_PWMDCH equ PWM2DCH
  00000DA5            00061 AUDIO_PWMPRL equ PWM2PRL
  00000DA6            00062 AUDIO_PWMPRH equ PWM2PRH
  00000DA9            00063 AUDIO_PWMTMR equ PWM2TMR
  00000DAE            00064 AUDIO_PWMCLKCON equ PWM2CLKCON
  00000DAF            00065 AUDIO_PWMLDCON equ PWM2LDCON
  00000DAB            00066 AUDIO_PWMCON equ PWM2CON
                      00067 #endif
                      00068  
                      00069 ; game pad resource
                      00070 ; use ADC 
  00000004            00071 PAD_PIN equ ANSA4
  00000003            00072 PAD_CHS equ 3 
  00000000            00073 BTN_UP equ 0
  00000001            00074 BTN_DN equ 1
  00000002            00075 BTN_LT equ 2
  00000003            00076 BTN_RT equ 3
  00000004            00077 BTN_A equ 4
  00000005            00078 BTN_B equ 5
                      00079 ; threshold level for each button
                      00080 ; lower_btn_thr >= BTN_? < btn_thr
                      00081 ; exemple: BTN_UP if RT_THR<=Vadc<UP_THR  
  00000400            00082 VDD equ 1024
  000000D8            00083 DN_THR equ 216 ;(VDD*(6/7+5/6)/2)>>2
  000000D1            00084 LT_THR equ 209 ; (VDD*(5/6+4/5)/2)>>2
  000000C6            00085 UP_THR equ 198 ;(VDD*(4/5+3/4)/2)>>2
  000000B5            00086 RT_THR equ 181 ;(VDD*(3/4+2/3)/2)>>2
  00000095            00087 B_THR  equ 149 ; (VDD*(2/3+1/2)/2)>>2
  00000040            00088 A_THR  equ 64 ;(VDD/4)>>2
                      00089  
                      00090 try_button macro btn, label 
                      00091     movlw btn
                      00092     subwf ADRESH,W
                      00093     skpnc
                      00094     bra label
                      00095     endm
                      00096     
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  21:15:53         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00097 ;boolean flags 
  00000000            00098 F_VSYNC equ 0 ; vertical sync active
  00000001            00099 F_EVEN equ 1  ; even field
  00000002            00100 F_MUTEX equ 2 ; video routine lock out
  00000003            00101 F_GTMR equ 3  ; game timer active
  00000004            00102 F_GSTOP equ 4 ; game stopped
  00000005            00103 F_SND equ 5 ; sound timer active 
  00000006            00104 F_COLL equ 6 ; collision flag
                      00105  
  000000B4            00106 LFSR_TAPS equ 0xB4 ; xor mask
                      00107  
                      00108 disable_video macro ; lockout video_serialize
                      00109     bsf flags, F_MUTEX
                      00110     endm
                      00111     
                      00112 enable_video macro ; unlock video_serialize
                      00113     bcf flags, F_MUTEX
                      00114     endm
                      00115     
                      00116 tcyDelay macro n ; delay in TCY cycles  5TCY per µsec.  
                      00117     variable r=n%5
                      00118     variable q=n/5
                      00119     while r>1
                      00120     bra $+1
                      00121 r-=2
                      00122     endw
                      00123     if r==1
                      00124     nop
                      00125     endif
                      00126     if q
                      00127     movlw q
                      00128     bra $+1
                      00129     decfsz WREG
                      00130     bra $-2
                      00131     endif
                      00132     endm
                      00133 
                      00134 ; button selector case    
                      00135 case macro n, label
                      00136     btfsc buttons,n
                      00137     bra label
                      00138     endm
                      00139  
                      00140 start_timer macro value ; start game timer
                      00141     movlw value
                      00142     movwf gtimer
                      00143     bsf flags, F_GTMR
                      00144     endm
                      00145     
                      00146 wait_timer macro ; wait timer expiration
                      00147     btfsc flags, F_GTMR
                      00148     bra $-1
                      00149     endm
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  21:15:53         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00150     
                      00151 pause macro value ; suspend execution (busy loop)
                      00152     start_timer value
                      00153     wait_timer
                      00154     endm
                      00155 
                      00156 #ifdef SOUND_SUPPORT    
                      00157 wait_sound macro ; wait sound end
                      00158     btfsc flags,F_SND
                      00159     bra $-1
                      00160     endm
                      00161 #endif
                      00162     
                      00163 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00164 ; software stack for arguments passing
                      00165 ; SP is Stack Pointer
                      00166 ; T is Top Of Stack
                      00167 #define SP FSR1
                      00168 #define T INDF1
  00000020            00169 STACK_SIZE equ 32
                      00170  
  0000001F            00171 S0 equ 0x1F ; stack base address - 1
                      00172 
                      00173 pstack_init macro ; initialise stack pointer
                      00174     clrf FSR1H
                      00175     movlw S0
                      00176     movwf FSR1L
                      00177     endm
                      00178     
                      00179 push macro   ; ( -- n ) push WREG on stack
                      00180     movwi ++SP
                      00181     endm
                      00182 
                      00183 pop macro   ; ( n -- )  pop T in WREG
                      00184     moviw SP--
                      00185     endm
                      00186     
                      00187 drop macro  ; ( n -- ) ; discard T
                      00188    addfsr SP,-1
                      00189    endm
                      00190 
                      00191 drop_n macro n  ; discard n elements  n<32
                      00192     addfsr SP,-n
                      00193     endm
                      00194     
                      00195 lit macro  n ; ( -- n ) ; push a literal
                      00196    movlw n
                      00197    movwi ++SP 
                      00198    endm
                      00199 
                      00200 dup macro ; ( n -- n n ) duplicate T
                      00201     movfw T
                      00202     movwi ++SP
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  21:15:53         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00203     endm
                      00204     
                      00205 over macro ; ( n1 n2 -- n1 n2 n1 )
                      00206     moviw -1[SP]
                      00207     push
                      00208     endm
                      00209     
                      00210 swap macro ; exchange WREG and T
                      00211     xorwf T
                      00212     xorwf T,W
                      00213     xorwf T
                      00214     endm
                      00215  
                      00216 store macro var ; ( n -- ) pop T in variable
                      00217    moviw SP--
                      00218    movwf var
                      00219    endm
                      00220    
                      00221 pick macro n  ; pick nth element of stack to WREG
                      00222     moviw -n[SP]
                      00223     endm
                      00224 
                      00225 insert macro n ;  insert WREG at position n on stack
                      00226    movwi -n[SP]
                      00227    endm
                      00228    
                      00229 inc_n macro n ; increament nth element of stack
                      00230     moviw -n[SP]
                      00231     incf WREG,F
                      00232     movwi -n[SP]
                      00233     endm
                      00234     
                      00235 dec_n macro n ; decreament nth element of stack
                      00236     moviw -n[SP]
                      00237     decf WREG,F
                      00238     movwi -n[SP]
                      00239     endm
                      00240     
                      00241 reserve macro n ; reserve n bytes on stack for local variables
                      00242     addfsr SP, n 
                      00243     endm
                      00244  
                      00245 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00246 ; parameter stack section    
                      00247 dstack udata 0x20
0020                  00248 _stack res 32
                      00249 ; game variables section 
  00000000            00250 GAME_VAR equ 0 ; game variables bank
                      00251 game_var udata 0x40 
                      00252 ; tetris game state
0040                  00253 tetrim res 1 ; active tretriminos 
0041                  00254 angle res 1 ; tetriminos rotatation angle in multiple of 90degr. {0:3}
0042                  00255 tx  res 1 ; x coordinate
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  21:15:53         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0043                  00256 ty  res 1 ; y coordinate
0044                  00257 scoreL res 1 ; game score  16 bits
0045                  00258 scoreH res 1 
0046                  00259 droppedL res 1  ; total
0047                  00260 droppedH res 1  ; dropped lines
                      00261   
                      00262  
                      00263 ; These 3 sections are used for video pixels buffering
                      00264 ; with indirect access using FSR0
                      00265 ; to form a contiguous address space. 
                      00266 ; total size 192 bytes 
                      00267 vb_b0    udata 0x50
0050                  00268 video_buffer_b0 res 32
                      00269 vb_b1    udata 0xA0
00A0                  00270 video_buffer_b2 res 80
                      00271 vb_b2    udata 0x120
0120                  00272 video_buffer_b3 res 80
                      00273  
                      00274  
                      00275     udata_shr
                      00276 ;scan lines counter 16 bits
0000                  00277 lcountL res 1
0001                  00278 lcountH res 1
                      00279 ; boolean flags 
0002                  00280 flags res 1
                      00281 ; game timer
0003                  00282 gtimer res 1 
                      00283 #ifdef SOUND_SUPPORT 
                      00284 ; sound timer
0004                  00285 tone_tmr res 1 
                      00286 #endif 
                      00287 ; lfsr PRNG register
0005                  00288 randL res 1 
0006                  00289 randH res 1 
                      00290 ; loop counter
0007                  00291 rcount res 1
                      00292 ; arithmetic accumulator A 24 bits
0008                  00293 accaL res 1
0009                  00294 accaH res 1
                      00295 ; arithmetic accumulator B 16 bits
000A                  00296 accbL res 1
000B                  00297 accbH res 1
                      00298 ; game pad buttons state
000C                  00299 buttons res 1
                      00300 ; flash reader next nibble {0-3}
000D                  00301 nibble res 1
                      00302 ; temporary registers
000E                  00303 t0  res 1
000F                  00304 t1  res 1
                      00305   
                      00306 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00307 ; reset entry point
                      00308 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  21:15:53         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0010                  00309 rst: 
                      00310     org 0
0000   0023           00311     banksel ANSELA
0001   018C           00312     clrf ANSELA
0002   160C           00313     bsf ANSELA,PAD_PIN
0003   2???           00314     goto init
                      00315     
                      00316     org 4
                      00317 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;   
                      00318 ; interrupt service routine
                      00319 ; the only interrupt is on SYNC_PWM timer
                      00320 ; this intterrupt trigger once 
                      00321 ; for every horizontal line, i.e. 15748/sec.    
                      00322 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
0004                  00323 isr:
0004   003B           00324     banksel SYNC_PWMINTF
0005   103D           00325     bcf SYNC_PWMINTF,PRIF
0006   1800           00326     btfsc lcountH,0
0007   3???           00327     bra gt_255 ; lcount > 255
0008   08??           00328     movfw lcountL
0009   1903           00329     skpnz
000A   3???           00330     bra vsync_start
000B   3A03           00331     xorlw 3
000C   1903           00332     skpnz
000D   3???           00333     bra vsync_end
                      00334 ; scanline < 256
                      00335 ; check if visible line    
000E                  00336 lt_256:
000E   1900           00337     btfsc flags, F_MUTEX ; video output lockout
000F   3???           00338     bra isr_exit
0010   08??           00339     movfw lcountL
0011   3C45           00340     sublw FIRST_VIDEO-1
0012   1803           00341     skpnc
0013   3???           00342     bra isr_exit
0014   08??           00343     movfw lcountL
0015   3CC5           00344     sublw LAST_VIDEO
0016   1C03           00345     skpc
0017   3???           00346     bra isr_exit
                      00347 ; output video pixels for this line    
0018   2???           00348     call video_serialize 
0019   3???           00349     bra isr_exit 
                      00350 ; scanline 0 start vertical sync pulse    
001A                  00351 vsync_start: 
001A   003B           00352     banksel SYNC_PWMDCL
001B   3097           00353     movlw (HORZ_PERIOD-HORZ_PULSE)&0xff
001C   00B3           00354     movwf SYNC_PWMDCL
001D   3004           00355     movlw (HORZ_PERIOD-HORZ_PULSE)>>8
001E   00B4           00356     movwf SYNC_PWMDCH
001F   17BF           00357     bsf SYNC_PWMLDCON,LDA
0020   1400           00358     bsf flags, F_VSYNC
0021   3???           00359     bra isr_exit
                      00360 ; scanline 3 end vertical sync pulse
0022                  00361 vsync_end: 
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  21:15:53         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0022   003B           00362     banksel SYNC_PWMDCL
0023   305E           00363     movlw HORZ_PULSE&0xff
0024   00B3           00364     movwf SYNC_PWMDCL
0025   3000           00365     movlw HORZ_PULSE>>8
0026   00B4           00366     movwf SYNC_PWMDCH
0027   17BF           00367     bsf SYNC_PWMLDCON,LDA
0028   1000           00368     bcf flags, F_VSYNC
0029   3???           00369     bra isr_exit
                      00370 ; scan line > 255    
002A                  00371 gt_255:
                      00372 ; check for end of field    
002A   3006           00373     movlw LAST_LINE&0xff
002B   1C80           00374     btfss flags,F_EVEN
002C   3E01           00375     addlw 1
002D   06??           00376     xorwf lcountL,W
002E   1D03           00377     skpz
002F   3???           00378     bra tasks
                      00379 ; this is end of field
                      00380 ; reset line counter    
0030   01??           00381     clrf lcountL
0031   01??           00382     clrf lcountH
0032   3002           00383     movlw 1<<F_EVEN
0033   06??           00384     xorwf flags,F ; toggle field flag
0034   0009           00385     retfie
                      00386 ; round robin task scheduler
                      00387 ; each task execute once every 1/60th sec.
                      00388 ; condition:    
                      00389 ;   Task must complete inside
                      00390 ;   horizontal period. i.e. before SYNC_PWM period end
                      00391 ; 6 tasks slots available    
0035                  00392 tasks:
                      00393 ; task selector    
0035   08??           00394     movfw lcountL
0036   1903           00395     skpnz
0037   3???           00396     bra task0
0038   0389           00397     decf WREG
0039   1903           00398     skpnz 
003A   3???           00399     bra task1
003B   0389           00400     decf WREG
003C   1903           00401     skpnz
003D   3???           00402     bra task2
003E   3???           00403     bra isr_exit
003F                  00404 task0:
                      00405 #ifdef SOUND_SUPPORT    
                      00406 ; sound timer    
003F   08??           00407     movfw tone_tmr
0040   1903           00408     skpnz
0041   3???           00409     bra isr_exit
0042   0B??           00410     decfsz tone_tmr,F
0043   3???           00411     bra isr_exit
0044   1280           00412     bcf flags,F_SND
0045   003B           00413     banksel AUDIO_PWMCON
0046   13AB           00414     bcf AUDIO_PWMCON,EN
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  21:15:53         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00415 #endif    
0047   3???           00416     bra isr_exit
0048                  00417 task1:   
                      00418 ; game timer    
0048   08??           00419     movf gtimer,F ; 
0049   1903           00420     skpnz
004A   3???           00421     bra isr_exit
004B   0B??           00422     decfsz gtimer,F ; 
004C   3???           00423     bra isr_exit ;
004D   1180           00424     bcf flags, F_GTMR
004E   3???           00425     bra isr_exit ;
004F                  00426 task2:
                      00427 ; rotate lfsr
004F   36??           00428     lsrf randH
0050   0C??           00429     rrf randL
0051   1803           00430     skpnc
0052   30B4           00431     movlw LFSR_TAPS
0053   06??           00432     xorwf randH
0054                  00433 isr_exit:
0054   0A??           00434     incf lcountL
0055   1903           00435     skpnz
0056   0A??           00436     incf lcountH
0057   0009           00437     retfie
                      00438 
                      00439 ;div10    
                      00440 ; divsion by 10    
                      00441 ; needed to convert binary to BCD
                      00442 ; input:
                      00443 ;   acca dividend  16 bits
                      00444 ; output:
                      00445 ;   acca: quotient
                      00446 ;   accbL: remainder    
0058                  00447 div10:
                      00448     disable_video
0058   1500               M     bsf flags, F_MUTEX
0059   3011           00449     movlw 17
005A   00??           00450     movwf rcount
005B   01??           00451     clrf accbL
005C                  00452 div10_loop:
005C   300A           00453     movlw 10
005D   02??           00454     subwf accbL,W
005E   1803           00455     skpnc
005F   00??           00456     movwf accbL
0060   0D??           00457     rlf accaL
0061   0D??           00458     rlf accaH
0062   0D??           00459     rlf accbL
0063   0B??           00460     decfsz rcount
0064   3???           00461     bra div10_loop
0065   36??           00462     lsrf accbL
                      00463     enable_video
0066   1100               M     bcf flags, F_MUTEX
0067   0008           00464     return
                      00465     
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  21:15:53         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00466 ;read_pad    
                      00467 ;read game pad
                      00468 ; store value in 'buttons'
                      00469 ; a button is accepted if
                      00470 ; the Vadc value is below its threshold
0068                  00471 read_pad:
0068   01??           00472     clrf buttons
0069   1A80           00473     btfsc flags, F_SND
006A   0008           00474     return ; can't read while tone playing
006B   0021           00475     banksel TRISA
006C   160C           00476     bsf TRISA,ADC_PIN
006D   0021           00477     banksel ADCON0
006E   141D           00478     bsf ADCON0,ADON
                      00479     tcyDelay 5*4 ; délais d'acquisition 4µsec
  0000                    M     variable r=5*4%5
  0004                    M     variable q=5*4/5
                          M     while r>1
                          M     bra $+1
                          M r-=2
                          M     endw
                          M     if r==1
                          M     nop
                          M     endif
                          M     if q
006F   3004               M     movlw q
0070   3???               M     bra $+1
0071   0B89               M     decfsz WREG
0072   3???               M     bra $-2
                          M     endif
0073   149D           00480     bsf ADCON0,GO
0074   189D           00481     btfsc ADCON0,NOT_DONE
0075   3???           00482     bra $-1
0076   101D           00483     bcf ADCON0,ADON
                      00484 ; try each button from lower to upper
0077                  00485 try_a:
                      00486     try_button A_THR, try_b
0077   3040               M     movlw A_THR
0078   021C               M     subwf ADRESH,W
0079   1803               M     skpnc
007A   3???               M     bra try_b
007B   1600           00487     bsf buttons,BTN_A
007C   3???           00488     bra read_exit
007D                  00489 try_b:    
                      00490     try_button B_THR, try_rt
007D   3095               M     movlw B_THR
007E   021C               M     subwf ADRESH,W
007F   1803               M     skpnc
0080   3???               M     bra try_rt
0081   1680           00491     bsf buttons,BTN_B
0082   3???           00492     bra read_exit
0083                  00493 try_rt:
                      00494     try_button RT_THR, try_up
0083   30B5               M     movlw RT_THR
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  21:15:53         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0084   021C               M     subwf ADRESH,W
0085   1803               M     skpnc
0086   3???               M     bra try_up
0087   1580           00495     bsf buttons,BTN_RT
0088   3???           00496     bra read_exit
0089                  00497 try_up:
                      00498     try_button UP_THR, try_lt
0089   30C6               M     movlw UP_THR
008A   021C               M     subwf ADRESH,W
008B   1803               M     skpnc
008C   3???               M     bra try_lt
008D   1400           00499     bsf buttons,BTN_UP
008E   3???           00500     bra read_exit
008F                  00501 try_lt:
                      00502     try_button LT_THR, try_dn
008F   30D1               M     movlw LT_THR
0090   021C               M     subwf ADRESH,W
0091   1803               M     skpnc
0092   3???               M     bra try_dn
0093   1500           00503     bsf buttons,BTN_LT
0094   3???           00504     bra read_exit
0095                  00505 try_dn:
                      00506     try_button DN_THR, read_exit
0095   30D8               M     movlw DN_THR
0096   021C               M     subwf ADRESH,W
0097   1803               M     skpnc
0098   3???               M     bra read_exit
0099   1480           00507     bsf buttons,BTN_DN
009A                  00508 read_exit:
009A   0021           00509     banksel TRISA
009B   120C           00510     bcf TRISA,ADC_PIN
009C   0008           00511     return
                      00512 
                      00513 #ifdef SOUND_SUPPORT    
                      00514 ; play a tone
                      00515 ; input:
                      00516 ;   t   duration in multiple of 1/60 sec.
                      00517 ;   n   note number
009D                  00518 tone: ; ( t n -- )
009D   0021           00519     banksel TRISA
009E   120C           00520     bcf TRISA,AUDIO_PIN
009F   003B           00521     banksel AUDIO_PWMPRL
00A0   3581           00522     lslf T
00A1   0801           00523     movfw T
00A2   2???           00524     call tone_pr
00A3   00A5           00525     movwf AUDIO_PWMPRL
00A4   3689           00526     lsrf WREG
00A5   00A3           00527     movwf AUDIO_PWMDCL
00A6   0A01           00528     incf T,W
00A7   2???           00529     call tone_pr
00A8   00A6           00530     movwf AUDIO_PWMPRH
00A9   3689           00531     lsrf WREG
00AA   00A4           00532     movwf AUDIO_PWMDCH
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  21:15:53         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00AB   1803           00533     skpnc
00AC   17A3           00534     bsf AUDIO_PWMDCL,7
                      00535     pop
00AD   0017               M     moviw SP--
                      00536     pop
00AE   0017               M     moviw SP--
00AF   00??           00537     movwf tone_tmr
00B0   17AB           00538     bsf AUDIO_PWMCON,EN
00B1   17AF           00539     bsf AUDIO_PWMLDCON,LDA
00B2   1680           00540     bsf flags,F_SND
00B3   0008           00541     return
                      00542 #endif
                      00543     
                      00544 ; set_yptr    
                      00545 ; set FSR0 to point to
                      00546 ; video_buffer line y    
                      00547 ; input:
                      00548 ;   y  line number {0:YZISE-1}
                      00549 ; output:
                      00550 ;   FSR0 point to beginning of line y    
00B4                  00551 set_yptr: ; ( y -- )
00B4   3030           00552     movlw VIDEO_BUFFER&0xff
00B5   0084           00553     movwf FSR0L
00B6   3020           00554     movlw VIDEO_BUFFER>>8
00B7   0085           00555     movwf FSR0H
00B8   3581           00556     lslf T,F
00B9   3501           00557     lslf T,W
00BA   0781           00558     addwf T,F
                      00559     pop
00BB   0017               M     moviw SP--
00BC   0784           00560     addwf FSR0L
00BD   0103           00561     clrw 
00BE   3D85           00562     addwfc FSR0H
00BF   0008           00563     return
                      00564     
                      00565 ;video_serialize
                      00566 ; serialise video pixels to output pin
                      00567 ; called by isr    
                      00568 ; input:
                      00569 ;   none
                      00570 ; output:
                      00571 ;   none    
00C0                  00572 video_serialize: 
                      00573     tcyDelay HORZ_DLY
  0000                    M     variable r=HORZ_DLY%5
  000A                    M     variable q=HORZ_DLY/5
                          M     while r>1
                          M     bra $+1
                          M r-=2
                          M     endw
                          M     if r==1
                          M     nop
                          M     endif
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  21:15:53         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if q
00C0   300A               M     movlw q
00C1   3???               M     bra $+1
00C2   0B89               M     decfsz WREG
00C3   3???               M     bra $-2
                          M     endif
00C4   0804           00574     movfw FSR0L
                      00575     push
00C5   001C               M     movwi ++SP
00C6   0805           00576     movfw FSR0H
                      00577     push
00C7   001C               M     movwi ++SP
00C8   3046           00578     movlw FIRST_VIDEO
00C9   02??           00579     subwf lcountL,W
00CA   3689           00580     lsrf WREG
00CB   3689           00581     lsrf WREG
                      00582     push      ; FSR0L FSR0H y
00CC   001C               M     movwi ++SP
00CD   2???           00583     call set_yptr ; FSR0L FSR0H
                      00584     lit BPL ; FSR0L FSR0H BPL
00CE   3006               M    movlw BPL
00CF   001C               M    movwi ++SP 
00D0   0023           00585     banksel RCSTA
00D1   179D           00586     bsf RCSTA,SPEN
00D2                  00587 byte_serialize:    
00D2   0012           00588     moviw FSR0++
00D3   0023           00589     banksel PIXEL_TXREG
00D4   009A           00590     movwf PIXEL_TXREG
00D5   0020           00591     banksel TX_PIR
00D6   1E11           00592     btfss TX_PIR,TXIF
00D7   3???           00593     bra $-1
00D8   0B81           00594     decfsz T
00D9   3???           00595     bra byte_serialize
                      00596     drop ; discard T
00DA   317F               M    addfsr SP,-1
00DB   0023           00597     banksel PIXEL_TXREG
00DC   019A           00598     clrf PIXEL_TXREG
00DD   0020           00599     banksel TX_PIR
00DE   1E11           00600     btfss TX_PIR,TXIF
00DF   3???           00601     bra $-1
00E0   0023           00602     banksel RCSTA
00E1   139D           00603     bcf RCSTA, SPEN
                      00604     pop
00E2   0017               M     moviw SP--
00E3   0085           00605     movwf FSR0H
                      00606     pop
00E4   0017               M     moviw SP--
00E5   0084           00607     movwf FSR0L
00E6   0008           00608     return
                      00609 
                      00610 ; clear_screen
                      00611 ; set all pixels black
                      00612 ; input:
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  21:15:53         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00613 ;   none
                      00614 ; output:
                      00615 ;   none    
00E7                  00616 clear_screen: 
                      00617     disable_video
00E7   1500               M     bsf flags, F_MUTEX
                      00618     lit 0
00E8   3000               M    movlw 0
00E9   001C               M    movwi ++SP 
00EA   2???           00619     call set_yptr
00EB   30C0           00620     movlw BUFFER_SIZE
                      00621     push  ; T=byte count  
00EC   001C               M     movwi ++SP
00ED   3000           00622     movlw 0
00EE                  00623 cls_loop:    
00EE   001A           00624     movwi FSR0++
00EF   0B81           00625     decfsz T
00F0   3???           00626     bra cls_loop
                      00627     drop
00F1   317F               M    addfsr SP,-1
                      00628     enable_video
00F2   1100               M     bcf flags, F_MUTEX
00F3   0008           00629     return
                      00630 
                      00631 ;set_pixel_ptr    
                      00632 ;set FSR0 pointer at byte containing pixel x,y
                      00633 ; input:
                      00634 ;   x,y coordinates of pixel in video_buffer    
                      00635 ; output:
                      00636 ;   WREG = pixel mask  
                      00637 ; NOTE: EUSART output Least Significant Bit first
                      00638 ;       LSB appear left on screen.
00F4                  00639 set_pixel_ptr:  ; ( x y -- )
                      00640     disable_video
00F4   1500               M     bsf flags, F_MUTEX
00F5   2???           00641     call set_yptr
                      00642 ; FSR0+x/8
00F6   3601           00643     lsrf T,W   
00F7   3689           00644     lsrf WREG
00F8   3689           00645     lsrf WREG
00F9   0784           00646     addwf FSR0L
00FA   0103           00647     clrw
00FB   3D85           00648     addwfc FSR0H
                      00649 ;create bit mask    
00FC   3007           00650     movlw 7
00FD   0581           00651     andwf T,F ; T=bit position
00FE   3001           00652     movlw 0x1
00FF   1903           00653     skpnz 
0100   3???           00654     bra mask01 ; least significant bit
0101                  00655 mask00:
0101   3589           00656     lslf WREG
0102   0B81           00657     decfsz T
0103   3???           00658     bra mask00
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  21:15:53         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0104                  00659 mask01:
                      00660     drop ; discard T
0104   317F               M    addfsr SP,-1
                      00661     enable_video
0105   1100               M     bcf flags, F_MUTEX
0106   0008           00662     return
                      00663 
                      00664 ; set_pixel
                      00665 ; set x,y pixel to 1
                      00666 ; input:
                      00667 ;   x,y pixel coordinates x{0:XSIZE-1},y{0:YSIZE-1}
                      00668 ; output:
                      00669 ;   none
0107                  00670 set_pixel: ; ( x y -- )
0107   2???           00671     call set_pixel_ptr
0108   0480           00672     iorwf INDF0,F
0109   0008           00673     return
                      00674 
                      00675 ; clear_pixel
                      00676 ; set x,y pixel to 0
                      00677 ; input:
                      00678 ;   x,y pixel coordinates x{0:XSIZE-1},y{0:YSIZE-1}
                      00679 ; output:
                      00680 ;   none
010A                  00681 clear_pixel: ; ( x y -- )
010A   2???           00682     call set_pixel_ptr
010B   0989           00683     comf WREG
010C   0580           00684     andwf INDF0,F
010D   0008           00685     return
                      00686 
                      00687 ; get_pixel    
                      00688 ; return state of pixel
                      00689 ; input:
                      00690 ;   x,y pixel coordinates x{0:XSIZE-1},y{0:YSIZE-1}
                      00691 ; output:
                      00692 ;   WREG=0|2^n  where n{0:7}
                      00693 ;   Z=1 when T==0    
010E                  00694 get_pixel: ; ( x y -- )
010E   2???           00695     call set_pixel_ptr
010F   0500           00696     andwf INDF0,W
0110   0008           00697     return
                      00698     
                      00699 ; xor_pixel
                      00700 ; inverse pixel at x,y coordinates
                      00701 ; input:
                      00702 ;   x,y pixel coordinates x{0:XSIZE-1},y{0:YSIZE-1}
                      00703 ; output:
                      00704 ;   T= 0|1  collision flag: 0 false, 1 true
0111                  00705 xor_pixel: ; ( x y -- f )
0111   2???           00706     call set_pixel_ptr
0112   0680           00707     xorwf INDF0,F
0113   0500           00708     andwf INDF0,W
0114   3000           00709     movlw 0
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  21:15:53         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0115   1903           00710     skpnz
0116   3001           00711     movlw 1
                      00712     push
0117   001C               M     movwi ++SP
0118   0008           00713     return
                      00714 
                      00715 ;xor_row    
                      00716 ; draw row of 4 pixels
                      00717 ; stop when n==0    
                      00718 ; input:
                      00719 ;   {x,y} left coordinates
                      00720 ;   n pixels to draw, 4 bits in high nibble
                      00721 ;   f collision flag to be modified    
                      00722 ; output:
                      00723 ;   f=collision flag, return modified value   
                      00724 ; >> no bank dependency << 
0119                  00725 xor_row: ; ( f n x y -- f )
                      00726 ; bounds check y
0119   1B81           00727     btfsc T,7
011A   3???           00728     bra xor_row_done ; y<0 out of screen
011B   3020           00729     movlw YSIZE
011C   0201           00730     subwf T,W
011D   1803           00731     skpnc
011E   3???           00732     bra xor_row_done ; y>=YSIZE out of screen
011F                  00733 xor_row01:    
                      00734 ; check for empty row
                      00735     pick 2 ; check if n==0
011F   3F7E               M     moviw -2[SP]
0120   1903           00736     skpnz
0121   3???           00737     bra xor_row_done ; row empty nothing to do
0122   3589           00738     lslf WREG
                      00739     insert 2  ; save shifted n
0123   3FFE               M    movwi -2[SP]
0124   1C03           00740     skpc
0125   3???           00741     bra xor_row02 ; bit==0 no draw
                      00742 ; bounds check x{0:XSIZE-1}    
                      00743     pick 1  ; WREG=x
0126   3F7F               M     moviw -1[SP]
0127   1B89           00744     btfsc WREG,7 
0128   3???           00745     bra xor_row02 ; x<0 out of screen
0129   3C2F           00746     sublw XSIZE-1
012A   1C03           00747     skpc
012B   3???           00748     bra xor_row_done ; x>=XSIZE out of screen
                      00749     over ; f n x y x 
012C   3F7F               M     moviw -1[SP]
                          M     push
012D   001C               M     movwi ++SP
                      00750     over ; f n x y x y
012E   3F7F               M     moviw -1[SP]
                          M     push
012F   001C               M     movwi ++SP
0130   2???           00751     call xor_pixel ; -- f n x y f
                      00752     pick 4 ; pick flag
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  21:15:53         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0131   3F7C               M     moviw -4[SP]
0132   0481           00753     iorwf T,F
                      00754     pop      ; -- f n x y
0133   0017               M     moviw SP--
                      00755     insert 3 ; store modified flag
0134   3FFD               M    movwi -3[SP]
0135                  00756 xor_row02:
                      00757     inc_n 1  ; x+=1
0135   3F7F               M     moviw -1[SP]
0136   0A89               M     incf WREG,F
0137   3FFF               M     movwi -1[SP]
0138   3???           00758     bra xor_row01
0139                  00759 xor_row_done: ; f n x y
                      00760     drop_n 3  ; only keep f
0139   317D               M     addfsr SP,-3
013A   0008           00761     return
                      00762 
                      00763 ;get_flash_word    
                      00764 ; read flash memory word
                      00765 ; input:
                      00766 ;   lo is low byte of address
                      00767 ;   hi is high byte of address
                      00768 ;   ofs offset in table {0:255}    
                      00769 ; output:
                      00770 ;   PMDATH:PMDAL contain 14 bits data word
                      00771 ;reset <nibble> variable 
                      00772 ; >> modify BSR <<    
013B                  00773 get_flash_word: ; ( ofs lo hi -- )
013B   0023           00774     banksel PMADR
                      00775     pop
013C   0017               M     moviw SP--
013D   0092           00776     movwf PMADRH
                      00777     pop
013E   0017               M     moviw SP--
013F   0091           00778     movwf PMADRL
                      00779     pop
0140   0017               M     moviw SP--
0141   0791           00780     addwf PMADRL
0142   0103           00781     clrw 
0143   3D92           00782     addwfc PMADRH
0144                  00783 read_flash:    
0144   1315           00784     bcf PMCON1,CFGS
0145   1415           00785     bsf PMCON1, RD
0146   0000           00786     nop
0147   0000           00787     nop
0148   01??           00788     clrf nibble
0149   0008           00789     return
                      00790 
                      00791 ;next_flash_word    
                      00792 ; increament pointer 
                      00793 ; and read next flash word    
                      00794 ; >> modify BSR <<    
014A                  00795 next_flash_word:
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  21:15:53         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

014A   0023           00796     banksel PMADR
014B   0A91           00797     incf PMADRL
014C   1903           00798     skpnz
014D   0A92           00799     incf PMADRH
014E   3???           00800     bra read_flash
                      00801 
                      00802 ;get_nibble    
                      00803 ;get nibble from PMDAT
                      00804 ; input:
                      00805 ;   none    
                      00806 ; output:
                      00807 ;   T=nibble in bits 7:4
                      00808 ; increment 'nibble' variable    
                      00809 ; >> modify BSR <<    
014F                  00810 get_nibble: ; ( -- nibble )
014F   3003           00811     movlw 3
0150   06??           00812     xorwf nibble,W
0151   1903           00813     skpnz 
0152   2???           00814     call next_flash_word
0153   0023           00815     banksel PMDAT
                      00816 ; select nibble in word    
0154   08??           00817     movfw nibble
0155   1903           00818     skpnz
0156   3???           00819     bra row0
0157   0B89           00820     decfsz WREG
0158   3???           00821     bra row2
0159                  00822 row1:    
0159   0813           00823     movfw PMDATL
015A   3???           00824     bra nibble_mask
015B                  00825 row2:
015B   0E13           00826     swapf PMDATL,W
015C   3???           00827     bra nibble_mask
015D                  00828 row0:    
015D   0E14           00829     swapf PMDATH,W
015E                  00830 nibble_mask:
015E   39F0           00831     andlw 0xf0
                      00832     push
015F   001C               M     movwi ++SP
0160   0A??           00833     incf nibble,F ; advance nibble counter
0161   0008           00834     return
                      00835 
                      00836 ;print_row    
                      00837 ; print 4 pixels row
                      00838 ; inputs:
                      00839 ;   x,y left coordinates
                      00840 ;   f  collision flag
                      00841 ; output:    
                      00842 ;   advance y coordinate for next row    
0162                  00843 print_row: ; ( x y f -- x y f )     
0162   2???           00844     call get_nibble ; x y f -- x y f n 
                      00845     pick 3 ; x
0163   3F7D               M     moviw -3[SP]
                      00846     push    ; x y f n x
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  21:15:53         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0164   001C               M     movwi ++SP
                      00847     pick 3  ; y
0165   3F7D               M     moviw -3[SP]
                      00848     push      ; x y f n x y
0166   001C               M     movwi ++SP
0167   2???           00849     call xor_row ; x y f n x y -- x y f
                      00850     inc_n 1 ; y+=1
0168   3F7F               M     moviw -1[SP]
0169   0A89               M     incf WREG,F
016A   3FFF               M     movwi -1[SP]
016B   0008           00851     return
                      00852 
                      00853 ;print_char     
                      00854 ; draw character in video_buffer 
                      00855 ; input:
                      00856 ;   x,y left/top coordinates
                      00857 ;   c   character to print    
016C                  00858 print_char: ; ( x y c -- )
016C   3581           00859     lslf T ; 2 words per table entry
                      00860     lit low(digits)
016D   30??               M    movlw low(digits)
016E   001C               M    movwi ++SP 
                      00861     lit high(digits) ; x y ofs adrL adrH
016F   30??               M    movlw high(digits)
0170   001C               M    movwi ++SP 
0171   2???           00862     call get_flash_word  ; -- x y 
                      00863     lit 0   ; x y f=0
0172   3000               M    movlw 0
0173   001C               M    movwi ++SP 
0174   2???           00864     call print_row
0175   2???           00865     call print_row
0176   2???           00866     call print_row 
0177   2???           00867     call print_row 
0178   2???           00868     call print_row 
                      00869     drop_n 3  ; ( x y f -- )
0179   317D               M     addfsr SP,-3
017A   0008           00870     return
                      00871 
                      00872 ;print_tetrim    
                      00873 ; print current tetriminos
                      00874 ; input:
                      00875 ;   arguments in game variables   
                      00876 ;   titrim: tetriminos id
                      00877 ;   angle: rotation angle    
                      00878 ;   tx,ty  left/top coordinates
                      00879 ; output:
                      00880 ;   collision flag,  0 if no collision    
                      00881 ; >> modify BSR <<    
017B                  00882 print_tetrim: ; (  -- f )
017B   0020           00883     banksel GAME_VAR
017C   35??           00884     lslf tetrim,W
017D   3589           00885     lslf WREG
                      00886     push
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  21:15:53         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

017E   001C               M     movwi ++SP
017F   3018           00887     movlw 24
0180   0201           00888     subwf T,W
0181   1803           00889     skpnc
0182   3???           00890     bra ti ; I tetrominos
0183   08??           00891     movfw angle
0184   0781           00892     addwf T,F
0185   30??           00893     movlw low(tetriminos)
                      00894     push    ; ofs addrL
0186   001C               M     movwi ++SP
0187   30??           00895     movlw high(tetriminos)
                      00896     push    ; ofs addrL addrH
0188   001C               M     movwi ++SP
0189   3???           00897     bra prt01
018A                  00898 ti: ; special treatment for I tetriminos 2 words per table entry
018A   0181           00899     clrf T
018B   35??           00900     lslf angle,W
018C   0781           00901     addwf T,F
018D   30??           00902     movlw low(I0) 
                      00903     push     ; ofs addrL
018E   001C               M     movwi ++SP
018F   30??           00904     movlw high(I0)
                      00905     push     ; ofs addrL addrH
0190   001C               M     movwi ++SP
0191                  00906 prt01:    
0191   2???           00907     call get_flash_word  ; of addrL addrH --
0192   0020           00908     banksel GAME_VAR
0193   08??           00909     movfw tx
                      00910     push    ; -- x
0194   001C               M     movwi ++SP
0195   08??           00911     movfw ty
                      00912     push    ; -- x y 
0196   001C               M     movwi ++SP
                      00913     lit 0   ; -- x y f
0197   3000               M    movlw 0
0198   001C               M    movwi ++SP 
0199   2???           00914     call print_row ; x y f -- x y+1 f
019A   2???           00915     call print_row
019B   2???           00916     call print_row
019C   0023           00917     banksel PMDAT
019D   3030           00918     movlw 0x30
019E   0514           00919     andwf PMDATH,W
019F   1903           00920     skpnz
01A0   2???           00921     call print_row
01A1   0801           00922     movfw T
                      00923     drop_n 3
01A2   317D               M     addfsr SP,-3
                      00924     push  ; -- f
01A3   001C               M     movwi ++SP
01A4   0008           00925     return
                      00926 
                      00927 ;print_label    
                      00928 ;print a text line stored in program memory
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  21:15:53         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00929 ; text terminated by 0xff
                      00930 ; input: 
                      00931 ;  x,y left coordinates
                      00932 ;  idx  index of message in table 'labels'   
01A5                  00933 print_label: ; ( x y idx -- )
                      00934     lit 0    ; x y idx i  'i' is array indice
01A5   3000               M    movlw 0
01A6   001C               M    movwi ++SP 
01A7                  00935 prt_lbl_loop:
                      00936     dup      ; x y idx i i
01A7   0801               M     movfw T
01A8   001C               M     movwi ++SP
                      00937     pick 2   ; WREG=idx
01A9   3F7E               M     moviw -2[SP]
01AA   2???           00938     call labels ; x y idx i i -- x y idx i  
01AB   1B89           00939     btfsc WREG,7
01AC   3???           00940     bra prt_lbl_done
                      00941     push ; x y idx i c
01AD   001C               M     movwi ++SP
                      00942     pick 4
01AE   3F7C               M     moviw -4[SP]
                      00943     push    ; x y idx i c x 
01AF   001C               M     movwi ++SP
                      00944     pick 4
01B0   3F7C               M     moviw -4[SP]
                      00945     push    ; x y idx i c x y
01B1   001C               M     movwi ++SP
                      00946     ;rot            ; x y idx i x y c
                      00947     pick 2 ; WREG = c
01B2   3F7E               M     moviw -2[SP]
                      00948     push   ;  x y idc i c x y c
01B3   001C               M     movwi ++SP
01B4   2???           00949     call print_char ; -- x y idx i c
                      00950     drop    ; x y idx i 
01B5   317F               M    addfsr SP,-1
01B6   0A81           00951     incf T
                      00952     pick 3    ; x
01B7   3F7D               M     moviw -3[SP]
01B8   3E04           00953     addlw 4   ; x+=4
                      00954     insert 3  
01B9   3FFD               M    movwi -3[SP]
01BA   3???           00955     bra prt_lbl_loop
01BB                  00956 prt_lbl_done:
                      00957     drop_n 4
01BB   317C               M     addfsr SP,-4
01BC   0008           00958     return
                      00959     
                      00960 ;print_int
                      00961 ;print an integer
                      00962 ;from right to left ( least significant digit first)
                      00963 ; input:    
                      00964 ;   x,y  coordinate right end
                      00965 ;   number to print in acca    
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  21:15:53         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00966 ; output:
                      00967 ;   none
                      00968 ; condition:    
                      00969 ;   accbL contain digit after div10 call    
01BD                  00970 print_int: ; ( x y -- )
01BD   08??           00971     movfw accaH
01BE   04??           00972     iorwf accaL,W
01BF   1903           00973     skpnz
01C0   3???           00974     bra print_last
                      00975     over
01C1   3F7F               M     moviw -1[SP]
                          M     push
01C2   001C               M     movwi ++SP
                      00976     over    ; x y x y
01C3   3F7F               M     moviw -1[SP]
                          M     push
01C4   001C               M     movwi ++SP
01C5   2???           00977     call div10
01C6   08??           00978     movfw accbL ; remainder of division
                      00979     push   ; x y x y d
01C7   001C               M     movwi ++SP
01C8   2???           00980     call print_char ; -- x y 
                      00981     pick 1
01C9   3F7F               M     moviw -1[SP]
                      00982     push
01CA   001C               M     movwi ++SP
01CB   3004           00983     movlw 4
01CC   0281           00984     subwf T,F
                      00985     pop
01CD   0017               M     moviw SP--
                      00986     insert 1
01CE   3FFF               M    movwi -1[SP]
01CF   3???           00987     bra print_int
01D0                  00988 print_last:
                      00989     pick 1
01D0   3F7F               M     moviw -1[SP]
01D1   3A2B           00990     xorlw 43
01D2   1D03           00991     skpz
01D3   3???           00992     bra no_zero
                      00993     push
01D4   001C               M     movwi ++SP
01D5   3???           00994     bra print_char
01D6                  00995 no_zero:
                      00996     drop_n 2
01D6   317E               M     addfsr SP,-2
01D7   0008           00997     return
                      00998     
                      00999 ; draw horizontal line ( length  y x -- )
                      01000 ; inputs:
                      01001 ;   length of line
                      01002 ;   {x,y} left coordinates       
01D8                  01003 hline:
                      01004     pick 2
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  21:15:53         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01D8   3F7E               M     moviw -2[SP]
01D9   1903           01005     skpnz
01DA   3???           01006     bra hline_done
01DB   0389           01007     decf WREG
                      01008     insert 2
01DC   3FFE               M    movwi -2[SP]
                      01009     dup     ; len y x x
01DD   0801               M     movfw T
01DE   001C               M     movwi ++SP
                      01010     pick 2
01DF   3F7E               M     moviw -2[SP]
                      01011     push    ; len y x x y
01E0   001C               M     movwi ++SP
01E1   2???           01012     call xor_pixel
                      01013     drop
01E2   317F               M    addfsr SP,-1
01E3   0A81           01014     incf T  ; len y x+1
01E4   3???           01015     bra hline
01E5                  01016 hline_done:    
                      01017     drop_n 3
01E5   317D               M     addfsr SP,-3
01E6   0008           01018     return
                      01019 
                      01020 ; vline    
                      01021 ;draw vertical line ( length x y -- )
                      01022 ; inputs:
                      01023 ;   length of line
                      01024 ;   {x,y} top coordinates
01E7                  01025 vline:  ; ( len x y -- ) 
                      01026     pick 2 
01E7   3F7E               M     moviw -2[SP]
01E8   1903           01027     skpnz
01E9   3???           01028     bra vline_done
01EA   0389           01029     decf WREG
                      01030     insert 2
01EB   3FFE               M    movwi -2[SP]
                      01031     over     ; l x y x
01EC   3F7F               M     moviw -1[SP]
                          M     push
01ED   001C               M     movwi ++SP
                      01032     over     ; l x y x y    
01EE   3F7F               M     moviw -1[SP]
                          M     push
01EF   001C               M     movwi ++SP
01F0   2???           01033     call xor_pixel ; -- l x y f
                      01034     drop
01F1   317F               M    addfsr SP,-1
01F2   0A81           01035     incf T,F
01F3   3???           01036     bra vline
01F4                  01037 vline_done:
                      01038     drop_n 3
01F4   317D               M     addfsr SP,-3
01F5   0008           01039     return
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  21:15:53         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01040     
  0000000A            01041 WELL_WIDTH equ 10
  00000016            01042 WELL_DEPTH equ 22 
01F6                  01043 game_init:
01F6   2???           01044     call clear_screen
                      01045 ; draw game well    
                      01046     lit WELL_DEPTH ; len
01F7   3016               M    movlw WELL_DEPTH
01F8   001C               M    movwi ++SP 
                      01047     lit 0          ; len x
01F9   3000               M    movlw 0
01FA   001C               M    movwi ++SP 
                      01048     lit 0          ; len x y
01FB   3000               M    movlw 0
01FC   001C               M    movwi ++SP 
01FD   2???           01049     call vline
                      01050     lit WELL_DEPTH
01FE   3016               M    movlw WELL_DEPTH
01FF   001C               M    movwi ++SP 
                      01051     lit WELL_WIDTH+1
0200   300B               M    movlw WELL_WIDTH+1
0201   001C               M    movwi ++SP 
                      01052     lit 0
0202   3000               M    movlw 0
0203   001C               M    movwi ++SP 
0204   2???           01053     call vline
                      01054     lit WELL_WIDTH+2
0205   300C               M    movlw WELL_WIDTH+2
0206   001C               M    movwi ++SP 
                      01055     lit WELL_DEPTH
0207   3016               M    movlw WELL_DEPTH
0208   001C               M    movwi ++SP 
                      01056     lit 0
0209   3000               M    movlw 0
020A   001C               M    movwi ++SP 
020B   2???           01057     call hline
                      01058 ; print "SCORE" label    
                      01059     lit WELL_WIDTH+3 ; x
020C   300D               M    movlw WELL_WIDTH+3
020D   001C               M    movwi ++SP 
                      01060     lit 0            ; y
020E   3000               M    movlw 0
020F   001C               M    movwi ++SP 
                      01061     lit LBL_SCORE         
0210   3000               M    movlw LBL_SCORE
0211   001C               M    movwi ++SP 
0212   2???           01062     call print_label
                      01063 ; print "LINES" label    
                      01064     lit WELL_WIDTH+3 ; x
0213   300D               M    movlw WELL_WIDTH+3
0214   001C               M    movwi ++SP 
                      01065     lit 12           ; y
0215   300C               M    movlw 12
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  21:15:53         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0216   001C               M    movwi ++SP 
                      01066     lit LBL_LINES
0217   3001               M    movlw LBL_LINES
0218   001C               M    movwi ++SP 
0219   2???           01067     call print_label
                      01068 ; variables initialization
021A   1600           01069     bsf flags,F_GSTOP
021B                  01070 clear_score:
021B   0020           01071     banksel GAME_VAR
021C   01??           01072     clrf scoreL
021D   01??           01073     clrf scoreH
021E   01??           01074     clrf droppedL
021F   01??           01075     clrf droppedH
0220   0008           01076     return
                      01077 
                      01078 ; drop 1 row
                      01079 ; input:
                      01080 ;   r  row to drop
                      01081 ; output:
                      01082 ;   none
0221                  01083 drop1: ; ( r -- )
                      01084     reserve 1 ; r x  
0221   3141               M     addfsr SP, 1 
0222                  01085 row_loop: ; y{r:1}
0222   300A           01086     movlw 10
0223   0081           01087     movwf T ; -- r x
0224                  01088 col_loop:  ; x{10:1}
                      01089     dup   ; -- r x x
0224   0801               M     movfw T
0225   001C               M     movwi ++SP
                      01090     pick 2
0226   3F7E               M     moviw -2[SP]
0227   0389           01091     decf WREG
                      01092     push  ; -- r x x r-1
0228   001C               M     movwi ++SP
0229   2???           01093     call get_pixel ; -- r x p
022A   00??           01094     movwf t0
                      01095     dup         ; r x x
022B   0801               M     movfw T
022C   001C               M     movwi ++SP
                      01096     pick 2
022D   3F7E               M     moviw -2[SP]
                      01097     push        ; r x x r
022E   001C               M     movwi ++SP
022F   08??           01098     movf t0,F
0230   1D03           01099     skpz
0231   3???           01100     bra drop00
0232   2???           01101     call clear_pixel ;  r x x r -- r x
0233   3???           01102     bra next_pixel
0234                  01103 drop00:
0234   2???           01104     call set_pixel ; r x x r -- r x
0235                  01105 next_pixel:    
0235   0B81           01106     decfsz T    ; r x-1 
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  21:15:53         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0236   3???           01107     bra col_loop
                      01108     dec_n 1  ; dec r
0237   3F7F               M     moviw -1[SP]
0238   0389               M     decf WREG,F
0239   3FFF               M     movwi -1[SP]
023A   1D03           01109     skpz 
023B   3???           01110     bra row_loop
                      01111     drop_n 2
023C   317E               M     addfsr SP,-2
023D   0008           01112     return
                      01113     
                      01114     
  00000000            01115 ROW_EMPTY equ 0     
  0000000A            01116 ROW_FULL equ 10 ; 10 bits in row
                      01117 ; query_row 
                      01118 ; check the state of well row
                      01119 ; input:
                      01120 ;   s number of bits set initialized at 0 by caller    
                      01121 ;   r row number: 0 top, 21 bottom  
                      01122 ; output:    
                      01123 ;   s={0:10}  number of bits set
023E                  01124 query_row: ; ( s=0 r -- s=0:10 )
                      01125     lit 10 ; s r x   ; check x from  10 to 1
023E   300A               M    movlw 10
023F   001C               M    movwi ++SP 
0240                  01126 qr00:
                      01127     dup   ; s r x x
0240   0801               M     movfw T
0241   001C               M     movwi ++SP
                      01128     pick 2 
0242   3F7E               M     moviw -2[SP]
                      01129     push  ; s r x x y
0243   001C               M     movwi ++SP
0244   2???           01130     call get_pixel ; -- s r x
0245   1903           01131     skpnz   ; Z modified by get_pixel
0246   3???           01132     bra qr01
                      01133     inc_n 2
0247   3F7E               M     moviw -2[SP]
0248   0A89               M     incf WREG,F
0249   3FFE               M     movwi -2[SP]
024A                  01134 qr01:    
024A   0B81           01135     decfsz T
024B   3???           01136     bra qr00
                      01137     drop_n 2 ; -- s
024C   317E               M     addfsr SP,-2
024D   0008           01138     return
                      01139 
                      01140 ; count and drop full rows
                      01141 ; input:
                      01142 ;   none
                      01143 ; output:
                      01144 ;   n number of droppend rows
                      01145 ;condition:
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  21:15:53         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01146 ;  check each row from bottom up
                      01147 ;  stop at first empty row
                      01148 ;  full rows are dropped    
024E                  01149 count_full: ; ( -- n)
                      01150     lit 0 ; full rows counter
024E   3000               M    movlw 0
024F   001C               M    movwi ++SP 
                      01151     lit 21 ; row number {21:1}
0250   3015               M    movlw 21
0251   001C               M    movwi ++SP 
0252                  01152 count_loop:
                      01153     lit 0   ; n r s  number of bits set
0252   3000               M    movlw 0
0253   001C               M    movwi ++SP 
                      01154     over    ; n r s r
0254   3F7F               M     moviw -1[SP]
                          M     push
0255   001C               M     movwi ++SP
0256   2???           01155     call query_row ; n r s r -- n r s
                      01156     pop     ; n r
0257   0017               M     moviw SP--
0258   1903           01157     skpnz
0259   3???           01158     bra count_done
025A   3A0A           01159     xorlw 10
025B   1D03           01160     skpz
025C   3???           01161     bra next_row
                      01162 ; this is a full row    
                      01163     inc_n 1 ; increment n
025D   3F7F               M     moviw -1[SP]
025E   0A89               M     incf WREG,F
025F   3FFF               M     movwi -1[SP]
                      01164     dup    ; n r r
0260   0801               M     movfw T
0261   001C               M     movwi ++SP
0262   2???           01165     call drop1 ; n r r -- n r
0263   0A81           01166     incf T,F
0264                  01167 next_row:
0264   0B81           01168     decfsz T,F
0265   3???           01169     bra count_loop
0266                  01170 count_done:
                      01171     drop   ; n r -- n
0266   317F               M    addfsr SP,-1
0267   0008           01172     return
                      01173     
                      01174 ; generate a new tetriminos
                      01175 ; input:
                      01176 ;   none
                      01177 ; output:
                      01178 ;   none
0268                  01179 new_tminos:
0268   0020           01180     banksel GAME_VAR
0269   3007           01181     movlw 7
026A   05??           01182     andwf randL,W
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  21:15:53         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

026B   3A07           01183     xorlw 7
026C   1D03           01184     skpz
026D   3A07           01185     xorlw 7
026E   00??           01186     movwf tetrim
026F   3003           01187     movlw 3
0270   05??           01188     andwf randH,W
0271   00??           01189     movwf angle
0272   3004           01190     movlw 4
0273   00??           01191     movwf tx
0274   01??           01192     clrf ty
0275   2???           01193     call print_tetrim
                      01194     pop
0276   0017               M     moviw SP--
0277   1D03           01195     skpz
0278   1600           01196     bsf flags, F_GSTOP
0279   2???           01197     call print_tetrim
                      01198     pop
027A   0017               M     moviw SP--
027B   0008           01199     return
                      01200  
                      01201 ; wait player start signal
                      01202 ; button A pressed    
027C                  01203 wait_start:
                      01204 #ifdef SOUND_SUPPORT    
027C   0103           01205     clrw
027D   2???           01206     call korobeiniki
                      01207     push    ; count
027E   001C               M     movwi ++SP
                      01208     lit 0   ; sequence
027F   3000               M    movlw 0
0280   001C               M    movwi ++SP 
0281                  01209 koro:
0281   0A81           01210     incf T,F ; -- count sequence
0282   0801           01211     movfw T  ; WREG=sequence
0283   2???           01212     call korobeiniki
                      01213     push    ; -- count sequence duration
0284   001C               M     movwi ++SP
                      01214     inc_n 1 ;
0285   3F7F               M     moviw -1[SP]
0286   0A89               M     incf WREG,F
0287   3FFF               M     movwi -1[SP]
                      01215     pick 1  
0288   3F7F               M     moviw -1[SP]
0289   2???           01216     call korobeiniki
                      01217     push    ; -- count nidx duration note
028A   001C               M     movwi ++SP
028B   2???           01218     call tone  ; -- count nidx 
                      01219     wait_sound
028C   1A80               M     btfsc flags,F_SND
028D   3???               M     bra $-1
028E   2???           01220     call read_pad
028F   1A00           01221     btfsc buttons, BTN_A
0290   3???           01222     bra wait_end
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  21:15:53         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01223     dec_n 1
0291   3F7F               M     moviw -1[SP]
0292   0389               M     decf WREG,F
0293   3FFF               M     movwi -1[SP]
0294   1D03           01224     skpz
0295   3???           01225     bra koro
                      01226     drop_n 2
0296   317E               M     addfsr SP,-2
                      01227     pause 60
                          M     start_timer 60
0297   303C               M     movlw 60
0298   00??               M     movwf gtimer
0299   1580               M     bsf flags, F_GTMR
                          M     wait_timer
029A   1980               M     btfsc flags, F_GTMR
029B   3???               M     bra $-1
029C   3???           01228     bra wait_start
029D                  01229 wait_end:    
                      01230     drop_n 2
029D   317E               M     addfsr SP,-2
                      01231 #else
                      01232     pause 20
                      01233     call read_pad
                      01234     btfss buttons, BTN_A
                      01235     bra wait_start
                      01236 #endif    
029E   2???           01237     call clear_score
029F   1200           01238     bcf flags, F_GSTOP
02A0   0008           01239     return
                      01240  
                      01241 ; collision test
                      01242 ; after rotation or translation
                      01243 ; input:
                      01244 ;   none
                      01245 ; output:
                      01246 ;   none
02A1                  01247 coll_test: 
02A1   1300           01248     bcf flags, F_COLL
02A2   2???           01249     call print_tetrim ; collision test
                      01250     pop
02A3   0017               M     moviw SP--
02A4   1D03           01251     skpz
02A5   1700           01252     bsf flags, F_COLL
02A6   2???           01253     call print_tetrim ; erase it
                      01254     pop
02A7   0017               M     moviw SP--
02A8   1F00           01255     btfss flags, F_COLL
02A9   0008           01256     return
02AA   0020           01257     banksel GAME_VAR
                      01258 ;    movfw buttons
                      01259     case BTN_B, undo_drop_tetrim
02AB   1A80               M     btfsc buttons,BTN_B
02AC   3???               M     bra undo_drop_tetrim
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  21:15:53         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01260     case BTN_UP, undo_rot_right
02AD   1800               M     btfsc buttons,BTN_UP
02AE   3???               M     bra undo_rot_right
                      01261     case BTN_DN, undo_rot_left
02AF   1880               M     btfsc buttons,BTN_DN
02B0   3???               M     bra undo_rot_left
                      01262     case BTN_RT, undo_move_right
02B1   1980               M     btfsc buttons,BTN_RT
02B2   3???               M     bra undo_move_right
                      01263     case BTN_LT, undo_move_left
02B3   1900               M     btfsc buttons,BTN_LT
02B4   3???               M     bra undo_move_left
02B5   0008           01264     return
02B6                  01265 undo_drop_tetrim:
02B6   03??           01266     decf ty,F
02B7   0008           01267     return
02B8                  01268 undo_rot_right:
02B8   03??           01269     decf angle,F
02B9   3003           01270     movlw 3
02BA   05??           01271     andwf angle,F
02BB   0008           01272     return
02BC                  01273 undo_rot_left:
02BC   0A??           01274     incf angle,F
02BD   3003           01275     movlw 3
02BE   05??           01276     andwf angle,F
02BF   0008           01277     return
02C0                  01278 undo_move_right:
02C0   03??           01279     decf tx,F
02C1   0008           01280     return
02C2                  01281 undo_move_left:
02C2   0A??           01282     incf tx,F
02C3   0008           01283     return
                      01284 
                      01285 ; print score and lines
                      01286 ; input:
                      01287 ;   none
                      01288 ; output:
                      01289 ;   none
02C4                  01290 update_display:    
                      01291 ; print score
02C4   0020           01292     banksel GAME_VAR
02C5   08??           01293     movfw scoreL
02C6   00??           01294     movwf accaL
02C7   08??           01295     movfw scoreH
02C8   00??           01296     movwf accaH
                      01297     lit 43
02C9   302B               M    movlw 43
02CA   001C               M    movwi ++SP 
                      01298     lit 6
02CB   3006               M    movlw 6
02CC   001C               M    movwi ++SP 
02CD   2???           01299     call print_int
                      01300 ;print dropped line
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  21:15:53         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02CE   0020           01301     banksel GAME_VAR
02CF   08??           01302     movfw droppedL
02D0   00??           01303     movwf accaL
02D1   08??           01304     movfw droppedH
02D2   00??           01305     movwf accaH
                      01306     lit 43
02D3   302B               M    movlw 43
02D4   001C               M    movwi ++SP 
                      01307     lit 18
02D5   3012               M    movlw 18
02D6   001C               M    movwi ++SP 
02D7   2???           01308     call print_int
02D8   0008           01309     return
                      01310 
                      01311 ;game_over
                      01312 ; signal game terminated
                      01313 ; input:
                      01314 ;   none
                      01315 ; output:
                      01316 ;   none
02D9                  01317 game_over:
                      01318     lit 3
02D9   3003               M    movlw 3
02DA   001C               M    movwi ++SP 
02DB                  01319 beep:    
                      01320     lit 30
02DB   301E               M    movlw 30
02DC   001C               M    movwi ++SP 
                      01321     lit 0
02DD   3000               M    movlw 0
02DE   001C               M    movwi ++SP 
02DF   2???           01322     call tone
                      01323     wait_sound
02E0   1A80               M     btfsc flags,F_SND
02E1   3???               M     bra $-1
                      01324     pause 15
                          M     start_timer 15
02E2   300F               M     movlw 15
02E3   00??               M     movwf gtimer
02E4   1580               M     bsf flags, F_GTMR
                          M     wait_timer
02E5   1980               M     btfsc flags, F_GTMR
02E6   3???               M     bra $-1
02E7   0B81           01325     decfsz T
02E8   3???           01326     bra beep
                      01327     drop
02E9   317F               M    addfsr SP,-1
02EA   0008           01328     return
                      01329     
                      01330 ;;;;;;;;;;;;;;;;;;;;;;;;;
                      01331 ;   game logic
                      01332 ;;;;;;;;;;;;;;;;;;;;;;;;;    
02EB                  01333 tetris:
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  21:15:53         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02EB   2???           01334     call update_display
                      01335 ;print start prompt
                      01336     lit 0
02EC   3000               M    movlw 0
02ED   001C               M    movwi ++SP 
                      01337     lit 24
02EE   3018               M    movlw 24
02EF   001C               M    movwi ++SP 
                      01338     lit LBL_PRESS
02F0   3002               M    movlw LBL_PRESS
02F1   001C               M    movwi ++SP 
02F2   2???           01339     call print_label
                      01340 ; wait button A press
                      01341 ; to start game    
02F3   2???           01342     call wait_start 
                      01343 ; delete prompt
                      01344     lit 0
02F4   3000               M    movlw 0
02F5   001C               M    movwi ++SP 
                      01345     lit 24
02F6   3018               M    movlw 24
02F7   001C               M    movwi ++SP 
                      01346     lit LBL_PRESS
02F8   3002               M    movlw LBL_PRESS
02F9   001C               M    movwi ++SP 
02FA   2???           01347     call print_label
                      01348 ; game start here
02FB                  01349 game_loop:
                      01350 ; generate new tetriminos
                      01351 ; if collision at this stage
                      01352 ; game is over
02FB   2???           01353     call new_tminos
02FC   1E00           01354     btfss flags, F_GSTOP
02FD   3???           01355     bra fall_loop
02FE   2???           01356     call game_over
02FF   2???           01357     call game_init
0300   3???           01358     bra tetris
0301                  01359 fall_loop: ; tetriminos fall in the well
0301   2???           01360     call print_tetrim
                      01361     pop
0302   0017               M     moviw SP--
                      01362     pause 10
                          M     start_timer 10
0303   300A               M     movlw 10
0304   00??               M     movwf gtimer
0305   1580               M     bsf flags, F_GTMR
                          M     wait_timer
0306   1980               M     btfsc flags, F_GTMR
0307   3???               M     bra $-1
0308   2???           01363     call print_tetrim ; erase tetriminos
                      01364     pop
0309   0017               M     moviw SP--
                      01365 ; read pad
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  21:15:53         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

030A   2???           01366     call read_pad
030B   0020           01367     banksel GAME_VAR
                      01368     case BTN_B, drop_tetrim
030C   1A80               M     btfsc buttons,BTN_B
030D   3???               M     bra drop_tetrim
                      01369     case BTN_UP, rot_right
030E   1800               M     btfsc buttons,BTN_UP
030F   3???               M     bra rot_right
                      01370     case BTN_DN, rot_left
0310   1880               M     btfsc buttons,BTN_DN
0311   3???               M     bra rot_left
                      01371     case BTN_RT, move_right
0312   1980               M     btfsc buttons,BTN_RT
0313   3???               M     bra move_right
                      01372     case BTN_LT, move_left
0314   1900               M     btfsc buttons,BTN_LT
0315   3???               M     bra move_left
0316   3???           01373     bra move_down
0317                  01374 drop_tetrim:
0317   0020           01375     banksel GAME_VAR
0318   0A??           01376     incf ty,F
0319   2???           01377     call coll_test
031A   1F00           01378     btfss flags, F_COLL
031B   3???           01379     bra $-4
                      01380 ;    bcf flags, F_COLL
031C   2???           01381     call print_tetrim
                      01382     pop
031D   0017               M     moviw SP--
031E   3???           01383     bra score_update
031F                  01384 rot_left:
031F   03??           01385     decf angle,F
0320   3003           01386     movlw 3
0321   05??           01387     andwf angle,F
0322   2???           01388     call coll_test
0323   3???           01389     bra move_down
0324                  01390 rot_right:
0324   0A??           01391     incf angle,F
0325   3003           01392     movlw 3
0326   05??           01393     andwf angle,F
0327   2???           01394     call coll_test
0328   3???           01395     bra move_down
0329                  01396 move_left:
0329   03??           01397     decf tx,F
032A   2???           01398     call coll_test
032B   3???           01399     bra move_down
032C                  01400 move_right:
032C   0A??           01401     incf tx,F
032D   2???           01402     call coll_test
                      01403 ; move down
032E                  01404 move_down:
032E   1300           01405     bcf flags, F_COLL
032F   0020           01406     banksel GAME_VAR
0330   0A??           01407     incf ty,F ; tetriminos fall
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  21:15:53         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0331   2???           01408     call print_tetrim ; collision test
                      01409     pop
0332   0017               M     moviw SP--
0333   1D03           01410     skpz
0334   1700           01411     bsf flags, F_COLL
0335   2???           01412     call print_tetrim
                      01413     pop
0336   0017               M     moviw SP--
0337   1F00           01414     btfss flags, F_COLL
0338   3???           01415     bra fall_loop
0339   0020           01416     banksel GAME_VAR
033A   03??           01417     decf ty,F
033B   2???           01418     call print_tetrim
                      01419     pop
033C   0017               M     moviw SP--
033D                  01420 score_update:    
                      01421 ; check full row and clean
033D   2???           01422     call update_display ; erase numbers
033E   2???           01423     call count_full
                      01424 ; add full row count to dropped variable
033F   0020           01425     banksel GAME_VAR
0340   0801           01426     movfw T
0341   07??           01427     addwf droppedL,F ; 
0342   0103           01428     clrw
0343   3D??           01429     addwfc droppedH
                      01430 ; count points = 2^n where n is count of dropped rows {1:4}    
0344   0881           01431     movf T,F
0345   1903           01432     skpnz
0346   3???           01433     bra add_points
0347   3001           01434     movlw 1
0348   3589           01435     lslf WREG
0349   0B81           01436     decfsz T,F
034A   3???           01437     bra $-2
034B                  01438 add_points:
034B   07??           01439     addwf scoreL
034C   0103           01440     clrw
034D   3D??           01441     addwfc scoreH
                      01442     drop 
034E   317F               M    addfsr SP,-1
034F   2???           01443     call update_display ; display new values
0350   3???           01444     bra game_loop
0351   0008           01445     return
                      01446     
0352                  01447 init:
                      01448     pstack_init
0352   0187               M     clrf FSR1H
0353   301F               M     movlw S0
0354   0086               M     movwf FSR1L
                      01449 ; ADC configuration
0355   0021           01450     banksel ADCON0
0356   300C           01451     movlw (PAD_CHS<<CHS0)
0357   009D           01452     movwf ADCON0
0358   3020           01453     movlw (2<<ADCS0)
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  21:15:53         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0359   009E           01454     movwf ADCON1
035A   0024           01455     banksel WPUA
035B   120C           01456     bcf WPUA, PAD_PIN
                      01457 ;;;;;;;;;;;;;;;;;;;;;    
035C   0021           01458     banksel TRISA
035D   30F8           01459     movlw ~((1<<SYNC_OUT)|(1<<VIDEO_OUT)|(1<<LED_PIN))
035E   058C           01460     andwf TRISA,F
035F   0022           01461     banksel VIDEO_LAT
0360   108C           01462     bcf VIDEO_LAT,VIDEO_OUT
0361   100C           01463     bcf LATA,LED_PIN
                      01464 #ifdef SOUND_SUPPORT    
                      01465 ; audio pwm initialization
0362   120C           01466     bcf LATA,AUDIO_PIN
0363   003B           01467     banksel PWM2PH
0364   01A1           01468     clrf PWM2PHL
0365   01A2           01469     clrf PWM2PHH
0366   01A7           01470     clrf PWM2OFL
0367   01A8           01471     clrf PWM2OFH
0368   172B           01472     bsf AUDIO_PWMCON,OE
0369   0022           01473     banksel APFCON
036A   149D           01474     bsf APFCON,P2SEL
                      01475 #endif   
                      01476 ;configure EUSART in sychronsous mode
                      01477 ;to use as pixel serializer
036B   0023           01478     banksel SPBRG
036C   3002           01479     movlw 2
036D   009B           01480     movwf SPBRGL
036E   019C           01481     clrf SPBRGH
036F   019A           01482     clrf TXREG
0370   30B0           01483     movlw (1<<SYNC)|(1<<CSRC)|(1<<TXEN)
0371   009E           01484     movwf TXSTA
0372   179D           01485     bsf RCSTA, SPEN
0373   30CF           01486     movlw ~((1<<CREN)|(1<<SREN))
0374   059D           01487     andwf RCSTA
                      01488 ; configure pwm video sync for horizontal period
0375   003B           01489     banksel SYNC_PWMDCH
0376   01B1           01490     clrf SYNC_PWMPH
0377   01B2           01491     clrf SYNC_PWMPH+1
0378   01BF           01492     clrf SYNC_PWMLDCON
0379   30F5           01493     movlw HORZ_PERIOD&0XFF
037A   00B5           01494     movwf SYNC_PWMPRL
037B   3004           01495     movlw HORZ_PERIOD>>8
037C   00B6           01496     movwf SYNC_PWMPRH
037D   01BE           01497     clrf SYNC_PWMCLKCON
037E   30D0           01498     movlw (3<<OE)|(1<<POL)
037F   00BB           01499     movwf SYNC_PWMCON
0380   305E           01500     movlw HORZ_PULSE&0xff
0381   00B3           01501     movwf SYNC_PWMDCL
0382   3000           01502     movlw HORZ_PULSE>>8
0383   00B4           01503     movwf SYNC_PWMDCH
0384   17BF           01504     bsf SYNC_PWMLDCON,LDA
                      01505    ;enable video interrupt on period match
0385   103D           01506     bcf SYNC_PWMINTF,PRIF
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  21:15:53         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0386   143C           01507     bsf SYNC_PWMINTE,PRIE
                      01508     ; enable peripheral interrupt
0387   0021           01509     banksel SYNC_PIE
0388   1713           01510     bsf SYNC_PIE,SYNC_IE
                      01511     ;enable interrupts
0389   30C0           01512     movlw (1<<GIE)|(1<<PEIE)
038A   008B           01513     movwf INTCON
038B   01??           01514     clrf lcountL
038C   01??           01515     clrf lcountH
038D   01??           01516     clrf flags
                      01517     ; seed lfsr PRNG
038E   30AC           01518     movlw 0xAC
038F   00??           01519     movwf randL
0390   30E1           01520     movlw 0xE1
0391   00??           01521     movwf randH
                      01522 
                      01523 
                      01524 ;;;;;;; test code ;;;;;;;;;;;;;;
                      01525 
                      01526 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
0392                  01527 main:
0392   2???           01528     call game_init
0393   2???           01529     call tetris
0394   3???           01530     bra main
                      01531   
                      01532 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      01533 ;   data tables
                      01534 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      01535 
                      01536 ; **************** encoding ************************************************
                      01537 ; enhanced PIC instructions are coded on 14 bits
                      01538 ; these 14 bits can be read as data using flash memory
                      01539 ; writing/reading mechanism, see datasheet chapter 10 for detail.
                      01540 ; the 'dw' assembler directive encode data in those 14 bits contrary to 'dt'
                      01541 ; directive which encode a single byte as a RETLW instruction.
                      01542 ; So we get a 50% compression by encoding 3 nibbles/flash word. 
                      01543 ; the encoding used in the following tables is as follow:    
                      01544 ; bits 13:12  number of nibbles where 0 means there is more than 3 nibbles
                      01545 ; in this data chunk so 1 or more other words follow this one.    
                      01546 ; other 12 bits are sliced in 4 bits nibbles.
                      01547 ;****************************************************************************
                      01548 
0395                  01549 digits: ; each digit is 5 rows
0395   0EAA 2AE0      01550     dw 0x0EAA,0x2AE0 ; 0
0397   04C4 24E0      01551     dw 0x04C4,0x24E0 ; 1
0399   0E2E 28E0      01552     dw 0x0E2E,0x28E0 ; 2
039B   0E2E 22E0      01553     dw 0x0E2E,0x22E0 ; 3
039D   0AAE 2220      01554     dw 0x0AAE,0x2220 ; 4
039F   0E8E 22E0      01555     dw 0x0E8E,0x22E0 ; 5
03A1   088E 2AE0      01556     dw 0x088E,0x2AE0 ; 6
03A3   0E22 2220      01557     dw 0x0E22,0x2220 ; 7
03A5   0EAE 2AE0      01558     dw 0x0EAE,0x2AE0 ; 8
03A7   0EAE 2220      01559     dw 0x0EAE,0x2220 ; 9
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  21:15:53         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01560 ; letters needed for 'SCORE' and 'LINES" labels
03A9   0EAE 2AA0      01561     dw 0x0EAE,0x2AA0 ; A  code 10
03AB   0688 2860      01562     dw 0x0688,0x2860 ; C  code 11
03AD   0E8E 28E0      01563     dw 0x0E8E,0x28E0 ; E  code 12
03AF   0E44 24E0      01564     dw 0x0E44,0x24E0 ; I  code 13
03B1   0888 28E0      01565     dw 0x0888,0x28E0 ; L  code 14
03B3   08CA 2AA0      01566     dw 0x08CA,0x2AA0 ; N  code 15
03B5   04AA 2A40      01567     dw 0x04AA,0x2A40 ; O  code 16
03B7   0EAE 2880      01568     dw 0x0EAE,0x2880 ; P  code 17
03B9   08EA 2880      01569     dw 0x08EA,0x2880 ; R  code 18
03BB   0684 22C0      01570     dw 0x0684,0x22C0 ; S  code 19
03BD   0040 2400      01571     dw 0x0040,0x2400 ; :  code 20
03BF   2000 2000      01572     dw 0x2000,0x2000 ; space code 21
                      01573 
                      01574 ; comments notation: Rn clockwise rotation n*90 degr.    
                      01575 ; note that vertical I as 4 rows so it needs 2 words    
03C1                  01576 tetriminos: 
03C1   388C           01577     dw 0x388C ; L R0
03C2   30E8           01578     dw 0x30E8 ; L R1
03C3   3C44           01579     dw 0x3C44 ; L R2
03C4   32E0           01580     dw 0x32E0 ; L R3
03C5   344C           01581     dw 0x344C ; J R0
03C6   38E0           01582     dw 0x38E0 ; J R1
03C7   3644           01583     dw 0x3644 ; J R2
03C8   30E2           01584     dw 0x30E2 ; J R3
03C9   3CC0           01585     dw 0x3CC0 ; O R0 
03CA   3CC0           01586     dw 0x3CC0 ; O R2 
03CB   3CC0           01587     dw 0x3CC0 ; O R2 
03CC   3CC0           01588     dw 0x3CC0 ; O R3 
03CD   36C0           01589     dw 0x36C0 ; S R0
03CE   3462           01590     dw 0x3462 ; S R1
03CF   36C0           01591     dw 0x36C0 ; S R2
03D0   3462           01592     dw 0x3462 ; S R3
03D1   3E40           01593     dw 0x3E40 ; T R0
03D2   3262           01594     dw 0x3262 ; T R1
03D3   304E           01595     dw 0x304E ; T R2
03D4   38C8           01596     dw 0x38C8 ; T R3
03D5   3C60           01597     dw 0x3C60 ; Z R0
03D6   34C8           01598     dw 0x34C8 ; Z R1
03D7   3C60           01599     dw 0x3C60 ; Z R3
03D8   34C8           01600     dw 0x34C8 ; Z R4
                      01601 ; annoying! I tetriminos need a special treatment 
                      01602 ; because vertical I need 2 words for encoding.   
03D9   0444 1400      01603 I0: dw 0x0444,0x1400 ; I R0  
03DB   300F 1000      01604     dw 0x300F,0x1000 ; I R1  second word is filling for alignment
03DD   0222 1200      01605     dw 0x0222,0x1200 ; I R2
03DF   10F0 1000      01606     dw 0x10F0,0x1000 ; I R3  
                      01607 
  00000000            01608 LBL_SCORE equ 0
  00000001            01609 LBL_LINES equ 1
  00000002            01610 LBL_PRESS equ 2
03E1                  01611 labels:
03E1   000B           01612     brw
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  21:15:53         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03E2   3???           01613     bra txt_score
03E3   3???           01614     bra txt_lines
03E4   3???           01615     bra txt_press
                      01616     
03E5                  01617 txt_score: ; "SCORE"
                      01618     pop
03E5   0017               M     moviw SP--
03E6   000B           01619     brw
03E7   3413 340B 3410 01620     dt 19,11,16,18,12,20,255
       3412 340C 3414 
       34FF 
                      01621     
03EE                  01622 txt_lines: ; "LINES"
                      01623     pop
03EE   0017               M     moviw SP--
03EF   000B           01624     brw
03F0   340E 340D 340F 01625     dt 14,13,15,12,19,20,255
       340C 3413 3414 
       34FF 
                      01626 
03F7                  01627 txt_press: ; "PRESS A"
                      01628     pop
03F7   0017               M     moviw SP--
03F8   000B           01629     brw
03F9   3411 3412 340C 01630     dt 17,18,12,19,19,21,10,255
       3413 3413 3415 
       340A 34FF 
                      01631 
                      01632     
                      01633 #ifdef SOUND_SUPPORT
0401                  01634 tone_pr:
0401   000B           01635     brw
0402   3402 34ED      01636     dt 0x02, 0xed   ; 330   (MI4)   0
0404   34B5 34DF      01637     dt 0xb5, 0xdf   ; 349   (FA4)   1
0406   3428 34D3      01638     dt 0x28, 0xd3   ; 370   (FA4#)  2
0408   344C 34C7      01639     dt 0x4c, 0xc7   ; 392   (SOL4)  3
040A   341E 34BC      01640     dt 0x1e, 0xbc   ; 415   (SOL4#) 4
040C   348F 34B1      01641     dt 0x8f, 0xb1   ; 440   (LA4)   5
040E   3498 34A7      01642     dt 0x98, 0xa7   ; 466   (LA4#)  6
0410   3430 349E      01643     dt 0x30, 0x9e   ; 494   (SI4)   7
0412   344F 3495      01644     dt 0x4f, 0x95   ; 523hz (DO5)   8
0414   34ED 348C      01645     dt 0xed, 0x8c   ; 554   (DO5#)  9
0416   3404 3485      01646     dt 0x04, 0x85   ; 587   (RÉ5)   10
0418   348D 347D      01647     dt 0x8d, 0x7d   ; 622   (RÉ5#)  11
041A   3481 3476      01648     dt 0x81, 0x76   ; 659   (MI5)   12
041C   34DA 346F      01649     dt 0xda, 0x6f   ; 698   (FA5)   13
041E   3493 3469      01650     dt 0x93, 0x69   ; 740   (FA5#)  14
0420   34A6 3463      01651     dt 0xa6, 0x63   ; 784   (SOL5)  15
0422   340F 345E      01652     dt 0x0f, 0x5e   ; 831   (SOL5#) 16
0424   34C7 3458      01653     dt 0xc7, 0x58   ; 880   (LA5)   17
0426   34CC 3453      01654     dt 0xcc, 0x53   ; 932   (LA5#)  18
0428   3418 344F      01655     dt 0x18, 0x4f   ; 988   (SI5)   19
042A   3482 3442      01656     dt 0x82, 0x42   ; 1046hz (do6)  20
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  21:15:53         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

042C   3400 3400      01657     dt 0, 0         ; silence       21
                      01658     
042E                  01659 korobeiniki: ;folklore russe
                      01660     ;nombre de notes
042E   000B           01661     brw
042F   3422           01662     dt 34
                      01663     ; duré, note
0430   342D 3400      01664     dt 45, 0 
0432   340F 3404      01665     dt 15, 4
0434   341E 3407      01666     dt 30, 7
0436   340F 3403      01667     dt 15, 3
0438   340F 3400      01668     dt 15, 0
                      01669     
043A   342D 3405      01670     dt 45, 5
043C   340F 3409      01671     dt 15, 9
043E   341E 340C      01672     dt 30, 12
0440   340F 340A      01673     dt 15, 10
0442   340F 3408      01674     dt 15, 8
                      01675     
0444   342D 3407      01676     dt 45, 7
0446   340F 3408      01677     dt 15, 8
0448   341E 340A      01678     dt 30, 10
044A   341E 340C      01679     dt 30, 12
                      01680     
044C   341E 3408      01681     dt 30, 8
044E   341E 3405      01682     dt 30, 5
0450   343C 3405      01683     dt 60, 5
                      01684     
0452   342D 340D      01685     dt 45, 13
0454   340F 340F      01686     dt 15, 15
0456   341E 3411      01687     dt 30, 17
0458   340F 340F      01688     dt 15, 15
045A   340F 340D      01689     dt 15, 13
                      01690     
045C   342D 340C      01691     dt 45, 12
045E   340F 340D      01692     dt 15, 13
0460   341E 340C      01693     dt 30, 12
0462   340F 340A      01694     dt 15, 10
0464   340F 3408      01695     dt 15, 8
                      01696     
0466   342D 3407      01697     dt 45, 7
0468   340F 3408      01698     dt 15, 8
046A   341E 340A      01699     dt 30, 10
046C   341E 340C      01700     dt 30, 12
                      01701     
046E   341E 3408      01702     dt 30, 8
0470   341E 3405      01703     dt 30, 5
0472   343C 3405      01704     dt 60, 5
                      01705     
                      01706  #endif
                      01707  
3FE7 1EFF             01708     end
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  21:15:53         PAGE 40


SYMBOL TABLE
  LABEL                             VALUE 

ABDEN                             00000000
ABDOVF                            00000007
ADCON0                            0000009D
ADCON1                            0000009E
ADCON2                            0000009F
ADCS0                             00000004
ADCS1                             00000005
ADCS2                             00000006
ADC_PIN                           00000004
ADDEN                             00000003
ADFM                              00000007
ADFVR0                            00000000
ADFVR1                            00000001
ADGO                              00000001
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADPREF0                           00000000
ADPREF1                           00000001
ADRES                             0000009B
ADRESH                            0000009C
ADRESL                            0000009B
ANSA0                             00000000
ANSA1                             00000001
ANSA2                             00000002
ANSA4                             00000004
ANSELA                            0000018C
APFCON                            0000011D
APFCON0                           0000011D
AUDIO_PIN                         00000004
AUDIO_PWMCLKCON                   00000DAE
AUDIO_PWMCON                      00000DAB
AUDIO_PWMDCH                      00000DA4
AUDIO_PWMDCL                      00000DA3
AUDIO_PWMLDCON                    00000DAF
AUDIO_PWMPRH                      00000DA6
AUDIO_PWMPRL                      00000DA5
AUDIO_PWMTMR                      00000DA9
A_THR                             00000040
BAUDCON                           0000019F
BORCON                            00000116
BORFS                             00000006
BORRDY                            00000000
BPL                               00000006
BRG16                             00000003
BRGH                              00000002
BSR                               00000008
BSR0                              00000000
BSR1                              00000001
BSR2                              00000002
BSR3                              00000003
BSR4                              00000004
BSR_SHAD                          00000FE6
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  21:15:53         PAGE 41


SYMBOL TABLE
  LABEL                             VALUE 

BTN_A                             00000004
BTN_B                             00000005
BTN_DN                            00000001
BTN_LT                            00000002
BTN_RT                            00000003
BTN_UP                            00000000
BUFFER_SIZE                       000000C0
B_THR                             00000095
C                                 00000000
C1HYS                             00000001
C1IE                              00000005
C1IF                              00000005
C1INTN                            00000006
C1INTP                            00000007
C1NCH0                            00000000
C1NCH1                            00000001
C1NCH2                            00000002
C1OE                              00000005
C1ON                              00000007
C1OUT                             00000006
C1PCH0                            00000004
C1PCH1                            00000005
C1POL                             00000004
C1SP                              00000002
C1SYNC                            00000000
CDAFVR0                           00000002
CDAFVR1                           00000003
CFGS                              00000006
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CHS4                              00000006
CM1CON0                           00000111
CM1CON1                           00000112
CMOUT                             00000115
CREN                              00000004
CS0                               00000000
CS1                               00000001
CSRC                              00000007
CWG1CON0                          00000693
CWG1CON1                          00000694
CWG1CON2                          00000695
CWG1DBF                           00000692
CWG1DBF0                          00000000
CWG1DBF1                          00000001
CWG1DBF2                          00000002
CWG1DBF3                          00000003
CWG1DBF4                          00000004
CWG1DBF5                          00000005
CWG1DBR                           00000691
CWG1DBR0                          00000000
CWG1DBR1                          00000001
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  21:15:53         PAGE 42


SYMBOL TABLE
  LABEL                             VALUE 

CWG1DBR2                          00000002
CWG1DBR3                          00000003
CWG1DBR4                          00000004
CWG1DBR5                          00000005
CWGASEL                           00000006
CWGBSEL                           00000005
C_SHAD                            00000000
DACCON0                           00000118
DACCON1                           00000119
DACEN                             00000007
DACLPS                            00000006
DACOE                             00000005
DACPSS0                           00000002
DACPSS1                           00000003
DACR0                             00000000
DACR1                             00000001
DACR2                             00000002
DACR3                             00000003
DACR4                             00000004
DC                                00000001
DCIE                              00000001
DCIF                              00000001
DC_SHAD                           00000001
DN_THR                            000000D8
EN                                00000007
F                                 00000001
FCY                               004C4B40
FERR                              00000002
FIRST_VIDEO                       00000046
FOSC                              01312D00
FREE                              00000004
FSR0                              00000004
FSR0H                             00000005
FSR0H_SHAD                        00000FE9
FSR0L                             00000004
FSR0L_SHAD                        00000FE8
FSR0_SHAD                         00000FE8
FSR1                              00000006
FSR1H                             00000007
FSR1H_SHAD                        00000FEB
FSR1L                             00000006
FSR1L_SHAD                        00000FEA
FSR1_SHAD                         00000FEA
FVRCON                            00000117
FVREN                             00000007
FVRRDY                            00000006
F_COLL                            00000006
F_EVEN                            00000001
F_GSTOP                           00000004
F_GTMR                            00000003
F_MUTEX                           00000002
F_SND                             00000005
F_VSYNC                           00000000
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  21:15:53         PAGE 43


SYMBOL TABLE
  LABEL                             VALUE 

G1ARSEN                           00000006
G1ASDLA0                          00000004
G1ASDLA1                          00000005
G1ASDLB0                          00000006
G1ASDLB1                          00000007
G1ASDSC1                          00000002
G1ASDSFLT                         00000001
G1ASE                             00000007
G1CS0                             00000000
G1EN                              00000007
G1IS0                             00000000
G1IS1                             00000001
G1IS2                             00000002
G1OEA                             00000005
G1OEB                             00000006
G1POLA                            00000003
G1POLB                            00000004
GAME_VAR                          00000000
GIE                               00000007
GO                                00000001
GO_NOT_DONE                       00000001
HFIOFL                            00000003
HFIOFR                            00000004
HFIOFS                            00000000
HORZ_DLY                          00000032
HORZ_PERIOD                       000004F5
HORZ_PULSE                        0000005E
I0                                000003D9
INDF0                             00000000
INDF1                             00000001
INLVLA                            0000038C
INLVLA0                           00000000
INLVLA1                           00000001
INLVLA2                           00000002
INLVLA3                           00000003
INLVLA4                           00000004
INLVLA5                           00000005
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IOCAF                             00000393
IOCAF0                            00000000
IOCAF1                            00000001
IOCAF2                            00000002
IOCAF3                            00000003
IOCAF4                            00000004
IOCAF5                            00000005
IOCAN                             00000392
IOCAN0                            00000000
IOCAN1                            00000001
IOCAN2                            00000002
IOCAN3                            00000003
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  21:15:53         PAGE 44


SYMBOL TABLE
  LABEL                             VALUE 

IOCAN4                            00000004
IOCAN5                            00000005
IOCAP                             00000391
IOCAP0                            00000000
IOCAP1                            00000001
IOCAP2                            00000002
IOCAP3                            00000003
IOCAP4                            00000004
IOCAP5                            00000005
IOCIE                             00000003
IOCIF                             00000000
IRCF0                             00000003
IRCF1                             00000004
IRCF2                             00000005
IRCF3                             00000006
LAST_LINE                         00000106
LAST_VIDEO                        000000C5
LATA                              0000010C
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA4                             00000004
LATA5                             00000005
LBL_LINES                         00000001
LBL_PRESS                         00000002
LBL_SCORE                         00000000
LDA                               00000007
LDS0                              00000000
LDS1                              00000001
LDT                               00000006
LED_PIN                           00000000
LFIOFR                            00000001
LFSR_TAPS                         000000B4
LT_THR                            000000D1
LWLO                              00000005
MC1OUT                            00000000
MFIOFR                            00000002
MODE0                             00000002
MODE1                             00000003
MPWM1EN                           00000000
MPWM1LD                           00000000
MPWM1OUT                          00000000
MPWM2EN                           00000001
MPWM2LD                           00000001
MPWM2OUT                          00000001
MPWM3EN                           00000002
MPWM3LD                           00000002
MPWM3OUT                          00000002
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RI                            00000002
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  21:15:53         PAGE 45


SYMBOL TABLE
  LABEL                             VALUE 

NOT_RMCLR                         00000003
NOT_RWDT                          00000004
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_WPUEN                         00000007
ODA0                              00000000
ODA1                              00000001
ODA2                              00000002
ODA4                              00000004
ODA5                              00000005
ODCONA                            0000028C
OE                                00000006
OERR                              00000001
OFIE                              00000003
OFIF                              00000003
OFM0                              00000005
OFM1                              00000006
OFO                               00000004
OFS0                              00000000
OFS1                              00000001
OPTION_REG                        00000095
OSCCON                            00000099
OSCSTAT                           0000009A
OSCTUNE                           00000098
OSTS                              00000005
OUT                               00000005
P1SEL                             00000000
P2SEL                             00000001
PAD_CHS                           00000003
PAD_PIN                           00000004
PCL                               00000002
PCLATH                            0000000A
PCLATH_SHAD                       00000FE7
PCON                              00000096
PEIE                              00000006
PHIE                              00000002
PHIF                              00000002
PIE1                              00000091
PIE2                              00000092
PIE3                              00000093
PIR1                              00000011
PIR2                              00000012
PIR3                              00000013
PIXEL_TXREG                       0000019A
PLLR                              00000006
PMADR                             00000191
PMADRH                            00000192
PMADRL                            00000191
PMCON1                            00000195
PMCON2                            00000196
PMDAT                             00000193
PMDATH                            00000194
PMDATL                            00000193
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  21:15:53         PAGE 46


SYMBOL TABLE
  LABEL                             VALUE 

POL                               00000004
PORTA                             0000000C
PR2                               0000001B
PRIE                              00000000
PRIF                              00000000
PS0_OPTION_REG                    00000000
PS0_PWM1CLKCON                    00000004
PS0_PWM2CLKCON                    00000004
PS0_PWM3CLKCON                    00000004
PS1_OPTION_REG                    00000001
PS1_PWM1CLKCON                    00000005
PS1_PWM2CLKCON                    00000005
PS1_PWM3CLKCON                    00000005
PS2_OPTION_REG                    00000002
PS2_PWM1CLKCON                    00000006
PS2_PWM2CLKCON                    00000006
PS2_PWM3CLKCON                    00000006
PSA                               00000003
PWM1CLKCON                        00000D9E
PWM1CON                           00000D9B
PWM1CS0                           00000000
PWM1CS1                           00000001
PWM1DC                            00000D93
PWM1DCH                           00000D94
PWM1DCH0                          00000000
PWM1DCH1                          00000001
PWM1DCH2                          00000002
PWM1DCH3                          00000003
PWM1DCH4                          00000004
PWM1DCH5                          00000005
PWM1DCH6                          00000006
PWM1DCH7                          00000007
PWM1DCIE                          00000001
PWM1DCIF                          00000001
PWM1DCL                           00000D93
PWM1DCL0                          00000000
PWM1DCL1                          00000001
PWM1DCL2                          00000002
PWM1DCL3                          00000003
PWM1DCL4                          00000004
PWM1DCL5                          00000005
PWM1DCL6                          00000006
PWM1DCL7                          00000007
PWM1EN                            00000007
PWM1EN_A                          00000000
PWM1IE                            00000004
PWM1IF                            00000004
PWM1INTCON                        00000D9C
PWM1INTE                          00000D9C
PWM1INTF                          00000D9D
PWM1INTFLG                        00000D9D
PWM1LD                            00000007
PWM1LDA_A                         00000000
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  21:15:53         PAGE 47


SYMBOL TABLE
  LABEL                             VALUE 

PWM1LDCON                         00000D9F
PWM1LDM                           00000006
PWM1LDS0                          00000000
PWM1LDS1                          00000001
PWM1MODE0                         00000002
PWM1MODE1                         00000003
PWM1OE                            00000006
PWM1OF                            00000D97
PWM1OFCON                         00000DA0
PWM1OFH                           00000D98
PWM1OFH0                          00000000
PWM1OFH1                          00000001
PWM1OFH2                          00000002
PWM1OFH3                          00000003
PWM1OFH4                          00000004
PWM1OFH5                          00000005
PWM1OFH6                          00000006
PWM1OFH7                          00000007
PWM1OFIE                          00000003
PWM1OFIF                          00000003
PWM1OFL                           00000D97
PWM1OFL0                          00000000
PWM1OFL1                          00000001
PWM1OFL2                          00000002
PWM1OFL3                          00000003
PWM1OFL4                          00000004
PWM1OFL5                          00000005
PWM1OFL6                          00000006
PWM1OFL7                          00000007
PWM1OFM0                          00000005
PWM1OFM1                          00000006
PWM1OFMC                          00000004
PWM1OFS0                          00000000
PWM1OFS1                          00000001
PWM1OUT                           00000005
PWM1OUT_A                         00000000
PWM1PH                            00000D91
PWM1PHH                           00000D92
PWM1PHH0                          00000000
PWM1PHH1                          00000001
PWM1PHH2                          00000002
PWM1PHH3                          00000003
PWM1PHH4                          00000004
PWM1PHH5                          00000005
PWM1PHH6                          00000006
PWM1PHH7                          00000007
PWM1PHIE                          00000002
PWM1PHIF                          00000002
PWM1PHL                           00000D91
PWM1PHL0                          00000000
PWM1PHL1                          00000001
PWM1PHL2                          00000002
PWM1PHL3                          00000003
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  21:15:53         PAGE 48


SYMBOL TABLE
  LABEL                             VALUE 

PWM1PHL4                          00000004
PWM1PHL5                          00000005
PWM1PHL6                          00000006
PWM1PHL7                          00000007
PWM1POL                           00000004
PWM1PR                            00000D95
PWM1PRH                           00000D96
PWM1PRH0                          00000000
PWM1PRH1                          00000001
PWM1PRH2                          00000002
PWM1PRH3                          00000003
PWM1PRH4                          00000004
PWM1PRH5                          00000005
PWM1PRH6                          00000006
PWM1PRH7                          00000007
PWM1PRIE                          00000000
PWM1PRIF                          00000000
PWM1PRL                           00000D95
PWM1PRL0                          00000000
PWM1PRL1                          00000001
PWM1PRL2                          00000002
PWM1PRL3                          00000003
PWM1PRL4                          00000004
PWM1PRL5                          00000005
PWM1PRL6                          00000006
PWM1PRL7                          00000007
PWM1PS0                           00000004
PWM1PS1                           00000005
PWM1PS2                           00000006
PWM1TMR                           00000D99
PWM1TMRH                          00000D9A
PWM1TMRH0                         00000000
PWM1TMRH1                         00000001
PWM1TMRH2                         00000002
PWM1TMRH3                         00000003
PWM1TMRH4                         00000004
PWM1TMRH5                         00000005
PWM1TMRH6                         00000006
PWM1TMRH7                         00000007
PWM1TMRL                          00000D99
PWM1TMRL0                         00000000
PWM1TMRL1                         00000001
PWM1TMRL2                         00000002
PWM1TMRL3                         00000003
PWM1TMRL4                         00000004
PWM1TMRL5                         00000005
PWM1TMRL6                         00000006
PWM1TMRL7                         00000007
PWM2CLKCON                        00000DAE
PWM2CON                           00000DAB
PWM2CS0                           00000000
PWM2CS1                           00000001
PWM2DC                            00000DA3
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  21:15:53         PAGE 49


SYMBOL TABLE
  LABEL                             VALUE 

PWM2DCH                           00000DA4
PWM2DCH0                          00000000
PWM2DCH1                          00000001
PWM2DCH2                          00000002
PWM2DCH3                          00000003
PWM2DCH4                          00000004
PWM2DCH5                          00000005
PWM2DCH6                          00000006
PWM2DCH7                          00000007
PWM2DCIE                          00000001
PWM2DCIF                          00000001
PWM2DCL                           00000DA3
PWM2DCL0                          00000000
PWM2DCL1                          00000001
PWM2DCL2                          00000002
PWM2DCL3                          00000003
PWM2DCL4                          00000004
PWM2DCL5                          00000005
PWM2DCL6                          00000006
PWM2DCL7                          00000007
PWM2EN                            00000007
PWM2EN_A                          00000001
PWM2IE                            00000005
PWM2IF                            00000005
PWM2INTCON                        00000DAC
PWM2INTE                          00000DAC
PWM2INTF                          00000DAD
PWM2INTFLG                        00000DAD
PWM2LD                            00000007
PWM2LDA_A                         00000001
PWM2LDCON                         00000DAF
PWM2LDM                           00000006
PWM2LDS0                          00000000
PWM2LDS1                          00000001
PWM2MODE0                         00000002
PWM2MODE1                         00000003
PWM2OE                            00000006
PWM2OF                            00000DA7
PWM2OFCON                         00000DB0
PWM2OFH                           00000DA8
PWM2OFH0                          00000000
PWM2OFH1                          00000001
PWM2OFH2                          00000002
PWM2OFH3                          00000003
PWM2OFH4                          00000004
PWM2OFH5                          00000005
PWM2OFH6                          00000006
PWM2OFH7                          00000007
PWM2OFIE                          00000003
PWM2OFIF                          00000003
PWM2OFL                           00000DA7
PWM2OFL0                          00000000
PWM2OFL1                          00000001
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  21:15:53         PAGE 50


SYMBOL TABLE
  LABEL                             VALUE 

PWM2OFL2                          00000002
PWM2OFL3                          00000003
PWM2OFL4                          00000004
PWM2OFL5                          00000005
PWM2OFL6                          00000006
PWM2OFL7                          00000007
PWM2OFM0                          00000005
PWM2OFM1                          00000006
PWM2OFMC                          00000004
PWM2OFS0                          00000000
PWM2OFS1                          00000001
PWM2OUT                           00000005
PWM2OUT_A                         00000001
PWM2PH                            00000DA1
PWM2PHH                           00000DA2
PWM2PHH0                          00000000
PWM2PHH1                          00000001
PWM2PHH2                          00000002
PWM2PHH3                          00000003
PWM2PHH4                          00000004
PWM2PHH5                          00000005
PWM2PHH6                          00000006
PWM2PHH7                          00000007
PWM2PHIE                          00000002
PWM2PHIF                          00000002
PWM2PHL                           00000DA1
PWM2PHL0                          00000000
PWM2PHL1                          00000001
PWM2PHL2                          00000002
PWM2PHL3                          00000003
PWM2PHL4                          00000004
PWM2PHL5                          00000005
PWM2PHL6                          00000006
PWM2PHL7                          00000007
PWM2POL                           00000004
PWM2PR                            00000DA5
PWM2PRH                           00000DA6
PWM2PRH0                          00000000
PWM2PRH1                          00000001
PWM2PRH2                          00000002
PWM2PRH3                          00000003
PWM2PRH4                          00000004
PWM2PRH5                          00000005
PWM2PRH6                          00000006
PWM2PRH7                          00000007
PWM2PRIE                          00000000
PWM2PRIF                          00000000
PWM2PRL                           00000DA5
PWM2PRL0                          00000000
PWM2PRL1                          00000001
PWM2PRL2                          00000002
PWM2PRL3                          00000003
PWM2PRL4                          00000004
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  21:15:53         PAGE 51


SYMBOL TABLE
  LABEL                             VALUE 

PWM2PRL5                          00000005
PWM2PRL6                          00000006
PWM2PRL7                          00000007
PWM2PS0                           00000004
PWM2PS1                           00000005
PWM2PS2                           00000006
PWM2TMR                           00000DA9
PWM2TMRH                          00000DAA
PWM2TMRH0                         00000000
PWM2TMRH1                         00000001
PWM2TMRH2                         00000002
PWM2TMRH3                         00000003
PWM2TMRH4                         00000004
PWM2TMRH5                         00000005
PWM2TMRH6                         00000006
PWM2TMRH7                         00000007
PWM2TMRL                          00000DA9
PWM2TMRL0                         00000000
PWM2TMRL1                         00000001
PWM2TMRL2                         00000002
PWM2TMRL3                         00000003
PWM2TMRL4                         00000004
PWM2TMRL5                         00000005
PWM2TMRL6                         00000006
PWM2TMRL7                         00000007
PWM3CLKCON                        00000DBE
PWM3CON                           00000DBB
PWM3CS0                           00000000
PWM3CS1                           00000001
PWM3DC                            00000DB3
PWM3DCH                           00000DB4
PWM3DCH0                          00000000
PWM3DCH1                          00000001
PWM3DCH2                          00000002
PWM3DCH3                          00000003
PWM3DCH4                          00000004
PWM3DCH5                          00000005
PWM3DCH6                          00000006
PWM3DCH7                          00000007
PWM3DCIE                          00000001
PWM3DCIF                          00000001
PWM3DCL                           00000DB3
PWM3DCL0                          00000000
PWM3DCL1                          00000001
PWM3DCL2                          00000002
PWM3DCL3                          00000003
PWM3DCL4                          00000004
PWM3DCL5                          00000005
PWM3DCL6                          00000006
PWM3DCL7                          00000007
PWM3EN                            00000007
PWM3EN_A                          00000002
PWM3IE                            00000006
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  21:15:53         PAGE 52


SYMBOL TABLE
  LABEL                             VALUE 

PWM3IF                            00000006
PWM3INTCON                        00000DBC
PWM3INTE                          00000DBC
PWM3INTF                          00000DBD
PWM3INTFLG                        00000DBD
PWM3LD                            00000007
PWM3LDA_A                         00000002
PWM3LDCON                         00000DBF
PWM3LDM                           00000006
PWM3LDS0                          00000000
PWM3LDS1                          00000001
PWM3MODE0                         00000002
PWM3MODE1                         00000003
PWM3OE                            00000006
PWM3OF                            00000DB7
PWM3OFCON                         00000DC0
PWM3OFH                           00000DB8
PWM3OFH0                          00000000
PWM3OFH1                          00000001
PWM3OFH2                          00000002
PWM3OFH3                          00000003
PWM3OFH4                          00000004
PWM3OFH5                          00000005
PWM3OFH6                          00000006
PWM3OFH7                          00000007
PWM3OFIE                          00000003
PWM3OFIF                          00000003
PWM3OFL                           00000DB7
PWM3OFL0                          00000000
PWM3OFL1                          00000001
PWM3OFL2                          00000002
PWM3OFL3                          00000003
PWM3OFL4                          00000004
PWM3OFL5                          00000005
PWM3OFL6                          00000006
PWM3OFL7                          00000007
PWM3OFM0                          00000005
PWM3OFM1                          00000006
PWM3OFMC                          00000004
PWM3OFS0                          00000000
PWM3OFS1                          00000001
PWM3OUT                           00000005
PWM3OUT_A                         00000002
PWM3PH                            00000DB1
PWM3PHH                           00000DB2
PWM3PHH0                          00000000
PWM3PHH1                          00000001
PWM3PHH2                          00000002
PWM3PHH3                          00000003
PWM3PHH4                          00000004
PWM3PHH5                          00000005
PWM3PHH6                          00000006
PWM3PHH7                          00000007
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  21:15:53         PAGE 53


SYMBOL TABLE
  LABEL                             VALUE 

PWM3PHIE                          00000002
PWM3PHIF                          00000002
PWM3PHL                           00000DB1
PWM3PHL0                          00000000
PWM3PHL1                          00000001
PWM3PHL2                          00000002
PWM3PHL3                          00000003
PWM3PHL4                          00000004
PWM3PHL5                          00000005
PWM3PHL6                          00000006
PWM3PHL7                          00000007
PWM3POL                           00000004
PWM3PR                            00000DB5
PWM3PRH                           00000DB6
PWM3PRH0                          00000000
PWM3PRH1                          00000001
PWM3PRH2                          00000002
PWM3PRH3                          00000003
PWM3PRH4                          00000004
PWM3PRH5                          00000005
PWM3PRH6                          00000006
PWM3PRH7                          00000007
PWM3PRIE                          00000000
PWM3PRIF                          00000000
PWM3PRL                           00000DB5
PWM3PRL0                          00000000
PWM3PRL1                          00000001
PWM3PRL2                          00000002
PWM3PRL3                          00000003
PWM3PRL4                          00000004
PWM3PRL5                          00000005
PWM3PRL6                          00000006
PWM3PRL7                          00000007
PWM3PS0                           00000004
PWM3PS1                           00000005
PWM3PS2                           00000006
PWM3TMR                           00000DB9
PWM3TMRH                          00000DBA
PWM3TMRH0                         00000000
PWM3TMRH1                         00000001
PWM3TMRH2                         00000002
PWM3TMRH3                         00000003
PWM3TMRH4                         00000004
PWM3TMRH5                         00000005
PWM3TMRH6                         00000006
PWM3TMRH7                         00000007
PWM3TMRL                          00000DB9
PWM3TMRL0                         00000000
PWM3TMRL1                         00000001
PWM3TMRL2                         00000002
PWM3TMRL3                         00000003
PWM3TMRL4                         00000004
PWM3TMRL5                         00000005
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  21:15:53         PAGE 54


SYMBOL TABLE
  LABEL                             VALUE 

PWM3TMRL6                         00000006
PWM3TMRL7                         00000007
PWMEN                             00000D8E
PWMLD                             00000D8F
PWMOUT                            00000D90
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCREG                             00000199
RCSTA                             0000019D
RD                                00000000
ROW_EMPTY                         00000000
ROW_FULL                          0000000A
RT_THR                            000000B5
RX9                               00000006
RX9D                              00000000
RXDTSEL                           00000007
S0                                0000001F
SBOREN                            00000007
SCKP                              00000004
SCS0                              00000000
SCS1                              00000001
SENDB                             00000003
SLRA0                             00000000
SLRA1                             00000001
SLRA2                             00000002
SLRA4                             00000004
SLRA5                             00000005
SLRCONA                           0000030C
SOUND_SUPPORT                     
SP                                FSR1
SPBRG                             0000019B
SPBRGH                            0000019C
SPBRGL                            0000019B
SPEN                              00000007
SPLLEN                            00000007
SREN                              00000005
STACK_SIZE                        00000020
STATUS                            00000003
STATUS_SHAD                       00000FE4
STKOVF                            00000007
STKPTR                            00000FED
STKUNF                            00000006
SWDTEN                            00000000
SYNC                              00000004
SYNC_IE                           00000006
SYNC_IF                           00000006
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  21:15:53         PAGE 55


SYMBOL TABLE
  LABEL                             VALUE 

SYNC_OUT                          00000002
SYNC_PIE                          00000093
SYNC_PIR                          00000013
SYNC_PWMCLKCON                    00000DBE
SYNC_PWMCON                       00000DBB
SYNC_PWMDCH                       00000DB4
SYNC_PWMDCL                       00000DB3
SYNC_PWMINTE                      00000DBC
SYNC_PWMINTF                      00000DBD
SYNC_PWMLDCON                     00000DBF
SYNC_PWMOF                        00000DB7
SYNC_PWMOFCON                     00000DC0
SYNC_PWMPH                        00000DB1
SYNC_PWMPRH                       00000DB6
SYNC_PWMPRL                       00000DB5
SYNC_PWMTMR                       00000DB9
T                                 INDF1
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000018
T1GCON                            00000019
T1GGO                             00000003
T1GGO_NOT_DONE                    00000003
T1GPOL                            00000006
T1GSEL                            00000003
T1GSPM                            00000004
T1GSS0                            00000000
T1GSS1                            00000001
T1GTM                             00000005
T1GVAL                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             0000001C
T2OUTPS0                          00000003
T2OUTPS1                          00000004
T2OUTPS2                          00000005
T2OUTPS3                          00000006
TC                                00000032
TCY                               000000C8
TMR0                              00000015
TMR0CS                            00000005
TMR0IE                            00000005
TMR0IF                            00000002
TMR0SE                            00000004
TMR1                              00000016
TMR1CS0                           00000006
TMR1CS1                           00000007
TMR1GE                            00000007
TMR1GIE                           00000007
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  21:15:53         PAGE 56


SYMBOL TABLE
  LABEL                             VALUE 

TMR1GIF                           00000007
TMR1H                             00000017
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             00000016
TMR1ON                            00000000
TMR2                              0000001A
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOS                               00000FEE
TOSH                              00000FEF
TOSL                              00000FEE
TRIGSEL0                          00000004
TRIGSEL1                          00000005
TRIGSEL2                          00000006
TRIGSEL3                          00000007
TRISA                             0000008C
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRMT                              00000001
TSEN                              00000005
TSRNG                             00000004
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TUN5                              00000005
TX9                               00000006
TX9D                              00000000
TXCKSEL                           00000002
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             0000019A
TXSTA                             0000019E
TX_PIR                            00000011
UP_THR                            000000C6
VDD                               00000400
VERT_DLY                          00000032
VIDEO_BUFFER                      00002030
VIDEO_LAT                         0000010C
VIDEO_OUT                         00000001
VREGCON                           00000197
VREGPM                            00000001
W                                 00000000
WDTCON                            00000097
WDTPS0                            00000001
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  21:15:53         PAGE 57


SYMBOL TABLE
  LABEL                             VALUE 

WDTPS1                            00000002
WDTPS2                            00000003
WDTPS3                            00000004
WDTPS4                            00000005
WELL_DEPTH                        00000016
WELL_WIDTH                        0000000A
WPUA                              0000020C
WPUA0                             00000000
WPUA1                             00000001
WPUA2                             00000002
WPUA3                             00000003
WPUA4                             00000004
WPUA5                             00000005
WR                                00000001
WREG                              00000009
WREG_SHAD                         00000FE5
WREN                              00000002
WRERR                             00000003
WUE                               00000001
XSIZE                             00000030
YSIZE                             00000020
Z                                 00000002
Z_SHAD                            00000002
_.org_1_0070                      00000070
_.org_1_0072                      00000072
_.org_1_0075                      00000075
_.org_1_00C1                      000000C1
_.org_1_00C3                      000000C3
_.org_1_00D7                      000000D7
_.org_1_00DF                      000000DF
_.org_1_028D                      0000028D
_.org_1_029B                      0000029B
_.org_1_02E1                      000002E1
_.org_1_02E6                      000002E6
_.org_1_0307                      00000307
_.org_1_031B                      0000031B
_.org_1_034A                      0000034A
_BOREN_NSLEEP                     00003DFF
_BOREN_OFF                        000039FF
_BOREN_ON                         00003FFF
_BOREN_SBODEN                     00003BFF
_BORV_19                          00003FFF
_BORV_HI                          00003BFF
_BORV_LO                          00003FFF
_CLKOUTEN_OFF                     00003FFF
_CLKOUTEN_ON                      000037FF
_CONFIG1                          00008007
_CONFIG2                          00008008
_CP_OFF                           00003FFF
_CP_ON                            00003F7F
_DEVID1                           00008006
_FOSC_ECH                         00003FFF
_FOSC_ECL                         00003FFD
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  21:15:53         PAGE 58


SYMBOL TABLE
  LABEL                             VALUE 

_FOSC_ECM                         00003FFE
_FOSC_INTOSC                      00003FFC
_IDLOC0                           00008000
_IDLOC1                           00008001
_IDLOC2                           00008002
_IDLOC3                           00008003
_LPBOREN_OFF                      00003FFF
_LPBOREN_ON                       000037FF
_LVP_OFF                          00001FFF
_LVP_ON                           00003FFF
_MCLRE_OFF                        00003FBF
_MCLRE_ON                         00003FFF
_PLLEN_OFF                        00003EFF
_PLLEN_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FDF
_STVREN_OFF                       00003DFF
_STVREN_ON                        00003FFF
_WDTE_NSLEEP                      00003FF7
_WDTE_OFF                         00003FE7
_WDTE_ON                          00003FFF
_WDTE_SWDTEN                      00003FEF
_WRT_ALL                          00003FFC
_WRT_BOOT                         00003FFE
_WRT_HALF                         00003FFD
_WRT_OFF                          00003FFF
__12F1572                         00000001
_stack                            00000020
accaH                             00000009
accaL                             00000008
accbH                             0000000B
accbL                             0000000A
add_points                        0000034B
angle                             00000041
beep                              000002DB
buttons                           0000000C
byte_serialize                    000000D2
case                              
clear_pixel                       0000010A
clear_score                       0000021B
clear_screen                      000000E7
cls_loop                          000000EE
col_loop                          00000224
coll_test                         000002A1
count_done                        00000266
count_full                        0000024E
count_loop                        00000252
dec_n                             
digits                            00000395
disable_video                     
div10                             00000058
div10_loop                        0000005C
drop                              
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  21:15:53         PAGE 59


SYMBOL TABLE
  LABEL                             VALUE 

drop00                            00000234
drop1                             00000221
drop_n                            
drop_tetrim                       00000317
droppedH                          00000047
droppedL                          00000046
dup                               
enable_video                      
fall_loop                         00000301
flags                             00000002
game_init                         000001F6
game_loop                         000002FB
game_over                         000002D9
get_flash_word                    0000013B
get_nibble                        0000014F
get_pixel                         0000010E
gt_255                            0000002A
gtimer                            00000003
hline                             000001D8
hline_done                        000001E5
inc_n                             
init                              00000352
insert                            
isr                               00000004
isr_exit                          00000054
koro                              00000281
korobeiniki                       0000042E
labels                            000003E1
lcountH                           00000001
lcountL                           00000000
lit                               
lt_256                            0000000E
main                              00000392
mask00                            00000101
mask01                            00000104
move_down                         0000032E
move_left                         00000329
move_right                        0000032C
new_tminos                        00000268
next_flash_word                   0000014A
next_pixel                        00000235
next_row                          00000264
nibble                            0000000D
nibble_mask                       0000015E
no_zero                           000001D6
over                              
pause                             
pick                              
pop                               
print_char                        0000016C
print_int                         000001BD
print_label                       000001A5
print_last                        000001D0
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  21:15:53         PAGE 60


SYMBOL TABLE
  LABEL                             VALUE 

print_row                         00000162
print_tetrim                      0000017B
prt01                             00000191
prt_lbl_done                      000001BB
prt_lbl_loop                      000001A7
pstack_init                       
push                              
q                                 0000000A
qr00                              00000240
qr01                              0000024A
query_row                         0000023E
r                                 00000000
randH                             00000006
randL                             00000005
rcount                            00000007
read_exit                         0000009A
read_flash                        00000144
read_pad                          00000068
reserve                           
rot_left                          0000031F
rot_right                         00000324
row0                              0000015D
row1                              00000159
row2                              0000015B
row_loop                          00000222
rst                               00000010
scoreH                            00000045
scoreL                            00000044
score_update                      0000033D
set_pixel                         00000107
set_pixel_ptr                     000000F4
set_yptr                          000000B4
start_timer                       
store                             
swap                              
t0                                0000000E
t1                                0000000F
task0                             0000003F
task1                             00000048
task2                             0000004F
tasks                             00000035
tcyDelay                          
tetrim                            00000040
tetriminos                        000003C1
tetris                            000002EB
ti                                0000018A
tone                              0000009D
tone_pr                           00000401
tone_tmr                          00000004
try_a                             00000077
try_b                             0000007D
try_button                        
try_dn                            00000095
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  21:15:53         PAGE 61


SYMBOL TABLE
  LABEL                             VALUE 

try_lt                            0000008F
try_rt                            00000083
try_up                            00000089
tx                                00000042
txt_lines                         000003EE
txt_press                         000003F7
txt_score                         000003E5
ty                                00000043
undo_drop_tetrim                  000002B6
undo_move_left                    000002C2
undo_move_right                   000002C0
undo_rot_left                     000002BC
undo_rot_right                    000002B8
update_display                    000002C4
video_buffer_b0                   00000050
video_buffer_b2                   000000A0
video_buffer_b3                   00000120
video_serialize                   000000C0
vline                             000001E7
vline_done                        000001F4
vsync_end                         00000022
vsync_start                       0000001A
wait_end                          0000029D
wait_sound                        
wait_start                        0000027C
wait_timer                        
xor_pixel                         00000111
xor_row                           00000119
xor_row01                         0000011F
xor_row02                         00000135
xor_row_done                      00000139

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,   129 suppressed

