MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-21-2016  19:48:57         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001     include p12f1572.inc
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Sep 13 2016
                      00005 ;  MPASM PIC12F1572 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2016 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01601         LIST
                      00002     
                      00003     radix dec
                      00004     errorlevel 0, -302, -305
                      00005     
8007   3FE7           00006     __config _CONFIG1, _FOSC_ECH&_WDTE_OFF
8008   1EFF           00007     __config _CONFIG2, _PLLEN_OFF&_LVP_OFF 
                      00008 
                      00009 ; comment this define to exclude audio support code.  
                      00010 #define SOUND_SUPPORT
                      00011 ; comment this define to exclude game_over animation code.    
                      00012 #define ANIMATION
                      00013     
  01312D00            00014 FOSC equ 20000000 ; 20Mhz oscillator frequency
  00000032            00015 TC equ 50 ; FOSC period in nanosecondes 
  004C4B40            00016 FCY equ FOSC/4    ; 5Mhz
  000000C8            00017 TCY equ TC*4 ; nanoseconds  instruction cycle period.
                      00018 
                      00019 ;NTSC signal parameters 
  000004F5            00020 HORZ_PERIOD equ FOSC/15748-1 ; 15748 hertz
  0000005E            00021 HORZ_PULSE equ 4700/TC ; 4.7µsec 
  00000106            00022 LAST_LINE equ 262 ; field last line
                      00023 ;display parameters
  00000030            00024 XSIZE equ 48  ; horizontal pixels
  00000020            00025 YSIZE equ 32  ; vertical pixels
  00000006            00026 BPL equ XSIZE/8 ; bytes per line 
  000000C0            00027 BUFFER_SIZE equ  YSIZE*BPL  ; video buffer size
  00002030            00028 VIDEO_BUFFER equ 0x2000+(3*80-BUFFER_SIZE) ; buffer address
  00000032            00029 VERT_DLY equ 50 ; number of scan lines to vertical center display on screen
  00000032            00030 HORZ_DLY equ 10*5  ; to center display on screen. There is 5 TCY/µsec
  00000046            00031 FIRST_VIDEO equ VERT_DLY+20  ; first video output line
  000000C5            00032 LAST_VIDEO equ FIRST_VIDEO+4*YSIZE-1  ; last video output line
                      00033 ; peripherals regiters used in video generation
  0000019A            00034 PIXEL_TXREG equ TXREG ; using EUSART to serialize out pixels
  00000011            00035 TX_PIR equ PIR1
  00000001            00036 VIDEO_OUT equ RA1
  0000010C            00037 VIDEO_LAT equ LATA
  00000002            00038 SYNC_OUT equ RA2 
  00000DB3            00039 SYNC_PWMDCL equ PWM3DCL ; duty cycle low byte
  00000DB4            00040 SYNC_PWMDCH equ PWM3DCH ; high byte    
  00000DB5            00041 SYNC_PWMPRL equ PWM3PRL ; pwm period low byte
  00000DB6            00042 SYNC_PWMPRH equ PWM3PRH ; high byte 
  00000DB1            00043 SYNC_PWMPH equ PWM3PH ; pwm phase
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-21-2016  19:48:57         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000DB7            00044 SYNC_PWMOF equ PWM3OF ; pwm offset
  00000DB9            00045 SYNC_PWMTMR equ PWM3TMR ; timer
  00000DBB            00046 SYNC_PWMCON equ PWM3CON ; control SFR
  00000DBE            00047 SYNC_PWMCLKCON equ PWM3CLKCON  ; clock control SFR
  00000DC0            00048 SYNC_PWMOFCON equ PWM3OFCON ; offset control SFR
  00000DBF            00049 SYNC_PWMLDCON equ PWM3LDCON ; load control SFR
  00000006            00050 SYNC_IE equ PWM3IE  ; interrupt enable bit
  00000006            00051 SYNC_IF equ PWM3IF  ; interrupt flag bit
  00000093            00052 SYNC_PIE equ PIE3 ; interrupt enable SFR
  00000013            00053 SYNC_PIR equ PIR3 ; interrupt flag SFR 
  00000DBC            00054 SYNC_PWMINTE equ PWM3INTE
  00000DBD            00055 SYNC_PWMINTF equ PWM3INTF
                      00056 
  00000000            00057 LED_PIN equ RA0 ; power LED pin
  00000004            00058 ADC_PIN equ RA4 ; pad buttons adc input pin
                      00059 
                      00060 #ifdef SOUND_SUPPORT 
                      00061 ;peripherals used for sound generation. 
  00000004            00062 AUDIO_PIN equ RA4
  00000DA3            00063 AUDIO_PWMDCL equ PWM2DCL
  00000DA4            00064 AUDIO_PWMDCH equ PWM2DCH
  00000DA5            00065 AUDIO_PWMPRL equ PWM2PRL
  00000DA6            00066 AUDIO_PWMPRH equ PWM2PRH
  00000DA9            00067 AUDIO_PWMTMR equ PWM2TMR
  00000DAE            00068 AUDIO_PWMCLKCON equ PWM2CLKCON
  00000DAF            00069 AUDIO_PWMLDCON equ PWM2LDCON
  00000DAB            00070 AUDIO_PWMCON equ PWM2CON
  00000DA1            00071 AUDIO_PWMPHL equ PWM2PHL
  00000DA2            00072 AUDIO_PWMPHH equ PWM2PHH
  00000DA7            00073 AUDIO_PWMOFL equ PWM2OFL
  00000DA8            00074 AUDIO_PWMOFH equ PWM2OFH
                      00075 #endif
                      00076  
                      00077 ; game pad resource
                      00078 ; use ADC 
  00000004            00079 PAD_PIN equ ANSA4  ; analog digital converter pin
  00000003            00080 PAD_CHS equ 3 ; ADC channel
  00000000            00081 BTN_UP equ 0
  00000001            00082 BTN_DN equ 1
  00000002            00083 BTN_LT equ 2
  00000003            00084 BTN_RT equ 3
  00000004            00085 BTN_A equ 4
  00000005            00086 BTN_B equ 5
                      00087 ; threshold level for each button
                      00088 ; lower_btn_thr >= BTN_? < btn_thr
                      00089 ; exemple: BTN_UP if RT_THR<=Vadc<UP_THR  
  00000400            00090 VDD equ 1024
  000000D8            00091 DN_THR equ 216 ;(VDD*(6/7+5/6)/2)>>2
  000000D1            00092 LT_THR equ 209 ; (VDD*(5/6+4/5)/2)>>2
  000000C6            00093 UP_THR equ 198 ;(VDD*(4/5+3/4)/2)>>2
  000000B5            00094 RT_THR equ 181 ;(VDD*(3/4+2/3)/2)>>2
  00000095            00095 B_THR  equ 149 ; (VDD*(2/3+1/2)/2)>>2
  00000040            00096 A_THR  equ 64 ;(VDD/4)>>2
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-21-2016  19:48:57         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00097 
                      00098 ; this macro is used in read_pad
                      00099 ; to determine which button is pressed.  
                      00100 try_button macro btn, label 
                      00101     movlw btn
                      00102     subwf ADRESH,W
                      00103     skpnc
                      00104     bra label
                      00105     endm
                      00106     
                      00107 ;boolean flags 
  00000000            00108 F_EVEN equ 0  ; even field
  00000001            00109 F_GTMR equ 1  ; game timer active
  00000002            00110 F_GSTOP equ 2 ; game stopped
  00000003            00111 F_COLL equ 3 ; collision flag set by xor_pixel routine
                      00112 #ifdef SOUND_SUPPORT 
  00000004            00113 F_SND equ 4 ; sound timer active 
  00000005            00114 F_NO_SND equ 5 ; quiet mode
                      00115 #endif
                      00116 ; xor mask used by pseudo random number generator 
  000000B4            00117 LFSR_TAPS equ 0xB4 
                      00118 
                      00119 ; delay in TCY  5 TCY per µsec. 
                      00120 tcyDelay macro n  
                      00121     variable r=n%5
                      00122     variable q=n/5
                      00123     while r>1
                      00124     bra $+1
                      00125 r-=2
                      00126     endw
                      00127     if r==1
                      00128     nop
                      00129     endif
                      00130     if q
                      00131     movlw q
                      00132     bra $+1
                      00133     decfsz WREG
                      00134     bra $-2
                      00135     endif
                      00136     endm
                      00137 
                      00138 ; button selector case    
                      00139 case macro n, label
                      00140     btfsc buttons,n
                      00141     bra label
                      00142     endm
                      00143  
                      00144 #ifdef SOUND_SUPPORT    
                      00145 ; wait sound end
                      00146 wait_sound macro
                      00147     btfsc flags,F_SND
                      00148     bra $-1
                      00149     endm
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-21-2016  19:48:57         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00150 #endif
                      00151     
                      00152 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00153 ; software stack for arguments passing
                      00154 ; SP is Stack Pointer
                      00155 ; T is Top Of Stack
                      00156 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
                      00157 #define SP FSR1
                      00158 #define T INDF1
  00000020            00159 STACK_SIZE equ 32
                      00160  
  0000001F            00161 S0 equ 0x1F ; SP initial value
                      00162 
                      00163 push macro   ; ( -- n ) push WREG on stack
                      00164     movwi ++SP
                      00165     endm
                      00166 
                      00167 pop macro   ; ( n -- )  pop T in WREG
                      00168     moviw SP--
                      00169     endm
                      00170     
                      00171 drop macro  ; ( n -- ) ; discard T
                      00172    addfsr SP,-1
                      00173    endm
                      00174 
                      00175 drop_n macro n  ; discard n elements  n<32
                      00176     addfsr SP,-n
                      00177     endm
                      00178     
                      00179 lit macro  n ; ( -- n ) ; push a literal
                      00180    movlw n
                      00181    movwi ++SP 
                      00182    endm
                      00183 
                      00184 dup macro ; ( n -- n n ) duplicate T
                      00185     movfw T
                      00186     movwi ++SP
                      00187     endm
                      00188     
                      00189 over macro ; ( n1 n2 -- n1 n2 n1 )
                      00190     moviw -1[SP]
                      00191     push
                      00192     endm
                      00193     
                      00194 pick macro n  ; pick nth element of stack to WREG
                      00195     moviw -n[SP]
                      00196     endm
                      00197 
                      00198 insert macro n ;  insert WREG at position n on stack
                      00199    movwi -n[SP]
                      00200    endm
                      00201    
                      00202 inc_n macro n ; increament nth element of stack
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-21-2016  19:48:57         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00203     moviw -n[SP]
                      00204     incf WREG,F
                      00205     movwi -n[SP]
                      00206     endm
                      00207     
                      00208 dec_n macro n ; decreament nth element of stack
                      00209     moviw -n[SP]
                      00210     decf WREG,F
                      00211     movwi -n[SP]
                      00212     endm
                      00213     
                      00214 reserve macro n ; reserve n bytes on stack for local variables
                      00215     addfsr SP, n 
                      00216     endm
                      00217  
                      00218 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00219 ; parameter stack section    
                      00220 dstack udata 0x20
0020                  00221 _stack res 32
                      00222 ; game variables section 
  00000000            00223 GAME_VAR equ 0 ; game variables bank
                      00224 game_var udata 0x40 
                      00225 ; tetris game state
0040                  00226 tetrim res 1 ; active tretriminos 
0041                  00227 angle res 1 ; tetriminos rotatation angle in multiple of 90 degr. {0:3}
0042                  00228 tx  res 1 ; x coordinate
0043                  00229 ty  res 1 ; y coordinate
0044                  00230 scoreL res 1 ; game score  16 bits
0045                  00231 scoreH res 1 
0046                  00232 droppedL res 1  ; total
0047                  00233 droppedH res 1  ; dropped lines
0048                  00234 btn_time res 1 ; last button timestamp
0049                  00235 ticks res 1 ; clock ticks in 1/60 sec.
                      00236  
                      00237  
                      00238 ; These 3 sections are used for video display buffering
                      00239 ; with indirect access using FSR0
                      00240 ; to form a contiguous address space. 
                      00241 ; total size 192 bytes. 48x32 pixels
                      00242 vb_b0    udata 0x50
0050                  00243 video_buffer_b0 res 32
                      00244 vb_b1    udata 0xA0
00A0                  00245 video_buffer_b1 res 80
                      00246 vb_b2    udata 0x120
0120                  00247 video_buffer_b2 res 80
                      00248  
                      00249 ;for code efficiency system variables
                      00250 ;are kept in common RAM section
                      00251 ;to avoid the need of banksel before accessing
                      00252 ; them. 
                      00253     udata_shr
                      00254 ;scan lines counter 16 bits
0000                  00255 lcountL res 1
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-21-2016  19:48:57         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0001                  00256 lcountH res 1
                      00257 ; boolean flags 
0002                  00258 flags res 1
                      00259 ; game timer
0003                  00260 gtimer res 1 
                      00261 #ifdef SOUND_SUPPORT 
                      00262 ; sound timer
0004                  00263 tone_tmr res 1 
                      00264 #endif 
                      00265 ; linear feedback shift register. PRNG register
0005                  00266 randL res 1 
0006                  00267 randH res 1 
                      00268 ; loop counter
0007                  00269 rcount res 1
                      00270 ; arithmetic accumulator A 16 bits
0008                  00271 accaL res 1
0009                  00272 accaH res 1
                      00273 ; arithmetic accumulator B 16 bits
000A                  00274 accbL res 1
000B                  00275 accbH res 1
                      00276 ; game pad buttons state
000C                  00277 buttons res 1
                      00278 ; program memory reader next nibble {0-3}
000D                  00279 nibble res 1
                      00280 ; temporary registers
000E                  00281 t0  res 1
000F                  00282 t1  res 1
                      00283   
                      00284 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00285 ; reset entry point
                      00286 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0010                  00287 rst: 
                      00288     org 0
0000   0023           00289     banksel ANSELA
0001   018C           00290     clrf ANSELA
0002   160C           00291     bsf ANSELA,PAD_PIN
0003   2???           00292     goto init
                      00293     
                      00294     org 4
                      00295 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;   
                      00296 ; interrupt service routine
                      00297 ; the only interrupt is on SYNC_PWM timer
                      00298 ; this intterrupt trigger once 
                      00299 ; for every horizontal line, i.e. 15748/sec.    
                      00300 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
0004                  00301 isr:
0004   003B           00302     banksel SYNC_PWMINTF
0005   103D           00303     bcf SYNC_PWMINTF,PRIF
0006   0020           00304     banksel GAME_VAR
0007   0A??           00305     incf ticks,F
0008   1800           00306     btfsc lcountH,0
0009   3???           00307     bra gt_255 ; lcount > 255
                      00308 ; lcount < 256
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-21-2016  19:48:57         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000A   08??           00309     movfw lcountL
000B   1903           00310     skpnz
000C   3???           00311     bra vsync_start
000D   3A03           00312     xorlw 3
000E   1903           00313     skpnz
000F   3???           00314     bra vsync_end
                      00315 ; check if visible line
0010                  00316 visible_check:    
0010   3046           00317     movlw FIRST_VIDEO
0011   02??           00318     subwf lcountL,W
0012   1C03           00319     skpc
0013   3???           00320     bra isr_exit
0014   3C7F           00321     sublw 4*YSIZE-1
0015   1803           00322     skpnc
                      00323 ; output video pixels for this line    
0016   2???           00324     call video_serialize 
0017   3???           00325     bra isr_exit 
                      00326 ; scanline 0 start vertical sync pulse    
0018                  00327 vsync_start: 
0018   003B           00328     banksel SYNC_PWMDCL
0019   3097           00329     movlw (HORZ_PERIOD-HORZ_PULSE)&0xff
001A   00B3           00330     movwf SYNC_PWMDCL
001B   3004           00331     movlw (HORZ_PERIOD-HORZ_PULSE)>>8
001C   00B4           00332     movwf SYNC_PWMDCH
001D   17BF           00333     bsf SYNC_PWMLDCON,LDA
001E   3???           00334     bra isr_exit
                      00335 ; scanline 3 end vertical sync pulse
001F                  00336 vsync_end: 
001F   003B           00337     banksel SYNC_PWMDCL
0020   305E           00338     movlw HORZ_PULSE&0xff
0021   00B3           00339     movwf SYNC_PWMDCL
0022   3000           00340     movlw HORZ_PULSE>>8
0023   00B4           00341     movwf SYNC_PWMDCH
0024   17BF           00342     bsf SYNC_PWMLDCON,LDA
0025   3???           00343     bra isr_exit
                      00344 ; scan line > 255    
0026                  00345 gt_255:
                      00346 ; check for end of field    
0026   3006           00347     movlw LAST_LINE&0xff
0027   1C00           00348     btfss flags,F_EVEN
0028   3E01           00349     addlw 1
0029   06??           00350     xorwf lcountL,W
002A   1D03           00351     skpz
002B   3???           00352     bra tasks
                      00353 ; end of field
                      00354 ; reset line counter
002C   01??           00355     clrf lcountL
002D   01??           00356     clrf lcountH
002E   3001           00357     movlw 1<<F_EVEN
002F   06??           00358     xorwf flags,F ; toggle even field flag
0030   0009           00359     retfie
                      00360 ; round robin task scheduler
                      00361 ; each task execute once every 1/60th sec.
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-21-2016  19:48:57         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00362 ; condition:    
                      00363 ;   Task must complete inside
                      00364 ;   horizontal period. i.e. before SYNC_PWM period end.
                      00365 ; maximum 6 tasks slots available    
0031                  00366 tasks:
                      00367 ; task selector    
0031   08??           00368     movfw lcountL
0032   1903           00369     skpnz
0033   3???           00370     bra task0
0034   0389           00371     decf WREG
0035   1903           00372     skpnz 
0036   3???           00373     bra task1
                      00374 #ifdef SOUND_SUPPORT
0037   0389           00375     decf WREG
0038   1903           00376     skpnz
0039   3???           00377     bra task2
                      00378 #endif 
003A   3???           00379     bra isr_exit
003B                  00380 task0:
                      00381 ; rotate lfsr, PRNG
003B   36??           00382     lsrf randH
003C   0C??           00383     rrf randL
003D   1803           00384     skpnc
003E   30B4           00385     movlw LFSR_TAPS
003F   06??           00386     xorwf randH
0040   3???           00387     bra isr_exit
0041                  00388 task1:   
                      00389 ; game timer management   
0041   1880           00390     btfsc flags, F_GTMR
0042   0B??           00391     decfsz gtimer,F ; 
0043   3???           00392     bra isr_exit ;
0044   1080           00393     bcf flags, F_GTMR
0045   3???           00394     bra isr_exit ;
0046                  00395 task2:
                      00396 #ifdef SOUND_SUPPORT    
                      00397 ; sound timer management   
0046   08??           00398     movfw tone_tmr
0047   1903           00399     skpnz
0048   3???           00400     bra isr_exit
0049   0B??           00401     decfsz tone_tmr,F
004A   3???           00402     bra isr_exit
004B   1200           00403     bcf flags,F_SND
004C   003B           00404     banksel AUDIO_PWMCON
004D   13AB           00405     bcf AUDIO_PWMCON,EN
004E   0021           00406     banksel TRISA
004F   160C           00407     bsf TRISA, AUDIO_PIN
0050   3???           00408     bra isr_exit
                      00409 #endif 
0051                  00410 isr_exit:
0051   0A??           00411     incf lcountL
0052   1903           00412     skpnz
0053   0A??           00413     incf lcountH
0054   0009           00414     retfie
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-21-2016  19:48:57         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00415 
                      00416 ;pause
                      00417 ; idle loop in multiple of 1/60 sec.
                      00418 ; input:
                      00419 ;   WREG=delay
                      00420 ; output:
                      00421 ;   none    
0055                  00422 pause: 
0055   00??           00423     movwf gtimer
0056   1480           00424     bsf flags, F_GTMR
0057   1880           00425     btfsc flags, F_GTMR
0058   3???           00426     bra $-1
0059   0008           00427     return
                      00428     
                      00429 ;div10    
                      00430 ; divsion by 10    
                      00431 ; needed to convert binary to BCD
                      00432 ; input:
                      00433 ;   acca dividend  16 bits
                      00434 ; output:
                      00435 ;   acca: quotient
                      00436 ;   accbL: remainder    
005A                  00437 div10:
005A   3011           00438     movlw 17
005B   00??           00439     movwf rcount
005C   01??           00440     clrf accbL
005D                  00441 div10_loop:
005D   300A           00442     movlw 10
005E   02??           00443     subwf accbL,W
005F   1803           00444     skpnc
0060   00??           00445     movwf accbL
0061   0D??           00446     rlf accaL
0062   0D??           00447     rlf accaH
0063   0D??           00448     rlf accbL
0064   0B??           00449     decfsz rcount
0065   3???           00450     bra div10_loop
0066   36??           00451     lsrf accbL
0067   0008           00452     return
                      00453     
                      00454 ;read_pad    
                      00455 ;read game pad
                      00456 ; a button is accepted if
                      00457 ; the Vadc value is below its threshold
                      00458 ; input:
                      00459 ;   none
                      00460 ; output:
                      00461 ;   'buttons' variable    
0068                  00462 read_pad:
                      00463     lit 0
0068   3000               M    movlw 0
0069   001C               M    movwi ++SP 
006A   0021           00464     banksel ADCON0
006B   141D           00465     bsf ADCON0,ADON
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-21-2016  19:48:57         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00466     tcyDelay 5*4 ; délais d'acquisition 4µsec
  0000                    M     variable r=5*4%5
  0004                    M     variable q=5*4/5
                          M     while r>1
                          M     bra $+1
                          M r-=2
                          M     endw
                          M     if r==1
                          M     nop
                          M     endif
                          M     if q
006C   3004               M     movlw q
006D   3???               M     bra $+1
006E   0B89               M     decfsz WREG
006F   3???               M     bra $-2
                          M     endif
0070   149D           00467     bsf ADCON0,GO
0071   189D           00468     btfsc ADCON0,NOT_DONE
0072   3???           00469     bra $-1
0073   101D           00470     bcf ADCON0,ADON
                      00471 ; try each button from lower to upper
0074                  00472 try_a:
                      00473     try_button A_THR, try_b
0074   3040               M     movlw A_THR
0075   021C               M     subwf ADRESH,W
0076   1803               M     skpnc
0077   3???               M     bra try_b
0078   1601           00474     bsf T,BTN_A
0079   3???           00475     bra read_exit
007A                  00476 try_b:    
                      00477     try_button B_THR, try_rt
007A   3095               M     movlw B_THR
007B   021C               M     subwf ADRESH,W
007C   1803               M     skpnc
007D   3???               M     bra try_rt
007E   1681           00478     bsf T,BTN_B
007F   3???           00479     bra read_exit
0080                  00480 try_rt:
                      00481     try_button RT_THR, try_up
0080   30B5               M     movlw RT_THR
0081   021C               M     subwf ADRESH,W
0082   1803               M     skpnc
0083   3???               M     bra try_up
0084   1581           00482     bsf T,BTN_RT
0085   3???           00483     bra read_exit
0086                  00484 try_up:
                      00485     try_button UP_THR, try_lt
0086   30C6               M     movlw UP_THR
0087   021C               M     subwf ADRESH,W
0088   1803               M     skpnc
0089   3???               M     bra try_lt
008A   1401           00486     bsf T,BTN_UP
008B   3???           00487     bra read_exit
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-21-2016  19:48:57         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

008C                  00488 try_lt:
                      00489     try_button LT_THR, try_dn
008C   30D1               M     movlw LT_THR
008D   021C               M     subwf ADRESH,W
008E   1803               M     skpnc
008F   3???               M     bra try_dn
0090   1501           00490     bsf T,BTN_LT
0091   3???           00491     bra read_exit
0092                  00492 try_dn:
                      00493     try_button DN_THR, read_exit
0092   30D8               M     movlw DN_THR
0093   021C               M     subwf ADRESH,W
0094   1803               M     skpnc
0095   3???               M     bra read_exit
0096   1481           00494     bsf T,BTN_DN
0097                  00495 read_exit:
0097   0020           00496     banksel GAME_VAR
0098   08??           00497     movfw buttons
0099   0601           00498     xorwf T,W
009A   1D03           00499     skpz
009B   3???           00500     bra rp01
009C   08??           00501     movfw btn_time
009D   02??           00502     subwf ticks,W
009E   3C06           00503     sublw 6
009F   1803           00504     skpnc
00A0   0181           00505     clrf T
00A1                  00506 rp01:
                      00507     pop
00A1   0017               M     moviw SP--
00A2   00??           00508     movwf buttons
00A3   08??           00509     movfw ticks
00A4   00??           00510     movwf btn_time
00A5   0008           00511     return
                      00512 
                      00513 #ifdef SOUND_SUPPORT    
                      00514 ;tone
                      00515 ; play a tone
                      00516 ; input:
                      00517 ;   t   duration in multiple of 1/60 sec.
                      00518 ;   n   note index in tone_pr table
00A6                  00519 tone: ; ( t n -- )
00A6   0021           00520     banksel TRISA
00A7   120C           00521     bcf TRISA,AUDIO_PIN
00A8   003B           00522     banksel AUDIO_PWMPRL
00A9   3581           00523     lslf T
00AA   0801           00524     movfw T
00AB   2???           00525     call tone_pr
00AC   00A5           00526     movwf AUDIO_PWMPRL
00AD   3689           00527     lsrf WREG
00AE   00A3           00528     movwf AUDIO_PWMDCL
00AF   0A01           00529     incf T,W
00B0   2???           00530     call tone_pr
00B1   00A6           00531     movwf AUDIO_PWMPRH
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-21-2016  19:48:57         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00B2   3689           00532     lsrf WREG
00B3   00A4           00533     movwf AUDIO_PWMDCH
00B4   1803           00534     skpnc
00B5   17A3           00535     bsf AUDIO_PWMDCL,7
                      00536     drop  ; n
00B6   317F               M    addfsr SP,-1
                      00537     pop   ; WREG=t
00B7   0017               M     moviw SP--
00B8   00??           00538     movwf tone_tmr
00B9   17AB           00539     bsf AUDIO_PWMCON,EN
00BA   17AF           00540     bsf AUDIO_PWMLDCON,LDA
00BB   1600           00541     bsf flags,F_SND
00BC   0008           00542     return
                      00543 #endif
                      00544     
                      00545 ; set_yptr    
                      00546 ; set FSR0 to point to
                      00547 ; video_buffer line y    
                      00548 ; input:
                      00549 ;   y  line number {0:YZISE-1}
                      00550 ; output:
                      00551 ;   FSR0 point to first byte of line y  in VIDEO_BUFFER
00BD                  00552 set_yptr: ; ( y -- )
00BD   3030           00553     movlw VIDEO_BUFFER&0xff
00BE   0084           00554     movwf FSR0L
00BF   3020           00555     movlw VIDEO_BUFFER>>8
00C0   0085           00556     movwf FSR0H
00C1   3581           00557     lslf T,F ; y*BPL
00C2   3501           00558     lslf T,W
00C3   0781           00559     addwf T,F
                      00560     pop
00C4   0017               M     moviw SP--
00C5   0784           00561     addwf FSR0L
00C6   0103           00562     clrw 
00C7   3D85           00563     addwfc FSR0H
00C8   0008           00564     return
                      00565     
                      00566 ;video_serialize
                      00567 ; serialise video pixels to output pin
                      00568 ; use EUSART in synchronous mode    
                      00569 ; called from isr    
                      00570 ; input:
                      00571 ;   none
                      00572 ; output:
                      00573 ;   none    
                      00574 ; NOTE: EUSART output Least Significant Bit first
                      00575 ;       LSB appear left on screen.
00C9                  00576 video_serialize: 
                      00577     tcyDelay HORZ_DLY ; horizontal center display
  0000                    M     variable r=HORZ_DLY%5
  000A                    M     variable q=HORZ_DLY/5
                          M     while r>1
                          M     bra $+1
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-21-2016  19:48:57         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M r-=2
                          M     endw
                          M     if r==1
                          M     nop
                          M     endif
                          M     if q
00C9   300A               M     movlw q
00CA   3???               M     bra $+1
00CB   0B89               M     decfsz WREG
00CC   3???               M     bra $-2
                          M     endif
                      00578 ; save FSR0    
00CD   0804           00579     movfw FSR0L
                      00580     push
00CE   001C               M     movwi ++SP
00CF   0805           00581     movfw FSR0H
                      00582     push
00D0   001C               M     movwi ++SP
                      00583 ;convert scanline to buffer line    
00D1   3046           00584     movlw FIRST_VIDEO
00D2   02??           00585     subwf lcountL,W
00D3   3689           00586     lsrf WREG  ; a pixel is 4 scan lines
00D4   3689           00587     lsrf WREG
                      00588     push      ; FSR0L FSR0H y
00D5   001C               M     movwi ++SP
00D6   2???           00589     call set_yptr ; FSR0L FSR0H
                      00590     lit BPL ; FSR0L FSR0H BPL
00D7   3006               M    movlw BPL
00D8   001C               M    movwi ++SP 
00D9   0023           00591     banksel RCSTA
00DA   179D           00592     bsf RCSTA,SPEN
                      00593 ;output BPL bytes through EUSART TX    
00DB                  00594 byte_serialize:    
00DB   0023           00595     banksel PIXEL_TXREG
00DC   0012           00596     moviw FSR0++
00DD   009A           00597     movwf PIXEL_TXREG
00DE   0020           00598     banksel TX_PIR
00DF   1E11           00599     btfss TX_PIR,TXIF
00E0   3???           00600     bra $-1
00E1   0B81           00601     decfsz T
00E2   3???           00602     bra byte_serialize
00E3   0023           00603     banksel PIXEL_TXREG
00E4   019A           00604     clrf PIXEL_TXREG
00E5   0020           00605     banksel TX_PIR
00E6   1E11           00606     btfss TX_PIR,TXIF
00E7   3???           00607     bra $-1
00E8   0023           00608     banksel RCSTA
00E9   139D           00609     bcf RCSTA, SPEN
                      00610     drop ; discard bytes counter
00EA   317F               M    addfsr SP,-1
                      00611 ;restore FSR0    
                      00612     pop
00EB   0017               M     moviw SP--
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-21-2016  19:48:57         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00EC   0085           00613     movwf FSR0H
                      00614     pop
00ED   0017               M     moviw SP--
00EE   0084           00615     movwf FSR0L
00EF   0008           00616     return
                      00617 
                      00618 ;set_pixel_ptr    
                      00619 ;set FSR0 pointer at byte containing pixel x,y
                      00620 ; input:
                      00621 ;   x,y coordinates of pixel in video_buffer    
                      00622 ; output:
                      00623 ;   WREG = pixel mask  
00F0                  00624 set_pixel_ptr:  ; ( x y -- )
00F0   2???           00625     call set_yptr
                      00626 ; FSR0+x/8
00F1   3601           00627     lsrf T,W   
00F2   3689           00628     lsrf WREG
00F3   3689           00629     lsrf WREG
00F4   0784           00630     addwf FSR0L
00F5   0103           00631     clrw
00F6   3D85           00632     addwfc FSR0H
                      00633 ;create bit mask    
00F7   3007           00634     movlw 7
00F8   0581           00635     andwf T,F ; T=shift counter
00F9   3001           00636     movlw 0x1
00FA   1903           00637     skpnz 
00FB   3???           00638     bra mask01 ; done
00FC                  00639 mask00:
00FC   3589           00640     lslf WREG
00FD   0B81           00641     decfsz T
00FE   3???           00642     bra mask00
00FF                  00643 mask01:
                      00644     drop ; discard shift counter
00FF   317F               M    addfsr SP,-1
0100   0008           00645     return
                      00646 
                      00647 ; xor_pixel
                      00648 ; inverse pixel at x,y coordinates
                      00649 ; input:
                      00650 ;   x,y pixel coordinates x{0:XSIZE-1},y{0:YSIZE-1}
                      00651 ; output:
                      00652 ;   set F_COLL boolean flag if collision
0101                  00653 xor_pixel: ; ( x y -- )
0101   2???           00654     call set_pixel_ptr
0102   0680           00655     xorwf INDF0,F
0103   0500           00656     andwf INDF0,W
0104   1903           00657     skpnz
0105   1580           00658     bsf flags, F_COLL
0106   0008           00659     return
                      00660 
                      00661 ;xor_row    
                      00662 ; draw row of 4 pixels
                      00663 ; stop when n==0    
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-21-2016  19:48:57         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00664 ; input:
                      00665 ;   {x,y} left coordinates
                      00666 ;   n pixels to draw, 4 bits in high nibble
                      00667 ; output:
                      00668 ;   none
0107                  00669 xor_row: ; ( n x y -- )
                      00670 ; check for empty row
                      00671     pick 2 ; check if n==0
0107   3F7E               M     moviw -2[SP]
0108   1903           00672     skpnz
0109   3???           00673     bra xor_row_done ; row empty nothing to do
010A   3589           00674     lslf WREG
                      00675     insert 2  ; save shifted n
010B   3FFE               M    movwi -2[SP]
010C   1C03           00676     skpc
010D   3???           00677     bra xor_row02 ; bit==0 no draw
                      00678 ; bounds check x{0:XSIZE-1}    
                      00679     pick 1  ; WREG=x
010E   3F7F               M     moviw -1[SP]
010F   1B89           00680     btfsc WREG,7 
0110   3???           00681     bra xor_row02 ; x<0 out of screen
                      00682     over ; n x y x 
0111   3F7F               M     moviw -1[SP]
                          M     push
0112   001C               M     movwi ++SP
                      00683     over ; n x y x y
0113   3F7F               M     moviw -1[SP]
                          M     push
0114   001C               M     movwi ++SP
0115   2???           00684     call xor_pixel ; -- n x y
0116                  00685 xor_row02:
                      00686     inc_n 1  ; x+=1
0116   3F7F               M     moviw -1[SP]
0117   0A89               M     incf WREG,F
0118   3FFF               M     movwi -1[SP]
0119   3???           00687     bra xor_row
011A                  00688 xor_row_done: ; n x y
                      00689     drop_n 3  ; clean stack
011A   317D               M     addfsr SP,-3
011B   0008           00690     return
                      00691 
                      00692 ;get_flash_word    
                      00693 ; read program memory word
                      00694 ; input:
                      00695 ;   ofs offset in table {0:255}    
                      00696 ;   caller prepare PMADR to point table
                      00697 ; output:
                      00698 ;   PMDATH:PMDAL contain 14 bits data word
                      00699 ; side effect:    
                      00700 ;   set 'nibble' counter 
                      00701 ;   modify BSR    
011C                  00702 get_flash_word: ; ( ofs -- )
011C   0023           00703     banksel PMADR
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-21-2016  19:48:57         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00704     pop
011D   0017               M     moviw SP--
011E   0791           00705     addwf PMADRL,F
011F   0103           00706     clrw 
0120   3D92           00707     addwfc PMADRH,F
0121                  00708 read_flash:    
0121   1315           00709     bcf PMCON1,CFGS
0122   1415           00710     bsf PMCON1, RD
0123   0000           00711     nop
0124   0000           00712     nop
0125   0E14           00713     swapf PMDATH,W
0126   3903           00714     andlw 3
0127   1903           00715     skpnz
0128   3003           00716     movlw 3
0129   00??           00717     movwf nibble
012A   0008           00718     return
                      00719 
                      00720 ;next_flash_word    
                      00721 ; increment PMADR 
                      00722 ; and read next flash word    
                      00723 ; input:
                      00724 ;   none
                      00725 ; output:
                      00726 ;   PMDAT    
                      00727 ; side effect:
                      00728 ;   set 'nibble' counter    
                      00729 ;   modify BSR
012B                  00730 next_flash_word:
012B   0023           00731     banksel PMADR
012C   0A91           00732     incf PMADRL
012D   1903           00733     skpnz
012E   0A92           00734     incf PMADRH
012F   3???           00735     bra read_flash
                      00736 
                      00737 ;get_nibble    
                      00738 ;get nibble from PMDAT
                      00739 ; input:
                      00740 ;   none    
                      00741 ; output:
                      00742 ;   T=nibble in bits 7:4
                      00743 ; side effect:    
                      00744 ;   decrement 'nibble' variable    
                      00745 ;   modify BSR
0130                  00746 get_nibble: ; ( -- nibble )
0130   0023           00747     banksel PMDAT
0131   08??           00748     movfw nibble
                      00749 ; select nibble in word    
0132   3A03           00750     xorlw 3
0133   1903           00751     skpnz
0134   3???           00752     bra row0
0135   3A03           00753     xorlw 3
0136   3A02           00754     xorlw 2
0137   1903           00755     skpnz
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-21-2016  19:48:57         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0138   3???           00756     bra row1
0139                  00757 row2:
0139   0E13           00758     swapf PMDATL,W
013A   3???           00759     bra nibble_mask
013B                  00760 row1:    
013B   0813           00761     movfw PMDATL
013C   3???           00762     bra nibble_mask
013D                  00763 row0:    
013D   0E14           00764     swapf PMDATH,W
013E                  00765 nibble_mask:
013E   39F0           00766     andlw 0xf0
                      00767     push
013F   001C               M     movwi ++SP
0140   03??           00768     decf nibble,F ; advance nibble counter
0141   0008           00769     return
                      00770 
                      00771 ;bitmap
                      00772 ; apply a bitmap from program memory to video_buffer
                      00773 ; a bitmap is 4 pixels wide and any number of rows    
                      00774 ; input:
                      00775 ;   PMADR  point to table in program memory    
                      00776 ;   x,y  left/top coordinates in video_buffer
                      00777 ;   ofs  offset of bitmap in table
                      00778 ; output:
                      00779 ;   none
0142                  00780 bitmap: ; ( x y ofs -- )
0142   2???           00781     call get_flash_word  ; x y ofs -- x y 
0143                  00782 bmp00:
0143   08??           00783     movfw nibble
                      00784     push    ; x y cntr
0144   001C               M     movwi ++SP
0145                  00785 bmp02:    
0145   2???           00786     call get_nibble ; x y cntr -- x y cntr n 
                      00787     pick 3 ; x
0146   3F7D               M     moviw -3[SP]
                      00788     push    ; x y cntr n x
0147   001C               M     movwi ++SP
                      00789     pick 3  ; y
0148   3F7D               M     moviw -3[SP]
                      00790     push      ; x y cntr n x y
0149   001C               M     movwi ++SP
014A   2???           00791     call xor_row ; x y cntr n x y -- x y cntr
                      00792     inc_n 1 ; y+=1
014B   3F7F               M     moviw -1[SP]
014C   0A89               M     incf WREG,F
014D   3FFF               M     movwi -1[SP]
014E   0B81           00793     decfsz T
014F   3???           00794     bra bmp02
0150   0E14           00795     swapf PMDATH,W
0151   3903           00796     andlw 3
0152   1903           00797     skpnz
0153   3???           00798     bra bmp01
                      00799     drop_n 3  ; clean stack
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-21-2016  19:48:57         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0154   317D               M     addfsr SP,-3
0155   0008           00800     return
0156                  00801 bmp01: ; this bitmap use another program word
                      00802     drop  ; x y 
0156   317F               M    addfsr SP,-1
0157   2???           00803     call next_flash_word
0158   3???           00804     bra bmp00
                      00805     
                      00806 ;print_char     
                      00807 ; draw character in video_buffer 
                      00808 ; input:
                      00809 ;   x,y left/top coordinates
                      00810 ;   c   character to print 
                      00811 ; output:
                      00812 ;   none    
0159                  00813 print_char: ; ( x y c -- )
0159   3581           00814     lslf T ; 2 words per table entry
015A   0023           00815     banksel PMADR
015B   30??           00816     movlw low(digits)
015C   0091           00817     movwf PMADRL
015D   30??           00818     movlw high(digits)
015E   0092           00819     movwf PMADRH
015F   2???           00820     call bitmap ; x y ofs -- 
0160   0008           00821     return
                      00822 
                      00823 ;print_tetrim    
                      00824 ; print current tetriminos
                      00825 ; input:
                      00826 ;   none
                      00827 ; use game variables   
                      00828 ;   titrim: tetriminos id
                      00829 ;   angle: rotation angle    
                      00830 ;   tx,ty  left/top coordinates
                      00831 ; output:
                      00832 ;   f boolean collision flag   
                      00833 ; side effect:    
                      00834 ;   modify BSR
0161                  00835 print_tetrim: ; ( -- f )
0161   1180           00836     bcf flags, F_COLL ; if collision will be set by xor_pixel
0162   0020           00837     banksel GAME_VAR
0163   08??           00838     movfw tx
                      00839     push    ; -- x
0164   001C               M     movwi ++SP
0165   08??           00840     movfw ty
                      00841     push    ; -- x y 
0166   001C               M     movwi ++SP
0167   08??           00842     movfw angle
                      00843     push    ; -- x y a
0168   001C               M     movwi ++SP
0169   35??           00844     lslf tetrim,W   ; 4 words per table entry, one for each angle
016A   3589           00845     lslf WREG
016B   3A18           00846     xorlw 24
016C   1903           00847     skpnz
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-21-2016  19:48:57         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

016D   3581           00848     lslf T,F
016E   3A18           00849     xorlw 24
016F   0781           00850     addwf T,F  ; x y ofs
0170   0023           00851     banksel PMADR
0171   30??           00852     movlw low(tetriminos)
0172   0091           00853     movwf PMADRL
0173   30??           00854     movlw high(tetriminos)
0174   0092           00855     movwf PMADRH
0175   2???           00856     call bitmap
                      00857     lit 0
0176   3000               M    movlw 0
0177   001C               M    movwi ++SP 
0178   1980           00858     btfsc flags, F_COLL
0179   0A81           00859     incf T,F
017A   0008           00860     return
                      00861 
                      00862 ;print_label    
                      00863 ;print a text line stored in program memory
                      00864 ; text terminated by 255
                      00865 ; input: 
                      00866 ;  x,y left coordinates
                      00867 ;  PCLH= high(table)
                      00868 ;  T=low(table) 
                      00869 ; output:
                      00870 ;   none
017B                  00871 print_label: ; ( x y tableL -- )
017B   0801           00872     movfw T     ; WREG= labelL
017C   000A           00873     callw      
017D   1B89           00874     btfsc WREG,7
017E   3???           00875     bra prt_lbl_done
017F   00??           00876     movwf t1
                      00877     pick 2  ; WREG=x
0180   3F7E               M     moviw -2[SP]
                      00878     push    ; x y labelL x 
0181   001C               M     movwi ++SP
                      00879     pick 2  ; WREG=y
0182   3F7E               M     moviw -2[SP]
                      00880     push    ; x y labelL x y
0183   001C               M     movwi ++SP
0184   08??           00881     movfw t1  ; WREG = c
                      00882     push    ; x y labelL x y c
0185   001C               M     movwi ++SP
0186   2???           00883     call print_char ; x y labelL x y c -- x y labelL
0187   3001           00884     movlw 1
0188   0781           00885     addwf T,F ; advance to next character in table
0189   0103           00886     clrw
018A   3D8A           00887     addwfc PCLATH,F
                      00888     pick 2    ; x
018B   3F7E               M     moviw -2[SP]
018C   3E04           00889     addlw 4   ; x+=4
                      00890     insert 2  
018D   3FFE               M    movwi -2[SP]
018E   3???           00891     bra print_label
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-21-2016  19:48:57         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

018F                  00892 prt_lbl_done:
                      00893     drop_n 3
018F   317D               M     addfsr SP,-3
0190   0008           00894     return
                      00895     
                      00896 ;print_int
                      00897 ;print an integer
                      00898 ;from right to left ( least significant digit first)
                      00899 ; input:    
                      00900 ;   y  line number 
                      00901 ;   number to print in acca    
                      00902 ; output:
                      00903 ;   none
                      00904 ; condition:    
                      00905 ;   accbL contain digit after div10 call    
0191                  00906 print_int: ; ( y -- )
                      00907     dup     ; y y
0191   0801               M     movfw T
0192   001C               M     movwi ++SP
0193   302B           00908     movlw XSIZE-5 ; print begin at right border
                      00909     insert 1    ; x y
0194   3FFF               M    movwi -1[SP]
0195                  00910 print_int00:    
0195   08??           00911     movfw accaH
0196   04??           00912     iorwf accaL,W
0197   1903           00913     skpnz
0198   3???           00914     bra print_last
                      00915     over    ; x y x 
0199   3F7F               M     moviw -1[SP]
                          M     push
019A   001C               M     movwi ++SP
                      00916     over    ; x y x y
019B   3F7F               M     moviw -1[SP]
                          M     push
019C   001C               M     movwi ++SP
019D   2???           00917     call div10
019E   08??           00918     movfw accbL ; remainder of division
                      00919     push   ; x y x y d
019F   001C               M     movwi ++SP
01A0   2???           00920     call print_char ; -- x y 
                      00921     pick 1  ; x
01A1   3F7F               M     moviw -1[SP]
01A2   3EFC           00922     addlw 252 ; x-4
                      00923     insert 1
01A3   3FFF               M    movwi -1[SP]
01A4   3???           00924     bra print_int00
01A5                  00925 print_last:
                      00926     pick 1  ; x 
01A5   3F7F               M     moviw -1[SP]
01A6   3A2B           00927     xorlw XSIZE-5 ; x at right margin?
01A7   1D03           00928     skpz
01A8   3???           00929     bra no_zero
                      00930     push          ; yes print a zero
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-21-2016  19:48:57         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01A9   001C               M     movwi ++SP
01AA   3???           00931     bra print_char
01AB                  00932 no_zero:
                      00933     drop_n 2
01AB   317E               M     addfsr SP,-2
01AC   0008           00934     return
                      00935     
                      00936 ; vline    
                      00937 ;draw well vertical wall ( x y -- )
                      00938 ; inputs:
                      00939 ;   {x,y} bottom coordinates
                      00940 ; output:
                      00941 ;   none    
01AD                  00942 vline:  ; ( x y -- ) 
                      00943     over
01AD   3F7F               M     moviw -1[SP]
                          M     push
01AE   001C               M     movwi ++SP
                      00944     over
01AF   3F7F               M     moviw -1[SP]
                          M     push
01B0   001C               M     movwi ++SP
01B1   2???           00945     call xor_pixel
01B2   0B81           00946     decfsz T,F
01B3   3???           00947     bra vline
01B4   2???           00948     call xor_pixel
01B5   0008           00949     return
                      00950     
                      00951 ; drop 1 row
                      00952 ; input:
                      00953 ;   r  row to drop
                      00954 ; output:
                      00955 ;   none
01B6                  00956 drop1: ; ( r -- )
                      00957     reserve 1 ; r x  
01B6   3141               M     addfsr SP, 1 
01B7                  00958 row_loop: ; y{r:1}
01B7   300A           00959     movlw 10
01B8   0081           00960     movwf T ; -- r x
01B9                  00961 col_loop:  ; x{10:1}
                      00962     dup   ; -- r x x
01B9   0801               M     movfw T
01BA   001C               M     movwi ++SP
                      00963     pick 2
01BB   3F7E               M     moviw -2[SP]
01BC   0389           00964     decf WREG
                      00965     push  ; -- r x x r-1
01BD   001C               M     movwi ++SP
01BE   2???           00966     call set_pixel_ptr
01BF   00??           00967     movwf t0
01C0   0500           00968     andwf INDF0,W
01C1   00??           00969     movwf t1
01C2   3006           00970     movlw BPL
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-21-2016  19:48:57         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01C3   0784           00971     addwf FSR0L
01C4   09??           00972     comf t0,W
01C5   0580           00973     andwf INDF0,F
01C6   08??           00974     movfw t1
01C7   0480           00975     iorwf INDF0,F
01C8                  00976 next_pixel:    
01C8   0B81           00977     decfsz T    ; r x-1 
01C9   3???           00978     bra col_loop
                      00979     dec_n 1  ; dec r
01CA   3F7F               M     moviw -1[SP]
01CB   0389               M     decf WREG,F
01CC   3FFF               M     movwi -1[SP]
01CD   1D03           00980     skpz 
01CE   3???           00981     bra row_loop
                      00982     drop_n 2
01CF   317E               M     addfsr SP,-2
01D0   0008           00983     return
                      00984     
                      00985     
  0000000A            00986 ROW_FULL equ 10 ; 10 pixels in row
                      00987 ; query_row 
                      00988 ; check the state of well row
                      00989 ; input:
                      00990 ;   s number of bits set initialized at 0 by caller    
                      00991 ;   r row number: 0 top, 21 bottom  
                      00992 ; output:    
                      00993 ;   s={0:10}  number of bits set
01D1                  00994 query_row: ; ( s=0 r -- s=0:10 )
                      00995     lit 10 ; s r x   ; check x from  10 to 1
01D1   300A               M    movlw 10
01D2   001C               M    movwi ++SP 
01D3                  00996 qr00:
                      00997     dup   ; s r x x
01D3   0801               M     movfw T
01D4   001C               M     movwi ++SP
                      00998     pick 2 
01D5   3F7E               M     moviw -2[SP]
                      00999     push  ; s r x x y
01D6   001C               M     movwi ++SP
01D7   2???           01000     call set_pixel_ptr ; -- s r x
01D8   0500           01001     andwf INDF0,W
01D9   1903           01002     skpnz   ; Z modified by get_pixel
01DA   3???           01003     bra qr01
                      01004     inc_n 2
01DB   3F7E               M     moviw -2[SP]
01DC   0A89               M     incf WREG,F
01DD   3FFE               M     movwi -2[SP]
01DE                  01005 qr01:    
01DE   0B81           01006     decfsz T
01DF   3???           01007     bra qr00
                      01008     drop_n 2 ; -- s
01E0   317E               M     addfsr SP,-2
01E1   0008           01009     return
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-21-2016  19:48:57         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01010 
                      01011 ; count and drop full rows
                      01012 ; input:
                      01013 ;   none
                      01014 ; output:
                      01015 ;   n number of droppend rows
                      01016 ;condition:
                      01017 ;  check each row from bottom up
                      01018 ;  stop at first empty row
                      01019 ;  full rows are dropped    
01E2                  01020 count_full: ; ( -- n)
                      01021     lit 0 ; full rows counter
01E2   3000               M    movlw 0
01E3   001C               M    movwi ++SP 
                      01022     lit 21 ; row number {21:1}
01E4   3015               M    movlw 21
01E5   001C               M    movwi ++SP 
01E6                  01023 count_loop:
                      01024     lit 0   ; n r s  number of bits set
01E6   3000               M    movlw 0
01E7   001C               M    movwi ++SP 
                      01025     over    ; n r s r
01E8   3F7F               M     moviw -1[SP]
                          M     push
01E9   001C               M     movwi ++SP
01EA   2???           01026     call query_row ; n r s r -- n r s
                      01027     pop     ; n r
01EB   0017               M     moviw SP--
01EC   1903           01028     skpnz
01ED   3???           01029     bra count_done
01EE   3A0A           01030     xorlw ROW_FULL
01EF   1D03           01031     skpz
01F0   3???           01032     bra next_row
                      01033 ; this is a full row    
                      01034     inc_n 1 ; increment n
01F1   3F7F               M     moviw -1[SP]
01F2   0A89               M     incf WREG,F
01F3   3FFF               M     movwi -1[SP]
                      01035     dup    ; n r r
01F4   0801               M     movfw T
01F5   001C               M     movwi ++SP
01F6   2???           01036     call drop1 ; n r r -- n r
01F7   0A81           01037     incf T,F
01F8                  01038 next_row:
01F8   0B81           01039     decfsz T,F
01F9   3???           01040     bra count_loop
01FA                  01041 count_done:
                      01042     drop   ; n r -- n
01FA   317F               M    addfsr SP,-1
01FB   0008           01043     return
                      01044 
                      01045 ;new_tminos    
                      01046 ; generate a new tetriminos
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-21-2016  19:48:57         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01047 ; input:
                      01048 ;   none
                      01049 ; output:
                      01050 ;   none
01FC                  01051 new_tminos:
01FC   0020           01052     banksel GAME_VAR
01FD   3007           01053     movlw 7
01FE   05??           01054     andwf randL,W
01FF   3A07           01055     xorlw 7
0200   1D03           01056     skpz
0201   3A07           01057     xorlw 7
0202   00??           01058     movwf tetrim
0203   3003           01059     movlw 3
0204   05??           01060     andwf randH,W
0205   00??           01061     movwf angle
0206   3004           01062     movlw 4
0207   00??           01063     movwf tx
0208   01??           01064     clrf ty
0209   2???           01065     call coll_test
020A   1D03           01066     skpz
020B   1500           01067     bsf flags, F_GSTOP
020C   0008           01068     return
                      01069 
                      01070 ;wait_start    
                      01071 ; wait player start signal
                      01072 ; button A pressed    
                      01073 ; input:
                      01074 ;   none
                      01075 ; output:
                      01076 ;   none
020D                  01077 wait_start:
                      01078 #ifdef SOUND_SUPPORT    
020D   0103           01079     clrw
020E   2???           01080     call korobeiniki
                      01081     push    ; count
020F   001C               M     movwi ++SP
                      01082     lit 0   ; sequence
0210   3000               M    movlw 0
0211   001C               M    movwi ++SP 
0212                  01083 koro:
0212   1A80           01084     btfsc flags, F_NO_SND
0213   3???           01085     bra no_sound
0214   0A81           01086     incf T,F ; -- count sequence
0215   0801           01087     movfw T  ; WREG=sequence
0216   2???           01088     call korobeiniki
                      01089     push    ; -- count sequence duration
0217   001C               M     movwi ++SP
                      01090     inc_n 1 ;
0218   3F7F               M     moviw -1[SP]
0219   0A89               M     incf WREG,F
021A   3FFF               M     movwi -1[SP]
                      01091     pick 1  
021B   3F7F               M     moviw -1[SP]
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-21-2016  19:48:57         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

021C   2???           01092     call korobeiniki
                      01093     push    ; -- count nidx duration note
021D   001C               M     movwi ++SP
021E   2???           01094     call tone  ; -- count nidx 
                      01095     wait_sound
021F   1A00               M     btfsc flags,F_SND
0220   3???               M     bra $-1
0221                  01096 no_sound:    
0221   2???           01097     call read_pad
0222   1A00           01098     btfsc buttons, BTN_A
0223   3???           01099     bra wait_end
0224   1A80           01100     btfsc buttons, BTN_B
0225   1680           01101     bsf flags, F_NO_SND
                      01102     dec_n 1
0226   3F7F               M     moviw -1[SP]
0227   0389               M     decf WREG,F
0228   3FFF               M     movwi -1[SP]
0229   1D03           01103     skpz
022A   3???           01104     bra koro
                      01105     drop_n 2
022B   317E               M     addfsr SP,-2
022C   303C           01106     movlw 60
022D   2???           01107     call pause
022E   3???           01108     bra wait_start
022F                  01109 wait_end:    
                      01110     drop_n 2
022F   317E               M     addfsr SP,-2
                      01111 #else
                      01112     movlw 20
                      01113     call pause
                      01114     call read_pad
                      01115     btfss buttons, BTN_A
                      01116     bra wait_start
                      01117 #endif    
0230   1100           01118     bcf flags, F_GSTOP
0231   0008           01119     return
                      01120  
                      01121     
                      01122 ;coll_test
                      01123 ; collision test
                      01124 ; after rotation or translation
                      01125 ; undo last action if collision    
                      01126 ; input:
                      01127 ;   none
                      01128 ; output:
                      01129 ;   WREG=f collision flag 0|1
                      01130 ;   Z==0 no collision    
0232                  01131 coll_test: 
0232   2???           01132     call print_tetrim ; -- f
0233   2???           01133     call print_tetrim ; -- f f
                      01134     drop
0234   317F               M    addfsr SP,-1
0235   0020           01135     banksel GAME_VAR
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-21-2016  19:48:57         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01136     pop
0236   0017               M     moviw SP--
0237   0008           01137     return
                      01138 
                      01139 ;update_display    
                      01140 ; print 'score' and 'dropped' values
                      01141 ; input:
                      01142 ;   none
                      01143 ; output:
                      01144 ;   none
0238                  01145 update_display:    
                      01146 ; print score
0238   0020           01147     banksel GAME_VAR
0239   08??           01148     movfw scoreL
023A   00??           01149     movwf accaL
023B   08??           01150     movfw scoreH
023C   00??           01151     movwf accaH
                      01152     lit 6
023D   3006               M    movlw 6
023E   001C               M    movwi ++SP 
023F   2???           01153     call print_int
                      01154 ;print dropped line
0240   0020           01155     banksel GAME_VAR
0241   08??           01156     movfw droppedL
0242   00??           01157     movwf accaL
0243   08??           01158     movfw droppedH
0244   00??           01159     movwf accaH
                      01160     lit 18
0245   3012               M    movlw 18
0246   001C               M    movwi ++SP 
0247   2???           01161     call print_int
0248   0008           01162     return
                      01163 
                      01164 ;prompt
                      01165 ; print prompt message    
0249                  01166 prompt:
                      01167     lit 0
0249   3000               M    movlw 0
024A   001C               M    movwi ++SP 
                      01168     lit 24
024B   3018               M    movlw 24
024C   001C               M    movwi ++SP 
024D   31??           01169     movlp high(lbl_press)
                      01170     lit low(lbl_press)
024E   30??               M    movlw low(lbl_press)
024F   001C               M    movwi ++SP 
0250   2???           01171     call print_label
0251   0008           01172     return
                      01173     
                      01174 ;;;;;;;;;;;;;;;;;;;;;;;;;;
                      01175 ; hardware initialization
                      01176 ;;;;;;;;;;;;;;;;;;;;;;;;;;    
0252                  01177 init:
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-21-2016  19:48:57         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01178 ; parameter stack initialization    
0252   0187           01179     clrf FSR1H
0253   301F           01180     movlw S0
0254   0086           01181     movwf FSR1L
                      01182 ;configure EUSART in sychronsous mode
                      01183 ;to use as pixel serializer
0255   3002           01184     movlw 2
0256   009B           01185     movwf SPBRGL
0257   019C           01186     clrf SPBRGH
0258   019A           01187     clrf TXREG
0259   30B0           01188     movlw (1<<SYNC)|(1<<CSRC)|(1<<TXEN)
025A   009E           01189     movwf TXSTA
025B   179D           01190     bsf RCSTA, SPEN
025C   30CF           01191     movlw ~((1<<CREN)|(1<<SREN))
025D   059D           01192     andwf RCSTA
                      01193 ; ADC configuration
025E   0021           01194     banksel ADCON0
025F   300C           01195     movlw (PAD_CHS<<CHS0)
0260   009D           01196     movwf ADCON0
0261   3020           01197     movlw (2<<ADCS0)
0262   009E           01198     movwf ADCON1
0263   30F8           01199     movlw ~((1<<SYNC_OUT)|(1<<VIDEO_OUT)|(1<<LED_PIN))
0264   058C           01200     andwf TRISA,F
0265   0024           01201     banksel WPUA
0266   120C           01202     bcf WPUA, PAD_PIN
                      01203 ;;;;;;;;;;;;;;;;;;;;;    
0267   0022           01204     banksel VIDEO_LAT
0268   108C           01205     bcf VIDEO_LAT,VIDEO_OUT
0269   100C           01206     bcf LATA,LED_PIN
                      01207 #ifdef SOUND_SUPPORT    
                      01208 ; audio pwm initialization
026A   120C           01209     bcf LATA,AUDIO_PIN
026B   0022           01210     banksel APFCON
026C   149D           01211     bsf APFCON,P2SEL
026D   003B           01212     banksel AUDIO_PWMPHL
026E   01A1           01213     clrf AUDIO_PWMPHL
026F   01A2           01214     clrf AUDIO_PWMPHH
0270   01A7           01215     clrf AUDIO_PWMOFL
0271   01A8           01216     clrf AUDIO_PWMOFH
0272   172B           01217     bsf AUDIO_PWMCON,OE
                      01218 #else
                      01219     banksel SYNC_PWMPH
                      01220 #endif   
                      01221 ; configure pwm video sync for horizontal period
0273   01B1           01222     clrf SYNC_PWMPH
0274   01B2           01223     clrf SYNC_PWMPH+1
0275   01BF           01224     clrf SYNC_PWMLDCON
0276   30F5           01225     movlw HORZ_PERIOD&0XFF
0277   00B5           01226     movwf SYNC_PWMPRL
0278   3004           01227     movlw HORZ_PERIOD>>8
0279   00B6           01228     movwf SYNC_PWMPRH
027A   01BE           01229     clrf SYNC_PWMCLKCON
027B   30D0           01230     movlw (3<<OE)|(1<<POL)
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-21-2016  19:48:57         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

027C   00BB           01231     movwf SYNC_PWMCON
027D   305E           01232     movlw HORZ_PULSE&0xff
027E   00B3           01233     movwf SYNC_PWMDCL
027F   3000           01234     movlw HORZ_PULSE>>8
0280   00B4           01235     movwf SYNC_PWMDCH
0281   17BF           01236     bsf SYNC_PWMLDCON,LDA
                      01237    ;enable video interrupt on period match
0282   103D           01238     bcf SYNC_PWMINTF,PRIF
0283   143C           01239     bsf SYNC_PWMINTE,PRIE
                      01240     ; enable peripheral interrupt
0284   0021           01241     banksel SYNC_PIE
0285   1713           01242     bsf SYNC_PIE,SYNC_IE
                      01243     ;enable interrupts
0286   30C0           01244     movlw (1<<GIE)|(1<<PEIE)
0287   008B           01245     movwf INTCON
0288   01??           01246     clrf lcountL
0289   01??           01247     clrf lcountH
028A   01??           01248     clrf flags
                      01249     ; seed lfsr PRNG
028B   30AC           01250     movlw 0xAC
028C   00??           01251     movwf randL
028D   30E1           01252     movlw 0xE1
028E   00??           01253     movwf randH
                      01254 ;;;;;;;;;;;;;;;;;;;;;
                      01255 ; game initialization
                      01256 ;;;;;;;;;;;;;;;;;;;;;    
  0000000A            01257 WELL_WIDTH equ 10
  00000016            01258 WELL_DEPTH equ 22 
028F                  01259 game_init:
                      01260 ; clear_screen
                      01261     lit 0
028F   3000               M    movlw 0
0290   001C               M    movwi ++SP 
0291   2???           01262     call set_yptr
0292   30C0           01263     movlw BUFFER_SIZE
                      01264     push  ; T=byte count  
0293   001C               M     movwi ++SP
0294   3000           01265     movlw 0
0295                  01266 cls_loop:    
0295   001A           01267     movwi FSR0++
0296   0B81           01268     decfsz T
0297   3???           01269     bra cls_loop
                      01270     drop
0298   317F               M    addfsr SP,-1
                      01271 ; draw game well walls
                      01272     lit 0   ; x 
0299   3000               M    movlw 0
029A   001C               M    movwi ++SP 
                      01273     lit WELL_DEPTH-1  ; x y
029B   3015               M    movlw WELL_DEPTH-1
029C   001C               M    movwi ++SP 
029D   2???           01274     call vline ; x y --
                      01275     lit 11
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-21-2016  19:48:57         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

029E   300B               M    movlw 11
029F   001C               M    movwi ++SP 
                      01276     lit WELL_DEPTH-1
02A0   3015               M    movlw WELL_DEPTH-1
02A1   001C               M    movwi ++SP 
02A2   2???           01277     call vline 
                      01278     lit WELL_WIDTH+1 ; x 
02A3   300B               M    movlw WELL_WIDTH+1
02A4   001C               M    movwi ++SP 
                      01279     lit WELL_DEPTH   ; x y 
02A5   3016               M    movlw WELL_DEPTH
02A6   001C               M    movwi ++SP 
                      01280 ; draw well bottom    
02A7                  01281 hline:
                      01282     over
02A7   3F7F               M     moviw -1[SP]
                          M     push
02A8   001C               M     movwi ++SP
                      01283     over
02A9   3F7F               M     moviw -1[SP]
                          M     push
02AA   001C               M     movwi ++SP
02AB   2???           01284     call xor_pixel
                      01285     pick 1
02AC   3F7F               M     moviw -1[SP]
02AD   0389           01286     decf WREG
                      01287     insert 1
02AE   3FFF               M    movwi -1[SP]
02AF   1D03           01288     skpz
02B0   3???           01289     bra hline
02B1   2???           01290     call xor_pixel
                      01291 ; print "SCORE" label    
                      01292     lit WELL_WIDTH+3 ; x
02B2   300D               M    movlw WELL_WIDTH+3
02B3   001C               M    movwi ++SP 
                      01293     lit 0            ; y
02B4   3000               M    movlw 0
02B5   001C               M    movwi ++SP 
02B6   31??           01294     movlp high(lbl_score)
                      01295     lit low(lbl_score)  
02B7   30??               M    movlw low(lbl_score)
02B8   001C               M    movwi ++SP 
02B9   2???           01296     call print_label
                      01297 ; print "LINES" label    
                      01298     lit WELL_WIDTH+3 ; x
02BA   300D               M    movlw WELL_WIDTH+3
02BB   001C               M    movwi ++SP 
                      01299     lit 12           ; y
02BC   300C               M    movlw 12
02BD   001C               M    movwi ++SP 
02BE   31??           01300     movlp high(lbl_lines)
                      01301     lit low(lbl_lines)
02BF   30??               M    movlw low(lbl_lines)
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-21-2016  19:48:57         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02C0   001C               M    movwi ++SP 
02C1   2???           01302     call print_label
                      01303 ; variables initialization
02C2   1500           01304     bsf flags,F_GSTOP
02C3   0020           01305     banksel GAME_VAR
02C4   01??           01306     clrf scoreL
02C5   01??           01307     clrf scoreH
02C6   01??           01308     clrf droppedL
02C7   01??           01309     clrf droppedH
                      01310 
                      01311 ;;;;;;;;;;;;;;;;;;;;;;;;;
                      01312 ;   game logic
                      01313 ;;;;;;;;;;;;;;;;;;;;;;;;;    
02C8                  01314 tetris:
02C8   2???           01315     call update_display
                      01316 ;print start prompt
02C9   2???           01317     call prompt
                      01318 ; wait button A press
                      01319 ; to start game    
02CA   2???           01320     call wait_start 
                      01321 ; delete prompt
02CB   2???           01322     call prompt
                      01323 ; game start here
02CC                  01324 game_loop:
                      01325 ; generate new tetriminos
                      01326 ; if collision at this stage
                      01327 ; game is over
02CC   2???           01328     call new_tminos
02CD   1D00           01329     btfss flags, F_GSTOP
02CE   3???           01330     bra fall_loop
                      01331 ; game_over
02CF                  01332 game_over:
                      01333 #ifdef ANIMATION    
                      01334     lit 10
02CF   300A               M    movlw 10
02D0   001C               M    movwi ++SP 
                      01335     lit 0
02D1   3000               M    movlw 0
02D2   001C               M    movwi ++SP 
02D3                  01336 clr00:    
                      01337     over
02D3   3F7F               M     moviw -1[SP]
                          M     push
02D4   001C               M     movwi ++SP
                      01338     over
02D5   3F7F               M     moviw -1[SP]
                          M     push
02D6   001C               M     movwi ++SP
02D7   2???           01339     call set_pixel_ptr ; x y x y -- x y , WREG=mask
02D8   0989           01340     comf WREG,F
02D9   0580           01341     andwf INDF0,F
                      01342     dec_n 1 ; x-=1
02DA   3F7F               M     moviw -1[SP]
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-21-2016  19:48:57         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02DB   0389               M     decf WREG,F
02DC   3FFF               M     movwi -1[SP]
02DD   1D03           01343     skpz
02DE   3???           01344     bra clr00
02DF   3015           01345     movlw 21
02E0   0081           01346     movwf T
                      01347     insert 1  ; counter 21
02E1   3FFF               M    movwi -1[SP]
02E2                  01348 drop21:
                      01349     dup    ; counter 21 21
02E2   0801               M     movfw T
02E3   001C               M     movwi ++SP
02E4   2???           01350     call drop1 ; -- counter 21
02E5   3006           01351     movlw 6
02E6   2???           01352     call pause
                      01353     pick 1
02E7   3F7F               M     moviw -1[SP]
02E8   0389           01354     decf WREG
                      01355     insert 1  ; -- counter-1 21
02E9   3FFF               M    movwi -1[SP]
02EA   1D03           01356     skpz
02EB   3???           01357     bra drop21
                      01358     drop_n 2
02EC   317E               M     addfsr SP,-2
                      01359 #else
                      01360     movlw 120
                      01361     call pause
                      01362 #endif
02ED   3???           01363     bra game_init
                      01364 ; tetriminos fall in the well    
02EE                  01365 fall_loop: 
02EE   2???           01366     call print_tetrim
                      01367     pop
02EF   0017               M     moviw SP--
02F0   3008           01368     movlw 8
02F1   2???           01369     call pause
02F2   2???           01370     call print_tetrim ; erase tetriminos
                      01371     pop
02F3   0017               M     moviw SP--
                      01372 ; read pad
02F4   2???           01373     call read_pad
02F5   0020           01374     banksel GAME_VAR
                      01375     case BTN_B, drop_tetrim
02F6   1A80               M     btfsc buttons,BTN_B
02F7   3???               M     bra drop_tetrim
                      01376     case BTN_UP, rot_right
02F8   1800               M     btfsc buttons,BTN_UP
02F9   3???               M     bra rot_right
                      01377     case BTN_DN, rot_left
02FA   1880               M     btfsc buttons,BTN_DN
02FB   3???               M     bra rot_left
                      01378     case BTN_RT, move_right
02FC   1980               M     btfsc buttons,BTN_RT
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-21-2016  19:48:57         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02FD   3???               M     bra move_right
                      01379     case BTN_LT, move_left
02FE   1900               M     btfsc buttons,BTN_LT
02FF   3???               M     bra move_left
0300   3???           01380     bra move_down
0301                  01381 drop_tetrim:
0301   0020           01382     banksel GAME_VAR
0302   0A??           01383     incf ty,F
0303   2???           01384     call coll_test
0304   1903           01385     skpnz
0305   3???           01386     bra drop_tetrim
0306   03??           01387     decf ty,F
0307   2???           01388     call print_tetrim
                      01389     pop
0308   0017               M     moviw SP--
0309   3???           01390     bra score_update
030A                  01391 rot_left:
030A   03??           01392     decf angle,F
030B   3003           01393     movlw 3
030C   05??           01394     andwf angle,F
030D   2???           01395     call coll_test
030E   1D03           01396     skpz
030F   0A??           01397     incf angle,F
0310   3003           01398     movlw 3
0311   05??           01399     andwf angle,F
0312   3???           01400     bra move_down
0313                  01401 rot_right:
0313   0A??           01402     incf angle,F
0314   3003           01403     movlw 3
0315   05??           01404     andwf angle,F
0316   2???           01405     call coll_test
0317   1D03           01406     skpz
0318   03??           01407     decf angle,F
0319   3003           01408     movlw 3
031A   05??           01409     andwf angle,F
031B   3???           01410     bra move_down
031C                  01411 move_left:
031C   03??           01412     decf tx,F
031D   2???           01413     call coll_test
031E   1D03           01414     skpz
031F   0A??           01415     incf tx,F
0320   3???           01416     bra move_down
0321                  01417 move_right:
0321   0A??           01418     incf tx,F
0322   2???           01419     call coll_test
0323   1D03           01420     skpz
0324   03??           01421     decf tx,F
                      01422 ; move down
0325                  01423 move_down:
                      01424 ;    banksel GAME_VAR
0325   0A??           01425     incf ty,F ; tetriminos fall
0326   2???           01426     call coll_test
0327   1903           01427     skpnz
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-21-2016  19:48:57         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0328   3???           01428     bra fall_loop
0329   03??           01429     decf ty,F
032A   2???           01430     call print_tetrim
                      01431     pop
032B   0017               M     moviw SP--
032C                  01432 score_update:    
                      01433 ; check full row and clean
032C   2???           01434     call update_display ; erase numbers
032D   2???           01435     call count_full
                      01436 ; add full row count to dropped variable
032E   0020           01437     banksel GAME_VAR
032F   0801           01438     movfw T
0330   07??           01439     addwf droppedL,F ; 
0331   0103           01440     clrw
0332   3D??           01441     addwfc droppedH
                      01442 ; count points = 2^n where n is count of dropped rows {1:4}    
0333   0881           01443     movf T,F
0334   1903           01444     skpnz
0335   3???           01445     bra add_points
0336   3001           01446     movlw 1
0337   3589           01447     lslf WREG
0338   0B81           01448     decfsz T,F
0339   3???           01449     bra $-2
033A                  01450 add_points:
033A   07??           01451     addwf scoreL
033B   0103           01452     clrw
033C   3D??           01453     addwfc scoreH
                      01454     drop 
033D   317F               M    addfsr SP,-1
033E   2???           01455     call update_display ; display new values
033F   3???           01456     bra game_loop
                      01457     
                      01458     
                      01459 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      01460 ;   data tables
                      01461 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      01462 
                      01463 ; **************** encoding ************************************************
                      01464 ; enhanced PIC instructions are coded on 14 bits
                      01465 ; these 14 bits can be read as data using program memory
                      01466 ; writing/reading mechanism, see datasheet chapter 10 for detail.
                      01467 ; the 'dw' assembler directive encode data in those 14 bits contrary to 'dt'
                      01468 ; directive which encode a single byte as a RETLW instruction.
                      01469 ; So we get a 50% compression by encoding 3 nibbles/program word. 
                      01470 ; The encoding used in the following tables is as follow:    
                      01471 ; bits 13:12  number of nibbles where 0 means there is more than 3 nibbles
                      01472 ; in this data chunk so 1 or more other words follow this one.    
                      01473 ; other 12 bits are 3 nibbles (i.e. 4 bits slices).
                      01474 ;****************************************************************************
                      01475 
0340                  01476 digits: ; each digit is 5 rows
0340   0EAA 20AE      01477     dw 0x0EAA,0x20AE ; 0
0342   04C4 204E      01478     dw 0x04C4,0x204E ; 1
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-21-2016  19:48:57         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0344   0E2E 208E      01479     dw 0x0E2E,0x208E ; 2
0346   0E2E 202E      01480     dw 0x0E2E,0x202E ; 3
0348   0AAE 2022      01481     dw 0x0AAE,0x2022 ; 4
034A   0E8E 202E      01482     dw 0x0E8E,0x202E ; 5
034C   088E 20AE      01483     dw 0x088E,0x20AE ; 6
034E   0E22 2022      01484     dw 0x0E22,0x2022 ; 7
0350   0EAE 20AE      01485     dw 0x0EAE,0x20AE ; 8
0352   0EAE 2022      01486     dw 0x0EAE,0x2022 ; 9
                      01487 ; letters needed for 'SCORE' and 'LINES" labels
0354   0EAE 20AA      01488     dw 0x0EAE,0x20AA ; A  code 10
0356   0688 2086      01489     dw 0x0688,0x2086 ; C  code 11
0358   0E8E 208E      01490     dw 0x0E8E,0x208E ; E  code 12
035A   0E44 204E      01491     dw 0x0E44,0x204E ; I  code 13
035C   0888 208E      01492     dw 0x0888,0x208E ; L  code 14
035E   08CA 20AA      01493     dw 0x08CA,0x20AA ; N  code 15
0360   04AA 20A4      01494     dw 0x04AA,0x20A4 ; O  code 16
0362   0EAE 2088      01495     dw 0x0EAE,0x2088 ; P  code 17
0364   08EA 2088      01496     dw 0x08EA,0x2088 ; R  code 18
0366   0684 202C      01497     dw 0x0684,0x202C ; S  code 19
0368   0040 2040      01498     dw 0x0040,0x2040 ; :  code 20
036A   1000 0000      01499     dw 0x1000,0x0000 ; space code 21
                      01500 
                      01501 ; comments notation: Rn clockwise rotation n*90 degr.    
                      01502 ; note that vertical I as 4 rows so it needs 2 words    
036C                  01503 tetriminos: 
036C   388C           01504     dw 0x388C ; L R0
036D   30E8           01505     dw 0x30E8 ; L R1
036E   3C44           01506     dw 0x3C44 ; L R2
036F   202E           01507     dw 0x202E ; L R3
0370   344C           01508     dw 0x344C ; J R0
0371   208E           01509     dw 0x208E ; J R1
0372   3644           01510     dw 0x3644 ; J R2
0373   30E2           01511     dw 0x30E2 ; J R3
0374   20CC           01512     dw 0x20CC ; O R0 
0375   20CC           01513     dw 0x20CC ; O R2 
0376   20CC           01514     dw 0x20CC ; O R2 
0377   20CC           01515     dw 0x20CC ; O R3 
0378   206C           01516     dw 0x206C ; S R0
0379   3462           01517     dw 0x3462 ; S R1
037A   206C           01518     dw 0x206C ; S R2
037B   3462           01519     dw 0x3462 ; S R3
037C   20E4           01520     dw 0x20E4 ; T R0
037D   3262           01521     dw 0x3262 ; T R1
037E   304E           01522     dw 0x304E ; T R2
037F   38C8           01523     dw 0x38C8 ; T R3
0380   20C6           01524     dw 0x20C6 ; Z R0
0381   34C8           01525     dw 0x34C8 ; Z R1
0382   20C6           01526     dw 0x20C6 ; Z R3
0383   34C8           01527     dw 0x34C8 ; Z R4
                      01528 ; annoying! I tetriminos need a special treatment 
                      01529 ; because vertical I need 2 words for encoding.   
0384   0444 1004      01530     dw 0x0444,0x1004 ; I R0  
0386   200F 0000      01531     dw 0x200F,0x0000 ; I R1  second word is filling for alignment
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-21-2016  19:48:57         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0388   0444 1004      01532     dw 0x0444,0x1004 ; I R2
038A   200F 0000      01533     dw 0x200F,0x0000 ; I R3  
                      01534 
                      01535 #ifdef SOUND_SUPPORT
                      01536 ; tempered scale timer period values    
038C                  01537 tone_pr:
038C   000B           01538     brw
038D   3402 34ED      01539     dt 0x02, 0xed   ; 330   (MI4)   0
038F   34B5 34DF      01540     dt 0xb5, 0xdf   ; 349   (FA4)   1
0391   3428 34D3      01541     dt 0x28, 0xd3   ; 370   (FA4#)  2
0393   344C 34C7      01542     dt 0x4c, 0xc7   ; 392   (SOL4)  3
0395   341E 34BC      01543     dt 0x1e, 0xbc   ; 415   (SOL4#) 4
0397   348F 34B1      01544     dt 0x8f, 0xb1   ; 440   (LA4)   5
0399   3498 34A7      01545     dt 0x98, 0xa7   ; 466   (LA4#)  6
039B   3430 349E      01546     dt 0x30, 0x9e   ; 494   (SI4)   7
039D   344F 3495      01547     dt 0x4f, 0x95   ; 523hz (DO5)   8
039F   34ED 348C      01548     dt 0xed, 0x8c   ; 554   (DO5#)  9
03A1   3404 3485      01549     dt 0x04, 0x85   ; 587   (RÉ5)   10
03A3   348D 347D      01550     dt 0x8d, 0x7d   ; 622   (RÉ5#)  11
03A5   3481 3476      01551     dt 0x81, 0x76   ; 659   (MI5)   12
03A7   34DA 346F      01552     dt 0xda, 0x6f   ; 698   (FA5)   13
03A9   3493 3469      01553     dt 0x93, 0x69   ; 740   (FA5#)  14
03AB   34A6 3463      01554     dt 0xa6, 0x63   ; 784   (SOL5)  15
03AD   340F 345E      01555     dt 0x0f, 0x5e   ; 831   (SOL5#) 16
03AF   34C7 3458      01556     dt 0xc7, 0x58   ; 880   (LA5)   17
03B1   34CC 3453      01557     dt 0xcc, 0x53   ; 932   (LA5#)  18
03B3   3418 344F      01558     dt 0x18, 0x4f   ; 988   (SI5)   19
03B5   3482 3442      01559     dt 0x82, 0x42   ; 1046hz (do6)  20
03B7   3400 3400      01560     dt 0, 0         ; silence       21
                      01561 
                      01562     
                      01563 ; a russian folklore soung    
03B9                  01564 korobeiniki:
                      01565     ;nombre de notes
03B9   000B           01566     brw
03BA   3422           01567     dt 34
                      01568     ; duré, note
03BB   342D 3400      01569     dt 45, 0 
03BD   340F 3404      01570     dt 15, 4
03BF   341E 3407      01571     dt 30, 7
03C1   340F 3403      01572     dt 15, 3
03C3   340F 3400      01573     dt 15, 0
                      01574     
03C5   342D 3405      01575     dt 45, 5
03C7   340F 3409      01576     dt 15, 9
03C9   341E 340C      01577     dt 30, 12
03CB   340F 340A      01578     dt 15, 10
03CD   340F 3408      01579     dt 15, 8
                      01580     
03CF   342D 3407      01581     dt 45, 7
03D1   340F 3408      01582     dt 15, 8
03D3   341E 340A      01583     dt 30, 10
03D5   341E 340C      01584     dt 30, 12
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-21-2016  19:48:57         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01585     
03D7   341E 3408      01586     dt 30, 8
03D9   341E 3405      01587     dt 30, 5
03DB   343C 3405      01588     dt 60, 5
                      01589     
03DD   342D 340D      01590     dt 45, 13
03DF   340F 340F      01591     dt 15, 15
03E1   341E 3411      01592     dt 30, 17
03E3   340F 340F      01593     dt 15, 15
03E5   340F 340D      01594     dt 15, 13
                      01595     
03E7   342D 340C      01596     dt 45, 12
03E9   340F 340D      01597     dt 15, 13
03EB   341E 340C      01598     dt 30, 12
03ED   340F 340A      01599     dt 15, 10
03EF   340F 3408      01600     dt 15, 8
                      01601     
03F1   342D 3407      01602     dt 45, 7
03F3   340F 3408      01603     dt 15, 8
03F5   341E 340A      01604     dt 30, 10
03F7   341E 340C      01605     dt 30, 12
                      01606     
03F9   341E 3408      01607     dt 30, 8
03FB   341E 3405      01608     dt 30, 5
03FD   343C 3405      01609     dt 60, 5
                      01610     
                      01611  #endif
                      01612 
03FF                  01613 lbl_score: ; "SCORE" label
03FF   3413 340B 3410 01614     dt 19,11,16,18,12,20,255
       3412 340C 3414 
       34FF 
                      01615     
0406                  01616 lbl_lines: ; "LINES"  label
0406   340E 340D 340F 01617     dt 14,13,15,12,19,20,255
       340C 3413 3414 
       34FF 
                      01618 
040D                  01619 lbl_press: ; "PRESS A" label
040D   3411 3412 340C 01620     dt 17,18,12,19,19,21,10,255
       3413 3413 3415 
       340A 34FF 
                      01621 
                      01622     
                      01623  
3FE7 1EFF             01624     end
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-21-2016  19:48:57         PAGE 37


SYMBOL TABLE
  LABEL                             VALUE 

ABDEN                             00000000
ABDOVF                            00000007
ADCON0                            0000009D
ADCON1                            0000009E
ADCON2                            0000009F
ADCS0                             00000004
ADCS1                             00000005
ADCS2                             00000006
ADC_PIN                           00000004
ADDEN                             00000003
ADFM                              00000007
ADFVR0                            00000000
ADFVR1                            00000001
ADGO                              00000001
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADPREF0                           00000000
ADPREF1                           00000001
ADRES                             0000009B
ADRESH                            0000009C
ADRESL                            0000009B
ANIMATION                         
ANSA0                             00000000
ANSA1                             00000001
ANSA2                             00000002
ANSA4                             00000004
ANSELA                            0000018C
APFCON                            0000011D
APFCON0                           0000011D
AUDIO_PIN                         00000004
AUDIO_PWMCLKCON                   00000DAE
AUDIO_PWMCON                      00000DAB
AUDIO_PWMDCH                      00000DA4
AUDIO_PWMDCL                      00000DA3
AUDIO_PWMLDCON                    00000DAF
AUDIO_PWMOFH                      00000DA8
AUDIO_PWMOFL                      00000DA7
AUDIO_PWMPHH                      00000DA2
AUDIO_PWMPHL                      00000DA1
AUDIO_PWMPRH                      00000DA6
AUDIO_PWMPRL                      00000DA5
AUDIO_PWMTMR                      00000DA9
A_THR                             00000040
BAUDCON                           0000019F
BORCON                            00000116
BORFS                             00000006
BORRDY                            00000000
BPL                               00000006
BRG16                             00000003
BRGH                              00000002
BSR                               00000008
BSR0                              00000000
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-21-2016  19:48:57         PAGE 38


SYMBOL TABLE
  LABEL                             VALUE 

BSR1                              00000001
BSR2                              00000002
BSR3                              00000003
BSR4                              00000004
BSR_SHAD                          00000FE6
BTN_A                             00000004
BTN_B                             00000005
BTN_DN                            00000001
BTN_LT                            00000002
BTN_RT                            00000003
BTN_UP                            00000000
BUFFER_SIZE                       000000C0
B_THR                             00000095
C                                 00000000
C1HYS                             00000001
C1IE                              00000005
C1IF                              00000005
C1INTN                            00000006
C1INTP                            00000007
C1NCH0                            00000000
C1NCH1                            00000001
C1NCH2                            00000002
C1OE                              00000005
C1ON                              00000007
C1OUT                             00000006
C1PCH0                            00000004
C1PCH1                            00000005
C1POL                             00000004
C1SP                              00000002
C1SYNC                            00000000
CDAFVR0                           00000002
CDAFVR1                           00000003
CFGS                              00000006
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CHS4                              00000006
CM1CON0                           00000111
CM1CON1                           00000112
CMOUT                             00000115
CREN                              00000004
CS0                               00000000
CS1                               00000001
CSRC                              00000007
CWG1CON0                          00000693
CWG1CON1                          00000694
CWG1CON2                          00000695
CWG1DBF                           00000692
CWG1DBF0                          00000000
CWG1DBF1                          00000001
CWG1DBF2                          00000002
CWG1DBF3                          00000003
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-21-2016  19:48:57         PAGE 39


SYMBOL TABLE
  LABEL                             VALUE 

CWG1DBF4                          00000004
CWG1DBF5                          00000005
CWG1DBR                           00000691
CWG1DBR0                          00000000
CWG1DBR1                          00000001
CWG1DBR2                          00000002
CWG1DBR3                          00000003
CWG1DBR4                          00000004
CWG1DBR5                          00000005
CWGASEL                           00000006
CWGBSEL                           00000005
C_SHAD                            00000000
DACCON0                           00000118
DACCON1                           00000119
DACEN                             00000007
DACLPS                            00000006
DACOE                             00000005
DACPSS0                           00000002
DACPSS1                           00000003
DACR0                             00000000
DACR1                             00000001
DACR2                             00000002
DACR3                             00000003
DACR4                             00000004
DC                                00000001
DCIE                              00000001
DCIF                              00000001
DC_SHAD                           00000001
DN_THR                            000000D8
EN                                00000007
F                                 00000001
FCY                               004C4B40
FERR                              00000002
FIRST_VIDEO                       00000046
FOSC                              01312D00
FREE                              00000004
FSR0                              00000004
FSR0H                             00000005
FSR0H_SHAD                        00000FE9
FSR0L                             00000004
FSR0L_SHAD                        00000FE8
FSR0_SHAD                         00000FE8
FSR1                              00000006
FSR1H                             00000007
FSR1H_SHAD                        00000FEB
FSR1L                             00000006
FSR1L_SHAD                        00000FEA
FSR1_SHAD                         00000FEA
FVRCON                            00000117
FVREN                             00000007
FVRRDY                            00000006
F_COLL                            00000003
F_EVEN                            00000000
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-21-2016  19:48:57         PAGE 40


SYMBOL TABLE
  LABEL                             VALUE 

F_GSTOP                           00000002
F_GTMR                            00000001
F_NO_SND                          00000005
F_SND                             00000004
G1ARSEN                           00000006
G1ASDLA0                          00000004
G1ASDLA1                          00000005
G1ASDLB0                          00000006
G1ASDLB1                          00000007
G1ASDSC1                          00000002
G1ASDSFLT                         00000001
G1ASE                             00000007
G1CS0                             00000000
G1EN                              00000007
G1IS0                             00000000
G1IS1                             00000001
G1IS2                             00000002
G1OEA                             00000005
G1OEB                             00000006
G1POLA                            00000003
G1POLB                            00000004
GAME_VAR                          00000000
GIE                               00000007
GO                                00000001
GO_NOT_DONE                       00000001
HFIOFL                            00000003
HFIOFR                            00000004
HFIOFS                            00000000
HORZ_DLY                          00000032
HORZ_PERIOD                       000004F5
HORZ_PULSE                        0000005E
INDF0                             00000000
INDF1                             00000001
INLVLA                            0000038C
INLVLA0                           00000000
INLVLA1                           00000001
INLVLA2                           00000002
INLVLA3                           00000003
INLVLA4                           00000004
INLVLA5                           00000005
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IOCAF                             00000393
IOCAF0                            00000000
IOCAF1                            00000001
IOCAF2                            00000002
IOCAF3                            00000003
IOCAF4                            00000004
IOCAF5                            00000005
IOCAN                             00000392
IOCAN0                            00000000
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-21-2016  19:48:57         PAGE 41


SYMBOL TABLE
  LABEL                             VALUE 

IOCAN1                            00000001
IOCAN2                            00000002
IOCAN3                            00000003
IOCAN4                            00000004
IOCAN5                            00000005
IOCAP                             00000391
IOCAP0                            00000000
IOCAP1                            00000001
IOCAP2                            00000002
IOCAP3                            00000003
IOCAP4                            00000004
IOCAP5                            00000005
IOCIE                             00000003
IOCIF                             00000000
IRCF0                             00000003
IRCF1                             00000004
IRCF2                             00000005
IRCF3                             00000006
LAST_LINE                         00000106
LAST_VIDEO                        000000C5
LATA                              0000010C
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA4                             00000004
LATA5                             00000005
LDA                               00000007
LDS0                              00000000
LDS1                              00000001
LDT                               00000006
LED_PIN                           00000000
LFIOFR                            00000001
LFSR_TAPS                         000000B4
LT_THR                            000000D1
LWLO                              00000005
MC1OUT                            00000000
MFIOFR                            00000002
MODE0                             00000002
MODE1                             00000003
MPWM1EN                           00000000
MPWM1LD                           00000000
MPWM1OUT                          00000000
MPWM2EN                           00000001
MPWM2LD                           00000001
MPWM2OUT                          00000001
MPWM3EN                           00000002
MPWM3LD                           00000002
MPWM3OUT                          00000002
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RI                            00000002
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-21-2016  19:48:57         PAGE 42


SYMBOL TABLE
  LABEL                             VALUE 

NOT_RMCLR                         00000003
NOT_RWDT                          00000004
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_WPUEN                         00000007
ODA0                              00000000
ODA1                              00000001
ODA2                              00000002
ODA4                              00000004
ODA5                              00000005
ODCONA                            0000028C
OE                                00000006
OERR                              00000001
OFIE                              00000003
OFIF                              00000003
OFM0                              00000005
OFM1                              00000006
OFO                               00000004
OFS0                              00000000
OFS1                              00000001
OPTION_REG                        00000095
OSCCON                            00000099
OSCSTAT                           0000009A
OSCTUNE                           00000098
OSTS                              00000005
OUT                               00000005
P1SEL                             00000000
P2SEL                             00000001
PAD_CHS                           00000003
PAD_PIN                           00000004
PCL                               00000002
PCLATH                            0000000A
PCLATH_SHAD                       00000FE7
PCON                              00000096
PEIE                              00000006
PHIE                              00000002
PHIF                              00000002
PIE1                              00000091
PIE2                              00000092
PIE3                              00000093
PIR1                              00000011
PIR2                              00000012
PIR3                              00000013
PIXEL_TXREG                       0000019A
PLLR                              00000006
PMADR                             00000191
PMADRH                            00000192
PMADRL                            00000191
PMCON1                            00000195
PMCON2                            00000196
PMDAT                             00000193
PMDATH                            00000194
PMDATL                            00000193
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-21-2016  19:48:57         PAGE 43


SYMBOL TABLE
  LABEL                             VALUE 

POL                               00000004
PORTA                             0000000C
PR2                               0000001B
PRIE                              00000000
PRIF                              00000000
PS0_OPTION_REG                    00000000
PS0_PWM1CLKCON                    00000004
PS0_PWM2CLKCON                    00000004
PS0_PWM3CLKCON                    00000004
PS1_OPTION_REG                    00000001
PS1_PWM1CLKCON                    00000005
PS1_PWM2CLKCON                    00000005
PS1_PWM3CLKCON                    00000005
PS2_OPTION_REG                    00000002
PS2_PWM1CLKCON                    00000006
PS2_PWM2CLKCON                    00000006
PS2_PWM3CLKCON                    00000006
PSA                               00000003
PWM1CLKCON                        00000D9E
PWM1CON                           00000D9B
PWM1CS0                           00000000
PWM1CS1                           00000001
PWM1DC                            00000D93
PWM1DCH                           00000D94
PWM1DCH0                          00000000
PWM1DCH1                          00000001
PWM1DCH2                          00000002
PWM1DCH3                          00000003
PWM1DCH4                          00000004
PWM1DCH5                          00000005
PWM1DCH6                          00000006
PWM1DCH7                          00000007
PWM1DCIE                          00000001
PWM1DCIF                          00000001
PWM1DCL                           00000D93
PWM1DCL0                          00000000
PWM1DCL1                          00000001
PWM1DCL2                          00000002
PWM1DCL3                          00000003
PWM1DCL4                          00000004
PWM1DCL5                          00000005
PWM1DCL6                          00000006
PWM1DCL7                          00000007
PWM1EN                            00000007
PWM1EN_A                          00000000
PWM1IE                            00000004
PWM1IF                            00000004
PWM1INTCON                        00000D9C
PWM1INTE                          00000D9C
PWM1INTF                          00000D9D
PWM1INTFLG                        00000D9D
PWM1LD                            00000007
PWM1LDA_A                         00000000
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-21-2016  19:48:57         PAGE 44


SYMBOL TABLE
  LABEL                             VALUE 

PWM1LDCON                         00000D9F
PWM1LDM                           00000006
PWM1LDS0                          00000000
PWM1LDS1                          00000001
PWM1MODE0                         00000002
PWM1MODE1                         00000003
PWM1OE                            00000006
PWM1OF                            00000D97
PWM1OFCON                         00000DA0
PWM1OFH                           00000D98
PWM1OFH0                          00000000
PWM1OFH1                          00000001
PWM1OFH2                          00000002
PWM1OFH3                          00000003
PWM1OFH4                          00000004
PWM1OFH5                          00000005
PWM1OFH6                          00000006
PWM1OFH7                          00000007
PWM1OFIE                          00000003
PWM1OFIF                          00000003
PWM1OFL                           00000D97
PWM1OFL0                          00000000
PWM1OFL1                          00000001
PWM1OFL2                          00000002
PWM1OFL3                          00000003
PWM1OFL4                          00000004
PWM1OFL5                          00000005
PWM1OFL6                          00000006
PWM1OFL7                          00000007
PWM1OFM0                          00000005
PWM1OFM1                          00000006
PWM1OFMC                          00000004
PWM1OFS0                          00000000
PWM1OFS1                          00000001
PWM1OUT                           00000005
PWM1OUT_A                         00000000
PWM1PH                            00000D91
PWM1PHH                           00000D92
PWM1PHH0                          00000000
PWM1PHH1                          00000001
PWM1PHH2                          00000002
PWM1PHH3                          00000003
PWM1PHH4                          00000004
PWM1PHH5                          00000005
PWM1PHH6                          00000006
PWM1PHH7                          00000007
PWM1PHIE                          00000002
PWM1PHIF                          00000002
PWM1PHL                           00000D91
PWM1PHL0                          00000000
PWM1PHL1                          00000001
PWM1PHL2                          00000002
PWM1PHL3                          00000003
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-21-2016  19:48:57         PAGE 45


SYMBOL TABLE
  LABEL                             VALUE 

PWM1PHL4                          00000004
PWM1PHL5                          00000005
PWM1PHL6                          00000006
PWM1PHL7                          00000007
PWM1POL                           00000004
PWM1PR                            00000D95
PWM1PRH                           00000D96
PWM1PRH0                          00000000
PWM1PRH1                          00000001
PWM1PRH2                          00000002
PWM1PRH3                          00000003
PWM1PRH4                          00000004
PWM1PRH5                          00000005
PWM1PRH6                          00000006
PWM1PRH7                          00000007
PWM1PRIE                          00000000
PWM1PRIF                          00000000
PWM1PRL                           00000D95
PWM1PRL0                          00000000
PWM1PRL1                          00000001
PWM1PRL2                          00000002
PWM1PRL3                          00000003
PWM1PRL4                          00000004
PWM1PRL5                          00000005
PWM1PRL6                          00000006
PWM1PRL7                          00000007
PWM1PS0                           00000004
PWM1PS1                           00000005
PWM1PS2                           00000006
PWM1TMR                           00000D99
PWM1TMRH                          00000D9A
PWM1TMRH0                         00000000
PWM1TMRH1                         00000001
PWM1TMRH2                         00000002
PWM1TMRH3                         00000003
PWM1TMRH4                         00000004
PWM1TMRH5                         00000005
PWM1TMRH6                         00000006
PWM1TMRH7                         00000007
PWM1TMRL                          00000D99
PWM1TMRL0                         00000000
PWM1TMRL1                         00000001
PWM1TMRL2                         00000002
PWM1TMRL3                         00000003
PWM1TMRL4                         00000004
PWM1TMRL5                         00000005
PWM1TMRL6                         00000006
PWM1TMRL7                         00000007
PWM2CLKCON                        00000DAE
PWM2CON                           00000DAB
PWM2CS0                           00000000
PWM2CS1                           00000001
PWM2DC                            00000DA3
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-21-2016  19:48:57         PAGE 46


SYMBOL TABLE
  LABEL                             VALUE 

PWM2DCH                           00000DA4
PWM2DCH0                          00000000
PWM2DCH1                          00000001
PWM2DCH2                          00000002
PWM2DCH3                          00000003
PWM2DCH4                          00000004
PWM2DCH5                          00000005
PWM2DCH6                          00000006
PWM2DCH7                          00000007
PWM2DCIE                          00000001
PWM2DCIF                          00000001
PWM2DCL                           00000DA3
PWM2DCL0                          00000000
PWM2DCL1                          00000001
PWM2DCL2                          00000002
PWM2DCL3                          00000003
PWM2DCL4                          00000004
PWM2DCL5                          00000005
PWM2DCL6                          00000006
PWM2DCL7                          00000007
PWM2EN                            00000007
PWM2EN_A                          00000001
PWM2IE                            00000005
PWM2IF                            00000005
PWM2INTCON                        00000DAC
PWM2INTE                          00000DAC
PWM2INTF                          00000DAD
PWM2INTFLG                        00000DAD
PWM2LD                            00000007
PWM2LDA_A                         00000001
PWM2LDCON                         00000DAF
PWM2LDM                           00000006
PWM2LDS0                          00000000
PWM2LDS1                          00000001
PWM2MODE0                         00000002
PWM2MODE1                         00000003
PWM2OE                            00000006
PWM2OF                            00000DA7
PWM2OFCON                         00000DB0
PWM2OFH                           00000DA8
PWM2OFH0                          00000000
PWM2OFH1                          00000001
PWM2OFH2                          00000002
PWM2OFH3                          00000003
PWM2OFH4                          00000004
PWM2OFH5                          00000005
PWM2OFH6                          00000006
PWM2OFH7                          00000007
PWM2OFIE                          00000003
PWM2OFIF                          00000003
PWM2OFL                           00000DA7
PWM2OFL0                          00000000
PWM2OFL1                          00000001
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-21-2016  19:48:57         PAGE 47


SYMBOL TABLE
  LABEL                             VALUE 

PWM2OFL2                          00000002
PWM2OFL3                          00000003
PWM2OFL4                          00000004
PWM2OFL5                          00000005
PWM2OFL6                          00000006
PWM2OFL7                          00000007
PWM2OFM0                          00000005
PWM2OFM1                          00000006
PWM2OFMC                          00000004
PWM2OFS0                          00000000
PWM2OFS1                          00000001
PWM2OUT                           00000005
PWM2OUT_A                         00000001
PWM2PH                            00000DA1
PWM2PHH                           00000DA2
PWM2PHH0                          00000000
PWM2PHH1                          00000001
PWM2PHH2                          00000002
PWM2PHH3                          00000003
PWM2PHH4                          00000004
PWM2PHH5                          00000005
PWM2PHH6                          00000006
PWM2PHH7                          00000007
PWM2PHIE                          00000002
PWM2PHIF                          00000002
PWM2PHL                           00000DA1
PWM2PHL0                          00000000
PWM2PHL1                          00000001
PWM2PHL2                          00000002
PWM2PHL3                          00000003
PWM2PHL4                          00000004
PWM2PHL5                          00000005
PWM2PHL6                          00000006
PWM2PHL7                          00000007
PWM2POL                           00000004
PWM2PR                            00000DA5
PWM2PRH                           00000DA6
PWM2PRH0                          00000000
PWM2PRH1                          00000001
PWM2PRH2                          00000002
PWM2PRH3                          00000003
PWM2PRH4                          00000004
PWM2PRH5                          00000005
PWM2PRH6                          00000006
PWM2PRH7                          00000007
PWM2PRIE                          00000000
PWM2PRIF                          00000000
PWM2PRL                           00000DA5
PWM2PRL0                          00000000
PWM2PRL1                          00000001
PWM2PRL2                          00000002
PWM2PRL3                          00000003
PWM2PRL4                          00000004
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-21-2016  19:48:57         PAGE 48


SYMBOL TABLE
  LABEL                             VALUE 

PWM2PRL5                          00000005
PWM2PRL6                          00000006
PWM2PRL7                          00000007
PWM2PS0                           00000004
PWM2PS1                           00000005
PWM2PS2                           00000006
PWM2TMR                           00000DA9
PWM2TMRH                          00000DAA
PWM2TMRH0                         00000000
PWM2TMRH1                         00000001
PWM2TMRH2                         00000002
PWM2TMRH3                         00000003
PWM2TMRH4                         00000004
PWM2TMRH5                         00000005
PWM2TMRH6                         00000006
PWM2TMRH7                         00000007
PWM2TMRL                          00000DA9
PWM2TMRL0                         00000000
PWM2TMRL1                         00000001
PWM2TMRL2                         00000002
PWM2TMRL3                         00000003
PWM2TMRL4                         00000004
PWM2TMRL5                         00000005
PWM2TMRL6                         00000006
PWM2TMRL7                         00000007
PWM3CLKCON                        00000DBE
PWM3CON                           00000DBB
PWM3CS0                           00000000
PWM3CS1                           00000001
PWM3DC                            00000DB3
PWM3DCH                           00000DB4
PWM3DCH0                          00000000
PWM3DCH1                          00000001
PWM3DCH2                          00000002
PWM3DCH3                          00000003
PWM3DCH4                          00000004
PWM3DCH5                          00000005
PWM3DCH6                          00000006
PWM3DCH7                          00000007
PWM3DCIE                          00000001
PWM3DCIF                          00000001
PWM3DCL                           00000DB3
PWM3DCL0                          00000000
PWM3DCL1                          00000001
PWM3DCL2                          00000002
PWM3DCL3                          00000003
PWM3DCL4                          00000004
PWM3DCL5                          00000005
PWM3DCL6                          00000006
PWM3DCL7                          00000007
PWM3EN                            00000007
PWM3EN_A                          00000002
PWM3IE                            00000006
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-21-2016  19:48:57         PAGE 49


SYMBOL TABLE
  LABEL                             VALUE 

PWM3IF                            00000006
PWM3INTCON                        00000DBC
PWM3INTE                          00000DBC
PWM3INTF                          00000DBD
PWM3INTFLG                        00000DBD
PWM3LD                            00000007
PWM3LDA_A                         00000002
PWM3LDCON                         00000DBF
PWM3LDM                           00000006
PWM3LDS0                          00000000
PWM3LDS1                          00000001
PWM3MODE0                         00000002
PWM3MODE1                         00000003
PWM3OE                            00000006
PWM3OF                            00000DB7
PWM3OFCON                         00000DC0
PWM3OFH                           00000DB8
PWM3OFH0                          00000000
PWM3OFH1                          00000001
PWM3OFH2                          00000002
PWM3OFH3                          00000003
PWM3OFH4                          00000004
PWM3OFH5                          00000005
PWM3OFH6                          00000006
PWM3OFH7                          00000007
PWM3OFIE                          00000003
PWM3OFIF                          00000003
PWM3OFL                           00000DB7
PWM3OFL0                          00000000
PWM3OFL1                          00000001
PWM3OFL2                          00000002
PWM3OFL3                          00000003
PWM3OFL4                          00000004
PWM3OFL5                          00000005
PWM3OFL6                          00000006
PWM3OFL7                          00000007
PWM3OFM0                          00000005
PWM3OFM1                          00000006
PWM3OFMC                          00000004
PWM3OFS0                          00000000
PWM3OFS1                          00000001
PWM3OUT                           00000005
PWM3OUT_A                         00000002
PWM3PH                            00000DB1
PWM3PHH                           00000DB2
PWM3PHH0                          00000000
PWM3PHH1                          00000001
PWM3PHH2                          00000002
PWM3PHH3                          00000003
PWM3PHH4                          00000004
PWM3PHH5                          00000005
PWM3PHH6                          00000006
PWM3PHH7                          00000007
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-21-2016  19:48:57         PAGE 50


SYMBOL TABLE
  LABEL                             VALUE 

PWM3PHIE                          00000002
PWM3PHIF                          00000002
PWM3PHL                           00000DB1
PWM3PHL0                          00000000
PWM3PHL1                          00000001
PWM3PHL2                          00000002
PWM3PHL3                          00000003
PWM3PHL4                          00000004
PWM3PHL5                          00000005
PWM3PHL6                          00000006
PWM3PHL7                          00000007
PWM3POL                           00000004
PWM3PR                            00000DB5
PWM3PRH                           00000DB6
PWM3PRH0                          00000000
PWM3PRH1                          00000001
PWM3PRH2                          00000002
PWM3PRH3                          00000003
PWM3PRH4                          00000004
PWM3PRH5                          00000005
PWM3PRH6                          00000006
PWM3PRH7                          00000007
PWM3PRIE                          00000000
PWM3PRIF                          00000000
PWM3PRL                           00000DB5
PWM3PRL0                          00000000
PWM3PRL1                          00000001
PWM3PRL2                          00000002
PWM3PRL3                          00000003
PWM3PRL4                          00000004
PWM3PRL5                          00000005
PWM3PRL6                          00000006
PWM3PRL7                          00000007
PWM3PS0                           00000004
PWM3PS1                           00000005
PWM3PS2                           00000006
PWM3TMR                           00000DB9
PWM3TMRH                          00000DBA
PWM3TMRH0                         00000000
PWM3TMRH1                         00000001
PWM3TMRH2                         00000002
PWM3TMRH3                         00000003
PWM3TMRH4                         00000004
PWM3TMRH5                         00000005
PWM3TMRH6                         00000006
PWM3TMRH7                         00000007
PWM3TMRL                          00000DB9
PWM3TMRL0                         00000000
PWM3TMRL1                         00000001
PWM3TMRL2                         00000002
PWM3TMRL3                         00000003
PWM3TMRL4                         00000004
PWM3TMRL5                         00000005
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-21-2016  19:48:57         PAGE 51


SYMBOL TABLE
  LABEL                             VALUE 

PWM3TMRL6                         00000006
PWM3TMRL7                         00000007
PWMEN                             00000D8E
PWMLD                             00000D8F
PWMOUT                            00000D90
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCREG                             00000199
RCSTA                             0000019D
RD                                00000000
ROW_FULL                          0000000A
RT_THR                            000000B5
RX9                               00000006
RX9D                              00000000
RXDTSEL                           00000007
S0                                0000001F
SBOREN                            00000007
SCKP                              00000004
SCS0                              00000000
SCS1                              00000001
SENDB                             00000003
SLRA0                             00000000
SLRA1                             00000001
SLRA2                             00000002
SLRA4                             00000004
SLRA5                             00000005
SLRCONA                           0000030C
SOUND_SUPPORT                     
SP                                FSR1
SPBRG                             0000019B
SPBRGH                            0000019C
SPBRGL                            0000019B
SPEN                              00000007
SPLLEN                            00000007
SREN                              00000005
STACK_SIZE                        00000020
STATUS                            00000003
STATUS_SHAD                       00000FE4
STKOVF                            00000007
STKPTR                            00000FED
STKUNF                            00000006
SWDTEN                            00000000
SYNC                              00000004
SYNC_IE                           00000006
SYNC_IF                           00000006
SYNC_OUT                          00000002
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-21-2016  19:48:57         PAGE 52


SYMBOL TABLE
  LABEL                             VALUE 

SYNC_PIE                          00000093
SYNC_PIR                          00000013
SYNC_PWMCLKCON                    00000DBE
SYNC_PWMCON                       00000DBB
SYNC_PWMDCH                       00000DB4
SYNC_PWMDCL                       00000DB3
SYNC_PWMINTE                      00000DBC
SYNC_PWMINTF                      00000DBD
SYNC_PWMLDCON                     00000DBF
SYNC_PWMOF                        00000DB7
SYNC_PWMOFCON                     00000DC0
SYNC_PWMPH                        00000DB1
SYNC_PWMPRH                       00000DB6
SYNC_PWMPRL                       00000DB5
SYNC_PWMTMR                       00000DB9
T                                 INDF1
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000018
T1GCON                            00000019
T1GGO                             00000003
T1GGO_NOT_DONE                    00000003
T1GPOL                            00000006
T1GSEL                            00000003
T1GSPM                            00000004
T1GSS0                            00000000
T1GSS1                            00000001
T1GTM                             00000005
T1GVAL                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             0000001C
T2OUTPS0                          00000003
T2OUTPS1                          00000004
T2OUTPS2                          00000005
T2OUTPS3                          00000006
TC                                00000032
TCY                               000000C8
TMR0                              00000015
TMR0CS                            00000005
TMR0IE                            00000005
TMR0IF                            00000002
TMR0SE                            00000004
TMR1                              00000016
TMR1CS0                           00000006
TMR1CS1                           00000007
TMR1GE                            00000007
TMR1GIE                           00000007
TMR1GIF                           00000007
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-21-2016  19:48:57         PAGE 53


SYMBOL TABLE
  LABEL                             VALUE 

TMR1H                             00000017
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             00000016
TMR1ON                            00000000
TMR2                              0000001A
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOS                               00000FEE
TOSH                              00000FEF
TOSL                              00000FEE
TRIGSEL0                          00000004
TRIGSEL1                          00000005
TRIGSEL2                          00000006
TRIGSEL3                          00000007
TRISA                             0000008C
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRMT                              00000001
TSEN                              00000005
TSRNG                             00000004
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TUN5                              00000005
TX9                               00000006
TX9D                              00000000
TXCKSEL                           00000002
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             0000019A
TXSTA                             0000019E
TX_PIR                            00000011
UP_THR                            000000C6
VDD                               00000400
VERT_DLY                          00000032
VIDEO_BUFFER                      00002030
VIDEO_LAT                         0000010C
VIDEO_OUT                         00000001
VREGCON                           00000197
VREGPM                            00000001
W                                 00000000
WDTCON                            00000097
WDTPS0                            00000001
WDTPS1                            00000002
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-21-2016  19:48:57         PAGE 54


SYMBOL TABLE
  LABEL                             VALUE 

WDTPS2                            00000003
WDTPS3                            00000004
WDTPS4                            00000005
WELL_DEPTH                        00000016
WELL_WIDTH                        0000000A
WPUA                              0000020C
WPUA0                             00000000
WPUA1                             00000001
WPUA2                             00000002
WPUA3                             00000003
WPUA4                             00000004
WPUA5                             00000005
WR                                00000001
WREG                              00000009
WREG_SHAD                         00000FE5
WREN                              00000002
WRERR                             00000003
WUE                               00000001
XSIZE                             00000030
YSIZE                             00000020
Z                                 00000002
Z_SHAD                            00000002
_.org_1_0058                      00000058
_.org_1_006D                      0000006D
_.org_1_006F                      0000006F
_.org_1_0072                      00000072
_.org_1_00CA                      000000CA
_.org_1_00CC                      000000CC
_.org_1_00E0                      000000E0
_.org_1_00E7                      000000E7
_.org_1_0220                      00000220
_.org_1_0339                      00000339
_BOREN_NSLEEP                     00003DFF
_BOREN_OFF                        000039FF
_BOREN_ON                         00003FFF
_BOREN_SBODEN                     00003BFF
_BORV_19                          00003FFF
_BORV_HI                          00003BFF
_BORV_LO                          00003FFF
_CLKOUTEN_OFF                     00003FFF
_CLKOUTEN_ON                      000037FF
_CONFIG1                          00008007
_CONFIG2                          00008008
_CP_OFF                           00003FFF
_CP_ON                            00003F7F
_DEVID1                           00008006
_FOSC_ECH                         00003FFF
_FOSC_ECL                         00003FFD
_FOSC_ECM                         00003FFE
_FOSC_INTOSC                      00003FFC
_IDLOC0                           00008000
_IDLOC1                           00008001
_IDLOC2                           00008002
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-21-2016  19:48:57         PAGE 55


SYMBOL TABLE
  LABEL                             VALUE 

_IDLOC3                           00008003
_LPBOREN_OFF                      00003FFF
_LPBOREN_ON                       000037FF
_LVP_OFF                          00001FFF
_LVP_ON                           00003FFF
_MCLRE_OFF                        00003FBF
_MCLRE_ON                         00003FFF
_PLLEN_OFF                        00003EFF
_PLLEN_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FDF
_STVREN_OFF                       00003DFF
_STVREN_ON                        00003FFF
_WDTE_NSLEEP                      00003FF7
_WDTE_OFF                         00003FE7
_WDTE_ON                          00003FFF
_WDTE_SWDTEN                      00003FEF
_WRT_ALL                          00003FFC
_WRT_BOOT                         00003FFE
_WRT_HALF                         00003FFD
_WRT_OFF                          00003FFF
__12F1572                         00000001
_stack                            00000020
accaH                             00000009
accaL                             00000008
accbH                             0000000B
accbL                             0000000A
add_points                        0000033A
angle                             00000041
bitmap                            00000142
bmp00                             00000143
bmp01                             00000156
bmp02                             00000145
btn_time                          00000048
buttons                           0000000C
byte_serialize                    000000DB
case                              
clr00                             000002D3
cls_loop                          00000295
col_loop                          000001B9
coll_test                         00000232
count_done                        000001FA
count_full                        000001E2
count_loop                        000001E6
dec_n                             
digits                            00000340
div10                             0000005A
div10_loop                        0000005D
drop                              
drop1                             000001B6
drop21                            000002E2
drop_n                            
drop_tetrim                       00000301
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-21-2016  19:48:57         PAGE 56


SYMBOL TABLE
  LABEL                             VALUE 

droppedH                          00000047
droppedL                          00000046
dup                               
fall_loop                         000002EE
flags                             00000002
game_init                         0000028F
game_loop                         000002CC
game_over                         000002CF
get_flash_word                    0000011C
get_nibble                        00000130
gt_255                            00000026
gtimer                            00000003
hline                             000002A7
inc_n                             
init                              00000252
insert                            
isr                               00000004
isr_exit                          00000051
koro                              00000212
korobeiniki                       000003B9
lbl_lines                         00000406
lbl_press                         0000040D
lbl_score                         000003FF
lcountH                           00000001
lcountL                           00000000
lit                               
mask00                            000000FC
mask01                            000000FF
move_down                         00000325
move_left                         0000031C
move_right                        00000321
new_tminos                        000001FC
next_flash_word                   0000012B
next_pixel                        000001C8
next_row                          000001F8
nibble                            0000000D
nibble_mask                       0000013E
no_sound                          00000221
no_zero                           000001AB
over                              
pause                             00000055
pick                              
pop                               
print_char                        00000159
print_int                         00000191
print_int00                       00000195
print_label                       0000017B
print_last                        000001A5
print_tetrim                      00000161
prompt                            00000249
prt_lbl_done                      0000018F
push                              
q                                 0000000A
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-21-2016  19:48:57         PAGE 57


SYMBOL TABLE
  LABEL                             VALUE 

qr00                              000001D3
qr01                              000001DE
query_row                         000001D1
r                                 00000000
randH                             00000006
randL                             00000005
rcount                            00000007
read_exit                         00000097
read_flash                        00000121
read_pad                          00000068
reserve                           
rot_left                          0000030A
rot_right                         00000313
row0                              0000013D
row1                              0000013B
row2                              00000139
row_loop                          000001B7
rp01                              000000A1
rst                               00000010
scoreH                            00000045
scoreL                            00000044
score_update                      0000032C
set_pixel_ptr                     000000F0
set_yptr                          000000BD
t0                                0000000E
t1                                0000000F
task0                             0000003B
task1                             00000041
task2                             00000046
tasks                             00000031
tcyDelay                          
tetrim                            00000040
tetriminos                        0000036C
tetris                            000002C8
ticks                             00000049
tone                              000000A6
tone_pr                           0000038C
tone_tmr                          00000004
try_a                             00000074
try_b                             0000007A
try_button                        
try_dn                            00000092
try_lt                            0000008C
try_rt                            00000080
try_up                            00000086
tx                                00000042
ty                                00000043
update_display                    00000238
video_buffer_b0                   00000050
video_buffer_b1                   000000A0
video_buffer_b2                   00000120
video_serialize                   000000C9
visible_check                     00000010
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-21-2016  19:48:57         PAGE 58


SYMBOL TABLE
  LABEL                             VALUE 

vline                             000001AD
vsync_end                         0000001F
vsync_start                       00000018
wait_end                          0000022F
wait_sound                        
wait_start                        0000020D
xor_pixel                         00000101
xor_row                           00000107
xor_row02                         00000116
xor_row_done                      0000011A

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,   126 suppressed

