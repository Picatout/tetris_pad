MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  23:07:08         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001     include p12f1572.inc
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Sep 13 2016
                      00005 ;  MPASM PIC12F1572 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2016 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01601         LIST
                      00002     
                      00003     radix dec
                      00004     errorlevel 0, -302, -305
                      00005     
8007   3FE7           00006     __config _CONFIG1, _FOSC_ECH&_WDTE_OFF
8008   1EFF           00007     __config _CONFIG2, _PLLEN_OFF&_LVP_OFF 
                      00008 
                      00009 #define SOUND_SUPPORT
                      00010     
  01312D00            00011 FOSC equ 20000000 ; 20Mhz
  00000032            00012 TC equ 50 ; nanosecondes 
  004C4B40            00013 FCY equ FOSC/4    ; 5Mhz
  000000C8            00014 TCY equ 200 ; nanoseconds
                      00015 
                      00016 
  00000030            00017 XSIZE equ 48  ; horizontal pixels
  00000020            00018 YSIZE equ 32  ; vertical pixels
  00000006            00019 BPL equ XSIZE/8 ; bytes per line 
  000000C0            00020 BUFFER_SIZE equ  YSIZE*BPL  ; video buffer size
  00002030            00021 VIDEO_BUFFER equ 0x2000+(3*80-BUFFER_SIZE) ; buffer address
  00000032            00022 VERT_DLY equ 50
  00000046            00023 FIRST_VIDEO equ VERT_DLY+20  ; first video output line
  000000C5            00024 LAST_VIDEO equ FIRST_VIDEO+4*YSIZE-1  ; last video output line
  0000019A            00025 PIXEL_TXREG equ TXREG
  00000011            00026 TX_PIR equ PIR1
  00000032            00027 HORZ_DLY equ 10*5  ; there is 5 TCY/µsec
                      00028  
  00000001            00029 VIDEO_OUT equ RA1
  0000010C            00030 VIDEO_LAT equ LATA
  00000002            00031 SYNC_OUT equ RA2 
  00000DB3            00032 SYNC_PWMDCL equ PWM3DCL ; duty cycle low byte
  00000DB4            00033 SYNC_PWMDCH equ PWM3DCH ; high byte    
  00000DB5            00034 SYNC_PWMPRL equ PWM3PRL ; pwm period low byte
  00000DB6            00035 SYNC_PWMPRH equ PWM3PRH ; high byte 
  00000DB1            00036 SYNC_PWMPH equ PWM3PH ; pwm phase
  00000DB7            00037 SYNC_PWMOF equ PWM3OF ; pwm offset
  00000DB9            00038 SYNC_PWMTMR equ PWM3TMR ; timer
  00000DBB            00039 SYNC_PWMCON equ PWM3CON ; control SFR
  00000DBE            00040 SYNC_PWMCLKCON equ PWM3CLKCON  ; clock control SFR
  00000DC0            00041 SYNC_PWMOFCON equ PWM3OFCON ; offset control SFR
  00000DBF            00042 SYNC_PWMLDCON equ PWM3LDCON ; load control SFR
  00000006            00043 SYNC_IE equ PWM3IE  ; interrupt enable bit
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  23:07:08         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000006            00044 SYNC_IF equ PWM3IF  ; interrupt flag bit
  00000093            00045 SYNC_PIE equ PIE3 ; interrupt enable SFR
  00000013            00046 SYNC_PIR equ PIR3 ; interrupt flag SFR 
  00000DBC            00047 SYNC_PWMINTE equ PWM3INTE
  00000DBD            00048 SYNC_PWMINTF equ PWM3INTF
                      00049  
  000004F5            00050 HORZ_PERIOD equ FOSC/15748-1 ; 15748 hertz
  0000005E            00051 HORZ_PULSE equ 4700/TC ; 4.7µsec 
  00000106            00052 LAST_LINE equ 262
                      00053 
  00000000            00054 LED_PIN equ RA0
  00000004            00055 ADC_PIN equ RA4
                      00056 
                      00057 #ifdef SOUND_SUPPORT 
  00000004            00058 AUDIO_PIN equ RA4
  00000DA3            00059 AUDIO_PWMDCL equ PWM2DCL
  00000DA4            00060 AUDIO_PWMDCH equ PWM2DCH
  00000DA5            00061 AUDIO_PWMPRL equ PWM2PRL
  00000DA6            00062 AUDIO_PWMPRH equ PWM2PRH
  00000DA9            00063 AUDIO_PWMTMR equ PWM2TMR
  00000DAE            00064 AUDIO_PWMCLKCON equ PWM2CLKCON
  00000DAF            00065 AUDIO_PWMLDCON equ PWM2LDCON
  00000DAB            00066 AUDIO_PWMCON equ PWM2CON
                      00067 #endif
                      00068  
                      00069 ; game pad resource
                      00070 ; use ADC 
  00000004            00071 PAD_PIN equ ANSA4
  00000003            00072 PAD_CHS equ 3 
  00000000            00073 BTN_UP equ 0
  00000001            00074 BTN_DN equ 1
  00000002            00075 BTN_LT equ 2
  00000003            00076 BTN_RT equ 3
  00000004            00077 BTN_A equ 4
  00000005            00078 BTN_B equ 5
                      00079 ; threshold level for each button
                      00080 ; lower_btn_thr >= BTN_? < btn_thr
                      00081 ; exemple: BTN_UP if RT_THR<=Vadc<UP_THR  
  00000400            00082 VDD equ 1024
  000000D8            00083 DN_THR equ 216 ;(VDD*(6/7+5/6)/2)>>2
  000000D1            00084 LT_THR equ 209 ; (VDD*(5/6+4/5)/2)>>2
  000000C6            00085 UP_THR equ 198 ;(VDD*(4/5+3/4)/2)>>2
  000000B5            00086 RT_THR equ 181 ;(VDD*(3/4+2/3)/2)>>2
  00000095            00087 B_THR  equ 149 ; (VDD*(2/3+1/2)/2)>>2
  00000040            00088 A_THR  equ 64 ;(VDD/4)>>2
                      00089  
                      00090 try_button macro btn, label 
                      00091     movlw btn
                      00092     subwf ADRESH,W
                      00093     skpnc
                      00094     bra label
                      00095     endm
                      00096     
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  23:07:08         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00097 ;boolean flags 
  00000000            00098 F_VSYNC equ 0 ; vertical sync active
  00000001            00099 F_EVEN equ 1  ; even field
  00000002            00100 F_GTMR equ 2  ; game timer active
  00000003            00101 F_GSTOP equ 3 ; game stopped
  00000004            00102 F_COLL equ 4 ; collision flag
                      00103 #ifdef SOUND_SUPPORT 
  00000005            00104 F_SND equ 5 ; sound timer active 
  00000006            00105 F_NO_SND equ 6 ; quiet mode
                      00106 #endif
                      00107  
  000000B4            00108 LFSR_TAPS equ 0xB4 ; xor mask
                      00109  
                      00110 tcyDelay macro n ; delay in TCY cycles  5TCY per µsec.  
                      00111     variable r=n%5
                      00112     variable q=n/5
                      00113     while r>1
                      00114     bra $+1
                      00115 r-=2
                      00116     endw
                      00117     if r==1
                      00118     nop
                      00119     endif
                      00120     if q
                      00121     movlw q
                      00122     bra $+1
                      00123     decfsz WREG
                      00124     bra $-2
                      00125     endif
                      00126     endm
                      00127 
                      00128 ; button selector case    
                      00129 case macro n, label
                      00130     btfsc buttons,n
                      00131     bra label
                      00132     endm
                      00133  
                      00134 start_timer macro value ; start game timer
                      00135     movlw value
                      00136     movwf gtimer
                      00137     bsf flags, F_GTMR
                      00138     endm
                      00139     
                      00140 wait_timer macro ; wait timer expiration
                      00141     btfsc flags, F_GTMR
                      00142     bra $-1
                      00143     endm
                      00144     
                      00145 pause macro value ; suspend execution (busy loop)
                      00146     start_timer value
                      00147     wait_timer
                      00148     endm
                      00149 
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  23:07:08         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00150 #ifdef SOUND_SUPPORT    
                      00151 wait_sound macro ; wait sound end
                      00152     btfsc flags,F_SND
                      00153     bra $-1
                      00154     endm
                      00155 #endif
                      00156     
                      00157 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00158 ; software stack for arguments passing
                      00159 ; SP is Stack Pointer
                      00160 ; T is Top Of Stack
                      00161 #define SP FSR1
                      00162 #define T INDF1
  00000020            00163 STACK_SIZE equ 32
                      00164  
  0000001F            00165 S0 equ 0x1F ; stack base address - 1
                      00166 
                      00167 push macro   ; ( -- n ) push WREG on stack
                      00168     movwi ++SP
                      00169     endm
                      00170 
                      00171 pop macro   ; ( n -- )  pop T in WREG
                      00172     moviw SP--
                      00173     endm
                      00174     
                      00175 drop macro  ; ( n -- ) ; discard T
                      00176    addfsr SP,-1
                      00177    endm
                      00178 
                      00179 drop_n macro n  ; discard n elements  n<32
                      00180     addfsr SP,-n
                      00181     endm
                      00182     
                      00183 lit macro  n ; ( -- n ) ; push a literal
                      00184    movlw n
                      00185    movwi ++SP 
                      00186    endm
                      00187 
                      00188 dup macro ; ( n -- n n ) duplicate T
                      00189     movfw T
                      00190     movwi ++SP
                      00191     endm
                      00192     
                      00193 over macro ; ( n1 n2 -- n1 n2 n1 )
                      00194     moviw -1[SP]
                      00195     push
                      00196     endm
                      00197     
                      00198 pick macro n  ; pick nth element of stack to WREG
                      00199     moviw -n[SP]
                      00200     endm
                      00201 
                      00202 insert macro n ;  insert WREG at position n on stack
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  23:07:08         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00203    movwi -n[SP]
                      00204    endm
                      00205    
                      00206 inc_n macro n ; increament nth element of stack
                      00207     moviw -n[SP]
                      00208     incf WREG,F
                      00209     movwi -n[SP]
                      00210     endm
                      00211     
                      00212 dec_n macro n ; decreament nth element of stack
                      00213     moviw -n[SP]
                      00214     decf WREG,F
                      00215     movwi -n[SP]
                      00216     endm
                      00217     
                      00218 reserve macro n ; reserve n bytes on stack for local variables
                      00219     addfsr SP, n 
                      00220     endm
                      00221  
                      00222 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00223 ; parameter stack section    
                      00224 dstack udata 0x20
0020                  00225 _stack res 32
                      00226 ; game variables section 
  00000000            00227 GAME_VAR equ 0 ; game variables bank
                      00228 game_var udata 0x40 
                      00229 ; tetris game state
0040                  00230 tetrim res 1 ; active tretriminos 
0041                  00231 angle res 1 ; tetriminos rotatation angle in multiple of 90degr. {0:3}
0042                  00232 tx  res 1 ; x coordinate
0043                  00233 ty  res 1 ; y coordinate
0044                  00234 scoreL res 1 ; game score  16 bits
0045                  00235 scoreH res 1 
0046                  00236 droppedL res 1  ; total
0047                  00237 droppedH res 1  ; dropped lines
                      00238   
                      00239  
                      00240 ; These 3 sections are used for video pixels buffering
                      00241 ; with indirect access using FSR0
                      00242 ; to form a contiguous address space. 
                      00243 ; total size 192 bytes 
                      00244 vb_b0    udata 0x50
0050                  00245 video_buffer_b0 res 32
                      00246 vb_b1    udata 0xA0
00A0                  00247 video_buffer_b1 res 80
                      00248 vb_b2    udata 0x120
0120                  00249 video_buffer_b2 res 80
                      00250  
                      00251  
                      00252     udata_shr
                      00253 ;scan lines counter 16 bits
0000                  00254 lcountL res 1
0001                  00255 lcountH res 1
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  23:07:08         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00256 ; boolean flags 
0002                  00257 flags res 1
                      00258 ; game timer
0003                  00259 gtimer res 1 
                      00260 #ifdef SOUND_SUPPORT 
                      00261 ; sound timer
0004                  00262 tone_tmr res 1 
                      00263 #endif 
                      00264 ; lfsr PRNG register
0005                  00265 randL res 1 
0006                  00266 randH res 1 
                      00267 ; loop counter
0007                  00268 rcount res 1
                      00269 ; arithmetic accumulator A 16 bits
0008                  00270 accaL res 1
0009                  00271 accaH res 1
                      00272 ; arithmetic accumulator B 16 bits
000A                  00273 accbL res 1
000B                  00274 accbH res 1
                      00275 ; game pad buttons state
000C                  00276 buttons res 1
                      00277 ; program memory reader next nibble {0-3}
000D                  00278 nibble res 1
                      00279 ; temporary registers
000E                  00280 t0  res 1
000F                  00281 t1  res 1
                      00282   
                      00283 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00284 ; reset entry point
                      00285 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0010                  00286 rst: 
                      00287     org 0
0000   0023           00288     banksel ANSELA
0001   018C           00289     clrf ANSELA
0002   160C           00290     bsf ANSELA,PAD_PIN
0003   2???           00291     goto init
                      00292     
                      00293     org 4
                      00294 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;   
                      00295 ; interrupt service routine
                      00296 ; the only interrupt is on SYNC_PWM timer
                      00297 ; this intterrupt trigger once 
                      00298 ; for every horizontal line, i.e. 15748/sec.    
                      00299 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
0004                  00300 isr:
0004   003B           00301     banksel SYNC_PWMINTF
0005   103D           00302     bcf SYNC_PWMINTF,PRIF
0006   1800           00303     btfsc lcountH,0
0007   3???           00304     bra gt_255 ; lcount > 255
                      00305 ; lcount < 256
0008   08??           00306     movfw lcountL
0009   1903           00307     skpnz
000A   3???           00308     bra vsync_start
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  23:07:08         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000B   3A03           00309     xorlw 3
000C   1903           00310     skpnz
000D   3???           00311     bra vsync_end
                      00312 ; check if visible line    
000E   08??           00313     movfw lcountL
000F   3C45           00314     sublw FIRST_VIDEO-1
0010   1803           00315     skpnc
0011   3???           00316     bra isr_exit
0012   08??           00317     movfw lcountL
0013   3CC5           00318     sublw LAST_VIDEO
0014   1C03           00319     skpc
0015   3???           00320     bra isr_exit
                      00321 ; output video pixels for this line    
0016   2???           00322     call video_serialize 
0017   3???           00323     bra isr_exit 
                      00324 ; scanline 0 start vertical sync pulse    
0018                  00325 vsync_start: 
0018   003B           00326     banksel SYNC_PWMDCL
0019   3097           00327     movlw (HORZ_PERIOD-HORZ_PULSE)&0xff
001A   00B3           00328     movwf SYNC_PWMDCL
001B   3004           00329     movlw (HORZ_PERIOD-HORZ_PULSE)>>8
001C   00B4           00330     movwf SYNC_PWMDCH
001D   17BF           00331     bsf SYNC_PWMLDCON,LDA
001E   1400           00332     bsf flags, F_VSYNC
001F   3???           00333     bra isr_exit
                      00334 ; scanline 3 end vertical sync pulse
0020                  00335 vsync_end: 
0020   003B           00336     banksel SYNC_PWMDCL
0021   305E           00337     movlw HORZ_PULSE&0xff
0022   00B3           00338     movwf SYNC_PWMDCL
0023   3000           00339     movlw HORZ_PULSE>>8
0024   00B4           00340     movwf SYNC_PWMDCH
0025   17BF           00341     bsf SYNC_PWMLDCON,LDA
0026   1000           00342     bcf flags, F_VSYNC
0027   3???           00343     bra isr_exit
                      00344 ; scan line > 255    
0028                  00345 gt_255:
                      00346 ; check for end of field    
0028   3006           00347     movlw LAST_LINE&0xff
0029   1C80           00348     btfss flags,F_EVEN
002A   3E01           00349     addlw 1
002B   06??           00350     xorwf lcountL,W
002C   1D03           00351     skpz
002D   3???           00352     bra tasks
                      00353 ; end of field
                      00354 ; reset line counter    
002E   01??           00355     clrf lcountL
002F   01??           00356     clrf lcountH
0030   3002           00357     movlw 1<<F_EVEN
0031   06??           00358     xorwf flags,F ; toggle even field flag
0032   0009           00359     retfie
                      00360 ; round robin task scheduler
                      00361 ; each task execute once every 1/60th sec.
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  23:07:08         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00362 ; condition:    
                      00363 ;   Task must complete inside
                      00364 ;   horizontal period. i.e. before SYNC_PWM period end
                      00365 ; maximum 6 tasks slots available    
0033                  00366 tasks:
                      00367 ; task selector    
0033   08??           00368     movfw lcountL
0034   1903           00369     skpnz
0035   3???           00370     bra task0
0036   0389           00371     decf WREG
0037   1903           00372     skpnz 
0038   3???           00373     bra task1
0039   0389           00374     decf WREG
003A   1903           00375     skpnz
003B   3???           00376     bra task2
003C   3???           00377     bra isr_exit
003D                  00378 task0:
                      00379 #ifdef SOUND_SUPPORT    
                      00380 ; sound timer    
003D   08??           00381     movfw tone_tmr
003E   1903           00382     skpnz
003F   3???           00383     bra isr_exit
0040   0B??           00384     decfsz tone_tmr,F
0041   3???           00385     bra isr_exit
0042   1280           00386     bcf flags,F_SND
0043   003B           00387     banksel AUDIO_PWMCON
0044   13AB           00388     bcf AUDIO_PWMCON,EN
                      00389 #endif    
0045   3???           00390     bra isr_exit
0046                  00391 task1:   
                      00392 ; game timer    
0046   08??           00393     movf gtimer,F ; 
0047   1903           00394     skpnz
0048   3???           00395     bra isr_exit
0049   0B??           00396     decfsz gtimer,F ; 
004A   3???           00397     bra isr_exit ;
004B   1100           00398     bcf flags, F_GTMR
004C   3???           00399     bra isr_exit ;
004D                  00400 task2:
                      00401 ; rotate lfsr
004D   36??           00402     lsrf randH
004E   0C??           00403     rrf randL
004F   1803           00404     skpnc
0050   30B4           00405     movlw LFSR_TAPS
0051   06??           00406     xorwf randH
0052                  00407 isr_exit:
0052   0A??           00408     incf lcountL
0053   1903           00409     skpnz
0054   0A??           00410     incf lcountH
0055   0009           00411     retfie
                      00412 
                      00413 ;div10    
                      00414 ; divsion by 10    
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  23:07:08         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00415 ; needed to convert binary to BCD
                      00416 ; input:
                      00417 ;   acca dividend  16 bits
                      00418 ; output:
                      00419 ;   acca: quotient
                      00420 ;   accbL: remainder    
0056                  00421 div10:
0056   3011           00422     movlw 17
0057   00??           00423     movwf rcount
0058   01??           00424     clrf accbL
0059                  00425 div10_loop:
0059   300A           00426     movlw 10
005A   02??           00427     subwf accbL,W
005B   1803           00428     skpnc
005C   00??           00429     movwf accbL
005D   0D??           00430     rlf accaL
005E   0D??           00431     rlf accaH
005F   0D??           00432     rlf accbL
0060   0B??           00433     decfsz rcount
0061   3???           00434     bra div10_loop
0062   36??           00435     lsrf accbL
0063   0008           00436     return
                      00437     
                      00438 ;read_pad    
                      00439 ;read game pad
                      00440 ; store value in 'buttons'
                      00441 ; a button is accepted if
                      00442 ; the Vadc value is below its threshold
0064                  00443 read_pad:
0064   01??           00444     clrf buttons
                      00445 #ifdef SOUND_SUPPORT    
0065   1A80           00446     btfsc flags, F_SND
0066   0008           00447     return ; can't read while tone playing
                      00448 #endif    
0067   0021           00449     banksel TRISA
0068   160C           00450     bsf TRISA,ADC_PIN
0069   0021           00451     banksel ADCON0
006A   141D           00452     bsf ADCON0,ADON
                      00453     tcyDelay 5*4 ; délais d'acquisition 4µsec
  0000                    M     variable r=5*4%5
  0004                    M     variable q=5*4/5
                          M     while r>1
                          M     bra $+1
                          M r-=2
                          M     endw
                          M     if r==1
                          M     nop
                          M     endif
                          M     if q
006B   3004               M     movlw q
006C   3???               M     bra $+1
006D   0B89               M     decfsz WREG
006E   3???               M     bra $-2
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  23:07:08         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
006F   149D           00454     bsf ADCON0,GO
0070   189D           00455     btfsc ADCON0,NOT_DONE
0071   3???           00456     bra $-1
0072   101D           00457     bcf ADCON0,ADON
                      00458 ; try each button from lower to upper
0073                  00459 try_a:
                      00460     try_button A_THR, try_b
0073   3040               M     movlw A_THR
0074   021C               M     subwf ADRESH,W
0075   1803               M     skpnc
0076   3???               M     bra try_b
0077   1600           00461     bsf buttons,BTN_A
0078   3???           00462     bra read_exit
0079                  00463 try_b:    
                      00464     try_button B_THR, try_rt
0079   3095               M     movlw B_THR
007A   021C               M     subwf ADRESH,W
007B   1803               M     skpnc
007C   3???               M     bra try_rt
007D   1680           00465     bsf buttons,BTN_B
007E   3???           00466     bra read_exit
007F                  00467 try_rt:
                      00468     try_button RT_THR, try_up
007F   30B5               M     movlw RT_THR
0080   021C               M     subwf ADRESH,W
0081   1803               M     skpnc
0082   3???               M     bra try_up
0083   1580           00469     bsf buttons,BTN_RT
0084   3???           00470     bra read_exit
0085                  00471 try_up:
                      00472     try_button UP_THR, try_lt
0085   30C6               M     movlw UP_THR
0086   021C               M     subwf ADRESH,W
0087   1803               M     skpnc
0088   3???               M     bra try_lt
0089   1400           00473     bsf buttons,BTN_UP
008A   3???           00474     bra read_exit
008B                  00475 try_lt:
                      00476     try_button LT_THR, try_dn
008B   30D1               M     movlw LT_THR
008C   021C               M     subwf ADRESH,W
008D   1803               M     skpnc
008E   3???               M     bra try_dn
008F   1500           00477     bsf buttons,BTN_LT
0090   3???           00478     bra read_exit
0091                  00479 try_dn:
                      00480     try_button DN_THR, read_exit
0091   30D8               M     movlw DN_THR
0092   021C               M     subwf ADRESH,W
0093   1803               M     skpnc
0094   3???               M     bra read_exit
0095   1480           00481     bsf buttons,BTN_DN
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  23:07:08         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0096                  00482 read_exit:
0096   0021           00483     banksel TRISA
0097   120C           00484     bcf TRISA,ADC_PIN
0098   0008           00485     return
                      00486 
                      00487 #ifdef SOUND_SUPPORT    
                      00488 ; play a tone
                      00489 ; input:
                      00490 ;   t   duration in multiple of 1/60 sec.
                      00491 ;   n   note number
0099                  00492 tone: ; ( t n -- )
0099   0021           00493     banksel TRISA
009A   120C           00494     bcf TRISA,AUDIO_PIN
009B   003B           00495     banksel AUDIO_PWMPRL
009C   3581           00496     lslf T
009D   0801           00497     movfw T
009E   2???           00498     call tone_pr
009F   00A5           00499     movwf AUDIO_PWMPRL
00A0   3689           00500     lsrf WREG
00A1   00A3           00501     movwf AUDIO_PWMDCL
00A2   0A01           00502     incf T,W
00A3   2???           00503     call tone_pr
00A4   00A6           00504     movwf AUDIO_PWMPRH
00A5   3689           00505     lsrf WREG
00A6   00A4           00506     movwf AUDIO_PWMDCH
00A7   1803           00507     skpnc
00A8   17A3           00508     bsf AUDIO_PWMDCL,7
                      00509     drop  ; n
00A9   317F               M    addfsr SP,-1
                      00510     pop   ; WREG=t
00AA   0017               M     moviw SP--
00AB   00??           00511     movwf tone_tmr
00AC   17AB           00512     bsf AUDIO_PWMCON,EN
00AD   17AF           00513     bsf AUDIO_PWMLDCON,LDA
00AE   1680           00514     bsf flags,F_SND
00AF   0008           00515     return
                      00516 #endif
                      00517     
                      00518 ; set_yptr    
                      00519 ; set FSR0 to point to
                      00520 ; video_buffer line y    
                      00521 ; input:
                      00522 ;   y  line number {0:YZISE-1}
                      00523 ; output:
                      00524 ;   FSR0 point to beginning of line y    
00B0                  00525 set_yptr: ; ( y -- )
00B0   3030           00526     movlw VIDEO_BUFFER&0xff
00B1   0084           00527     movwf FSR0L
00B2   3020           00528     movlw VIDEO_BUFFER>>8
00B3   0085           00529     movwf FSR0H
00B4   3581           00530     lslf T,F
00B5   3501           00531     lslf T,W
00B6   0781           00532     addwf T,F
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  23:07:08         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00533     pop
00B7   0017               M     moviw SP--
00B8   0784           00534     addwf FSR0L
00B9   0103           00535     clrw 
00BA   3D85           00536     addwfc FSR0H
00BB   0008           00537     return
                      00538     
                      00539 ;video_serialize
                      00540 ; serialise video pixels to output pin
                      00541 ; use EUSART in synchronous mode    
                      00542 ; called from isr    
                      00543 ; input:
                      00544 ;   none
                      00545 ; output:
                      00546 ;   none    
00BC                  00547 video_serialize: 
                      00548     tcyDelay HORZ_DLY
  0000                    M     variable r=HORZ_DLY%5
  000A                    M     variable q=HORZ_DLY/5
                          M     while r>1
                          M     bra $+1
                          M r-=2
                          M     endw
                          M     if r==1
                          M     nop
                          M     endif
                          M     if q
00BC   300A               M     movlw q
00BD   3???               M     bra $+1
00BE   0B89               M     decfsz WREG
00BF   3???               M     bra $-2
                          M     endif
                      00549 ; save FSR0    
00C0   0804           00550     movfw FSR0L
                      00551     push
00C1   001C               M     movwi ++SP
00C2   0805           00552     movfw FSR0H
                      00553     push
00C3   001C               M     movwi ++SP
00C4   3046           00554     movlw FIRST_VIDEO
00C5   02??           00555     subwf lcountL,W
00C6   3689           00556     lsrf WREG  ; a pixel is 4 scan lines
00C7   3689           00557     lsrf WREG
                      00558     push      ; FSR0L FSR0H y
00C8   001C               M     movwi ++SP
00C9   2???           00559     call set_yptr ; FSR0L FSR0H
                      00560     lit BPL ; FSR0L FSR0H BPL
00CA   3006               M    movlw BPL
00CB   001C               M    movwi ++SP 
00CC   0023           00561     banksel RCSTA
00CD   179D           00562     bsf RCSTA,SPEN
00CE                  00563 byte_serialize:    
00CE   0023           00564     banksel PIXEL_TXREG
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  23:07:08         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00CF   0012           00565     moviw FSR0++
00D0   009A           00566     movwf PIXEL_TXREG
00D1   0020           00567     banksel TX_PIR
00D2   1E11           00568     btfss TX_PIR,TXIF
00D3   3???           00569     bra $-1
00D4   0B81           00570     decfsz T
00D5   3???           00571     bra byte_serialize
                      00572     drop ; discard bytes counter
00D6   317F               M    addfsr SP,-1
00D7   0023           00573     banksel PIXEL_TXREG
00D8   019A           00574     clrf PIXEL_TXREG
00D9   0020           00575     banksel TX_PIR
00DA   1E11           00576     btfss TX_PIR,TXIF
00DB   3???           00577     bra $-1
00DC   0023           00578     banksel RCSTA
00DD   139D           00579     bcf RCSTA, SPEN
                      00580 ;restore FSR0    
                      00581     pop
00DE   0017               M     moviw SP--
00DF   0085           00582     movwf FSR0H
                      00583     pop
00E0   0017               M     moviw SP--
00E1   0084           00584     movwf FSR0L
00E2   0008           00585     return
                      00586 
                      00587 ; clear_screen
                      00588 ; set all pixels black
                      00589 ; input:
                      00590 ;   none
                      00591 ; output:
                      00592 ;   none    
00E3                  00593 clear_screen: 
                      00594     lit 0
00E3   3000               M    movlw 0
00E4   001C               M    movwi ++SP 
00E5   2???           00595     call set_yptr
00E6   30C0           00596     movlw BUFFER_SIZE
                      00597     push  ; T=byte count  
00E7   001C               M     movwi ++SP
00E8   3000           00598     movlw 0
00E9                  00599 cls_loop:    
00E9   001A           00600     movwi FSR0++
00EA   0B81           00601     decfsz T
00EB   3???           00602     bra cls_loop
                      00603     drop
00EC   317F               M    addfsr SP,-1
00ED   0008           00604     return
                      00605 
                      00606 ;set_pixel_ptr    
                      00607 ;set FSR0 pointer at byte containing pixel x,y
                      00608 ; input:
                      00609 ;   x,y coordinates of pixel in video_buffer    
                      00610 ; output:
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  23:07:08         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00611 ;   WREG = pixel mask  
                      00612 ; NOTE: EUSART output Least Significant Bit first
                      00613 ;       LSB appear left on screen.
00EE                  00614 set_pixel_ptr:  ; ( x y -- )
00EE   2???           00615     call set_yptr
                      00616 ; FSR0+x/8
00EF   3601           00617     lsrf T,W   
00F0   3689           00618     lsrf WREG
00F1   3689           00619     lsrf WREG
00F2   0784           00620     addwf FSR0L
00F3   0103           00621     clrw
00F4   3D85           00622     addwfc FSR0H
                      00623 ;create bit mask    
00F5   3007           00624     movlw 7
00F6   0581           00625     andwf T,F ; T=bit position
00F7   3001           00626     movlw 0x1
00F8   1903           00627     skpnz 
00F9   3???           00628     bra mask01 ; least significant bit
00FA                  00629 mask00:
00FA   3589           00630     lslf WREG
00FB   0B81           00631     decfsz T
00FC   3???           00632     bra mask00
00FD                  00633 mask01:
                      00634     drop ; discard shift counter
00FD   317F               M    addfsr SP,-1
00FE   0008           00635     return
                      00636 
                      00637 ; set_pixel
                      00638 ; set x,y pixel to 1
                      00639 ; input:
                      00640 ;   x,y pixel coordinates x{0:XSIZE-1},y{0:YSIZE-1}
                      00641 ; output:
                      00642 ;   none
00FF                  00643 set_pixel: ; ( x y -- )
00FF   2???           00644     call set_pixel_ptr
0100   0480           00645     iorwf INDF0,F
0101   0008           00646     return
                      00647 
                      00648 ; clear_pixel
                      00649 ; set x,y pixel to 0
                      00650 ; input:
                      00651 ;   x,y pixel coordinates x{0:XSIZE-1},y{0:YSIZE-1}
                      00652 ; output:
                      00653 ;   none
0102                  00654 clear_pixel: ; ( x y -- )
0102   2???           00655     call set_pixel_ptr
0103   0989           00656     comf WREG
0104   0580           00657     andwf INDF0,F
0105   0008           00658     return
                      00659 
                      00660 ; get_pixel    
                      00661 ; return state of pixel
                      00662 ; input:
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  23:07:08         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00663 ;   x,y pixel coordinates x{0:XSIZE-1},y{0:YSIZE-1}
                      00664 ; output:
                      00665 ;   WREG=0|2^n  where n{0:7}
                      00666 ;   Z=1 when T==0    
0106                  00667 get_pixel: ; ( x y -- )
0106   2???           00668     call set_pixel_ptr
0107   0500           00669     andwf INDF0,W
0108   0008           00670     return
                      00671     
                      00672 ; xor_pixel
                      00673 ; inverse pixel at x,y coordinates
                      00674 ; input:
                      00675 ;   x,y pixel coordinates x{0:XSIZE-1},y{0:YSIZE-1}
                      00676 ; output:
                      00677 ;   set F_COLL boolean flag if collision
0109                  00678 xor_pixel: ; ( x y -- f )
0109   2???           00679     call set_pixel_ptr
010A   0680           00680     xorwf INDF0,F
010B   0500           00681     andwf INDF0,W
010C   1903           00682     skpnz
010D   1600           00683     bsf flags, F_COLL
010E   0008           00684     return
                      00685 
                      00686 ;xor_row    
                      00687 ; draw row of 4 pixels
                      00688 ; stop when n==0    
                      00689 ; input:
                      00690 ;   {x,y} left coordinates
                      00691 ;   n pixels to draw, 4 bits in high nibble
                      00692 ; output:
                      00693 ;   f=collision flag, return modified value   
                      00694 ; conditions:
                      00695 ;   use 't1' as temporary storage    
                      00696 ; >> no bank dependency << 
010F                  00697 xor_row: ; ( n x y -- )
                      00698 ; check for empty row
                      00699     pick 2 ; check if n==0
010F   3F7E               M     moviw -2[SP]
0110   1903           00700     skpnz
0111   3???           00701     bra xor_row_done ; row empty nothing to do
0112   3589           00702     lslf WREG
                      00703     insert 2  ; save shifted n
0113   3FFE               M    movwi -2[SP]
0114   1C03           00704     skpc
0115   3???           00705     bra xor_row02 ; bit==0 no draw
                      00706 ; bounds check x{0:XSIZE-1}    
                      00707     pick 1  ; WREG=x
0116   3F7F               M     moviw -1[SP]
0117   1B89           00708     btfsc WREG,7 
0118   3???           00709     bra xor_row02 ; x<0 out of screen
                      00710     over ; n x y x 
0119   3F7F               M     moviw -1[SP]
                          M     push
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  23:07:08         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

011A   001C               M     movwi ++SP
                      00711     over ; n x y x y
011B   3F7F               M     moviw -1[SP]
                          M     push
011C   001C               M     movwi ++SP
011D   2???           00712     call xor_pixel ; -- n x y
011E                  00713 xor_row02:
                      00714     inc_n 1  ; x+=1
011E   3F7F               M     moviw -1[SP]
011F   0A89               M     incf WREG,F
0120   3FFF               M     movwi -1[SP]
0121   3???           00715     bra xor_row
0122                  00716 xor_row_done: ; n x y
                      00717     drop_n 3  ; clean stack
0122   317D               M     addfsr SP,-3
0123   0008           00718     return
                      00719 
                      00720 ;get_flash_word    
                      00721 ; read program memory word
                      00722 ; input:
                      00723 ;   ofs offset in table {0:255}    
                      00724 ;   lo is low byte of program address
                      00725 ;   hi is high byte of program address
                      00726 ; output:
                      00727 ;   PMDATH:PMDAL contain 14 bits data word
                      00728 ; side effect:    
                      00729 ;   set 'nibble' counter 
                      00730 ;   modify BSR    
0124                  00731 get_flash_word: ; ( ofs -- )
0124   0023           00732     banksel PMADR
                      00733     pop
0125   0017               M     moviw SP--
0126   0791           00734     addwf PMADRL,F
0127   0103           00735     clrw 
0128   3D92           00736     addwfc PMADRH,F
0129                  00737 read_flash:    
0129   1315           00738     bcf PMCON1,CFGS
012A   1415           00739     bsf PMCON1, RD
012B   0000           00740     nop
012C   0000           00741     nop
012D   0E14           00742     swapf PMDATH,W
012E   3903           00743     andlw 3
012F   1903           00744     skpnz
0130   3003           00745     movlw 3
0131   00??           00746     movwf nibble
0132   0008           00747     return
                      00748 
                      00749 ;next_flash_word    
                      00750 ; increment PMADR 
                      00751 ; and read next flash word    
                      00752 ; input:
                      00753 ;   none
                      00754 ; output:
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  23:07:08         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00755 ;   PMDAT    
                      00756 ; side effect:
                      00757 ;   set 'nibble' counter    
                      00758 ;   modify BSR
0133                  00759 next_flash_word:
0133   0023           00760     banksel PMADR
0134   0A91           00761     incf PMADRL
0135   1903           00762     skpnz
0136   0A92           00763     incf PMADRH
0137   3???           00764     bra read_flash
                      00765 
                      00766 ;get_nibble    
                      00767 ;get nibble from PMDAT
                      00768 ; input:
                      00769 ;   none    
                      00770 ; output:
                      00771 ;   T=nibble in bits 7:4
                      00772 ; side effect:    
                      00773 ;   increment 'nibble' variable    
                      00774 ;   modify BSR
0138                  00775 get_nibble: ; ( -- nibble )
0138   08??           00776     movfw nibble
0139   1903           00777     skpnz 
013A   2???           00778     call next_flash_word
                      00779 ;    banksel PMDAT
                      00780 ; select nibble in word    
013B   3A03           00781     xorlw 3
013C   1903           00782     skpnz
013D   3???           00783     bra row0
013E   3A03           00784     xorlw 3
013F   3A02           00785     xorlw 2
0140   1903           00786     skpnz
0141   3???           00787     bra row1
0142                  00788 row2:
0142   0E13           00789     swapf PMDATL,W
0143   3???           00790     bra nibble_mask
0144                  00791 row1:    
0144   0813           00792     movfw PMDATL
0145   3???           00793     bra nibble_mask
0146                  00794 row0:    
0146   0E14           00795     swapf PMDATH,W
0147                  00796 nibble_mask:
0147   39F0           00797     andlw 0xf0
                      00798     push
0148   001C               M     movwi ++SP
0149   03??           00799     decf nibble,F ; advance nibble counter
014A   0008           00800     return
                      00801 
                      00802 ;bitmap
                      00803 ; apply a bitmap from program memory to video_buffer
                      00804 ; a bitmap is 4 pixels wide and any number of rows    
                      00805 ; input:
                      00806 ;   PMADR  point to table in program memory    
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  23:07:08         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00807 ;   x,y  left/top coordinates in video_buffer
                      00808 ;   ofs  offset of bitmap in table
                      00809 ; output:
                      00810 ;   none
014B                  00811 bitmap: ; ( x y ofs -- )
014B   2???           00812     call get_flash_word  ; x y ofs -- x y 
014C                  00813 bmp00:
014C   08??           00814     movfw nibble
                      00815     push    ; x y cntr
014D   001C               M     movwi ++SP
014E                  00816 bmp02:    
014E   2???           00817     call get_nibble ; x y cntr -- x y cntr n 
                      00818     pick 3 ; x
014F   3F7D               M     moviw -3[SP]
                      00819     push    ; x y cntr n x
0150   001C               M     movwi ++SP
                      00820     pick 3  ; y
0151   3F7D               M     moviw -3[SP]
                      00821     push      ; x y cntr n x y
0152   001C               M     movwi ++SP
0153   2???           00822     call xor_row ; x y cntr n x y -- x y cntr
                      00823     inc_n 1 ; y+=1
0154   3F7F               M     moviw -1[SP]
0155   0A89               M     incf WREG,F
0156   3FFF               M     movwi -1[SP]
0157   0B81           00824     decfsz T
0158   3???           00825     bra bmp02
                      00826 ;    banksel PMDAT
0159   0E14           00827     swapf PMDATH,W
015A   3903           00828     andlw 3
015B   1903           00829     skpnz
015C   3???           00830     bra bmp01
                      00831     drop_n 3  ; clean stack
015D   317D               M     addfsr SP,-3
015E   0008           00832     return
015F                  00833 bmp01:
                      00834     drop  ; x y 
015F   317F               M    addfsr SP,-1
0160   2???           00835     call next_flash_word
0161   3???           00836     bra bmp00
                      00837     
                      00838 ;print_char     
                      00839 ; draw character in video_buffer 
                      00840 ; input:
                      00841 ;   x,y left/top coordinates
                      00842 ;   c   character to print 
                      00843 ; output:
                      00844 ;   none    
0162                  00845 print_char: ; ( x y c -- )
0162   3581           00846     lslf T ; 2 words per table entry
0163   0023           00847     banksel PMADR
0164   30??           00848     movlw low(digits)
0165   0091           00849     movwf PMADRL
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  23:07:08         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0166   30??           00850     movlw high(digits)
0167   0092           00851     movwf PMADRH
0168   2???           00852     call bitmap ; x y ofs -- 
0169   0008           00853     return
                      00854 
                      00855 ;print_tetrim    
                      00856 ; print current tetriminos
                      00857 ; input:
                      00858 ;   none
                      00859 ; use game variables   
                      00860 ;   titrim: tetriminos id
                      00861 ;   angle: rotation angle    
                      00862 ;   tx,ty  left/top coordinates
                      00863 ; output:
                      00864 ;   f boolean collision flag   
                      00865 ; side effect:    
                      00866 ;   modify BSR
016A                  00867 print_tetrim: ; ( -- f )
016A   1200           00868     bcf flags, F_COLL
016B   0020           00869     banksel GAME_VAR
016C   08??           00870     movfw tx
                      00871     push    ; -- x
016D   001C               M     movwi ++SP
016E   08??           00872     movfw ty
                      00873     push    ; -- x y 
016F   001C               M     movwi ++SP
0170   08??           00874     movfw angle
                      00875     push    ; -- x y a
0171   001C               M     movwi ++SP
0172   35??           00876     lslf tetrim,W   ; 4 words per table entry, one for each angle
0173   3589           00877     lslf WREG
0174   3A18           00878     xorlw 24
0175   1903           00879     skpnz
0176   3581           00880     lslf T,F
0177   3A18           00881     xorlw 24
0178   0781           00882     addwf T,F  ; x y ofs
0179   0023           00883     banksel PMADR
017A   30??           00884     movlw low(tetriminos)
017B   0091           00885     movwf PMADRL
017C   30??           00886     movlw high(tetriminos)
017D   0092           00887     movwf PMADRH
017E   2???           00888     call bitmap
                      00889     lit 0
017F   3000               M    movlw 0
0180   001C               M    movwi ++SP 
0181   1A00           00890     btfsc flags, F_COLL
0182   0A81           00891     incf T,F
0183   0008           00892     return
                      00893 
                      00894 ;print_label    
                      00895 ;print a text line stored in program memory
                      00896 ; text terminated by 255
                      00897 ; input: 
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  23:07:08         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00898 ;  x,y left coordinates
                      00899 ;  PCLH= high(table)
                      00900 ;  T=low(table) 
                      00901 ; output:
                      00902 ;   none
0184                  00903 print_label: ; ( x y tableL -- )
0184   0801           00904     movfw T     ; WREG= labelL
0185   000A           00905     callw      
0186   1B89           00906     btfsc WREG,7
0187   3???           00907     bra prt_lbl_done
                      00908     push ; x y labelL c
0188   001C               M     movwi ++SP
                      00909     pick 3  ; WREG=x
0189   3F7D               M     moviw -3[SP]
                      00910     push    ; x y labelL c x 
018A   001C               M     movwi ++SP
                      00911     pick 3  ; WREG=y
018B   3F7D               M     moviw -3[SP]
                      00912     push    ; x y labelL c x y
018C   001C               M     movwi ++SP
                      00913     pick 2  ; WREG = c
018D   3F7E               M     moviw -2[SP]
                      00914     push    ; x y labelL c x y c
018E   001C               M     movwi ++SP
018F   2???           00915     call print_char ; x y labelL c x y c -- x y labelL c
                      00916     drop    ; x y labelL
0190   317F               M    addfsr SP,-1
0191   3001           00917     movlw 1
0192   0781           00918     addwf T,F ; advance to next character in table
0193   0103           00919     clrw
0194   3D8A           00920     addwfc PCLATH,F
                      00921     pick 2    ; x
0195   3F7E               M     moviw -2[SP]
0196   3E04           00922     addlw 4   ; x+=4
                      00923     insert 2  
0197   3FFE               M    movwi -2[SP]
0198   3???           00924     bra print_label
0199                  00925 prt_lbl_done:
                      00926     drop_n 3
0199   317D               M     addfsr SP,-3
019A   0008           00927     return
                      00928     
                      00929 ;print_int
                      00930 ;print an integer
                      00931 ;from right to left ( least significant digit first)
                      00932 ; input:    
                      00933 ;   y  line number 
                      00934 ;   number to print in acca    
                      00935 ; output:
                      00936 ;   none
                      00937 ; condition:    
                      00938 ;   accbL contain digit after div10 call    
019B                  00939 print_int: ; ( y -- )
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  23:07:08         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00940     dup     ; y y
019B   0801               M     movfw T
019C   001C               M     movwi ++SP
019D   302B           00941     movlw XSIZE-5
                      00942     insert 1    ; x y
019E   3FFF               M    movwi -1[SP]
019F                  00943 print_int00:    
019F   08??           00944     movfw accaH
01A0   04??           00945     iorwf accaL,W
01A1   1903           00946     skpnz
01A2   3???           00947     bra print_last
                      00948     over    ; x y x 
01A3   3F7F               M     moviw -1[SP]
                          M     push
01A4   001C               M     movwi ++SP
                      00949     over    ; x y x y
01A5   3F7F               M     moviw -1[SP]
                          M     push
01A6   001C               M     movwi ++SP
01A7   2???           00950     call div10
01A8   08??           00951     movfw accbL ; remainder of division
                      00952     push   ; x y x y d
01A9   001C               M     movwi ++SP
01AA   2???           00953     call print_char ; -- x y 
                      00954     pick 1  ; x
01AB   3F7F               M     moviw -1[SP]
                      00955     push    ; x y x
01AC   001C               M     movwi ++SP
01AD   3004           00956     movlw 4
01AE   0281           00957     subwf T,F ; x y x-4  next position in video_buffer
                      00958     pop
01AF   0017               M     moviw SP--
                      00959     insert 1  ; save that x position
01B0   3FFF               M    movwi -1[SP]
01B1   3???           00960     bra print_int00
01B2                  00961 print_last:
                      00962     pick 1  ; x 
01B2   3F7F               M     moviw -1[SP]
01B3   3A2B           00963     xorlw XSIZE-5 ; x at right margin?
01B4   1D03           00964     skpz
01B5   3???           00965     bra no_zero
                      00966     push          ; yes print a zero
01B6   001C               M     movwi ++SP
01B7   3???           00967     bra print_char
01B8                  00968 no_zero:
                      00969     drop_n 2
01B8   317E               M     addfsr SP,-2
01B9   0008           00970     return
                      00971     
                      00972 ; draw horizontal line ( length  y x -- )
                      00973 ; inputs:
                      00974 ;   length of line
                      00975 ;   {x,y} left coordinates 
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  23:07:08         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00976 ; output:
                      00977 ;   none    
01BA                  00978 hline:
                      00979     pick 2  ; length
01BA   3F7E               M     moviw -2[SP]
01BB   1903           00980     skpnz
01BC   3???           00981     bra hline_done  ; length=0
01BD   0389           00982     decf WREG
                      00983     insert 2  ; decrement length
01BE   3FFE               M    movwi -2[SP]
                      00984     dup     ; len y x x
01BF   0801               M     movfw T
01C0   001C               M     movwi ++SP
                      00985     pick 2  ; y
01C1   3F7E               M     moviw -2[SP]
                      00986     push    ; len y x x y
01C2   001C               M     movwi ++SP
01C3   2???           00987     call xor_pixel
01C4   0A81           00988     incf T  ; len y x+1
01C5   3???           00989     bra hline
01C6                  00990 hline_done:    
                      00991     drop_n 3
01C6   317D               M     addfsr SP,-3
01C7   0008           00992     return
                      00993 
                      00994 ; vline    
                      00995 ;draw vertical line ( length x y -- )
                      00996 ; inputs:
                      00997 ;   length of line
                      00998 ;   {x,y} top coordinates
                      00999 ; output:
                      01000 ;   none    
01C8                  01001 vline:  ; ( len x y -- ) 
                      01002     pick 2 ; len
01C8   3F7E               M     moviw -2[SP]
01C9   1903           01003     skpnz
01CA   3???           01004     bra vline_done ; len=0
01CB   0389           01005     decf WREG
                      01006     insert 2  ; decrement len
01CC   3FFE               M    movwi -2[SP]
                      01007     over     ; l x y x
01CD   3F7F               M     moviw -1[SP]
                          M     push
01CE   001C               M     movwi ++SP
                      01008     over     ; l x y x y    
01CF   3F7F               M     moviw -1[SP]
                          M     push
01D0   001C               M     movwi ++SP
01D1   2???           01009     call xor_pixel ; -- l x y
01D2   0A81           01010     incf T,F    ; y+=1
01D3   3???           01011     bra vline
01D4                  01012 vline_done:
                      01013     drop_n 3
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  23:07:08         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01D4   317D               M     addfsr SP,-3
01D5   0008           01014     return
                      01015     
  0000000A            01016 WELL_WIDTH equ 10
  00000016            01017 WELL_DEPTH equ 22 
                      01018 ;game_init
                      01019 ; initialize game state
                      01020 ; input:
                      01021 ;   none
                      01022 ; output:
                      01023 ;   none    
01D6                  01024 game_init:
01D6   2???           01025     call clear_screen
                      01026 ; draw game well
01D7   3016           01027     movlw WELL_DEPTH
                      01028     push
01D8   001C               M     movwi ++SP
                      01029     push  ; len len
01D9   001C               M     movwi ++SP
01DA   0103           01030     clrw
                      01031     push
01DB   001C               M     movwi ++SP
                      01032     push  ; len len x=0, y=0
01DC   001C               M     movwi ++SP
01DD   2???           01033     call vline ; -- len 
                      01034     lit WELL_WIDTH+1 ; len x
01DE   300B               M    movlw WELL_WIDTH+1
01DF   001C               M    movwi ++SP 
                      01035     lit 0            ; len x y
01E0   3000               M    movlw 0
01E1   001C               M    movwi ++SP 
01E2   2???           01036     call vline
                      01037     lit WELL_WIDTH+2
01E3   300C               M    movlw WELL_WIDTH+2
01E4   001C               M    movwi ++SP 
                      01038     lit WELL_DEPTH
01E5   3016               M    movlw WELL_DEPTH
01E6   001C               M    movwi ++SP 
                      01039     lit 0
01E7   3000               M    movlw 0
01E8   001C               M    movwi ++SP 
01E9   2???           01040     call hline
                      01041 ; print "SCORE" label    
                      01042     lit WELL_WIDTH+3 ; x
01EA   300D               M    movlw WELL_WIDTH+3
01EB   001C               M    movwi ++SP 
                      01043     lit 0            ; y
01EC   3000               M    movlw 0
01ED   001C               M    movwi ++SP 
01EE   31??           01044     movlp high(lbl_score)
                      01045     lit low(lbl_score)  
01EF   30??               M    movlw low(lbl_score)
01F0   001C               M    movwi ++SP 
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  23:07:08         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01F1   2???           01046     call print_label
                      01047 ; print "LINES" label    
                      01048     lit WELL_WIDTH+3 ; x
01F2   300D               M    movlw WELL_WIDTH+3
01F3   001C               M    movwi ++SP 
                      01049     lit 12           ; y
01F4   300C               M    movlw 12
01F5   001C               M    movwi ++SP 
01F6   31??           01050     movlp high(lbl_lines)
                      01051     lit low(lbl_lines)
01F7   30??               M    movlw low(lbl_lines)
01F8   001C               M    movwi ++SP 
01F9   2???           01052     call print_label
                      01053 ; variables initialization
01FA   1580           01054     bsf flags,F_GSTOP
01FB                  01055 clear_score:
01FB   0020           01056     banksel GAME_VAR
01FC   01??           01057     clrf scoreL
01FD   01??           01058     clrf scoreH
01FE   01??           01059     clrf droppedL
01FF   01??           01060     clrf droppedH
0200   0008           01061     return
                      01062 
                      01063 ; drop 1 row
                      01064 ; input:
                      01065 ;   r  row to drop
                      01066 ; output:
                      01067 ;   none
0201                  01068 drop1: ; ( r -- )
                      01069     reserve 1 ; r x  
0201   3141               M     addfsr SP, 1 
0202                  01070 row_loop: ; y{r:1}
0202   300A           01071     movlw 10
0203   0081           01072     movwf T ; -- r x
0204                  01073 col_loop:  ; x{10:1}
                      01074     dup   ; -- r x x
0204   0801               M     movfw T
0205   001C               M     movwi ++SP
                      01075     pick 2
0206   3F7E               M     moviw -2[SP]
0207   0389           01076     decf WREG
                      01077     push  ; -- r x x r-1
0208   001C               M     movwi ++SP
0209   2???           01078     call get_pixel ; -- r x p
020A   00??           01079     movwf t0
                      01080     dup         ; r x x
020B   0801               M     movfw T
020C   001C               M     movwi ++SP
                      01081     pick 2
020D   3F7E               M     moviw -2[SP]
                      01082     push        ; r x x r
020E   001C               M     movwi ++SP
020F   08??           01083     movf t0,F
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  23:07:08         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0210   1D03           01084     skpz
0211   3???           01085     bra drop00
0212   2???           01086     call clear_pixel ;  r x x r -- r x
0213   3???           01087     bra next_pixel
0214                  01088 drop00:
0214   2???           01089     call set_pixel ; r x x r -- r x
0215                  01090 next_pixel:    
0215   0B81           01091     decfsz T    ; r x-1 
0216   3???           01092     bra col_loop
                      01093     dec_n 1  ; dec r
0217   3F7F               M     moviw -1[SP]
0218   0389               M     decf WREG,F
0219   3FFF               M     movwi -1[SP]
021A   1D03           01094     skpz 
021B   3???           01095     bra row_loop
                      01096     drop_n 2
021C   317E               M     addfsr SP,-2
021D   0008           01097     return
                      01098     
                      01099     
  00000000            01100 ROW_EMPTY equ 0     
  0000000A            01101 ROW_FULL equ 10 ; 10 bits in row
                      01102 ; query_row 
                      01103 ; check the state of well row
                      01104 ; input:
                      01105 ;   s number of bits set initialized at 0 by caller    
                      01106 ;   r row number: 0 top, 21 bottom  
                      01107 ; output:    
                      01108 ;   s={0:10}  number of bits set
021E                  01109 query_row: ; ( s=0 r -- s=0:10 )
                      01110     lit 10 ; s r x   ; check x from  10 to 1
021E   300A               M    movlw 10
021F   001C               M    movwi ++SP 
0220                  01111 qr00:
                      01112     dup   ; s r x x
0220   0801               M     movfw T
0221   001C               M     movwi ++SP
                      01113     pick 2 
0222   3F7E               M     moviw -2[SP]
                      01114     push  ; s r x x y
0223   001C               M     movwi ++SP
0224   2???           01115     call get_pixel ; -- s r x
0225   1903           01116     skpnz   ; Z modified by get_pixel
0226   3???           01117     bra qr01
                      01118     inc_n 2
0227   3F7E               M     moviw -2[SP]
0228   0A89               M     incf WREG,F
0229   3FFE               M     movwi -2[SP]
022A                  01119 qr01:    
022A   0B81           01120     decfsz T
022B   3???           01121     bra qr00
                      01122     drop_n 2 ; -- s
022C   317E               M     addfsr SP,-2
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  23:07:08         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

022D   0008           01123     return
                      01124 
                      01125 ; count and drop full rows
                      01126 ; input:
                      01127 ;   none
                      01128 ; output:
                      01129 ;   n number of droppend rows
                      01130 ;condition:
                      01131 ;  check each row from bottom up
                      01132 ;  stop at first empty row
                      01133 ;  full rows are dropped    
022E                  01134 count_full: ; ( -- n)
                      01135     lit 0 ; full rows counter
022E   3000               M    movlw 0
022F   001C               M    movwi ++SP 
                      01136     lit 21 ; row number {21:1}
0230   3015               M    movlw 21
0231   001C               M    movwi ++SP 
0232                  01137 count_loop:
                      01138     lit 0   ; n r s  number of bits set
0232   3000               M    movlw 0
0233   001C               M    movwi ++SP 
                      01139     over    ; n r s r
0234   3F7F               M     moviw -1[SP]
                          M     push
0235   001C               M     movwi ++SP
0236   2???           01140     call query_row ; n r s r -- n r s
                      01141     pop     ; n r
0237   0017               M     moviw SP--
0238   1903           01142     skpnz
0239   3???           01143     bra count_done
023A   3A0A           01144     xorlw ROW_FULL
023B   1D03           01145     skpz
023C   3???           01146     bra next_row
                      01147 ; this is a full row    
                      01148     inc_n 1 ; increment n
023D   3F7F               M     moviw -1[SP]
023E   0A89               M     incf WREG,F
023F   3FFF               M     movwi -1[SP]
                      01149     dup    ; n r r
0240   0801               M     movfw T
0241   001C               M     movwi ++SP
0242   2???           01150     call drop1 ; n r r -- n r
0243   0A81           01151     incf T,F
0244                  01152 next_row:
0244   0B81           01153     decfsz T,F
0245   3???           01154     bra count_loop
0246                  01155 count_done:
                      01156     drop   ; n r -- n
0246   317F               M    addfsr SP,-1
0247   0008           01157     return
                      01158 
                      01159 ;new_tminos    
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  23:07:08         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01160 ; generate a new tetriminos
                      01161 ; input:
                      01162 ;   none
                      01163 ; output:
                      01164 ;   none
0248                  01165 new_tminos:
0248   0020           01166     banksel GAME_VAR
0249   3007           01167     movlw 7
024A   05??           01168     andwf randL,W
024B   3A07           01169     xorlw 7
024C   1D03           01170     skpz
024D   3A07           01171     xorlw 7
024E   00??           01172     movwf tetrim
024F   3003           01173     movlw 3
0250   05??           01174     andwf randH,W
0251   00??           01175     movwf angle
0252   3004           01176     movlw 4
0253   00??           01177     movwf tx
0254   01??           01178     clrf ty
0255   2???           01179     call coll_test
0256   1D03           01180     skpz
0257   1580           01181     bsf flags, F_GSTOP
0258   0008           01182     return
                      01183 
                      01184 ;wait_start    
                      01185 ; wait player start signal
                      01186 ; button A pressed    
                      01187 ; input:
                      01188 ;   none
                      01189 ; output:
                      01190 ;   none
0259                  01191 wait_start:
                      01192 #ifdef SOUND_SUPPORT    
0259   0103           01193     clrw
025A   2???           01194     call korobeiniki
                      01195     push    ; count
025B   001C               M     movwi ++SP
                      01196     lit 0   ; sequence
025C   3000               M    movlw 0
025D   001C               M    movwi ++SP 
025E                  01197 koro:
025E   1B00           01198     btfsc flags, F_NO_SND
025F   3???           01199     bra no_sound
0260   0A81           01200     incf T,F ; -- count sequence
0261   0801           01201     movfw T  ; WREG=sequence
0262   2???           01202     call korobeiniki
                      01203     push    ; -- count sequence duration
0263   001C               M     movwi ++SP
                      01204     inc_n 1 ;
0264   3F7F               M     moviw -1[SP]
0265   0A89               M     incf WREG,F
0266   3FFF               M     movwi -1[SP]
                      01205     pick 1  
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  23:07:08         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0267   3F7F               M     moviw -1[SP]
0268   2???           01206     call korobeiniki
                      01207     push    ; -- count nidx duration note
0269   001C               M     movwi ++SP
026A   2???           01208     call tone  ; -- count nidx 
                      01209     wait_sound
026B   1A80               M     btfsc flags,F_SND
026C   3???               M     bra $-1
026D                  01210 no_sound:    
026D   2???           01211     call read_pad
026E   1A00           01212     btfsc buttons, BTN_A
026F   3???           01213     bra wait_end
0270   1A80           01214     btfsc buttons, BTN_B
0271   1700           01215     bsf flags, F_NO_SND
                      01216     dec_n 1
0272   3F7F               M     moviw -1[SP]
0273   0389               M     decf WREG,F
0274   3FFF               M     movwi -1[SP]
0275   1D03           01217     skpz
0276   3???           01218     bra koro
                      01219     drop_n 2
0277   317E               M     addfsr SP,-2
                      01220     pause 60
                          M     start_timer 60
0278   303C               M     movlw 60
0279   00??               M     movwf gtimer
027A   1500               M     bsf flags, F_GTMR
                          M     wait_timer
027B   1900               M     btfsc flags, F_GTMR
027C   3???               M     bra $-1
027D   3???           01221     bra wait_start
027E                  01222 wait_end:    
                      01223     drop_n 2
027E   317E               M     addfsr SP,-2
                      01224 #else
                      01225     pause 20
                      01226     call read_pad
                      01227     btfss buttons, BTN_A
                      01228     bra wait_start
                      01229 #endif    
027F   2???           01230     call clear_score
0280   1180           01231     bcf flags, F_GSTOP
0281   0008           01232     return
                      01233  
                      01234 ;coll_test
                      01235 ; collision test
                      01236 ; after rotation or translation
                      01237 ; undo last action if collision    
                      01238 ; input:
                      01239 ;   none
                      01240 ; output:
                      01241 ;   WREG=f collision flag 0|1
                      01242 ;   Z==0 no collision    
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  23:07:08         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0282                  01243 coll_test: 
0282   2???           01244     call print_tetrim ; -- f
0283   2???           01245     call print_tetrim ; -- f f
                      01246     drop
0284   317F               M    addfsr SP,-1
0285   0020           01247     banksel GAME_VAR
                      01248     pop
0286   0017               M     moviw SP--
0287   0008           01249     return
                      01250 
                      01251 ;update_display    
                      01252 ; print 'score' and 'dropped' values
                      01253 ; input:
                      01254 ;   none
                      01255 ; output:
                      01256 ;   none
0288                  01257 update_display:    
                      01258 ; print score
0288   0020           01259     banksel GAME_VAR
0289   08??           01260     movfw scoreL
028A   00??           01261     movwf accaL
028B   08??           01262     movfw scoreH
028C   00??           01263     movwf accaH
                      01264     lit 6
028D   3006               M    movlw 6
028E   001C               M    movwi ++SP 
028F   2???           01265     call print_int
                      01266 ;print dropped line
0290   0020           01267     banksel GAME_VAR
0291   08??           01268     movfw droppedL
0292   00??           01269     movwf accaL
0293   08??           01270     movfw droppedH
0294   00??           01271     movwf accaH
                      01272     lit 18
0295   3012               M    movlw 18
0296   001C               M    movwi ++SP 
0297   2???           01273     call print_int
0298   0008           01274     return
                      01275 
                      01276 ;game_over
                      01277 ; signal game terminated
                      01278 ; input:
                      01279 ;   none
                      01280 ; output:
                      01281 ;   none
0299                  01282 game_over:
                      01283     lit 10
0299   300A               M    movlw 10
029A   001C               M    movwi ++SP 
                      01284     lit 0
029B   3000               M    movlw 0
029C   001C               M    movwi ++SP 
029D                  01285 clr00:    
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  23:07:08         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01286     over
029D   3F7F               M     moviw -1[SP]
                          M     push
029E   001C               M     movwi ++SP
                      01287     over
029F   3F7F               M     moviw -1[SP]
                          M     push
02A0   001C               M     movwi ++SP
02A1   2???           01288     call clear_pixel ; x y x y -- x y
                      01289     dec_n 1 ; x-=1
02A2   3F7F               M     moviw -1[SP]
02A3   0389               M     decf WREG,F
02A4   3FFF               M     movwi -1[SP]
02A5   1D03           01290     skpz
02A6   3???           01291     bra clr00
02A7   3015           01292     movlw 21
02A8   0081           01293     movwf T
                      01294     insert 1  ; counter 21
02A9   3FFF               M    movwi -1[SP]
02AA                  01295 drop21:
                      01296     dup    ; counter 21 21
02AA   0801               M     movfw T
02AB   001C               M     movwi ++SP
02AC   2???           01297     call drop1 ; -- counter 21
                      01298     pause 6
                          M     start_timer 6
02AD   3006               M     movlw 6
02AE   00??               M     movwf gtimer
02AF   1500               M     bsf flags, F_GTMR
                          M     wait_timer
02B0   1900               M     btfsc flags, F_GTMR
02B1   3???               M     bra $-1
                      01299     pick 1
02B2   3F7F               M     moviw -1[SP]
02B3   0389           01300     decf WREG
                      01301     insert 1  ; -- counter-1 21
02B4   3FFF               M    movwi -1[SP]
02B5   1D03           01302     skpz
02B6   3???           01303     bra drop21
                      01304     drop_n 2
02B7   317E               M     addfsr SP,-2
02B8   0008           01305     return
                      01306 
                      01307 ;prompt
                      01308 ; print prompt message    
02B9                  01309 prompt:
                      01310     lit 0
02B9   3000               M    movlw 0
02BA   001C               M    movwi ++SP 
                      01311     lit 24
02BB   3018               M    movlw 24
02BC   001C               M    movwi ++SP 
02BD   31??           01312     movlp high(lbl_press)
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  23:07:08         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01313     lit low(lbl_press)
02BE   30??               M    movlw low(lbl_press)
02BF   001C               M    movwi ++SP 
02C0   2???           01314     call print_label
02C1   0008           01315     return
                      01316     
                      01317 ;;;;;;;;;;;;;;;;;;;;;;;;;
                      01318 ;   game logic
                      01319 ;;;;;;;;;;;;;;;;;;;;;;;;;    
02C2                  01320 tetris:
02C2   2???           01321     call update_display
                      01322 ;print start prompt
02C3   2???           01323     call prompt
                      01324 ; wait button A press
                      01325 ; to start game    
02C4   2???           01326     call wait_start 
                      01327 ; delete prompt
02C5   2???           01328     call prompt
                      01329 ; game start here
02C6                  01330 game_loop:
                      01331 ; generate new tetriminos
                      01332 ; if collision at this stage
                      01333 ; game is over
02C6   2???           01334     call new_tminos
02C7   1D80           01335     btfss flags, F_GSTOP
02C8   3???           01336     bra fall_loop
02C9   2???           01337     call game_over
02CA   2???           01338     call game_init
02CB   3???           01339     bra tetris
02CC                  01340 fall_loop: ; tetriminos fall in the well
02CC   2???           01341     call print_tetrim
                      01342     pop
02CD   0017               M     moviw SP--
                      01343     pause 10
                          M     start_timer 10
02CE   300A               M     movlw 10
02CF   00??               M     movwf gtimer
02D0   1500               M     bsf flags, F_GTMR
                          M     wait_timer
02D1   1900               M     btfsc flags, F_GTMR
02D2   3???               M     bra $-1
02D3   2???           01344     call print_tetrim ; erase tetriminos
                      01345     pop
02D4   0017               M     moviw SP--
                      01346 ; read pad
02D5   2???           01347     call read_pad
02D6   0020           01348     banksel GAME_VAR
                      01349     case BTN_B, drop_tetrim
02D7   1A80               M     btfsc buttons,BTN_B
02D8   3???               M     bra drop_tetrim
                      01350     case BTN_UP, rot_right
02D9   1800               M     btfsc buttons,BTN_UP
02DA   3???               M     bra rot_right
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  23:07:08         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01351     case BTN_DN, rot_left
02DB   1880               M     btfsc buttons,BTN_DN
02DC   3???               M     bra rot_left
                      01352     case BTN_RT, move_right
02DD   1980               M     btfsc buttons,BTN_RT
02DE   3???               M     bra move_right
                      01353     case BTN_LT, move_left
02DF   1900               M     btfsc buttons,BTN_LT
02E0   3???               M     bra move_left
02E1   3???           01354     bra move_down
02E2                  01355 drop_tetrim:
02E2   0020           01356     banksel GAME_VAR
02E3   0A??           01357     incf ty,F
02E4   2???           01358     call coll_test
02E5   1903           01359     skpnz
02E6   3???           01360     bra drop_tetrim
02E7   03??           01361     decf ty,F
02E8   3???           01362     bra score_update
02E9                  01363 rot_left:
02E9   03??           01364     decf angle,F
02EA   3003           01365     movlw 3
02EB   05??           01366     andwf angle,F
02EC   2???           01367     call coll_test
02ED   1D03           01368     skpz
02EE   0A??           01369     incf angle,F
02EF   3003           01370     movlw 3
02F0   05??           01371     andwf angle,F
02F1   3???           01372     bra move_down
02F2                  01373 rot_right:
02F2   0A??           01374     incf angle,F
02F3   3003           01375     movlw 3
02F4   05??           01376     andwf angle,F
02F5   2???           01377     call coll_test
02F6   1D03           01378     skpz
02F7   03??           01379     decf angle,F
02F8   3003           01380     movlw 3
02F9   05??           01381     andwf angle,F
02FA   3???           01382     bra move_down
02FB                  01383 move_left:
02FB   03??           01384     decf tx,F
02FC   2???           01385     call coll_test
02FD   1D03           01386     skpz
02FE   0A??           01387     incf tx,F
02FF   3???           01388     bra move_down
0300                  01389 move_right:
0300   0A??           01390     incf tx,F
0301   2???           01391     call coll_test
0302   1D03           01392     skpz
0303   03??           01393     decf tx,F
                      01394 ; move down
0304                  01395 move_down:
                      01396 ;    banksel GAME_VAR
0304   0A??           01397     incf ty,F ; tetriminos fall
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  23:07:08         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0305   2???           01398     call coll_test
0306   1903           01399     skpnz
0307   3???           01400     bra fall_loop
0308   03??           01401     decf ty,F
0309   2???           01402     call print_tetrim
                      01403     pop
030A   0017               M     moviw SP--
030B                  01404 score_update:    
                      01405 ; check full row and clean
030B   2???           01406     call update_display ; erase numbers
030C   2???           01407     call count_full
                      01408 ; add full row count to dropped variable
030D   0020           01409     banksel GAME_VAR
030E   0801           01410     movfw T
030F   07??           01411     addwf droppedL,F ; 
0310   0103           01412     clrw
0311   3D??           01413     addwfc droppedH
                      01414 ; count points = 2^n where n is count of dropped rows {1:4}    
0312   0881           01415     movf T,F
0313   1903           01416     skpnz
0314   3???           01417     bra add_points
0315   3001           01418     movlw 1
0316   3589           01419     lslf WREG
0317   0B81           01420     decfsz T,F
0318   3???           01421     bra $-2
0319                  01422 add_points:
0319   07??           01423     addwf scoreL
031A   0103           01424     clrw
031B   3D??           01425     addwfc scoreH
                      01426     drop 
031C   317F               M    addfsr SP,-1
031D   2???           01427     call update_display ; display new values
031E   3???           01428     bra game_loop
031F   0008           01429     return
                      01430 
                      01431 ;;;;;;;;;;;;;;;;;;;;;;;;;;
                      01432 ; hardware initialization
                      01433 ;;;;;;;;;;;;;;;;;;;;;;;;;;    
0320                  01434 init:
                      01435 ; parameter stack initialization    
0320   0187           01436     clrf FSR1H
0321   301F           01437     movlw S0
0322   0086           01438     movwf FSR1L
                      01439 ; ADC configuration
0323   0021           01440     banksel ADCON0
0324   300C           01441     movlw (PAD_CHS<<CHS0)
0325   009D           01442     movwf ADCON0
0326   3020           01443     movlw (2<<ADCS0)
0327   009E           01444     movwf ADCON1
0328   0024           01445     banksel WPUA
0329   120C           01446     bcf WPUA, PAD_PIN
                      01447 ;;;;;;;;;;;;;;;;;;;;;    
032A   0021           01448     banksel TRISA
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  23:07:08         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

032B   30F8           01449     movlw ~((1<<SYNC_OUT)|(1<<VIDEO_OUT)|(1<<LED_PIN))
032C   058C           01450     andwf TRISA,F
032D   0022           01451     banksel VIDEO_LAT
032E   108C           01452     bcf VIDEO_LAT,VIDEO_OUT
032F   100C           01453     bcf LATA,LED_PIN
                      01454 #ifdef SOUND_SUPPORT    
                      01455 ; audio pwm initialization
0330   120C           01456     bcf LATA,AUDIO_PIN
0331   003B           01457     banksel PWM2PH
0332   01A1           01458     clrf PWM2PHL
0333   01A2           01459     clrf PWM2PHH
0334   01A7           01460     clrf PWM2OFL
0335   01A8           01461     clrf PWM2OFH
0336   172B           01462     bsf AUDIO_PWMCON,OE
0337   0022           01463     banksel APFCON
0338   149D           01464     bsf APFCON,P2SEL
                      01465 #endif   
                      01466 ;configure EUSART in sychronsous mode
                      01467 ;to use as pixel serializer
0339   0023           01468     banksel SPBRG
033A   3002           01469     movlw 2
033B   009B           01470     movwf SPBRGL
033C   019C           01471     clrf SPBRGH
033D   019A           01472     clrf TXREG
033E   30B0           01473     movlw (1<<SYNC)|(1<<CSRC)|(1<<TXEN)
033F   009E           01474     movwf TXSTA
0340   179D           01475     bsf RCSTA, SPEN
0341   30CF           01476     movlw ~((1<<CREN)|(1<<SREN))
0342   059D           01477     andwf RCSTA
                      01478 ; configure pwm video sync for horizontal period
0343   003B           01479     banksel SYNC_PWMDCH
0344   01B1           01480     clrf SYNC_PWMPH
0345   01B2           01481     clrf SYNC_PWMPH+1
0346   01BF           01482     clrf SYNC_PWMLDCON
0347   30F5           01483     movlw HORZ_PERIOD&0XFF
0348   00B5           01484     movwf SYNC_PWMPRL
0349   3004           01485     movlw HORZ_PERIOD>>8
034A   00B6           01486     movwf SYNC_PWMPRH
034B   01BE           01487     clrf SYNC_PWMCLKCON
034C   30D0           01488     movlw (3<<OE)|(1<<POL)
034D   00BB           01489     movwf SYNC_PWMCON
034E   305E           01490     movlw HORZ_PULSE&0xff
034F   00B3           01491     movwf SYNC_PWMDCL
0350   3000           01492     movlw HORZ_PULSE>>8
0351   00B4           01493     movwf SYNC_PWMDCH
0352   17BF           01494     bsf SYNC_PWMLDCON,LDA
                      01495    ;enable video interrupt on period match
0353   103D           01496     bcf SYNC_PWMINTF,PRIF
0354   143C           01497     bsf SYNC_PWMINTE,PRIE
                      01498     ; enable peripheral interrupt
0355   0021           01499     banksel SYNC_PIE
0356   1713           01500     bsf SYNC_PIE,SYNC_IE
                      01501     ;enable interrupts
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  23:07:08         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0357   30C0           01502     movlw (1<<GIE)|(1<<PEIE)
0358   008B           01503     movwf INTCON
0359   01??           01504     clrf lcountL
035A   01??           01505     clrf lcountH
035B   01??           01506     clrf flags
                      01507     ; seed lfsr PRNG
035C   30AC           01508     movlw 0xAC
035D   00??           01509     movwf randL
035E   30E1           01510     movlw 0xE1
035F   00??           01511     movwf randH
                      01512 
                      01513 
                      01514 ;;;;;;;;;;;;;;;;;;;;;
                      01515 ;  main function
                      01516 ;;;;;;;;;;;;;;;;;;;;;    
0360                  01517 main:
0360   2???           01518     call game_init
0361   2???           01519     call tetris
0362   3???           01520     bra main
                      01521   
                      01522 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      01523 ;   data tables
                      01524 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      01525 
                      01526 ; **************** encoding ************************************************
                      01527 ; enhanced PIC instructions are coded on 14 bits
                      01528 ; these 14 bits can be read as data using program memory
                      01529 ; writing/reading mechanism, see datasheet chapter 10 for detail.
                      01530 ; the 'dw' assembler directive encode data in those 14 bits contrary to 'dt'
                      01531 ; directive which encode a single byte as a RETLW instruction.
                      01532 ; So we get a 50% compression by encoding 3 nibbles/program word. 
                      01533 ; The encoding used in the following tables is as follow:    
                      01534 ; bits 13:12  number of nibbles where 0 means there is more than 3 nibbles
                      01535 ; in this data chunk so 1 or more other words follow this one.    
                      01536 ; other 12 bits are 3 nibbles (i.e. 4 bits slices).
                      01537 ;****************************************************************************
                      01538 
0363                  01539 digits: ; each digit is 5 rows
0363   0EAA 20AE      01540     dw 0x0EAA,0x20AE ; 0
0365   04C4 204E      01541     dw 0x04C4,0x204E ; 1
0367   0E2E 208E      01542     dw 0x0E2E,0x208E ; 2
0369   0E2E 202E      01543     dw 0x0E2E,0x202E ; 3
036B   0AAE 2022      01544     dw 0x0AAE,0x2022 ; 4
036D   0E8E 202E      01545     dw 0x0E8E,0x202E ; 5
036F   088E 20AE      01546     dw 0x088E,0x20AE ; 6
0371   0E22 2022      01547     dw 0x0E22,0x2022 ; 7
0373   0EAE 20AE      01548     dw 0x0EAE,0x20AE ; 8
0375   0EAE 2022      01549     dw 0x0EAE,0x2022 ; 9
                      01550 ; letters needed for 'SCORE' and 'LINES" labels
0377   0EAE 20AA      01551     dw 0x0EAE,0x20AA ; A  code 10
0379   0688 2086      01552     dw 0x0688,0x2086 ; C  code 11
037B   0E8E 208E      01553     dw 0x0E8E,0x208E ; E  code 12
037D   0E44 204E      01554     dw 0x0E44,0x204E ; I  code 13
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  23:07:08         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

037F   0888 208E      01555     dw 0x0888,0x208E ; L  code 14
0381   08CA 20AA      01556     dw 0x08CA,0x20AA ; N  code 15
0383   04AA 20A4      01557     dw 0x04AA,0x20A4 ; O  code 16
0385   0EAE 2088      01558     dw 0x0EAE,0x2088 ; P  code 17
0387   08EA 2088      01559     dw 0x08EA,0x2088 ; R  code 18
0389   0684 202C      01560     dw 0x0684,0x202C ; S  code 19
038B   0040 2040      01561     dw 0x0040,0x2040 ; :  code 20
038D   1000 0000      01562     dw 0x1000,0x0000 ; space code 21
                      01563 
                      01564 ; comments notation: Rn clockwise rotation n*90 degr.    
                      01565 ; note that vertical I as 4 rows so it needs 2 words    
038F                  01566 tetriminos: 
038F   388C           01567     dw 0x388C ; L R0
0390   30E8           01568     dw 0x30E8 ; L R1
0391   3C44           01569     dw 0x3C44 ; L R2
0392   202E           01570     dw 0x202E ; L R3
0393   344C           01571     dw 0x344C ; J R0
0394   208E           01572     dw 0x208E ; J R1
0395   3644           01573     dw 0x3644 ; J R2
0396   30E2           01574     dw 0x30E2 ; J R3
0397   20CC           01575     dw 0x20CC ; O R0 
0398   20CC           01576     dw 0x20CC ; O R2 
0399   20CC           01577     dw 0x20CC ; O R2 
039A   20CC           01578     dw 0x20CC ; O R3 
039B   206C           01579     dw 0x206C ; S R0
039C   3462           01580     dw 0x3462 ; S R1
039D   206C           01581     dw 0x206C ; S R2
039E   3462           01582     dw 0x3462 ; S R3
039F   20E4           01583     dw 0x20E4 ; T R0
03A0   3262           01584     dw 0x3262 ; T R1
03A1   304E           01585     dw 0x304E ; T R2
03A2   38C8           01586     dw 0x38C8 ; T R3
03A3   20C6           01587     dw 0x20C6 ; Z R0
03A4   34C8           01588     dw 0x34C8 ; Z R1
03A5   20C6           01589     dw 0x20C6 ; Z R3
03A6   34C8           01590     dw 0x34C8 ; Z R4
                      01591 ; annoying! I tetriminos need a special treatment 
                      01592 ; because vertical I need 2 words for encoding.   
03A7   0444 1004      01593     dw 0x0444,0x1004 ; I R0  
03A9   200F 0000      01594     dw 0x200F,0x0000 ; I R1  second word is filling for alignment
03AB   0444 1004      01595     dw 0x0444,0x1004 ; I R2
03AD   200F 0000      01596     dw 0x200F,0x0000 ; I R3  
                      01597 
                      01598 #ifdef SOUND_SUPPORT
                      01599 ; tempered scale timer period values    
03AF                  01600 tone_pr:
03AF   000B           01601     brw
03B0   3402 34ED      01602     dt 0x02, 0xed   ; 330   (MI4)   0
03B2   34B5 34DF      01603     dt 0xb5, 0xdf   ; 349   (FA4)   1
03B4   3428 34D3      01604     dt 0x28, 0xd3   ; 370   (FA4#)  2
03B6   344C 34C7      01605     dt 0x4c, 0xc7   ; 392   (SOL4)  3
03B8   341E 34BC      01606     dt 0x1e, 0xbc   ; 415   (SOL4#) 4
03BA   348F 34B1      01607     dt 0x8f, 0xb1   ; 440   (LA4)   5
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  23:07:08         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03BC   3498 34A7      01608     dt 0x98, 0xa7   ; 466   (LA4#)  6
03BE   3430 349E      01609     dt 0x30, 0x9e   ; 494   (SI4)   7
03C0   344F 3495      01610     dt 0x4f, 0x95   ; 523hz (DO5)   8
03C2   34ED 348C      01611     dt 0xed, 0x8c   ; 554   (DO5#)  9
03C4   3404 3485      01612     dt 0x04, 0x85   ; 587   (RÉ5)   10
03C6   348D 347D      01613     dt 0x8d, 0x7d   ; 622   (RÉ5#)  11
03C8   3481 3476      01614     dt 0x81, 0x76   ; 659   (MI5)   12
03CA   34DA 346F      01615     dt 0xda, 0x6f   ; 698   (FA5)   13
03CC   3493 3469      01616     dt 0x93, 0x69   ; 740   (FA5#)  14
03CE   34A6 3463      01617     dt 0xa6, 0x63   ; 784   (SOL5)  15
03D0   340F 345E      01618     dt 0x0f, 0x5e   ; 831   (SOL5#) 16
03D2   34C7 3458      01619     dt 0xc7, 0x58   ; 880   (LA5)   17
03D4   34CC 3453      01620     dt 0xcc, 0x53   ; 932   (LA5#)  18
03D6   3418 344F      01621     dt 0x18, 0x4f   ; 988   (SI5)   19
03D8   3482 3442      01622     dt 0x82, 0x42   ; 1046hz (do6)  20
03DA   3400 3400      01623     dt 0, 0         ; silence       21
                      01624 
                      01625     
                      01626 ; a russian folklore soung    
03DC                  01627 korobeiniki:
                      01628     ;nombre de notes
03DC   000B           01629     brw
03DD   3422           01630     dt 34
                      01631     ; duré, note
03DE   342D 3400      01632     dt 45, 0 
03E0   340F 3404      01633     dt 15, 4
03E2   341E 3407      01634     dt 30, 7
03E4   340F 3403      01635     dt 15, 3
03E6   340F 3400      01636     dt 15, 0
                      01637     
03E8   342D 3405      01638     dt 45, 5
03EA   340F 3409      01639     dt 15, 9
03EC   341E 340C      01640     dt 30, 12
03EE   340F 340A      01641     dt 15, 10
03F0   340F 3408      01642     dt 15, 8
                      01643     
03F2   342D 3407      01644     dt 45, 7
03F4   340F 3408      01645     dt 15, 8
03F6   341E 340A      01646     dt 30, 10
03F8   341E 340C      01647     dt 30, 12
                      01648     
03FA   341E 3408      01649     dt 30, 8
03FC   341E 3405      01650     dt 30, 5
03FE   343C 3405      01651     dt 60, 5
                      01652     
0400   342D 340D      01653     dt 45, 13
0402   340F 340F      01654     dt 15, 15
0404   341E 3411      01655     dt 30, 17
0406   340F 340F      01656     dt 15, 15
0408   340F 340D      01657     dt 15, 13
                      01658     
040A   342D 340C      01659     dt 45, 12
040C   340F 340D      01660     dt 15, 13
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  23:07:08         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

040E   341E 340C      01661     dt 30, 12
0410   340F 340A      01662     dt 15, 10
0412   340F 3408      01663     dt 15, 8
                      01664     
0414   342D 3407      01665     dt 45, 7
0416   340F 3408      01666     dt 15, 8
0418   341E 340A      01667     dt 30, 10
041A   341E 340C      01668     dt 30, 12
                      01669     
041C   341E 3408      01670     dt 30, 8
041E   341E 3405      01671     dt 30, 5
0420   343C 3405      01672     dt 60, 5
                      01673     
                      01674  #endif
                      01675 
0422                  01676 lbl_score: ; "SCORE" label
0422   3413 340B 3410 01677     dt 19,11,16,18,12,20,255
       3412 340C 3414 
       34FF 
                      01678     
0429                  01679 lbl_lines: ; "LINES"  label
0429   340E 340D 340F 01680     dt 14,13,15,12,19,20,255
       340C 3413 3414 
       34FF 
                      01681 
0430                  01682 lbl_press: ; "PRESS A" label
0430   3411 3412 340C 01683     dt 17,18,12,19,19,21,10,255
       3413 3413 3415 
       340A 34FF 
                      01684 
                      01685     
                      01686  
3FE7 1EFF             01687     end
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  23:07:08         PAGE 39


SYMBOL TABLE
  LABEL                             VALUE 

ABDEN                             00000000
ABDOVF                            00000007
ADCON0                            0000009D
ADCON1                            0000009E
ADCON2                            0000009F
ADCS0                             00000004
ADCS1                             00000005
ADCS2                             00000006
ADC_PIN                           00000004
ADDEN                             00000003
ADFM                              00000007
ADFVR0                            00000000
ADFVR1                            00000001
ADGO                              00000001
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADPREF0                           00000000
ADPREF1                           00000001
ADRES                             0000009B
ADRESH                            0000009C
ADRESL                            0000009B
ANSA0                             00000000
ANSA1                             00000001
ANSA2                             00000002
ANSA4                             00000004
ANSELA                            0000018C
APFCON                            0000011D
APFCON0                           0000011D
AUDIO_PIN                         00000004
AUDIO_PWMCLKCON                   00000DAE
AUDIO_PWMCON                      00000DAB
AUDIO_PWMDCH                      00000DA4
AUDIO_PWMDCL                      00000DA3
AUDIO_PWMLDCON                    00000DAF
AUDIO_PWMPRH                      00000DA6
AUDIO_PWMPRL                      00000DA5
AUDIO_PWMTMR                      00000DA9
A_THR                             00000040
BAUDCON                           0000019F
BORCON                            00000116
BORFS                             00000006
BORRDY                            00000000
BPL                               00000006
BRG16                             00000003
BRGH                              00000002
BSR                               00000008
BSR0                              00000000
BSR1                              00000001
BSR2                              00000002
BSR3                              00000003
BSR4                              00000004
BSR_SHAD                          00000FE6
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  23:07:08         PAGE 40


SYMBOL TABLE
  LABEL                             VALUE 

BTN_A                             00000004
BTN_B                             00000005
BTN_DN                            00000001
BTN_LT                            00000002
BTN_RT                            00000003
BTN_UP                            00000000
BUFFER_SIZE                       000000C0
B_THR                             00000095
C                                 00000000
C1HYS                             00000001
C1IE                              00000005
C1IF                              00000005
C1INTN                            00000006
C1INTP                            00000007
C1NCH0                            00000000
C1NCH1                            00000001
C1NCH2                            00000002
C1OE                              00000005
C1ON                              00000007
C1OUT                             00000006
C1PCH0                            00000004
C1PCH1                            00000005
C1POL                             00000004
C1SP                              00000002
C1SYNC                            00000000
CDAFVR0                           00000002
CDAFVR1                           00000003
CFGS                              00000006
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CHS4                              00000006
CM1CON0                           00000111
CM1CON1                           00000112
CMOUT                             00000115
CREN                              00000004
CS0                               00000000
CS1                               00000001
CSRC                              00000007
CWG1CON0                          00000693
CWG1CON1                          00000694
CWG1CON2                          00000695
CWG1DBF                           00000692
CWG1DBF0                          00000000
CWG1DBF1                          00000001
CWG1DBF2                          00000002
CWG1DBF3                          00000003
CWG1DBF4                          00000004
CWG1DBF5                          00000005
CWG1DBR                           00000691
CWG1DBR0                          00000000
CWG1DBR1                          00000001
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  23:07:08         PAGE 41


SYMBOL TABLE
  LABEL                             VALUE 

CWG1DBR2                          00000002
CWG1DBR3                          00000003
CWG1DBR4                          00000004
CWG1DBR5                          00000005
CWGASEL                           00000006
CWGBSEL                           00000005
C_SHAD                            00000000
DACCON0                           00000118
DACCON1                           00000119
DACEN                             00000007
DACLPS                            00000006
DACOE                             00000005
DACPSS0                           00000002
DACPSS1                           00000003
DACR0                             00000000
DACR1                             00000001
DACR2                             00000002
DACR3                             00000003
DACR4                             00000004
DC                                00000001
DCIE                              00000001
DCIF                              00000001
DC_SHAD                           00000001
DN_THR                            000000D8
EN                                00000007
F                                 00000001
FCY                               004C4B40
FERR                              00000002
FIRST_VIDEO                       00000046
FOSC                              01312D00
FREE                              00000004
FSR0                              00000004
FSR0H                             00000005
FSR0H_SHAD                        00000FE9
FSR0L                             00000004
FSR0L_SHAD                        00000FE8
FSR0_SHAD                         00000FE8
FSR1                              00000006
FSR1H                             00000007
FSR1H_SHAD                        00000FEB
FSR1L                             00000006
FSR1L_SHAD                        00000FEA
FSR1_SHAD                         00000FEA
FVRCON                            00000117
FVREN                             00000007
FVRRDY                            00000006
F_COLL                            00000004
F_EVEN                            00000001
F_GSTOP                           00000003
F_GTMR                            00000002
F_NO_SND                          00000006
F_SND                             00000005
F_VSYNC                           00000000
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  23:07:08         PAGE 42


SYMBOL TABLE
  LABEL                             VALUE 

G1ARSEN                           00000006
G1ASDLA0                          00000004
G1ASDLA1                          00000005
G1ASDLB0                          00000006
G1ASDLB1                          00000007
G1ASDSC1                          00000002
G1ASDSFLT                         00000001
G1ASE                             00000007
G1CS0                             00000000
G1EN                              00000007
G1IS0                             00000000
G1IS1                             00000001
G1IS2                             00000002
G1OEA                             00000005
G1OEB                             00000006
G1POLA                            00000003
G1POLB                            00000004
GAME_VAR                          00000000
GIE                               00000007
GO                                00000001
GO_NOT_DONE                       00000001
HFIOFL                            00000003
HFIOFR                            00000004
HFIOFS                            00000000
HORZ_DLY                          00000032
HORZ_PERIOD                       000004F5
HORZ_PULSE                        0000005E
INDF0                             00000000
INDF1                             00000001
INLVLA                            0000038C
INLVLA0                           00000000
INLVLA1                           00000001
INLVLA2                           00000002
INLVLA3                           00000003
INLVLA4                           00000004
INLVLA5                           00000005
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IOCAF                             00000393
IOCAF0                            00000000
IOCAF1                            00000001
IOCAF2                            00000002
IOCAF3                            00000003
IOCAF4                            00000004
IOCAF5                            00000005
IOCAN                             00000392
IOCAN0                            00000000
IOCAN1                            00000001
IOCAN2                            00000002
IOCAN3                            00000003
IOCAN4                            00000004
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  23:07:08         PAGE 43


SYMBOL TABLE
  LABEL                             VALUE 

IOCAN5                            00000005
IOCAP                             00000391
IOCAP0                            00000000
IOCAP1                            00000001
IOCAP2                            00000002
IOCAP3                            00000003
IOCAP4                            00000004
IOCAP5                            00000005
IOCIE                             00000003
IOCIF                             00000000
IRCF0                             00000003
IRCF1                             00000004
IRCF2                             00000005
IRCF3                             00000006
LAST_LINE                         00000106
LAST_VIDEO                        000000C5
LATA                              0000010C
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA4                             00000004
LATA5                             00000005
LDA                               00000007
LDS0                              00000000
LDS1                              00000001
LDT                               00000006
LED_PIN                           00000000
LFIOFR                            00000001
LFSR_TAPS                         000000B4
LT_THR                            000000D1
LWLO                              00000005
MC1OUT                            00000000
MFIOFR                            00000002
MODE0                             00000002
MODE1                             00000003
MPWM1EN                           00000000
MPWM1LD                           00000000
MPWM1OUT                          00000000
MPWM2EN                           00000001
MPWM2LD                           00000001
MPWM2OUT                          00000001
MPWM3EN                           00000002
MPWM3LD                           00000002
MPWM3OUT                          00000002
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RI                            00000002
NOT_RMCLR                         00000003
NOT_RWDT                          00000004
NOT_T1SYNC                        00000002
NOT_TO                            00000004
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  23:07:08         PAGE 44


SYMBOL TABLE
  LABEL                             VALUE 

NOT_WPUEN                         00000007
ODA0                              00000000
ODA1                              00000001
ODA2                              00000002
ODA4                              00000004
ODA5                              00000005
ODCONA                            0000028C
OE                                00000006
OERR                              00000001
OFIE                              00000003
OFIF                              00000003
OFM0                              00000005
OFM1                              00000006
OFO                               00000004
OFS0                              00000000
OFS1                              00000001
OPTION_REG                        00000095
OSCCON                            00000099
OSCSTAT                           0000009A
OSCTUNE                           00000098
OSTS                              00000005
OUT                               00000005
P1SEL                             00000000
P2SEL                             00000001
PAD_CHS                           00000003
PAD_PIN                           00000004
PCL                               00000002
PCLATH                            0000000A
PCLATH_SHAD                       00000FE7
PCON                              00000096
PEIE                              00000006
PHIE                              00000002
PHIF                              00000002
PIE1                              00000091
PIE2                              00000092
PIE3                              00000093
PIR1                              00000011
PIR2                              00000012
PIR3                              00000013
PIXEL_TXREG                       0000019A
PLLR                              00000006
PMADR                             00000191
PMADRH                            00000192
PMADRL                            00000191
PMCON1                            00000195
PMCON2                            00000196
PMDAT                             00000193
PMDATH                            00000194
PMDATL                            00000193
POL                               00000004
PORTA                             0000000C
PR2                               0000001B
PRIE                              00000000
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  23:07:08         PAGE 45


SYMBOL TABLE
  LABEL                             VALUE 

PRIF                              00000000
PS0_OPTION_REG                    00000000
PS0_PWM1CLKCON                    00000004
PS0_PWM2CLKCON                    00000004
PS0_PWM3CLKCON                    00000004
PS1_OPTION_REG                    00000001
PS1_PWM1CLKCON                    00000005
PS1_PWM2CLKCON                    00000005
PS1_PWM3CLKCON                    00000005
PS2_OPTION_REG                    00000002
PS2_PWM1CLKCON                    00000006
PS2_PWM2CLKCON                    00000006
PS2_PWM3CLKCON                    00000006
PSA                               00000003
PWM1CLKCON                        00000D9E
PWM1CON                           00000D9B
PWM1CS0                           00000000
PWM1CS1                           00000001
PWM1DC                            00000D93
PWM1DCH                           00000D94
PWM1DCH0                          00000000
PWM1DCH1                          00000001
PWM1DCH2                          00000002
PWM1DCH3                          00000003
PWM1DCH4                          00000004
PWM1DCH5                          00000005
PWM1DCH6                          00000006
PWM1DCH7                          00000007
PWM1DCIE                          00000001
PWM1DCIF                          00000001
PWM1DCL                           00000D93
PWM1DCL0                          00000000
PWM1DCL1                          00000001
PWM1DCL2                          00000002
PWM1DCL3                          00000003
PWM1DCL4                          00000004
PWM1DCL5                          00000005
PWM1DCL6                          00000006
PWM1DCL7                          00000007
PWM1EN                            00000007
PWM1EN_A                          00000000
PWM1IE                            00000004
PWM1IF                            00000004
PWM1INTCON                        00000D9C
PWM1INTE                          00000D9C
PWM1INTF                          00000D9D
PWM1INTFLG                        00000D9D
PWM1LD                            00000007
PWM1LDA_A                         00000000
PWM1LDCON                         00000D9F
PWM1LDM                           00000006
PWM1LDS0                          00000000
PWM1LDS1                          00000001
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  23:07:08         PAGE 46


SYMBOL TABLE
  LABEL                             VALUE 

PWM1MODE0                         00000002
PWM1MODE1                         00000003
PWM1OE                            00000006
PWM1OF                            00000D97
PWM1OFCON                         00000DA0
PWM1OFH                           00000D98
PWM1OFH0                          00000000
PWM1OFH1                          00000001
PWM1OFH2                          00000002
PWM1OFH3                          00000003
PWM1OFH4                          00000004
PWM1OFH5                          00000005
PWM1OFH6                          00000006
PWM1OFH7                          00000007
PWM1OFIE                          00000003
PWM1OFIF                          00000003
PWM1OFL                           00000D97
PWM1OFL0                          00000000
PWM1OFL1                          00000001
PWM1OFL2                          00000002
PWM1OFL3                          00000003
PWM1OFL4                          00000004
PWM1OFL5                          00000005
PWM1OFL6                          00000006
PWM1OFL7                          00000007
PWM1OFM0                          00000005
PWM1OFM1                          00000006
PWM1OFMC                          00000004
PWM1OFS0                          00000000
PWM1OFS1                          00000001
PWM1OUT                           00000005
PWM1OUT_A                         00000000
PWM1PH                            00000D91
PWM1PHH                           00000D92
PWM1PHH0                          00000000
PWM1PHH1                          00000001
PWM1PHH2                          00000002
PWM1PHH3                          00000003
PWM1PHH4                          00000004
PWM1PHH5                          00000005
PWM1PHH6                          00000006
PWM1PHH7                          00000007
PWM1PHIE                          00000002
PWM1PHIF                          00000002
PWM1PHL                           00000D91
PWM1PHL0                          00000000
PWM1PHL1                          00000001
PWM1PHL2                          00000002
PWM1PHL3                          00000003
PWM1PHL4                          00000004
PWM1PHL5                          00000005
PWM1PHL6                          00000006
PWM1PHL7                          00000007
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  23:07:08         PAGE 47


SYMBOL TABLE
  LABEL                             VALUE 

PWM1POL                           00000004
PWM1PR                            00000D95
PWM1PRH                           00000D96
PWM1PRH0                          00000000
PWM1PRH1                          00000001
PWM1PRH2                          00000002
PWM1PRH3                          00000003
PWM1PRH4                          00000004
PWM1PRH5                          00000005
PWM1PRH6                          00000006
PWM1PRH7                          00000007
PWM1PRIE                          00000000
PWM1PRIF                          00000000
PWM1PRL                           00000D95
PWM1PRL0                          00000000
PWM1PRL1                          00000001
PWM1PRL2                          00000002
PWM1PRL3                          00000003
PWM1PRL4                          00000004
PWM1PRL5                          00000005
PWM1PRL6                          00000006
PWM1PRL7                          00000007
PWM1PS0                           00000004
PWM1PS1                           00000005
PWM1PS2                           00000006
PWM1TMR                           00000D99
PWM1TMRH                          00000D9A
PWM1TMRH0                         00000000
PWM1TMRH1                         00000001
PWM1TMRH2                         00000002
PWM1TMRH3                         00000003
PWM1TMRH4                         00000004
PWM1TMRH5                         00000005
PWM1TMRH6                         00000006
PWM1TMRH7                         00000007
PWM1TMRL                          00000D99
PWM1TMRL0                         00000000
PWM1TMRL1                         00000001
PWM1TMRL2                         00000002
PWM1TMRL3                         00000003
PWM1TMRL4                         00000004
PWM1TMRL5                         00000005
PWM1TMRL6                         00000006
PWM1TMRL7                         00000007
PWM2CLKCON                        00000DAE
PWM2CON                           00000DAB
PWM2CS0                           00000000
PWM2CS1                           00000001
PWM2DC                            00000DA3
PWM2DCH                           00000DA4
PWM2DCH0                          00000000
PWM2DCH1                          00000001
PWM2DCH2                          00000002
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  23:07:08         PAGE 48


SYMBOL TABLE
  LABEL                             VALUE 

PWM2DCH3                          00000003
PWM2DCH4                          00000004
PWM2DCH5                          00000005
PWM2DCH6                          00000006
PWM2DCH7                          00000007
PWM2DCIE                          00000001
PWM2DCIF                          00000001
PWM2DCL                           00000DA3
PWM2DCL0                          00000000
PWM2DCL1                          00000001
PWM2DCL2                          00000002
PWM2DCL3                          00000003
PWM2DCL4                          00000004
PWM2DCL5                          00000005
PWM2DCL6                          00000006
PWM2DCL7                          00000007
PWM2EN                            00000007
PWM2EN_A                          00000001
PWM2IE                            00000005
PWM2IF                            00000005
PWM2INTCON                        00000DAC
PWM2INTE                          00000DAC
PWM2INTF                          00000DAD
PWM2INTFLG                        00000DAD
PWM2LD                            00000007
PWM2LDA_A                         00000001
PWM2LDCON                         00000DAF
PWM2LDM                           00000006
PWM2LDS0                          00000000
PWM2LDS1                          00000001
PWM2MODE0                         00000002
PWM2MODE1                         00000003
PWM2OE                            00000006
PWM2OF                            00000DA7
PWM2OFCON                         00000DB0
PWM2OFH                           00000DA8
PWM2OFH0                          00000000
PWM2OFH1                          00000001
PWM2OFH2                          00000002
PWM2OFH3                          00000003
PWM2OFH4                          00000004
PWM2OFH5                          00000005
PWM2OFH6                          00000006
PWM2OFH7                          00000007
PWM2OFIE                          00000003
PWM2OFIF                          00000003
PWM2OFL                           00000DA7
PWM2OFL0                          00000000
PWM2OFL1                          00000001
PWM2OFL2                          00000002
PWM2OFL3                          00000003
PWM2OFL4                          00000004
PWM2OFL5                          00000005
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  23:07:08         PAGE 49


SYMBOL TABLE
  LABEL                             VALUE 

PWM2OFL6                          00000006
PWM2OFL7                          00000007
PWM2OFM0                          00000005
PWM2OFM1                          00000006
PWM2OFMC                          00000004
PWM2OFS0                          00000000
PWM2OFS1                          00000001
PWM2OUT                           00000005
PWM2OUT_A                         00000001
PWM2PH                            00000DA1
PWM2PHH                           00000DA2
PWM2PHH0                          00000000
PWM2PHH1                          00000001
PWM2PHH2                          00000002
PWM2PHH3                          00000003
PWM2PHH4                          00000004
PWM2PHH5                          00000005
PWM2PHH6                          00000006
PWM2PHH7                          00000007
PWM2PHIE                          00000002
PWM2PHIF                          00000002
PWM2PHL                           00000DA1
PWM2PHL0                          00000000
PWM2PHL1                          00000001
PWM2PHL2                          00000002
PWM2PHL3                          00000003
PWM2PHL4                          00000004
PWM2PHL5                          00000005
PWM2PHL6                          00000006
PWM2PHL7                          00000007
PWM2POL                           00000004
PWM2PR                            00000DA5
PWM2PRH                           00000DA6
PWM2PRH0                          00000000
PWM2PRH1                          00000001
PWM2PRH2                          00000002
PWM2PRH3                          00000003
PWM2PRH4                          00000004
PWM2PRH5                          00000005
PWM2PRH6                          00000006
PWM2PRH7                          00000007
PWM2PRIE                          00000000
PWM2PRIF                          00000000
PWM2PRL                           00000DA5
PWM2PRL0                          00000000
PWM2PRL1                          00000001
PWM2PRL2                          00000002
PWM2PRL3                          00000003
PWM2PRL4                          00000004
PWM2PRL5                          00000005
PWM2PRL6                          00000006
PWM2PRL7                          00000007
PWM2PS0                           00000004
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  23:07:08         PAGE 50


SYMBOL TABLE
  LABEL                             VALUE 

PWM2PS1                           00000005
PWM2PS2                           00000006
PWM2TMR                           00000DA9
PWM2TMRH                          00000DAA
PWM2TMRH0                         00000000
PWM2TMRH1                         00000001
PWM2TMRH2                         00000002
PWM2TMRH3                         00000003
PWM2TMRH4                         00000004
PWM2TMRH5                         00000005
PWM2TMRH6                         00000006
PWM2TMRH7                         00000007
PWM2TMRL                          00000DA9
PWM2TMRL0                         00000000
PWM2TMRL1                         00000001
PWM2TMRL2                         00000002
PWM2TMRL3                         00000003
PWM2TMRL4                         00000004
PWM2TMRL5                         00000005
PWM2TMRL6                         00000006
PWM2TMRL7                         00000007
PWM3CLKCON                        00000DBE
PWM3CON                           00000DBB
PWM3CS0                           00000000
PWM3CS1                           00000001
PWM3DC                            00000DB3
PWM3DCH                           00000DB4
PWM3DCH0                          00000000
PWM3DCH1                          00000001
PWM3DCH2                          00000002
PWM3DCH3                          00000003
PWM3DCH4                          00000004
PWM3DCH5                          00000005
PWM3DCH6                          00000006
PWM3DCH7                          00000007
PWM3DCIE                          00000001
PWM3DCIF                          00000001
PWM3DCL                           00000DB3
PWM3DCL0                          00000000
PWM3DCL1                          00000001
PWM3DCL2                          00000002
PWM3DCL3                          00000003
PWM3DCL4                          00000004
PWM3DCL5                          00000005
PWM3DCL6                          00000006
PWM3DCL7                          00000007
PWM3EN                            00000007
PWM3EN_A                          00000002
PWM3IE                            00000006
PWM3IF                            00000006
PWM3INTCON                        00000DBC
PWM3INTE                          00000DBC
PWM3INTF                          00000DBD
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  23:07:08         PAGE 51


SYMBOL TABLE
  LABEL                             VALUE 

PWM3INTFLG                        00000DBD
PWM3LD                            00000007
PWM3LDA_A                         00000002
PWM3LDCON                         00000DBF
PWM3LDM                           00000006
PWM3LDS0                          00000000
PWM3LDS1                          00000001
PWM3MODE0                         00000002
PWM3MODE1                         00000003
PWM3OE                            00000006
PWM3OF                            00000DB7
PWM3OFCON                         00000DC0
PWM3OFH                           00000DB8
PWM3OFH0                          00000000
PWM3OFH1                          00000001
PWM3OFH2                          00000002
PWM3OFH3                          00000003
PWM3OFH4                          00000004
PWM3OFH5                          00000005
PWM3OFH6                          00000006
PWM3OFH7                          00000007
PWM3OFIE                          00000003
PWM3OFIF                          00000003
PWM3OFL                           00000DB7
PWM3OFL0                          00000000
PWM3OFL1                          00000001
PWM3OFL2                          00000002
PWM3OFL3                          00000003
PWM3OFL4                          00000004
PWM3OFL5                          00000005
PWM3OFL6                          00000006
PWM3OFL7                          00000007
PWM3OFM0                          00000005
PWM3OFM1                          00000006
PWM3OFMC                          00000004
PWM3OFS0                          00000000
PWM3OFS1                          00000001
PWM3OUT                           00000005
PWM3OUT_A                         00000002
PWM3PH                            00000DB1
PWM3PHH                           00000DB2
PWM3PHH0                          00000000
PWM3PHH1                          00000001
PWM3PHH2                          00000002
PWM3PHH3                          00000003
PWM3PHH4                          00000004
PWM3PHH5                          00000005
PWM3PHH6                          00000006
PWM3PHH7                          00000007
PWM3PHIE                          00000002
PWM3PHIF                          00000002
PWM3PHL                           00000DB1
PWM3PHL0                          00000000
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  23:07:08         PAGE 52


SYMBOL TABLE
  LABEL                             VALUE 

PWM3PHL1                          00000001
PWM3PHL2                          00000002
PWM3PHL3                          00000003
PWM3PHL4                          00000004
PWM3PHL5                          00000005
PWM3PHL6                          00000006
PWM3PHL7                          00000007
PWM3POL                           00000004
PWM3PR                            00000DB5
PWM3PRH                           00000DB6
PWM3PRH0                          00000000
PWM3PRH1                          00000001
PWM3PRH2                          00000002
PWM3PRH3                          00000003
PWM3PRH4                          00000004
PWM3PRH5                          00000005
PWM3PRH6                          00000006
PWM3PRH7                          00000007
PWM3PRIE                          00000000
PWM3PRIF                          00000000
PWM3PRL                           00000DB5
PWM3PRL0                          00000000
PWM3PRL1                          00000001
PWM3PRL2                          00000002
PWM3PRL3                          00000003
PWM3PRL4                          00000004
PWM3PRL5                          00000005
PWM3PRL6                          00000006
PWM3PRL7                          00000007
PWM3PS0                           00000004
PWM3PS1                           00000005
PWM3PS2                           00000006
PWM3TMR                           00000DB9
PWM3TMRH                          00000DBA
PWM3TMRH0                         00000000
PWM3TMRH1                         00000001
PWM3TMRH2                         00000002
PWM3TMRH3                         00000003
PWM3TMRH4                         00000004
PWM3TMRH5                         00000005
PWM3TMRH6                         00000006
PWM3TMRH7                         00000007
PWM3TMRL                          00000DB9
PWM3TMRL0                         00000000
PWM3TMRL1                         00000001
PWM3TMRL2                         00000002
PWM3TMRL3                         00000003
PWM3TMRL4                         00000004
PWM3TMRL5                         00000005
PWM3TMRL6                         00000006
PWM3TMRL7                         00000007
PWMEN                             00000D8E
PWMLD                             00000D8F
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  23:07:08         PAGE 53


SYMBOL TABLE
  LABEL                             VALUE 

PWMOUT                            00000D90
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCREG                             00000199
RCSTA                             0000019D
RD                                00000000
ROW_EMPTY                         00000000
ROW_FULL                          0000000A
RT_THR                            000000B5
RX9                               00000006
RX9D                              00000000
RXDTSEL                           00000007
S0                                0000001F
SBOREN                            00000007
SCKP                              00000004
SCS0                              00000000
SCS1                              00000001
SENDB                             00000003
SLRA0                             00000000
SLRA1                             00000001
SLRA2                             00000002
SLRA4                             00000004
SLRA5                             00000005
SLRCONA                           0000030C
SOUND_SUPPORT                     
SP                                FSR1
SPBRG                             0000019B
SPBRGH                            0000019C
SPBRGL                            0000019B
SPEN                              00000007
SPLLEN                            00000007
SREN                              00000005
STACK_SIZE                        00000020
STATUS                            00000003
STATUS_SHAD                       00000FE4
STKOVF                            00000007
STKPTR                            00000FED
STKUNF                            00000006
SWDTEN                            00000000
SYNC                              00000004
SYNC_IE                           00000006
SYNC_IF                           00000006
SYNC_OUT                          00000002
SYNC_PIE                          00000093
SYNC_PIR                          00000013
SYNC_PWMCLKCON                    00000DBE
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  23:07:08         PAGE 54


SYMBOL TABLE
  LABEL                             VALUE 

SYNC_PWMCON                       00000DBB
SYNC_PWMDCH                       00000DB4
SYNC_PWMDCL                       00000DB3
SYNC_PWMINTE                      00000DBC
SYNC_PWMINTF                      00000DBD
SYNC_PWMLDCON                     00000DBF
SYNC_PWMOF                        00000DB7
SYNC_PWMOFCON                     00000DC0
SYNC_PWMPH                        00000DB1
SYNC_PWMPRH                       00000DB6
SYNC_PWMPRL                       00000DB5
SYNC_PWMTMR                       00000DB9
T                                 INDF1
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000018
T1GCON                            00000019
T1GGO                             00000003
T1GGO_NOT_DONE                    00000003
T1GPOL                            00000006
T1GSEL                            00000003
T1GSPM                            00000004
T1GSS0                            00000000
T1GSS1                            00000001
T1GTM                             00000005
T1GVAL                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             0000001C
T2OUTPS0                          00000003
T2OUTPS1                          00000004
T2OUTPS2                          00000005
T2OUTPS3                          00000006
TC                                00000032
TCY                               000000C8
TMR0                              00000015
TMR0CS                            00000005
TMR0IE                            00000005
TMR0IF                            00000002
TMR0SE                            00000004
TMR1                              00000016
TMR1CS0                           00000006
TMR1CS1                           00000007
TMR1GE                            00000007
TMR1GIE                           00000007
TMR1GIF                           00000007
TMR1H                             00000017
TMR1IE                            00000000
TMR1IF                            00000000
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  23:07:08         PAGE 55


SYMBOL TABLE
  LABEL                             VALUE 

TMR1L                             00000016
TMR1ON                            00000000
TMR2                              0000001A
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOS                               00000FEE
TOSH                              00000FEF
TOSL                              00000FEE
TRIGSEL0                          00000004
TRIGSEL1                          00000005
TRIGSEL2                          00000006
TRIGSEL3                          00000007
TRISA                             0000008C
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRMT                              00000001
TSEN                              00000005
TSRNG                             00000004
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TUN5                              00000005
TX9                               00000006
TX9D                              00000000
TXCKSEL                           00000002
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             0000019A
TXSTA                             0000019E
TX_PIR                            00000011
UP_THR                            000000C6
VDD                               00000400
VERT_DLY                          00000032
VIDEO_BUFFER                      00002030
VIDEO_LAT                         0000010C
VIDEO_OUT                         00000001
VREGCON                           00000197
VREGPM                            00000001
W                                 00000000
WDTCON                            00000097
WDTPS0                            00000001
WDTPS1                            00000002
WDTPS2                            00000003
WDTPS3                            00000004
WDTPS4                            00000005
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  23:07:08         PAGE 56


SYMBOL TABLE
  LABEL                             VALUE 

WELL_DEPTH                        00000016
WELL_WIDTH                        0000000A
WPUA                              0000020C
WPUA0                             00000000
WPUA1                             00000001
WPUA2                             00000002
WPUA3                             00000003
WPUA4                             00000004
WPUA5                             00000005
WR                                00000001
WREG                              00000009
WREG_SHAD                         00000FE5
WREN                              00000002
WRERR                             00000003
WUE                               00000001
XSIZE                             00000030
YSIZE                             00000020
Z                                 00000002
Z_SHAD                            00000002
_.org_1_006C                      0000006C
_.org_1_006E                      0000006E
_.org_1_0071                      00000071
_.org_1_00BD                      000000BD
_.org_1_00BF                      000000BF
_.org_1_00D3                      000000D3
_.org_1_00DB                      000000DB
_.org_1_026C                      0000026C
_.org_1_027C                      0000027C
_.org_1_02B1                      000002B1
_.org_1_02D2                      000002D2
_.org_1_0318                      00000318
_BOREN_NSLEEP                     00003DFF
_BOREN_OFF                        000039FF
_BOREN_ON                         00003FFF
_BOREN_SBODEN                     00003BFF
_BORV_19                          00003FFF
_BORV_HI                          00003BFF
_BORV_LO                          00003FFF
_CLKOUTEN_OFF                     00003FFF
_CLKOUTEN_ON                      000037FF
_CONFIG1                          00008007
_CONFIG2                          00008008
_CP_OFF                           00003FFF
_CP_ON                            00003F7F
_DEVID1                           00008006
_FOSC_ECH                         00003FFF
_FOSC_ECL                         00003FFD
_FOSC_ECM                         00003FFE
_FOSC_INTOSC                      00003FFC
_IDLOC0                           00008000
_IDLOC1                           00008001
_IDLOC2                           00008002
_IDLOC3                           00008003
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  23:07:08         PAGE 57


SYMBOL TABLE
  LABEL                             VALUE 

_LPBOREN_OFF                      00003FFF
_LPBOREN_ON                       000037FF
_LVP_OFF                          00001FFF
_LVP_ON                           00003FFF
_MCLRE_OFF                        00003FBF
_MCLRE_ON                         00003FFF
_PLLEN_OFF                        00003EFF
_PLLEN_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FDF
_STVREN_OFF                       00003DFF
_STVREN_ON                        00003FFF
_WDTE_NSLEEP                      00003FF7
_WDTE_OFF                         00003FE7
_WDTE_ON                          00003FFF
_WDTE_SWDTEN                      00003FEF
_WRT_ALL                          00003FFC
_WRT_BOOT                         00003FFE
_WRT_HALF                         00003FFD
_WRT_OFF                          00003FFF
__12F1572                         00000001
_stack                            00000020
accaH                             00000009
accaL                             00000008
accbH                             0000000B
accbL                             0000000A
add_points                        00000319
angle                             00000041
bitmap                            0000014B
bmp00                             0000014C
bmp01                             0000015F
bmp02                             0000014E
buttons                           0000000C
byte_serialize                    000000CE
case                              
clear_pixel                       00000102
clear_score                       000001FB
clear_screen                      000000E3
clr00                             0000029D
cls_loop                          000000E9
col_loop                          00000204
coll_test                         00000282
count_done                        00000246
count_full                        0000022E
count_loop                        00000232
dec_n                             
digits                            00000363
div10                             00000056
div10_loop                        00000059
drop                              
drop00                            00000214
drop1                             00000201
drop21                            000002AA
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  23:07:08         PAGE 58


SYMBOL TABLE
  LABEL                             VALUE 

drop_n                            
drop_tetrim                       000002E2
droppedH                          00000047
droppedL                          00000046
dup                               
fall_loop                         000002CC
flags                             00000002
game_init                         000001D6
game_loop                         000002C6
game_over                         00000299
get_flash_word                    00000124
get_nibble                        00000138
get_pixel                         00000106
gt_255                            00000028
gtimer                            00000003
hline                             000001BA
hline_done                        000001C6
inc_n                             
init                              00000320
insert                            
isr                               00000004
isr_exit                          00000052
koro                              0000025E
korobeiniki                       000003DC
lbl_lines                         00000429
lbl_press                         00000430
lbl_score                         00000422
lcountH                           00000001
lcountL                           00000000
lit                               
main                              00000360
mask00                            000000FA
mask01                            000000FD
move_down                         00000304
move_left                         000002FB
move_right                        00000300
new_tminos                        00000248
next_flash_word                   00000133
next_pixel                        00000215
next_row                          00000244
nibble                            0000000D
nibble_mask                       00000147
no_sound                          0000026D
no_zero                           000001B8
over                              
pause                             
pick                              
pop                               
print_char                        00000162
print_int                         0000019B
print_int00                       0000019F
print_label                       00000184
print_last                        000001B2
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  23:07:08         PAGE 59


SYMBOL TABLE
  LABEL                             VALUE 

print_tetrim                      0000016A
prompt                            000002B9
prt_lbl_done                      00000199
push                              
q                                 0000000A
qr00                              00000220
qr01                              0000022A
query_row                         0000021E
r                                 00000000
randH                             00000006
randL                             00000005
rcount                            00000007
read_exit                         00000096
read_flash                        00000129
read_pad                          00000064
reserve                           
rot_left                          000002E9
rot_right                         000002F2
row0                              00000146
row1                              00000144
row2                              00000142
row_loop                          00000202
rst                               00000010
scoreH                            00000045
scoreL                            00000044
score_update                      0000030B
set_pixel                         000000FF
set_pixel_ptr                     000000EE
set_yptr                          000000B0
start_timer                       
t0                                0000000E
t1                                0000000F
task0                             0000003D
task1                             00000046
task2                             0000004D
tasks                             00000033
tcyDelay                          
tetrim                            00000040
tetriminos                        0000038F
tetris                            000002C2
tone                              00000099
tone_pr                           000003AF
tone_tmr                          00000004
try_a                             00000073
try_b                             00000079
try_button                        
try_dn                            00000091
try_lt                            0000008B
try_rt                            0000007F
try_up                            00000085
tx                                00000042
ty                                00000043
update_display                    00000288
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  23:07:08         PAGE 60


SYMBOL TABLE
  LABEL                             VALUE 

video_buffer_b0                   00000050
video_buffer_b1                   000000A0
video_buffer_b2                   00000120
video_serialize                   000000BC
vline                             000001C8
vline_done                        000001D4
vsync_end                         00000020
vsync_start                       00000018
wait_end                          0000027E
wait_sound                        
wait_start                        00000259
wait_timer                        
xor_pixel                         00000109
xor_row                           0000010F
xor_row02                         0000011E
xor_row_done                      00000122

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,   129 suppressed

