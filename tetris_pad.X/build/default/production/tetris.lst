MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-11-2016  20:53:50         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001     include p12f1572.inc
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Sep 13 2016
                      00005 ;  MPASM PIC12F1572 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2016 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01601         LIST
                      00002     
                      00003     radix dec
                      00004     errorlevel 0, -302, -305
                      00005     
8007   3FE7           00006     __config _CONFIG1, _FOSC_ECH&_WDTE_OFF
8008   1EFF           00007     __config _CONFIG2, _PLLEN_OFF&_LVP_OFF 
                      00008 
  01312D00            00009 FOSC equ 20000000 ; 20Mhz
  00000032            00010 TC equ 50 ; nanosecondes 
  004C4B40            00011 FCY equ FOSC/4    ; 5Mhz
  000000C8            00012 TCY equ 200 ; nanoseconds
                      00013 
                      00014 
  00000030            00015 XSIZE equ 48  ; horizontal pixels
  00000020            00016 YSIZE equ 32  ; vertical pixels
  00000006            00017 BPL equ XSIZE/8 ; bytes per line 
  000000C0            00018 BUFFER_SIZE equ  YSIZE*BPL  ; video buffer size
  00002030            00019 VIDEO_BUFFER equ 0x2000+(3*80-BUFFER_SIZE) ; buffer address
  00000032            00020 VERT_DLY equ 50
  00000046            00021 FIRST_VIDEO equ VERT_DLY+20  ; first video output line
  000000C5            00022 LAST_VIDEO equ FIRST_VIDEO+4*YSIZE-1  ; last video output line
  0000019A            00023 PIXEL_TXREG equ TXREG
  00000011            00024 TX_PIR equ PIR1
  00000032            00025 HORZ_DLY equ 10*5  ; there is 5 TCY/µsec
                      00026  
  00000001            00027 VIDEO_OUT equ RA1
  0000010C            00028 VIDEO_LAT equ LATA
  00000002            00029 SYNC_OUT equ RA2 
  00000DB3            00030 SYNC_PWMDCL equ PWM3DCL ; duty cycle low byte
  00000DB4            00031 SYNC_PWMDCH equ PWM3DCH ; high byte    
  00000DB5            00032 SYNC_PWMPRL equ PWM3PRL ; pwm period low byte
  00000DB6            00033 SYNC_PWMPRH equ PWM3PRH ; high byte 
  00000DB1            00034 SYNC_PWMPH equ PWM3PH ; pwm phase
  00000DB7            00035 SYNC_PWMOF equ PWM3OF ; pwm offset
  00000DB9            00036 SYNC_PWMTMR equ PWM3TMR ; timer
  00000DBB            00037 SYNC_PWMCON equ PWM3CON ; control SFR
  00000DBE            00038 SYNC_PWMCLKCON equ PWM3CLKCON  ; clock control SFR
  00000DC0            00039 SYNC_PWMOFCON equ PWM3OFCON ; offset control SFR
  00000DBF            00040 SYNC_PWMLDCON equ PWM3LDCON ; load control SFR
  00000006            00041 SYNC_IE equ PWM3IE  ; interrupt enable bit
  00000006            00042 SYNC_IF equ PWM3IF  ; interrupt flag bit
  00000093            00043 SYNC_PIE equ PIE3 ; interrupt enable SFR
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-11-2016  20:53:50         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000013            00044 SYNC_PIR equ PIR3 ; interrupt flag SFR 
  00000DBC            00045 SYNC_PWMINTE equ PWM3INTE
  00000DBD            00046 SYNC_PWMINTF equ PWM3INTF
                      00047  
  000004F5            00048 HORZ_PERIOD equ FOSC/15748-1 ; 15748 hertz
  0000005E            00049 HORZ_PULSE equ 4700/TC ; 4.7µsec 
  00000106            00050 LAST_LINE equ 262
                      00051 
  00000000            00052 LED_PIN equ RA0
  00000004            00053 ADC_PIN equ RA4
                      00054  
  00000004            00055 AUDIO_PIN equ RA4
  00000DA3            00056 AUDIO_PWMDCL equ PWM2DCL
  00000DA4            00057 AUDIO_PWMDCH equ PWM2DCH
  00000DA5            00058 AUDIO_PWMPRL equ PWM2PRL
  00000DA6            00059 AUDIO_PWMPRH equ PWM2PRH
  00000DA9            00060 AUDIO_PWMTMR equ PWM2TMR
  00000DAE            00061 AUDIO_PWMCLKCON equ PWM2CLKCON
  00000DAF            00062 AUDIO_PWMLDCON equ PWM2LDCON
  00000DAB            00063 AUDIO_PWMCON equ PWM2CON
                      00064  
                      00065 ; game pad resource
                      00066 ; use ADC 
  00000004            00067 PAD_PIN equ ANSA4
  00000003            00068 PAD_CHS equ 3 
  00000000            00069 BTN_UP equ 0
  00000001            00070 BTN_DN equ 1
  00000002            00071 BTN_LT equ 2
  00000003            00072 BTN_RT equ 3
  00000004            00073 BTN_A equ 4
  00000005            00074 BTN_B equ 5
                      00075 ; threshold level for each button
                      00076 ; lower_btn_thr >= BTN_? < btn_thr
                      00077 ; exemple: BTN_UP if RT_THR<=Vadc<UP_THR  
  00000400            00078 VDD equ 1024
  000000D8            00079 DN_THR equ 216 ;(VDD*(6/7+5/6)/2)>>2
  000000D1            00080 LT_THR equ 209 ; (VDD*(5/6+4/5)/2)>>2
  000000C6            00081 UP_THR equ 198 ;(VDD*(4/5+3/4)/2)>>2
  000000B5            00082 RT_THR equ 181 ;(VDD*(3/4+2/3)/2)>>2
  00000095            00083 B_THR  equ 149 ; (VDD*(2/3+1/2)/2)>>2
  00000040            00084 A_THR  equ 64 ;(VDD/4)>>2
                      00085  
                      00086 try_button macro btn, label 
                      00087     movlw btn
                      00088     subwf ADRESH,W
                      00089     skpnc
                      00090     bra label
                      00091     endm
                      00092     
                      00093 ;boolean flags 
  00000000            00094 F_VSYNC equ 0 ; vertical sync active
  00000001            00095 F_EVEN equ 1  ; even field
  00000002            00096 F_MUTEX equ 2 ; video routine lock out
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-11-2016  20:53:50         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000003            00097 F_GTMR equ 3  ; game timer active
  00000004            00098 F_GSTOP equ 4 ; game stopped
  00000005            00099 F_SND equ 5 ; sound timer active 
                      00100  
  000000B4            00101 LFSR_TAPS equ 0xB4 ; xor mask
                      00102  
                      00103 disable_video macro ; lockout video_serialize
                      00104     bsf flags, F_MUTEX
                      00105     endm
                      00106     
                      00107 enable_video macro ; unlock video_serialize
                      00108     bcf flags, F_MUTEX
                      00109     endm
                      00110     
                      00111 tcyDelay macro n ; delay in TCY cycles  5TCY per µsec.  
                      00112     variable r=n%5
                      00113     variable q=n/5
                      00114     while r>1
                      00115     bra $+1
                      00116 r-=2
                      00117     endw
                      00118     if r==1
                      00119     nop
                      00120     endif
                      00121     if q
                      00122     movlw q
                      00123     bra $+1
                      00124     decfsz WREG
                      00125     bra $-2
                      00126     endif
                      00127     endm
                      00128 
                      00129 case macro n, label
                      00130     xorlw n
                      00131     skpnz
                      00132     bra label
                      00133     xorlw n
                      00134     endm
                      00135  
                      00136 ldpmadr macro addr ; load PMADR register
                      00137     movlw low(addr)
                      00138     movwf PMADRL
                      00139     movlw high(addr)
                      00140     movwf PMADRH
                      00141     endm
                      00142     
                      00143 addpmadr macro value ; add value to PMADR
                      00144     movlw value
                      00145     addwf PMADRL
                      00146     clrw
                      00147     addwfc PMADRH
                      00148     endm
                      00149     
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-11-2016  20:53:50         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00150 start_timer macro value ; start game timer
                      00151     movlw value
                      00152     movwf gtimer
                      00153     bsf flags, F_GTMR
                      00154     endm
                      00155     
                      00156 wait_timer macro ; wait timer expiration
                      00157     btfsc flags, F_GTMR
                      00158     bra $-1
                      00159     endm
                      00160     
                      00161 pause macro value ; suspend execution (busy loop)
                      00162     start_timer value
                      00163     wait_timer
                      00164     endm
                      00165  
                      00166 wait_sound macro ; wait sound end
                      00167     btfsc flags,F_SND
                      00168     bra $-1
                      00169     endm
                      00170     
                      00171 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00172 ; software stack for arguments passing
                      00173 ; SP is Stack Pointer
                      00174 ; T is Top Of Stack
                      00175 #define SP FSR1
                      00176 #define T INDF1
  00000020            00177 STACK_SIZE equ 32
                      00178  
  0000001F            00179 S0 equ 0x1F ; stack base address - 1
                      00180 
                      00181 pstack_init macro ; initialise stack pointer
                      00182     clrf FSR1H
                      00183     movlw S0
                      00184     movwf FSR1L
                      00185     endm
                      00186     
                      00187 push macro   ; ( -- n ) push WREG on stack
                      00188     movwi ++SP
                      00189     endm
                      00190 
                      00191 pop macro   ; ( n -- )  pop T in WREG
                      00192     moviw SP--
                      00193     endm
                      00194     
                      00195 drop macro  ; ( n -- ) ; discard T
                      00196    addfsr SP,-1
                      00197    endm
                      00198 
                      00199 drop_n macro n  ; discard n elements  n<32
                      00200     addfsr SP,-n
                      00201     endm
                      00202     
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-11-2016  20:53:50         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00203 lit macro  n ; ( -- n ) ; push a literal
                      00204    movlw n
                      00205    movwi ++SP 
                      00206    endm
                      00207 
                      00208 dup macro ; ( n -- n n ) duplicate T
                      00209     movfw T
                      00210     movwi ++SP
                      00211     endm
                      00212     
                      00213 over macro ; ( n1 n2 -- n1 n2 n1 )
                      00214     moviw -1[SP]
                      00215     push
                      00216     endm
                      00217     
                      00218 swap macro ; exchange WREG and T
                      00219     xorwf T
                      00220     xorwf T,W
                      00221     xorwf T
                      00222     endm
                      00223  
                      00224 store macro var ; ( n -- ) pop T in variable
                      00225    moviw SP--
                      00226    movwf var
                      00227    endm
                      00228    
                      00229 fetch macro var  ; ( -- n ) push var on stack
                      00230    movfw var
                      00231    movwi ++SP
                      00232    endm
                      00233 
                      00234 pick macro n  ; pick nth element of stack to WREG
                      00235     moviw -n[SP]
                      00236     endm
                      00237 
                      00238 insert macro n ;  insert WREG at position n on stack
                      00239    movwi -n[SP]
                      00240    endm
                      00241    
                      00242 movtw macro ; ( n -- n ) overwrite WREG with T
                      00243    movfw T
                      00244    endm
                      00245    
                      00246 movwt macro ; ( n1 -- n2 ) overwrite T with WREG
                      00247     movwf T
                      00248     endm
                      00249     
                      00250 add macro  ; add WREG to T result on T
                      00251     addwf T,F
                      00252    endm
                      00253    
                      00254 sub macro  ; substract WREG from T result on T
                      00255    subwf T,F
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-11-2016  20:53:50         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00256    endm
                      00257 
                      00258 inc_n macro n ; increament nth element of stack
                      00259     moviw -n[SP]
                      00260     incf WREG,F
                      00261     movwi -n[SP]
                      00262     endm
                      00263     
                      00264 dec_n macro n ; decreament nth element of stack
                      00265     moviw -n[SP]
                      00266     decf WREG,F
                      00267     movwi -n[SP]
                      00268     endm
                      00269     
                      00270 zbranch macro label ; branch if T == 0
                      00271     pop
                      00272     skpnz
                      00273     bra label
                      00274     endm
                      00275     
                      00276 tbranch macro label ; branch if T != 0
                      00277     pop
                      00278     skpz
                      00279     bra label
                      00280     endm
                      00281     
                      00282 reserve macro n ; reserve n bytes on stack for local variables
                      00283     addfsr SP, n 
                      00284     endm
                      00285  
                      00286 rot macro ; ( n1 n2 n3 -- n2 n3 n1 )
                      00287     pick 2
                      00288     push        ; n1 n2 n3 n1
                      00289     pick 2
                      00290     insert 3   ;  n2 n2 n3 n1
                      00291     pick 1
                      00292     insert 2   ; n2 n3 n3 n1
                      00293     pop        ; n2 n3 n3 
                      00294     movwf T    ; n2 n3 n1
                      00295     endm
                      00296  
                      00297 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00298 ; parameter stack section    
                      00299 dstack udata 0x20
0020                  00300 _stack res 32
                      00301 ; game variables section 
  00000000            00302 GAME_VAR equ 0 ; variables bank
                      00303 game_var udata 0x40 
                      00304 ; tetris game state
0040                  00305 tetrim res 1 ; active tretriminos 
0041                  00306 angle res 1 ; tetriminos rotatation angle in multiple of 90degr. {0:3}
0042                  00307 tx  res 1 ; x coordinate
0043                  00308 ty  res 1 ; y coordinate
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-11-2016  20:53:50         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0044                  00309 scoreL res 1 ; game score  16 bits
0045                  00310 scoreH res 1 
0046                  00311 dropped res 1 ; dropped lines
                      00312 
                      00313 ; These 3 sections are used for video pixels buffering
                      00314 ; with indirect access using FSR0
                      00315 ; to form a contiguous address space. 
                      00316 vb_b0    udata 0x50
0050                  00317 video_buffer_b0 res 32
                      00318 vb_b1    udata 0xA0
00A0                  00319 video_buffer_b2 res 80
                      00320 vb_b2    udata 0x120
0120                  00321 video_buffer_b3 res 80
                      00322  
                      00323  
                      00324     udata_shr
                      00325 ;scan lines counter 16 bits
0000                  00326 lcountL res 1
0001                  00327 lcountH res 1
                      00328 ; boolean flags 
0002                  00329 flags res 1
                      00330 ; game timer
0003                  00331 gtimer res 1 
                      00332 ; sound timer
0004                  00333 tone_tmr res 1 
                      00334 ; lfsr PRNG register
0005                  00335 randL res 1 
0006                  00336 randH res 1 
                      00337 ; loop counter
0007                  00338 rcount res 1
                      00339 ; arithmetic accumulator A 24 bits
0008                  00340 accaL res 1
0009                  00341 accaH res 1
                      00342 ; arithmetic accumulator B 16 bits
000A                  00343 accbL res 1
000B                  00344 accbH res 1
                      00345 ; game pad buttons state
000C                  00346 buttons res 1
                      00347 ; flash reader next nibble {0-3}
000D                  00348 nibble res 1
                      00349  
                      00350 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
000E                  00351 rst: 
                      00352     org 0
0000   0023           00353     banksel ANSELA
0001   018C           00354     clrf ANSELA
0002   160C           00355     bsf ANSELA,PAD_PIN
0003   2???           00356     goto init
                      00357     
                      00358     org 4
0004                  00359 isr:
0004   003B           00360     banksel SYNC_PWMINTF
0005   103D           00361     bcf SYNC_PWMINTF,PRIF
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-11-2016  20:53:50         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0006   1800           00362     btfsc lcountH,0
0007   3???           00363     bra gt_255 ; lcount > 255
0008   08??           00364     movfw lcountL
0009   1903           00365     skpnz
000A   3???           00366     bra vsync_start
000B   3A03           00367     xorlw 3
000C   1903           00368     skpnz
000D   3???           00369     bra vsync_end
000E                  00370 lt_256: ; lcount < 256
000E   1900           00371     btfsc flags, F_MUTEX
000F   3???           00372     bra isr_exit
0010   08??           00373     movfw lcountL
0011   3C45           00374     sublw FIRST_VIDEO-1
0012   1803           00375     skpnc
0013   3???           00376     bra isr_exit
0014   08??           00377     movfw lcountL
0015   3CC5           00378     sublw LAST_VIDEO
0016   1C03           00379     skpc
0017   3???           00380     bra isr_exit
0018   2???           00381     call video_serialize
0019   3???           00382     bra isr_exit    
001A                  00383 vsync_start: ; scanline 0 start vertical sync pulse
001A   003B           00384     banksel SYNC_PWMDCL
001B   3097           00385     movlw (HORZ_PERIOD-HORZ_PULSE)&0xff
001C   00B3           00386     movwf SYNC_PWMDCL
001D   3004           00387     movlw (HORZ_PERIOD-HORZ_PULSE)>>8
001E   00B4           00388     movwf SYNC_PWMDCH
001F   17BF           00389     bsf SYNC_PWMLDCON,LDA
0020   1400           00390     bsf flags, F_VSYNC
0021   3???           00391     bra isr_exit
0022                  00392 vsync_end: ; scanline 3 end vertical sync pulse
0022   003B           00393     banksel SYNC_PWMDCL
0023   305E           00394     movlw HORZ_PULSE&0xff
0024   00B3           00395     movwf SYNC_PWMDCL
0025   3000           00396     movlw HORZ_PULSE>>8
0026   00B4           00397     movwf SYNC_PWMDCH
0027   17BF           00398     bsf SYNC_PWMLDCON,LDA
0028   1000           00399     bcf flags, F_VSYNC
0029   3???           00400     bra isr_exit
002A                  00401 gt_255: ; lcount>255
002A   3006           00402     movlw LAST_LINE&0xff
002B   1C80           00403     btfss flags,F_EVEN
002C   3E01           00404     addlw 1
002D   06??           00405     xorwf lcountL,W
002E   1D03           00406     skpz
002F   3???           00407     bra tasks
0030   01??           00408     clrf lcountL
0031   01??           00409     clrf lcountH
0032   3002           00410     movlw 1<<F_EVEN
0033   06??           00411     xorwf flags,F
0034   0009           00412     retfie
                      00413 ; round robin task scheduler
                      00414 ; each task execute once every 1/60th sec.
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-11-2016  20:53:50         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00415 ; condition:    
                      00416 ;   Task must complete inside
                      00417 ;   horizontal period.
0035                  00418 tasks:
0035   08??           00419     movfw lcountL
                      00420     case 0, task0
0036   3A00               M     xorlw 0
0037   1903               M     skpnz
0038   3???               M     bra task0
0039   3A00               M     xorlw 0
                      00421     case 1, task1
003A   3A01               M     xorlw 1
003B   1903               M     skpnz
003C   3???               M     bra task1
003D   3A01               M     xorlw 1
                      00422     case 2, task2
003E   3A02               M     xorlw 2
003F   1903               M     skpnz
0040   3???               M     bra task2
0041   3A02               M     xorlw 2
0042   3???           00423     bra isr_exit
0043                  00424 task0:
                      00425 ; sound timer    
0043   08??           00426     movfw tone_tmr
0044   1903           00427     skpnz
0045   3???           00428     bra isr_exit
0046   0B??           00429     decfsz tone_tmr,F
0047   3???           00430     bra isr_exit
0048   1280           00431     bcf flags,F_SND
0049   003B           00432     banksel AUDIO_PWMCON
004A   13AB           00433     bcf AUDIO_PWMCON,EN
004B   3???           00434     bra isr_exit
004C                  00435 task1:   
                      00436 ; decrement game timer    
004C   08??           00437     movf gtimer,F ; 
004D   1903           00438     skpnz
004E   3???           00439     bra isr_exit
004F   0B??           00440     decfsz gtimer,F ; 
0050   3???           00441     bra isr_exit ;
0051   1180           00442     bcf flags, F_GTMR
0052   3???           00443     bra isr_exit ;
0053                  00444 task2:
                      00445 ; rotate lfsr
0053   36??           00446     lsrf randH
0054   0C??           00447     rrf randL
0055   1803           00448     skpnc
0056   30B4           00449     movlw LFSR_TAPS
0057   06??           00450     xorwf randH
0058   3???           00451     bra isr_exit 
0059                  00452 isr_exit:
0059   0A??           00453     incf lcountL
005A   1903           00454     skpnz
005B   0A??           00455     incf lcountH
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-11-2016  20:53:50         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

005C   0009           00456     retfie
                      00457 
                      00458 ;divsion by 10    
                      00459 ;needed to convert binary to BCD
                      00460 ; input:
                      00461 ;   acca dividend  16 bits
                      00462 ; output:
                      00463 ;   acca: quotient
                      00464 ;   accbL: remainder    
005D                  00465 div10:
                      00466     disable_video
005D   1500               M     bsf flags, F_MUTEX
005E   3011           00467     movlw 17
005F   00??           00468     movwf rcount
0060   01??           00469     clrf accbL
0061                  00470 div10_loop:
0061   300A           00471     movlw 10
0062   02??           00472     subwf accbL,W
0063   1803           00473     skpnc
0064   00??           00474     movwf accbL
0065   0D??           00475     rlf accaL
0066   0D??           00476     rlf accaH
0067   0D??           00477     rlf accbL
0068   0B??           00478     decfsz rcount
0069   3???           00479     bra div10_loop
006A   36??           00480     lsrf accbL
                      00481     enable_video
006B   1100               M     bcf flags, F_MUTEX
006C   0008           00482     return
                      00483     
                      00484     
                      00485 ; WREG*6  because BPL=6
                      00486 ; WREG*6=WREG*4+WREG*2    
006D                  00487 mult6: 
006D   00??           00488     movwf accbH
006E   35??           00489     lslf accbH    ; accbH=2*WREG
006F   35??           00490     lslf accbH,W  ; WREG=4*WREG
0070   07??           00491     addwf accbH,W ; WREG=6*WREG
0071   0008           00492     return
                      00493 
                      00494 ;read game pad
                      00495 ; store value in
                      00496 ; buttons
                      00497 ; a button is accepted if
                      00498 ; the Vadc value is below its threshold
0072                  00499 read_pad:
0072   01??           00500     clrf buttons
0073   1A80           00501     btfsc flags, F_SND
0074   0008           00502     return ; can't read while tone playing
0075   0021           00503     banksel TRISA
0076   160C           00504     bsf TRISA,ADC_PIN
0077   0021           00505     banksel ADCON0
0078   141D           00506     bsf ADCON0,ADON
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-11-2016  20:53:50         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00507     tcyDelay 8*4 ; délais d'acquisition 4µsec
  0002                    M     variable r=8*4%5
  0006                    M     variable q=8*4/5
                          M     while r>1
0079   3???               M     bra $+1
  00000000                M r-=2
                          M     endw
                          M     if r==1
                          M     nop
                          M     endif
                          M     if q
007A   3006               M     movlw q
007B   3???               M     bra $+1
007C   0B89               M     decfsz WREG
007D   3???               M     bra $-2
                          M     endif
007E   149D           00508     bsf ADCON0,GO
007F   189D           00509     btfsc ADCON0,NOT_DONE
0080   3???           00510     bra $-1
0081   101D           00511     bcf ADCON0,ADON
                      00512 ; try each button from lower to upper
0082                  00513 try_a:
                      00514     try_button A_THR, try_b
0082   3040               M     movlw A_THR
0083   021C               M     subwf ADRESH,W
0084   1803               M     skpnc
0085   3???               M     bra try_b
0086   1600           00515     bsf buttons,BTN_A
0087   3???           00516     bra read_exit
0088                  00517 try_b:    
                      00518     try_button B_THR, try_rt
0088   3095               M     movlw B_THR
0089   021C               M     subwf ADRESH,W
008A   1803               M     skpnc
008B   3???               M     bra try_rt
008C   1680           00519     bsf buttons,BTN_B
008D   3???           00520     bra read_exit
008E                  00521 try_rt:
                      00522     try_button RT_THR, try_up
008E   30B5               M     movlw RT_THR
008F   021C               M     subwf ADRESH,W
0090   1803               M     skpnc
0091   3???               M     bra try_up
0092   1580           00523     bsf buttons,BTN_RT
0093   3???           00524     bra read_exit
0094                  00525 try_up:
                      00526     try_button UP_THR, try_lt
0094   30C6               M     movlw UP_THR
0095   021C               M     subwf ADRESH,W
0096   1803               M     skpnc
0097   3???               M     bra try_lt
0098   1400           00527     bsf buttons,BTN_UP
0099   3???           00528     bra read_exit
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-11-2016  20:53:50         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

009A                  00529 try_lt:
                      00530     try_button LT_THR, try_dn
009A   30D1               M     movlw LT_THR
009B   021C               M     subwf ADRESH,W
009C   1803               M     skpnc
009D   3???               M     bra try_dn
009E   1500           00531     bsf buttons,BTN_LT
009F   3???           00532     bra read_exit
00A0                  00533 try_dn:
                      00534     try_button DN_THR, read_exit
00A0   30D8               M     movlw DN_THR
00A1   021C               M     subwf ADRESH,W
00A2   1803               M     skpnc
00A3   3???               M     bra read_exit
00A4   1480           00535     bsf buttons,BTN_DN
00A5                  00536 read_exit:
00A5   0021           00537     banksel TRISA
00A6   120C           00538     bcf TRISA,ADC_PIN
00A7   0008           00539     return
                      00540     
                      00541 ; play a tone
                      00542 ; input:
                      00543 ;   t   duration in multiple of 1/60 sec.
                      00544 ;   n   note number
00A8                  00545 tone: ; ( t n -- )
00A8   0021           00546     banksel TRISA
00A9   120C           00547     bcf TRISA,AUDIO_PIN
00AA   003B           00548     banksel AUDIO_PWMPRL
00AB   3581           00549     lslf T
00AC   0801           00550     movfw T
00AD   2???           00551     call tone_pr
00AE   00A5           00552     movwf AUDIO_PWMPRL
00AF   3689           00553     lsrf WREG
00B0   00A3           00554     movwf AUDIO_PWMDCL
00B1   0A01           00555     incf T,W
00B2   2???           00556     call tone_pr
00B3   00A6           00557     movwf AUDIO_PWMPRH
00B4   3689           00558     lsrf WREG
00B5   00A4           00559     movwf AUDIO_PWMDCH
00B6   1803           00560     skpnc
00B7   17A3           00561     bsf AUDIO_PWMDCL,7
                      00562     pop
00B8   0017               M     moviw SP--
                      00563     pop
00B9   0017               M     moviw SP--
00BA   00??           00564     movwf tone_tmr
00BB   17AB           00565     bsf AUDIO_PWMCON,EN
00BC   17AF           00566     bsf AUDIO_PWMLDCON,LDA
00BD   1680           00567     bsf flags,F_SND
00BE   0008           00568     return
                      00569     
                      00570     
                      00571 ; serialise video pixels to scan line
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-11-2016  20:53:50         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00572 ; due to timing constrain use specialized 
                      00573 ; division and multiplication    
00BF                  00574 video_serialize: 
00BF   0804           00575     movfw FSR0L
                      00576     push
00C0   001C               M     movwi ++SP
00C1   0805           00577     movfw FSR0H
                      00578     push
00C2   001C               M     movwi ++SP
                      00579     lit 0 ; ( x )
00C3   3000               M    movlw 0
00C4   001C               M    movwi ++SP 
                      00580     tcyDelay HORZ_DLY
  0000                    M     variable r=HORZ_DLY%5
  000A                    M     variable q=HORZ_DLY/5
                          M     while r>1
                          M     bra $+1
                          M r-=2
                          M     endw
                          M     if r==1
                          M     nop
                          M     endif
                          M     if q
00C5   300A               M     movlw q
00C6   3???               M     bra $+1
00C7   0B89               M     decfsz WREG
00C8   3???               M     bra $-2
                          M     endif
00C9   3030           00581     movlw VIDEO_BUFFER&0xff
00CA   0084           00582     movwf FSR0L
00CB   3020           00583     movlw VIDEO_BUFFER>>8
00CC   0085           00584     movwf FSR0H
00CD   3046           00585     movlw FIRST_VIDEO
00CE   02??           00586     subwf lcountL,W
00CF   3689           00587     lsrf WREG
00D0   3689           00588     lsrf WREG
00D1   2???           00589     call mult6
00D2   0784           00590     addwf FSR0L
00D3   0103           00591     clrw
00D4   3D85           00592     addwfc FSR0H
00D5   3006           00593     movlw XSIZE/8
00D6   00??           00594     movwf rcount
00D7   0023           00595     banksel RCSTA
00D8   179D           00596     bsf RCSTA,SPEN
00D9                  00597 pixels_loop:    
00D9   0012           00598     moviw FSR0++
00DA   0023           00599     banksel PIXEL_TXREG
00DB   009A           00600     movwf PIXEL_TXREG
00DC   0020           00601     banksel TX_PIR
00DD   1E11           00602     btfss TX_PIR,TXIF
00DE   3???           00603     bra $-1
00DF   0B??           00604     decfsz rcount
00E0   3???           00605     bra pixels_loop
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-11-2016  20:53:50         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00E1   0023           00606     banksel PIXEL_TXREG
00E2   019A           00607     clrf PIXEL_TXREG
00E3   0020           00608     banksel TX_PIR
00E4   1E11           00609     btfss TX_PIR,TXIF
00E5   3???           00610     bra $-1
00E6   0023           00611     banksel RCSTA
00E7   139D           00612     bcf RCSTA, SPEN
                      00613     pop
00E8   0017               M     moviw SP--
00E9   0085           00614     movwf FSR0H
                      00615     pop
00EA   0017               M     moviw SP--
00EB   0084           00616     movwf FSR0L
00EC   0008           00617     return
                      00618 
                      00619 ; fill_buffer
                      00620 ; fill screen buffer with WREG value    
00ED                  00621 fill_buffer: ; ( c -- )
                      00622     disable_video
00ED   1500               M     bsf flags, F_MUTEX
00EE   3020           00623     movlw high(VIDEO_BUFFER)
00EF   0085           00624     movwf FSR0H
00F0   3030           00625     movlw low(VIDEO_BUFFER)
00F1   0084           00626     movwf FSR0L
00F2   30C0           00627     movlw BUFFER_SIZE
                      00628     push    ; c size
00F3   001C               M     movwi ++SP
                      00629     pick 1
00F4   3F7F               M     moviw -1[SP]
00F5                  00630 fill_loop:    
00F5   001A           00631     movwi FSR0++
00F6   0B81           00632     decfsz T
00F7   3???           00633     bra fill_loop
                      00634     drop_n 2
00F8   317E               M     addfsr SP,-2
                      00635     enable_video
00F9   1100               M     bcf flags, F_MUTEX
00FA   0008           00636     return
                      00637 
                      00638     
                      00639 ;set video pointer at 
                      00640 ; byte that contain pixel {x,y}
                      00641 ; output:
                      00642 ;   T = pixel offset, 0 left, 7 right  
                      00643 ;   Z=0 if offset==0 
                      00644 ; NOTE: EUSART output least significant bit first
                      00645 ;       so bit 0 appear left on screen.    
00FB                  00646 set_video_ptr:  ; ( x y -- b )
00FB   3020           00647     movlw high(VIDEO_BUFFER)
00FC   0085           00648     movwf FSR0H
00FD   3030           00649     movlw low(VIDEO_BUFFER)
00FE   0084           00650     movwf FSR0L
                      00651 ; buffer_addr+y*BPL
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-11-2016  20:53:50         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00652     pop         ; ( x y -- x )
00FF   0017               M     moviw SP--
0100   2???           00653     call mult6
0101   0784           00654     addwf FSR0L
0102   0103           00655     clrw
0103   3D85           00656     addwfc FSR0H
                      00657 ; buffer_addr+x/8
0104   3601           00658     lsrf T,W   
0105   3689           00659     lsrf WREG
0106   3689           00660     lsrf WREG
0107   0784           00661     addwf FSR0L
0108   0103           00662     clrw
0109   3D85           00663     addwfc FSR0H
010A   3007           00664     movlw 7
010B   0581           00665     andwf T,F
010C   0008           00666     return
                      00667 
                      00668 ; return state of pixel
                      00669 ; input:
                      00670 ;   x,y coordinates of pixel
                      00671 ; output:
                      00672 ;   T=0|2^n  where n{0:7}
                      00673 ;   Z reflect content of T    
010D                  00674 get_pixel: ; ( x y -- 0|2^n ) n{0:7)
010D   2???           00675     call set_video_ptr ; x y -- shift_counter
010E   3001           00676     movlw 1
010F   1903           00677     skpnz   ; Z modified by set_video_ptr
0110   3???           00678     bra gpx01
0111                  00679 gpx00:
0111   3589           00680     lslf WREG
0112   0B81           00681     decfsz T
0113   3???           00682     bra gpx00
0114                  00683 gpx01:
0114   0500           00684     andwf INDF0,W
0115   0081           00685     movwf T  ; 
0116   0008           00686     return
                      00687     
                      00688     
  00000000            00689 CLR_OP equ 0
  00000001            00690 XOR_OP equ 1
                      00691 ;operation on pixel    
                      00692 ; inputs:
                      00693 ;   {x,y} coordinates
                      00694 ;   op operation XOR_OP|CLR_OP 
                      00695 ; output:
                      00696 ;   WREG=collision flag, 0 if collision 
                      00697 ; >> no bank dependency << 
0117                  00698 bitop: ; ( x y op -- f )
                      00699     disable_video
0117   1500               M     bsf flags, F_MUTEX
                      00700     pick 2
0118   3F7E               M     moviw -2[SP]
                      00701     push        ; x y op x
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-11-2016  20:53:50         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0119   001C               M     movwi ++SP
                      00702     pick 2
011A   3F7E               M     moviw -2[SP]
                      00703     push        ; x y op x y
011B   001C               M     movwi ++SP
                      00704 ; preserve FSR0    
011C   0804           00705     movfw FSR0L
                      00706     insert 4
011D   3FFC               M    movwi -4[SP]
011E   0805           00707     movfw FSR0H
                      00708     insert 3    ; -- FSR0L FSR0H op x y 
011F   3FFD               M    movwi -3[SP]
0120   2???           00709     call set_video_ptr  ; -- FSR0L FSR0H op bit
0121   3001           00710     movlw 0x1
0122   1903           00711     skpnz ; bit Z modified before leaving set_video_ptr
0123   3???           00712     bra bitop01 ; least significant bit
0124                  00713 bitop00:
0124   3589           00714     lslf WREG
0125   0B81           00715     decfsz T
0126   3???           00716     bra bitop00
0127                  00717 bitop01: 
                      00718     ; WREG= bit mask
0127   0081           00719     movwf T    ; -- FSR0L FSR0H op mask
                      00720     pick 1  ; WREG= op
0128   3F7F               M     moviw -1[SP]
0129   1D03           00721     skpz
012A   3???           00722     bra xor_bit  ; 
012B                  00723 clear_bit:
012B   0901           00724     comf T,W
012C   0580           00725     andwf INDF0,F
012D   3???           00726     bra bitop02 ; -- FSR0L FSR0H op mask
012E                  00727 xor_bit:
012E   0801           00728     movfw T   ; -- FSR0L FSR0H op mask
012F   0680           00729     xorwf INDF0,F
0130   0500           00730     andwf INDF0,W
0131   0601           00731     xorwf T,W ; on screen bit value, 0 if no collision
0132   0081           00732     movwf T  ; -- FSR0L FSR0H op f
0133                  00733 bitop02:    
                      00734 ; restore FSR0    
                      00735     pick 2  
0133   3F7E               M     moviw -2[SP]
0134   0085           00736     movwf FSR0H
                      00737     pick 3
0135   3F7D               M     moviw -3[SP]
0136   0084           00738     movwf FSR0L
                      00739     pop  ; collision flag
0137   0017               M     moviw SP--
                      00740     drop_n 3 ; drop parameters frame
0138   317D               M     addfsr SP,-3
                      00741     push ; store collision flag
0139   001C               M     movwi ++SP
                      00742     enable_video
013A   1100               M     bcf flags, F_MUTEX
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-11-2016  20:53:50         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

013B   0008           00743     return
                      00744 
                      00745 ; draw row of 4 pixels
                      00746 ; stop when n==0    
                      00747 ; input:
                      00748 ;   {x,y} left coordinates
                      00749 ;   n pixels to draw
                      00750 ;   f collision flag to be modified    
                      00751 ; output:
                      00752 ;   f=collision flag, return modified value   
                      00753 ; >> no bank dependency << 
013C                  00754 xor_row: ; ( f n x y -- f )
                      00755 ; bounds check y
013C   1B81           00756     btfsc T,7
013D   3???           00757     bra xor_row_done ; y<0
013E   3020           00758     movlw YSIZE
013F   0201           00759     subwf T,W
0140   1803           00760     skpnc
0141   3???           00761     bra xor_row_done ; y>=YSIZE
0142                  00762 xor_row01:    
                      00763     pick 2 ; check if n==0
0142   3F7E               M     moviw -2[SP]
0143   1903           00764     skpnz
0144   3???           00765     bra xor_row_done ; row empty nothing to do
0145   3589           00766     lslf WREG
                      00767     insert 2  ; save shifted n
0146   3FFE               M    movwi -2[SP]
0147   1C03           00768     skpc
0148   3???           00769     bra xor_row02 ; bit==0 no draw
                      00770 ; bounds check x{0:43}    
                      00771     pick 1
0149   3F7F               M     moviw -1[SP]
014A   1B89           00772     btfsc WREG,7 
014B   3???           00773     bra xor_row02 ; x<0 don't print
014C   3C2F           00774     sublw XSIZE-1
014D   1C03           00775     skpc
014E   3???           00776     bra xor_row_done ; x>=XSIZE
                      00777 ; check for empty row
                      00778     over ; f n x y x 
014F   3F7F               M     moviw -1[SP]
                          M     push
0150   001C               M     movwi ++SP
                      00779     over ; f n x y x y
0151   3F7F               M     moviw -1[SP]
                          M     push
0152   001C               M     movwi ++SP
                      00780     lit XOR_OP ; f n x y x y op
0153   3001               M    movlw XOR_OP
0154   001C               M    movwi ++SP 
0155   2???           00781     call bitop ; -- f n x y f
                      00782     pick 4 ; pick flag
0156   3F7C               M     moviw -4[SP]
0157   0481           00783     iorwf T
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-11-2016  20:53:50         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00784     pop      ; -- f n x y
0158   0017               M     moviw SP--
                      00785     insert 3 ; store modified flag
0159   3FFD               M    movwi -3[SP]
015A                  00786 xor_row02:
                      00787     inc_n 1  ; x+=1
015A   3F7F               M     moviw -1[SP]
015B   0A89               M     incf WREG,F
015C   3FFF               M     movwi -1[SP]
015D   3???           00788     bra xor_row01
015E                  00789 xor_row_done: ; f n x y
                      00790     drop_n 3  ; only keep f
015E   317D               M     addfsr SP,-3
015F   0008           00791     return
                      00792 
                      00793 ; read flash memory word
                      00794 ; input:
                      00795 ;   lo is low byte of address
                      00796 ;   hi is high byte of address
                      00797 ;   ofs offset in table (limited to 255 )    
                      00798 ; output:
                      00799 ;   PMDATH: PMDAL
                      00800 ;reset <nibble> variable 
                      00801 ; >> modify BSR <<    
0160                  00802 get_flash_word: ; ( ofs lo hi -- )
0160   0023           00803     banksel PMADR
                      00804     pop
0161   0017               M     moviw SP--
0162   0092           00805     movwf PMADRH
                      00806     pop
0163   0017               M     moviw SP--
0164   0091           00807     movwf PMADRL
                      00808     pop
0165   0017               M     moviw SP--
0166   0791           00809     addwf PMADRL
0167   0103           00810     clrw 
0168   3D92           00811     addwfc PMADRH
0169                  00812 read_flash:    
0169   1315           00813     bcf PMCON1,CFGS
016A   1415           00814     bsf PMCON1, RD
016B   0000           00815     nop
016C   0000           00816     nop
016D   01??           00817     clrf nibble
016E   0008           00818     return
                      00819 
                      00820 ; increament pointer 
                      00821 ; and read next flash word    
                      00822 ; >> modify BSR <<    
016F                  00823 next_flash_word:
016F   0023           00824     banksel PMADR
0170   0A91           00825     incf PMADRL
0171   1903           00826     skpnz
0172   0A92           00827     incf PMADRH
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-11-2016  20:53:50         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0173   3???           00828     bra read_flash
                      00829     
                      00830 ;get nibble from PMDAT
                      00831 ; output:
                      00832 ;   stack nibble in bits 7:4
                      00833 ; increment nibble variable    
                      00834 ; >> modify BSR <<    
0174                  00835 get_nibble: ; ( -- nibble )
0174   3003           00836     movlw 3
0175   06??           00837     xorwf nibble,W
0176   1903           00838     skpnz ; if set all nibbles of this word read
0177   2???           00839     call next_flash_word
0178   0023           00840     banksel PMDAT
0179   08??           00841     movfw nibble
017A   1903           00842     skpnz
017B   3???           00843     bra row0
017C   0B89           00844     decfsz WREG
017D   3???           00845     bra row2
017E                  00846 row1:    
017E   0813           00847     movfw PMDATL
017F   3???           00848     bra nibble_mask
0180                  00849 row2:
0180   0E13           00850     swapf PMDATL,W
0181   3???           00851     bra nibble_mask
0182                  00852 row0:    
0182   0E14           00853     swapf PMDATH,W
0183                  00854 nibble_mask:
0183   39F0           00855     andlw 0xf0
                      00856     push
0184   001C               M     movwi ++SP
0185   0A??           00857     incf nibble,F ; advance nibble pointer
0186   0008           00858     return
                      00859 
                      00860 ; print 4 pixels row
                      00861 ; inputs:
                      00862 ;   x,y left coordinates
                      00863 ;   f  collision flag
                      00864 ; output:    
                      00865 ;   advance y coordinate for next row    
0187                  00866 print_row: ; ( x y f -- x y f )     
0187   2???           00867     call get_nibble ; -- x y f n 
                      00868     pick 3 
0188   3F7D               M     moviw -3[SP]
                      00869     push    ; x y f n x
0189   001C               M     movwi ++SP
                      00870     pick 3
018A   3F7D               M     moviw -3[SP]
                      00871     push      ; x y f n x y
018B   001C               M     movwi ++SP
018C   2???           00872     call xor_row ; -- x y f
                      00873     inc_n 1 ; y+=1
018D   3F7F               M     moviw -1[SP]
018E   0A89               M     incf WREG,F
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-11-2016  20:53:50         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

018F   3FFF               M     movwi -1[SP]
0190   0008           00874     return
                      00875     
                      00876 ; draw character 
                      00877 ; input:
                      00878 ;   x,y left/top coordinates
                      00879 ;   c   character to print    
0191                  00880 print_char: ; ( x y c -- )
0191   3581           00881     lslf T ; 2 words per digit
                      00882     lit low(digits)
0192   30??               M    movlw low(digits)
0193   001C               M    movwi ++SP 
                      00883     lit high(digits) ; x y ofs adrL adrH
0194   30??               M    movlw high(digits)
0195   001C               M    movwi ++SP 
0196   2???           00884     call get_flash_word  ; x y
                      00885     lit 0   ; x y f=0
0197   3000               M    movlw 0
0198   001C               M    movwi ++SP 
0199   2???           00886     call print_row
019A   2???           00887     call print_row
019B   2???           00888     call print_row 
019C   2???           00889     call print_row 
019D   2???           00890     call print_row 
                      00891     drop_n 3  ; ( x y f -- )
019E   317D               M     addfsr SP,-3
019F   0008           00892     return
                      00893 
                      00894 ; print current tetriminos
                      00895 ; input:
                      00896 ;   arguments in game variables   
                      00897 ;   titrim: tetriminos id
                      00898 ;   angle: rotation angle    
                      00899 ;   tx,ty  left/top coordinates
                      00900 ; output:
                      00901 ;   collision flag,  0 if no collision    
                      00902 ; >> modify BSR <<    
01A0                  00903 print_tetrim: ; (  -- f )
01A0   0020           00904     banksel GAME_VAR
01A1   35??           00905     lslf tetrim,W
01A2   3589           00906     lslf WREG
                      00907     push
01A3   001C               M     movwi ++SP
01A4   3018           00908     movlw 24
01A5   0201           00909     subwf T,W
01A6   1803           00910     skpnc
01A7   3???           00911     bra ti ; I tetrominos
01A8   08??           00912     movfw angle
01A9   0781           00913     addwf T,F
01AA   30??           00914     movlw low(tetriminos)
                      00915     push    ; ofs addrL
01AB   001C               M     movwi ++SP
01AC   30??           00916     movlw high(tetriminos)
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-11-2016  20:53:50         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00917     push    ; ofs addrL addrH
01AD   001C               M     movwi ++SP
01AE   3???           00918     bra prt01
01AF                  00919 ti: ; special treatment for I tetriminos
01AF   0181           00920     clrf T
01B0   35??           00921     lslf angle,W
01B1   0781           00922     addwf T,F
01B2   30??           00923     movlw low(I0) 
                      00924     push     ; ofs addrL
01B3   001C               M     movwi ++SP
01B4   30??           00925     movlw high(I0)
                      00926     push     ; ofs addrL addrH
01B5   001C               M     movwi ++SP
01B6                  00927 prt01:    
01B6   2???           00928     call get_flash_word  ; --
01B7   002?           00929     banksel tx
01B8   08??           00930     movfw tx
                      00931     push    ; -- x
01B9   001C               M     movwi ++SP
01BA   08??           00932     movfw ty
                      00933     push    ; -- x y 
01BB   001C               M     movwi ++SP
                      00934     lit 0   ; -- x y f
01BC   3000               M    movlw 0
01BD   001C               M    movwi ++SP 
01BE   2???           00935     call print_row ; x y f -- x y+1 f
01BF   2???           00936     call print_row
01C0   2???           00937     call print_row
01C1   0023           00938     banksel PMDAT
01C2   3030           00939     movlw 0x30
01C3   0514           00940     andwf PMDATH,W
01C4   1903           00941     skpnz
01C5   2???           00942     call print_row
01C6   0801           00943     movfw T
                      00944     drop_n 3
01C7   317D               M     addfsr SP,-3
                      00945     push  ; -- f
01C8   001C               M     movwi ++SP
01C9   0008           00946     return
                      00947     
                      00948 ;print a text line store in flash
                      00949 ; text terminated by 0xff
                      00950 ; input: 
                      00951 ;  x, y left coordinates
                      00952 ;  idx  index of message    
01CA                  00953 print_label: ; ( x y idx -- )
                      00954     lit 0    ; x y idx i
01CA   3000               M    movlw 0
01CB   001C               M    movwi ++SP 
01CC                  00955 prt_lbl_loop:
                      00956     dup      ; x y idx i i
01CC   0801               M     movfw T
01CD   001C               M     movwi ++SP
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-11-2016  20:53:50         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00957     pick 2   ; WREG=idx
01CE   3F7E               M     moviw -2[SP]
01CF   2???           00958     call labels ; x y idx i i -- x y idx i  
01D0   1B89           00959     btfsc WREG,7
01D1   3???           00960     bra prt_lbl_done
                      00961     push ; x y idx i c
01D2   001C               M     movwi ++SP
                      00962     pick 4
01D3   3F7C               M     moviw -4[SP]
                      00963     push    ; x y idx i c x 
01D4   001C               M     movwi ++SP
                      00964     pick 4
01D5   3F7C               M     moviw -4[SP]
                      00965     push    ; x y idx i c x y
01D6   001C               M     movwi ++SP
                      00966     rot     ; x y idx i x y c
                          M     pick 2
01D7   3F7E               M     moviw -2[SP]
                          M     push        ; n1 n2 n3 n1
01D8   001C               M     movwi ++SP
                          M     pick 2
01D9   3F7E               M     moviw -2[SP]
                          M     insert 3   ;  n2 n2 n3 n1
01DA   3FFD               M    movwi -3[SP]
                          M     pick 1
01DB   3F7F               M     moviw -1[SP]
                          M     insert 2   ; n2 n3 n3 n1
01DC   3FFE               M    movwi -2[SP]
                          M     pop        ; n2 n3 n3 
01DD   0017               M     moviw SP--
01DE   0081               M     movwf T    ; n2 n3 n1
01DF   2???           00967     call print_char ; -- x y idx i 
01E0   0A81           00968     incf T
                      00969     pick 3    ; x
01E1   3F7D               M     moviw -3[SP]
01E2   3E04           00970     addlw 4   ; x+=4
                      00971     insert 3  
01E3   3FFD               M    movwi -3[SP]
01E4   3???           00972     bra prt_lbl_loop
01E5                  00973 prt_lbl_done:
                      00974     drop_n 4
01E5   317C               M     addfsr SP,-4
01E6   0008           00975     return
                      00976 
                      00977 ;print an integer
                      00978 ;from right to left ( least first)
                      00979 ; input:    
                      00980 ;   x,y  coordinate right end
                      00981 ;   number to print in acca    
                      00982 ;   accbL contain digit after div10 call    
01E7                  00983 print_int: ; ( x y -- )
01E7   08??           00984     movfw accaH
01E8   04??           00985     iorwf accaL,W
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-11-2016  20:53:50         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01E9   1903           00986     skpnz
01EA   3???           00987     bra print_last
                      00988     over
01EB   3F7F               M     moviw -1[SP]
                          M     push
01EC   001C               M     movwi ++SP
                      00989     over    ; x y x y
01ED   3F7F               M     moviw -1[SP]
                          M     push
01EE   001C               M     movwi ++SP
01EF   2???           00990     call div10
01F0   08??           00991     movfw accbL ; remainder of division
                      00992     push   ; x y x y d
01F1   001C               M     movwi ++SP
01F2   2???           00993     call print_char ; -- x y 
                      00994     pick 1
01F3   3F7F               M     moviw -1[SP]
                      00995     push
01F4   001C               M     movwi ++SP
01F5   3004           00996     movlw 4
01F6   0281           00997     subwf T
                      00998     pop
01F7   0017               M     moviw SP--
                      00999     insert 1
01F8   3FFF               M    movwi -1[SP]
01F9   3???           01000     bra print_int
01FA                  01001 print_last:
                      01002     pick 1
01FA   3F7F               M     moviw -1[SP]
01FB   3A2B           01003     xorlw 43
01FC   1D03           01004     skpz
01FD   3???           01005     bra no_zero
                      01006     push
01FE   001C               M     movwi ++SP
01FF   3???           01007     bra print_char
0200                  01008 no_zero:
                      01009     drop_n 2
0200   317E               M     addfsr SP,-2
0201   0008           01010     return
                      01011     
                      01012 ; draw horizontal line ( length  y x -- )
                      01013 ; inputs:
                      01014 ;   length of line
                      01015 ;   {x,y} left coordinates       
0202                  01016 hline:
                      01017     pick 2
0202   3F7E               M     moviw -2[SP]
0203   1903           01018     skpnz
0204   3???           01019     bra hline_done
0205   0389           01020     decf WREG
                      01021     insert 2
0206   3FFE               M    movwi -2[SP]
                      01022     dup     ; len y x x
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-11-2016  20:53:50         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0207   0801               M     movfw T
0208   001C               M     movwi ++SP
                      01023     pick 2
0209   3F7E               M     moviw -2[SP]
                      01024     push    ; len y x x y
020A   001C               M     movwi ++SP
                      01025     lit XOR_OP
020B   3001               M    movlw XOR_OP
020C   001C               M    movwi ++SP 
020D   2???           01026     call bitop
                      01027     drop
020E   317F               M    addfsr SP,-1
020F   0A81           01028     incf T  ; len y x+1
0210   3???           01029     bra hline
0211                  01030 hline_done:    
                      01031     drop_n 3
0211   317D               M     addfsr SP,-3
0212   0008           01032     return
                      01033 
                      01034 ;draw vertical line ( length x y -- )
                      01035 ; inputs:
                      01036 ;   length of line
                      01037 ;   {x,y} top coordinate
0213                  01038 vline:  ; len y x
                      01039     pick 2 
0213   3F7E               M     moviw -2[SP]
0214   1903           01040     skpnz
0215   3???           01041     bra vline_done
0216   0389           01042     decf WREG
                      01043     insert 2
0217   3FFE               M    movwi -2[SP]
                      01044     pick 1      
0218   3F7F               M     moviw -1[SP]
                      01045     push    ; len x y x
0219   001C               M     movwi ++SP
                      01046     pick 1
021A   3F7F               M     moviw -1[SP]
                      01047     push    ; len x y x y
021B   001C               M     movwi ++SP
                      01048     lit XOR_OP
021C   3001               M    movlw XOR_OP
021D   001C               M    movwi ++SP 
021E   2???           01049     call bitop
                      01050     drop
021F   317F               M    addfsr SP,-1
0220   0A81           01051     incf T
0221   3???           01052     bra vline
0222                  01053 vline_done:
                      01054     drop_n 3
0222   317D               M     addfsr SP,-3
0223   0008           01055     return
                      01056     
  0000000A            01057 WELL_WIDTH equ 10
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-11-2016  20:53:50         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000016            01058 WELL_DEPTH equ 22 
0224                  01059 game_init:
                      01060 ;clear screen    
                      01061     lit 0  
0224   3000               M    movlw 0
0225   001C               M    movwi ++SP 
0226   2???           01062     call fill_buffer
                      01063 ; draw game well    
                      01064     lit WELL_DEPTH
0227   3016               M    movlw WELL_DEPTH
0228   001C               M    movwi ++SP 
                      01065     lit 0
0229   3000               M    movlw 0
022A   001C               M    movwi ++SP 
                      01066     lit 0
022B   3000               M    movlw 0
022C   001C               M    movwi ++SP 
022D   2???           01067      call vline
                      01068     lit WELL_DEPTH
022E   3016               M    movlw WELL_DEPTH
022F   001C               M    movwi ++SP 
                      01069     lit WELL_WIDTH+1
0230   300B               M    movlw WELL_WIDTH+1
0231   001C               M    movwi ++SP 
                      01070     lit 0
0232   3000               M    movlw 0
0233   001C               M    movwi ++SP 
0234   2???           01071     call vline
                      01072     lit WELL_WIDTH+2
0235   300C               M    movlw WELL_WIDTH+2
0236   001C               M    movwi ++SP 
                      01073     lit WELL_DEPTH
0237   3016               M    movlw WELL_DEPTH
0238   001C               M    movwi ++SP 
                      01074     lit 0
0239   3000               M    movlw 0
023A   001C               M    movwi ++SP 
023B   2???           01075     call hline
                      01076 ; print "SCORE" label    
                      01077     lit WELL_WIDTH+3 ; x
023C   300D               M    movlw WELL_WIDTH+3
023D   001C               M    movwi ++SP 
                      01078     lit 0            ; y
023E   3000               M    movlw 0
023F   001C               M    movwi ++SP 
                      01079     lit LBL_SCORE         
0240   3000               M    movlw LBL_SCORE
0241   001C               M    movwi ++SP 
0242   2???           01080     call print_label
                      01081 ; print "LINES" label    
                      01082     lit WELL_WIDTH+3 ; x
0243   300D               M    movlw WELL_WIDTH+3
0244   001C               M    movwi ++SP 
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-11-2016  20:53:50         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01083     lit 12           ; y
0245   300C               M    movlw 12
0246   001C               M    movwi ++SP 
                      01084     lit LBL_LINES
0247   3001               M    movlw LBL_LINES
0248   001C               M    movwi ++SP 
0249   2???           01085     call print_label
                      01086 ; variables initialization
024A   0020           01087     banksel 0
024B   3004           01088     movlw 4
024C   00??           01089     movwf tx
024D   01??           01090     clrf ty
024E   01??           01091     clrf tetrim
024F   01??           01092     clrf angle
0250   01??           01093     clrf scoreL
0251   01??           01094     clrf scoreH
0252   01??           01095     clrf dropped
0253   01??           01096     clrf buttons
0254   1600           01097     bsf flags,F_GSTOP
0255   0008           01098     return
                      01099 
  00000000            01100 ROW_EMPTY equ 0     
  0000000A            01101 ROW_FULL equ 10 ; 10 bits in row
                      01102 ; check the state of well row
                      01103 ; input:
                      01104 ;   s number of bits set initialized at 0 by caller    
                      01105 ;   r row number: 0 top, 22 bottom  
                      01106 ; output:    
                      01107 ;   s={0:10}  number of bits set
0256                  01108 query_row: ; ( s=0 r -- s=0:10 )
                      01109     lit 10 ; s r x   ; check x from  10 to 1
0256   300A               M    movlw 10
0257   001C               M    movwi ++SP 
0258                  01110 qr00:
                      01111     dup   ; s r x x
0258   0801               M     movfw T
0259   001C               M     movwi ++SP
                      01112     pick 2 
025A   3F7E               M     moviw -2[SP]
                      01113     push  ; s r x x y
025B   001C               M     movwi ++SP
025C   2???           01114     call get_pixel ; -- s r x n
025D   1903           01115     skpnz   ; Z modified by get_pixel
025E   3???           01116     bra qr01
                      01117     inc_n 3
025F   3F7D               M     moviw -3[SP]
0260   0A89               M     incf WREG,F
0261   3FFD               M     movwi -3[SP]
0262                  01118 qr01:    
                      01119     drop     ; -- s r x 
0262   317F               M    addfsr SP,-1
0263   0B81           01120     decfsz T
0264   3???           01121     bra qr00
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-11-2016  20:53:50         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01122     drop_n 2 ; -- s
0265   317E               M     addfsr SP,-2
0266   0008           01123     return
                      01124  
                      01125 ; generate a new tetriminos
                      01126 ; input:
                      01127 ;   none
                      01128 ; output:
                      01129 ;   Z flag set if collision
0267                  01130 new_tminos:
0267   0020           01131     banksel GAME_VAR
0268   3007           01132     movlw 7
0269   05??           01133     andwf randL,W
026A   3A07           01134     xorlw 7
026B   1D03           01135     skpz
026C   3A07           01136     xorlw 7
026D   00??           01137     movwf tetrim
026E   3003           01138     movlw 3
026F   05??           01139     andwf randH,W
0270   00??           01140     movwf angle
0271   3004           01141     movlw 4
0272   00??           01142     movwf tx
0273   01??           01143     clrf ty
0274   0008           01144     return
                      01145  
                      01146 ; wait player start signal
                      01147 ; button B pressed    
0275                  01148 wait_start:
0275   0103           01149     clrw
0276   2???           01150     call korobeiniki
                      01151     push
0277   001C               M     movwi ++SP
                      01152     lit 0
0278   3000               M    movlw 0
0279   001C               M    movwi ++SP 
027A                  01153 koro:
027A   0A81           01154     incf T
027B   0801           01155     movfw T
027C   2???           01156     call korobeiniki
                      01157     push
027D   001C               M     movwi ++SP
                      01158     inc_n 1
027E   3F7F               M     moviw -1[SP]
027F   0A89               M     incf WREG,F
0280   3FFF               M     movwi -1[SP]
                      01159     pick 1
0281   3F7F               M     moviw -1[SP]
0282   2???           01160     call korobeiniki
                      01161     push
0283   001C               M     movwi ++SP
0284   2???           01162     call tone
                      01163     wait_sound
0285   1A80               M     btfsc flags,F_SND
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-11-2016  20:53:50         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0286   3???               M     bra $-1
0287   2???           01164     call read_pad
0288   1A00           01165     btfsc buttons, BTN_A
0289   3???           01166     bra wait_end
                      01167     dec_n 1
028A   3F7F               M     moviw -1[SP]
028B   0389               M     decf WREG,F
028C   3FFF               M     movwi -1[SP]
028D   1D03           01168     skpz
028E   3???           01169     bra koro
                      01170     pause 60
                          M     start_timer 60
028F   303C               M     movlw 60
0290   00??               M     movwf gtimer
0291   1580               M     bsf flags, F_GTMR
                          M     wait_timer
0292   1980               M     btfsc flags, F_GTMR
0293   3???               M     bra $-1
0294   3???           01171     bra wait_start
0295                  01172 wait_end:    
                      01173     drop_n 2
0295   317E               M     addfsr SP,-2
0296   0008           01174     return
                      01175     
                      01176 ;;;;;;;;;;;;;;;;;;;;;;;;;
                      01177 ;   game logic
                      01178 ;;;;;;;;;;;;;;;;;;;;;;;;;    
0297                  01179 tetris:
                      01180 ; print score
0297   002?           01181     banksel scoreL
0298   08??           01182     movfw scoreL
0299   00??           01183     movwf accaL
029A   08??           01184     movfw scoreH
029B   00??           01185     movwf accaH
                      01186     lit 43
029C   302B               M    movlw 43
029D   001C               M    movwi ++SP 
                      01187     lit 6
029E   3006               M    movlw 6
029F   001C               M    movwi ++SP 
02A0   2???           01188     call print_int
                      01189 ;print dropped line
02A1   002?           01190     banksel dropped
02A2   08??           01191     movfw dropped
02A3   00??           01192     movwf accaL
02A4   01??           01193     clrf accaH
                      01194     lit 43
02A5   302B               M    movlw 43
02A6   001C               M    movwi ++SP 
                      01195     lit 18
02A7   3012               M    movlw 18
02A8   001C               M    movwi ++SP 
02A9   2???           01196     call print_int
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-11-2016  20:53:50         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01197 ;print start prompt
                      01198     lit 0
02AA   3000               M    movlw 0
02AB   001C               M    movwi ++SP 
                      01199     lit 24
02AC   3018               M    movlw 24
02AD   001C               M    movwi ++SP 
                      01200     lit LBL_PRESS
02AE   3002               M    movlw LBL_PRESS
02AF   001C               M    movwi ++SP 
02B0   2???           01201     call print_label
                      01202 ; wait button A press
                      01203 ; to start game    
02B1   2???           01204     call wait_start 
02B2   1200           01205     bcf flags, F_GSTOP
                      01206 ; delete prompt
                      01207     lit 0
02B3   3000               M    movlw 0
02B4   001C               M    movwi ++SP 
                      01208     lit 24
02B5   3018               M    movlw 24
02B6   001C               M    movwi ++SP 
                      01209     lit LBL_PRESS
02B7   3002               M    movlw LBL_PRESS
02B8   001C               M    movwi ++SP 
02B9   2???           01210     call print_label
                      01211 ; game start
02BA                  01212 game_loop:
                      01213 ; generate new tetriminos
                      01214 ; if collision at this stage
                      01215 ; game is over
02BA   2???           01216     call new_tminos ; Z return collision status
02BB                  01217 fall_loop:
02BB   2???           01218     call print_tetrim
                      01219     pop
02BC   0017               M     moviw SP--
02BD   1D03           01220     skpz
02BE   3???           01221     bra game_over
                      01222     pause 10
                          M     start_timer 10
02BF   300A               M     movlw 10
02C0   00??               M     movwf gtimer
02C1   1580               M     bsf flags, F_GTMR
                          M     wait_timer
02C2   1980               M     btfsc flags, F_GTMR
02C3   3???               M     bra $-1
02C4   2???           01223     call print_tetrim
                      01224     pop
02C5   0017               M     moviw SP--
                      01225 ; read pad
02C6   2???           01226     call read_pad
02C7   0020           01227     banksel GAME_VAR
02C8   08??           01228     movfw buttons
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-11-2016  20:53:50         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01229     case 1<<BTN_A, hard_drop
02C9   3A10               M     xorlw 1<<BTN_A
02CA   1903               M     skpnz
02CB   3???               M     bra hard_drop
02CC   3A10               M     xorlw 1<<BTN_A
                      01230     case 1<<BTN_B, soft_drop
02CD   3A20               M     xorlw 1<<BTN_B
02CE   1903               M     skpnz
02CF   3???               M     bra soft_drop
02D0   3A20               M     xorlw 1<<BTN_B
                      01231     case 1<<BTN_UP, rot_right
02D1   3A01               M     xorlw 1<<BTN_UP
02D2   1903               M     skpnz
02D3   3???               M     bra rot_right
02D4   3A01               M     xorlw 1<<BTN_UP
                      01232     case 1<<BTN_DN, rot_left
02D5   3A02               M     xorlw 1<<BTN_DN
02D6   1903               M     skpnz
02D7   3???               M     bra rot_left
02D8   3A02               M     xorlw 1<<BTN_DN
                      01233     case 1<<BTN_RT, move_right
02D9   3A08               M     xorlw 1<<BTN_RT
02DA   1903               M     skpnz
02DB   3???               M     bra move_right
02DC   3A08               M     xorlw 1<<BTN_RT
                      01234     case 1<<BTN_LT, move_left
02DD   3A04               M     xorlw 1<<BTN_LT
02DE   1903               M     skpnz
02DF   3???               M     bra move_left
02E0   3A04               M     xorlw 1<<BTN_LT
02E1   3???           01235     bra new_position
02E2                  01236 hard_drop:
02E2   3???           01237     bra new_position
02E3                  01238 soft_drop:
02E3   3???           01239     bra new_position
02E4                  01240 rot_left:
02E4   03??           01241     decf angle,F
02E5   3003           01242     movlw 3
02E6   05??           01243     andwf angle,F
02E7   3???           01244     bra new_position
02E8                  01245 rot_right:
02E8   0A??           01246     incf angle,F
02E9   3003           01247     movlw 3
02EA   05??           01248     andwf angle,F
02EB   3???           01249     bra new_position
02EC                  01250 move_left:
02EC   03??           01251     decf tx,F
02ED   3???           01252     bra new_position
02EE                  01253 move_right:
02EE   300A           01254     movlw 10
02EF   06??           01255     xorwf tx,W
02F0   1D03           01256     skpz
02F1   0A??           01257     incf tx,F
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-11-2016  20:53:50         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01258 ; apply move and rotation
02F2                  01259 new_position:    
                      01260 ; check full row and clean
                      01261 ; adjust score 
02F2   3???           01262     bra fall_loop
02F3                  01263 game_over:
02F3   2???           01264     call print_tetrim
                      01265     pop
02F4   0017               M     moviw SP--
                      01266     
02F5   0008           01267     return
                      01268     
02F6                  01269 init:
                      01270     pstack_init
02F6   0187               M     clrf FSR1H
02F7   301F               M     movlw S0
02F8   0086               M     movwf FSR1L
                      01271 ; ADC configuration
02F9   0021           01272     banksel ADCON0
02FA   300C           01273     movlw (PAD_CHS<<CHS0)
02FB   009D           01274     movwf ADCON0
02FC   3020           01275     movlw (2<<ADCS0)
02FD   009E           01276     movwf ADCON1
02FE   0024           01277     banksel WPUA
02FF   120C           01278     bcf WPUA, PAD_PIN
                      01279 ;;;;;;;;;;;;;;;;;;;;;    
0300   0021           01280     banksel TRISA
0301   30F8           01281     movlw ~((1<<SYNC_OUT)|(1<<VIDEO_OUT)|(1<<LED_PIN))
0302   058C           01282     andwf TRISA,F
0303   0022           01283     banksel VIDEO_LAT
0304   108C           01284     bcf VIDEO_LAT,VIDEO_OUT
0305   100C           01285     bcf LATA,LED_PIN
                      01286 ; audio pwm initialization
0306   120C           01287     bcf LATA,AUDIO_PIN
0307   003B           01288     banksel PWM2PH
0308   01A1           01289     clrf PWM2PHL
0309   01A2           01290     clrf PWM2PHH
030A   01A7           01291     clrf PWM2OFL
030B   01A8           01292     clrf PWM2OFH
030C   172B           01293     bsf AUDIO_PWMCON,OE
030D   0022           01294     banksel APFCON
030E   149D           01295     bsf APFCON,P2SEL
                      01296    
                      01297 ;configure EUSART in sychronsous mode
                      01298 ;to use as pixel serializer
030F   0023           01299     banksel SPBRG
0310   3002           01300     movlw 2
0311   009B           01301     movwf SPBRGL
0312   019C           01302     clrf SPBRGH
0313   019A           01303     clrf TXREG
0314   30B0           01304     movlw (1<<SYNC)|(1<<CSRC)|(1<<TXEN)
0315   009E           01305     movwf TXSTA
0316   179D           01306     bsf RCSTA, SPEN
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-11-2016  20:53:50         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0317   30CF           01307     movlw ~((1<<CREN)|(1<<SREN))
0318   059D           01308     andwf RCSTA
                      01309 ; configure pwm video sync for horizontal period
0319   003B           01310     banksel SYNC_PWMDCH
031A   01B1           01311     clrf SYNC_PWMPH
031B   01B2           01312     clrf SYNC_PWMPH+1
031C   01BF           01313     clrf SYNC_PWMLDCON
031D   30F5           01314     movlw HORZ_PERIOD&0XFF
031E   00B5           01315     movwf SYNC_PWMPRL
031F   3004           01316     movlw HORZ_PERIOD>>8
0320   00B6           01317     movwf SYNC_PWMPRH
0321   01BE           01318     clrf SYNC_PWMCLKCON
0322   30D0           01319     movlw (3<<OE)|(1<<POL)
0323   00BB           01320     movwf SYNC_PWMCON
0324   305E           01321     movlw HORZ_PULSE&0xff
0325   00B3           01322     movwf SYNC_PWMDCL
0326   3000           01323     movlw HORZ_PULSE>>8
0327   00B4           01324     movwf SYNC_PWMDCH
0328   17BF           01325     bsf SYNC_PWMLDCON,LDA
                      01326    ;enable video interrupt on period match
0329   103D           01327     bcf SYNC_PWMINTF,PRIF
032A   143C           01328     bsf SYNC_PWMINTE,PRIE
                      01329     ; enable peripheral interrupt
032B   0021           01330     banksel SYNC_PIE
032C   1713           01331     bsf SYNC_PIE,SYNC_IE
                      01332     ;enable interrupts
032D   30C0           01333     movlw (1<<GIE)|(1<<PEIE)
032E   008B           01334     movwf INTCON
032F   01??           01335     clrf lcountL
0330   01??           01336     clrf lcountH
0331   01??           01337     clrf flags
                      01338     ; seed lfsr PRNG
0332   30AC           01339     movlw 0xAC
0333   00??           01340     movwf randL
0334   30E1           01341     movlw 0xE1
0335   00??           01342     movwf randH
                      01343 
                      01344     
0336                  01345 main:
0336   2???           01346     call game_init
0337   2???           01347     call tetris
0338   3???           01348     bra main
                      01349   
                      01350 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      01351 ;   data tables
                      01352 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      01353 
                      01354 ; **************** encoding ************************************************
                      01355 ; enhanced PIC instructions are coded on 14 bits
                      01356 ; these 14 bits can be read as data using flash memory
                      01357 ; writing/reading mechanism, see datasheet chapter 10 for detail.
                      01358 ; the 'dw' assembler directive encode data in those 14 bits contrary to 'dt'
                      01359 ; directive which encode a single byte as a RETLW instruction.
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-11-2016  20:53:50         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01360 ; So we get a 50% compression by encoding 3 nibbles/flash word. 
                      01361 ; the encoding used in the following tables is as follow:    
                      01362 ; bits 13:12  number of nibbles where 0 means there is more than 3 nibbles
                      01363 ; in this data chunk so 1 or more other words follow this one.    
                      01364 ; other 12 bits are sliced in 4 bits nibbles.
                      01365 ;****************************************************************************
                      01366 
0339                  01367 digits: ; each digit is 5 rows
0339   0EAA 2AE0      01368     dw 0x0EAA,0x2AE0 ; 0
033B   04C4 24E0      01369     dw 0x04C4,0x24E0 ; 1
033D   0E2E 28E0      01370     dw 0x0E2E,0x28E0 ; 2
033F   0E2E 22E0      01371     dw 0x0E2E,0x22E0 ; 3
0341   0AAE 2220      01372     dw 0x0AAE,0x2220 ; 4
0343   0E8E 22E0      01373     dw 0x0E8E,0x22E0 ; 5
0345   088E 2AE0      01374     dw 0x088E,0x2AE0 ; 6
0347   0E22 2220      01375     dw 0x0E22,0x2220 ; 7
0349   0EAE 2AE0      01376     dw 0x0EAE,0x2AE0 ; 8
034B   0EAE 2220      01377     dw 0x0EAE,0x2220 ; 9
                      01378 ; letters needed for 'SCORE' and 'LINES" labels
034D   3EAE 2AA0      01379     dw 0x3EAE,0x2AA0 ; A  code 10
034F   3688 2860      01380     dw 0x3688,0x2860 ; C  code 11
0351   3E8E 28E0      01381     dw 0x3E8E,0x28E0 ; E  code 12
0353   3E44 24E0      01382     dw 0x3E44,0x24E0 ; I  code 13
0355   3888 28E0      01383     dw 0x3888,0x28E0 ; L  code 14
0357   38CA 2AA0      01384     dw 0x38CA,0x2AA0 ; N  code 15
0359   34AA 2A40      01385     dw 0x34AA,0x2A40 ; O  code 16
035B   3EAE 2880      01386     dw 0x3EAE,0x2880 ; P  code 17
035D   38EA 2880      01387     dw 0x38EA,0x2880 ; R  code 18
035F   3684 22C0      01388     dw 0x3684,0x22C0 ; S  code 19
0361   3040 2400      01389     dw 0x3040,0x2400 ; :  code 20
0363   2000 2000      01390     dw 0x2000,0x2000 ; space code 21
                      01391 
                      01392 ; comments notation: Rn clockwise rotation n*90 degr.    
                      01393 ; note that vertical I as 4 rows so it needs 2 words    
0365                  01394 tetriminos: 
0365   388C           01395     dw 0x388C ; L R0
0366   30E8           01396     dw 0x30E8 ; L R1
0367   3C44           01397     dw 0x3C44 ; L R2
0368   32E0           01398     dw 0x32E0 ; L R3
0369   344C           01399     dw 0x344C ; J R0
036A   38E0           01400     dw 0x38E0 ; J R1
036B   3644           01401     dw 0x3644 ; J R2
036C   30E2           01402     dw 0x30E2 ; J R3
036D   3CC0           01403     dw 0x3CC0 ; O R0 
036E   3CC0           01404     dw 0x3CC0 ; O R2 
036F   3CC0           01405     dw 0x3CC0 ; O R2 
0370   3CC0           01406     dw 0x3CC0 ; O R3 
0371   36C0           01407     dw 0x36C0 ; S R0
0372   3462           01408     dw 0x3462 ; S R1
0373   36C0           01409     dw 0x36C0 ; S R2
0374   3462           01410     dw 0x3462 ; S R3
0375   3E40           01411     dw 0x3E40 ; T R0
0376   3262           01412     dw 0x3262 ; T R1
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-11-2016  20:53:50         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0377   304E           01413     dw 0x304E ; T R2
0378   38C8           01414     dw 0x38C8 ; T R3
0379   3C60           01415     dw 0x3C60 ; Z R0
037A   34C8           01416     dw 0x34C8 ; Z R1
037B   3C60           01417     dw 0x3C60 ; Z R3
037C   34C8           01418     dw 0x34C8 ; Z R4
                      01419 ; annoying! I tetriminos need a special treatment 
                      01420 ; because vertical I need 2 words for encoding.   
037D   0444 1400      01421 I0: dw 0x0444,0x1400 ; I R0  
037F   300F 1000      01422     dw 0x300F,0x1000 ; I R1  second word is filling for alignment
0381   0222 1200      01423     dw 0x0222,0x1200 ; I R2
0383   10F0 1000      01424     dw 0x10F0,0x1000 ; I R3  
                      01425 
  00000000            01426 LBL_SCORE equ 0
  00000001            01427 LBL_LINES equ 1
  00000002            01428 LBL_PRESS equ 2
                      01429  
0385                  01430 labels:
0385   000B           01431     brw
0386   3???           01432     bra txt_score
0387   3???           01433     bra txt_lines
0388   3???           01434     bra txt_press
                      01435     
0389                  01436 txt_score: ; "SCORE"
                      01437     pop
0389   0017               M     moviw SP--
038A   000B           01438     brw
038B   3413 340B 3410 01439     dt 19,11,16,18,12,20,255
       3412 340C 3414 
       34FF 
                      01440     
0392                  01441 txt_lines: ; "LINES"
                      01442     pop
0392   0017               M     moviw SP--
0393   000B           01443     brw
0394   340E 340D 340F 01444     dt 14,13,15,12,19,20,255
       340C 3413 3414 
       34FF 
                      01445 
039B                  01446 txt_press: ; "PRESS A"
                      01447     pop
039B   0017               M     moviw SP--
039C   000B           01448     brw
039D   3411 3412 340C 01449     dt 17,18,12,19,19,21,10,255
       3413 3413 3415 
       340A 34FF 
                      01450     
                      01451 
03A5                  01452 tone_pr:
03A5   000B           01453     brw
03A6   3402 34ED      01454     dt 0x02, 0xed   ; 330   (MI4)   0
03A8   34B5 34DF      01455     dt 0xb5, 0xdf   ; 349   (FA4)   1
03AA   3428 34D3      01456     dt 0x28, 0xd3   ; 370   (FA4#)  2
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-11-2016  20:53:50         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03AC   344C 34C7      01457     dt 0x4c, 0xc7   ; 392   (SOL4)  3
03AE   341E 34BC      01458     dt 0x1e, 0xbc   ; 415   (SOL4#) 4
03B0   348F 34B1      01459     dt 0x8f, 0xb1   ; 440   (LA4)   5
03B2   3498 34A7      01460     dt 0x98, 0xa7   ; 466   (LA4#)  6
03B4   3430 349E      01461     dt 0x30, 0x9e   ; 494   (SI4)   7
03B6   344F 3495      01462     dt 0x4f, 0x95   ; 523hz (DO5)   8
03B8   34ED 348C      01463     dt 0xed, 0x8c   ; 554   (DO5#)  9
03BA   3404 3485      01464     dt 0x04, 0x85   ; 587   (RÉ5)   10
03BC   348D 347D      01465     dt 0x8d, 0x7d   ; 622   (RÉ5#)  11
03BE   3481 3476      01466     dt 0x81, 0x76   ; 659   (MI5)   12
03C0   34DA 346F      01467     dt 0xda, 0x6f   ; 698   (FA5)   13
03C2   3493 3469      01468     dt 0x93, 0x69   ; 740   (FA5#)  14
03C4   34A6 3463      01469     dt 0xa6, 0x63   ; 784   (SOL5)  15
03C6   340F 345E      01470     dt 0x0f, 0x5e   ; 831   (SOL5#) 16
03C8   34C7 3458      01471     dt 0xc7, 0x58   ; 880   (LA5)   17
03CA   34CC 3453      01472     dt 0xcc, 0x53   ; 932   (LA5#)  18
03CC   3418 344F      01473     dt 0x18, 0x4f   ; 988   (SI5)   19
03CE   3482 3442      01474     dt 0x82, 0x42   ; 1046hz (do6)  20
03D0   3400 3400      01475     dt 0, 0         ; silence       21
                      01476     
03D2                  01477 korobeiniki: ;folklore russe
                      01478     ;nombre de notes
03D2   000B           01479     brw
03D3   3422           01480     dt 34
                      01481     ; duré, note
03D4   342D 3400      01482     dt 45, 0 
03D6   340F 3404      01483     dt 15, 4
03D8   341E 3407      01484     dt 30, 7
03DA   340F 3403      01485     dt 15, 3
03DC   340F 3400      01486     dt 15, 0
                      01487     
03DE   342D 3405      01488     dt 45, 5
03E0   340F 3409      01489     dt 15, 9
03E2   341E 340C      01490     dt 30, 12
03E4   340F 340A      01491     dt 15, 10
03E6   340F 3408      01492     dt 15, 8
                      01493     
03E8   342D 3407      01494     dt 45, 7
03EA   340F 3408      01495     dt 15, 8
03EC   341E 340A      01496     dt 30, 10
03EE   341E 340C      01497     dt 30, 12
                      01498     
03F0   341E 3408      01499     dt 30, 8
03F2   341E 3405      01500     dt 30, 5
03F4   343C 3405      01501     dt 60, 5
                      01502     
03F6   342D 340D      01503     dt 45, 13
03F8   340F 340F      01504     dt 15, 15
03FA   341E 3411      01505     dt 30, 17
03FC   340F 340F      01506     dt 15, 15
03FE   340F 340D      01507     dt 15, 13
                      01508     
0400   342D 340C      01509     dt 45, 12
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-11-2016  20:53:50         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0402   340F 340D      01510     dt 15, 13
0404   341E 340C      01511     dt 30, 12
0406   340F 340A      01512     dt 15, 10
0408   340F 3408      01513     dt 15, 8
                      01514     
040A   342D 3407      01515     dt 45, 7
040C   340F 3408      01516     dt 15, 8
040E   341E 340A      01517     dt 30, 10
0410   341E 340C      01518     dt 30, 12
                      01519     
0412   341E 3408      01520     dt 30, 8
0414   341E 3405      01521     dt 30, 5
0416   343C 3405      01522     dt 60, 5
                      01523     
                      01524     
3FE7 1EFF             01525     end
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-11-2016  20:53:50         PAGE 37


SYMBOL TABLE
  LABEL                             VALUE 

ABDEN                             00000000
ABDOVF                            00000007
ADCON0                            0000009D
ADCON1                            0000009E
ADCON2                            0000009F
ADCS0                             00000004
ADCS1                             00000005
ADCS2                             00000006
ADC_PIN                           00000004
ADDEN                             00000003
ADFM                              00000007
ADFVR0                            00000000
ADFVR1                            00000001
ADGO                              00000001
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADPREF0                           00000000
ADPREF1                           00000001
ADRES                             0000009B
ADRESH                            0000009C
ADRESL                            0000009B
ANSA0                             00000000
ANSA1                             00000001
ANSA2                             00000002
ANSA4                             00000004
ANSELA                            0000018C
APFCON                            0000011D
APFCON0                           0000011D
AUDIO_PIN                         00000004
AUDIO_PWMCLKCON                   00000DAE
AUDIO_PWMCON                      00000DAB
AUDIO_PWMDCH                      00000DA4
AUDIO_PWMDCL                      00000DA3
AUDIO_PWMLDCON                    00000DAF
AUDIO_PWMPRH                      00000DA6
AUDIO_PWMPRL                      00000DA5
AUDIO_PWMTMR                      00000DA9
A_THR                             00000040
BAUDCON                           0000019F
BORCON                            00000116
BORFS                             00000006
BORRDY                            00000000
BPL                               00000006
BRG16                             00000003
BRGH                              00000002
BSR                               00000008
BSR0                              00000000
BSR1                              00000001
BSR2                              00000002
BSR3                              00000003
BSR4                              00000004
BSR_SHAD                          00000FE6
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-11-2016  20:53:50         PAGE 38


SYMBOL TABLE
  LABEL                             VALUE 

BTN_A                             00000004
BTN_B                             00000005
BTN_DN                            00000001
BTN_LT                            00000002
BTN_RT                            00000003
BTN_UP                            00000000
BUFFER_SIZE                       000000C0
B_THR                             00000095
C                                 00000000
C1HYS                             00000001
C1IE                              00000005
C1IF                              00000005
C1INTN                            00000006
C1INTP                            00000007
C1NCH0                            00000000
C1NCH1                            00000001
C1NCH2                            00000002
C1OE                              00000005
C1ON                              00000007
C1OUT                             00000006
C1PCH0                            00000004
C1PCH1                            00000005
C1POL                             00000004
C1SP                              00000002
C1SYNC                            00000000
CDAFVR0                           00000002
CDAFVR1                           00000003
CFGS                              00000006
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CHS4                              00000006
CLR_OP                            00000000
CM1CON0                           00000111
CM1CON1                           00000112
CMOUT                             00000115
CREN                              00000004
CS0                               00000000
CS1                               00000001
CSRC                              00000007
CWG1CON0                          00000693
CWG1CON1                          00000694
CWG1CON2                          00000695
CWG1DBF                           00000692
CWG1DBF0                          00000000
CWG1DBF1                          00000001
CWG1DBF2                          00000002
CWG1DBF3                          00000003
CWG1DBF4                          00000004
CWG1DBF5                          00000005
CWG1DBR                           00000691
CWG1DBR0                          00000000
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-11-2016  20:53:50         PAGE 39


SYMBOL TABLE
  LABEL                             VALUE 

CWG1DBR1                          00000001
CWG1DBR2                          00000002
CWG1DBR3                          00000003
CWG1DBR4                          00000004
CWG1DBR5                          00000005
CWGASEL                           00000006
CWGBSEL                           00000005
C_SHAD                            00000000
DACCON0                           00000118
DACCON1                           00000119
DACEN                             00000007
DACLPS                            00000006
DACOE                             00000005
DACPSS0                           00000002
DACPSS1                           00000003
DACR0                             00000000
DACR1                             00000001
DACR2                             00000002
DACR3                             00000003
DACR4                             00000004
DC                                00000001
DCIE                              00000001
DCIF                              00000001
DC_SHAD                           00000001
DN_THR                            000000D8
EN                                00000007
F                                 00000001
FCY                               004C4B40
FERR                              00000002
FIRST_VIDEO                       00000046
FOSC                              01312D00
FREE                              00000004
FSR0                              00000004
FSR0H                             00000005
FSR0H_SHAD                        00000FE9
FSR0L                             00000004
FSR0L_SHAD                        00000FE8
FSR0_SHAD                         00000FE8
FSR1                              00000006
FSR1H                             00000007
FSR1H_SHAD                        00000FEB
FSR1L                             00000006
FSR1L_SHAD                        00000FEA
FSR1_SHAD                         00000FEA
FVRCON                            00000117
FVREN                             00000007
FVRRDY                            00000006
F_EVEN                            00000001
F_GSTOP                           00000004
F_GTMR                            00000003
F_MUTEX                           00000002
F_SND                             00000005
F_VSYNC                           00000000
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-11-2016  20:53:50         PAGE 40


SYMBOL TABLE
  LABEL                             VALUE 

G1ARSEN                           00000006
G1ASDLA0                          00000004
G1ASDLA1                          00000005
G1ASDLB0                          00000006
G1ASDLB1                          00000007
G1ASDSC1                          00000002
G1ASDSFLT                         00000001
G1ASE                             00000007
G1CS0                             00000000
G1EN                              00000007
G1IS0                             00000000
G1IS1                             00000001
G1IS2                             00000002
G1OEA                             00000005
G1OEB                             00000006
G1POLA                            00000003
G1POLB                            00000004
GAME_VAR                          00000000
GIE                               00000007
GO                                00000001
GO_NOT_DONE                       00000001
HFIOFL                            00000003
HFIOFR                            00000004
HFIOFS                            00000000
HORZ_DLY                          00000032
HORZ_PERIOD                       000004F5
HORZ_PULSE                        0000005E
I0                                0000037D
INDF0                             00000000
INDF1                             00000001
INLVLA                            0000038C
INLVLA0                           00000000
INLVLA1                           00000001
INLVLA2                           00000002
INLVLA3                           00000003
INLVLA4                           00000004
INLVLA5                           00000005
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IOCAF                             00000393
IOCAF0                            00000000
IOCAF1                            00000001
IOCAF2                            00000002
IOCAF3                            00000003
IOCAF4                            00000004
IOCAF5                            00000005
IOCAN                             00000392
IOCAN0                            00000000
IOCAN1                            00000001
IOCAN2                            00000002
IOCAN3                            00000003
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-11-2016  20:53:50         PAGE 41


SYMBOL TABLE
  LABEL                             VALUE 

IOCAN4                            00000004
IOCAN5                            00000005
IOCAP                             00000391
IOCAP0                            00000000
IOCAP1                            00000001
IOCAP2                            00000002
IOCAP3                            00000003
IOCAP4                            00000004
IOCAP5                            00000005
IOCIE                             00000003
IOCIF                             00000000
IRCF0                             00000003
IRCF1                             00000004
IRCF2                             00000005
IRCF3                             00000006
LAST_LINE                         00000106
LAST_VIDEO                        000000C5
LATA                              0000010C
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA4                             00000004
LATA5                             00000005
LBL_LINES                         00000001
LBL_PRESS                         00000002
LBL_SCORE                         00000000
LDA                               00000007
LDS0                              00000000
LDS1                              00000001
LDT                               00000006
LED_PIN                           00000000
LFIOFR                            00000001
LFSR_TAPS                         000000B4
LT_THR                            000000D1
LWLO                              00000005
MC1OUT                            00000000
MFIOFR                            00000002
MODE0                             00000002
MODE1                             00000003
MPWM1EN                           00000000
MPWM1LD                           00000000
MPWM1OUT                          00000000
MPWM2EN                           00000001
MPWM2LD                           00000001
MPWM2OUT                          00000001
MPWM3EN                           00000002
MPWM3LD                           00000002
MPWM3OUT                          00000002
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RI                            00000002
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-11-2016  20:53:50         PAGE 42


SYMBOL TABLE
  LABEL                             VALUE 

NOT_RMCLR                         00000003
NOT_RWDT                          00000004
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_WPUEN                         00000007
ODA0                              00000000
ODA1                              00000001
ODA2                              00000002
ODA4                              00000004
ODA5                              00000005
ODCONA                            0000028C
OE                                00000006
OERR                              00000001
OFIE                              00000003
OFIF                              00000003
OFM0                              00000005
OFM1                              00000006
OFO                               00000004
OFS0                              00000000
OFS1                              00000001
OPTION_REG                        00000095
OSCCON                            00000099
OSCSTAT                           0000009A
OSCTUNE                           00000098
OSTS                              00000005
OUT                               00000005
P1SEL                             00000000
P2SEL                             00000001
PAD_CHS                           00000003
PAD_PIN                           00000004
PCL                               00000002
PCLATH                            0000000A
PCLATH_SHAD                       00000FE7
PCON                              00000096
PEIE                              00000006
PHIE                              00000002
PHIF                              00000002
PIE1                              00000091
PIE2                              00000092
PIE3                              00000093
PIR1                              00000011
PIR2                              00000012
PIR3                              00000013
PIXEL_TXREG                       0000019A
PLLR                              00000006
PMADR                             00000191
PMADRH                            00000192
PMADRL                            00000191
PMCON1                            00000195
PMCON2                            00000196
PMDAT                             00000193
PMDATH                            00000194
PMDATL                            00000193
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-11-2016  20:53:50         PAGE 43


SYMBOL TABLE
  LABEL                             VALUE 

POL                               00000004
PORTA                             0000000C
PR2                               0000001B
PRIE                              00000000
PRIF                              00000000
PS0_OPTION_REG                    00000000
PS0_PWM1CLKCON                    00000004
PS0_PWM2CLKCON                    00000004
PS0_PWM3CLKCON                    00000004
PS1_OPTION_REG                    00000001
PS1_PWM1CLKCON                    00000005
PS1_PWM2CLKCON                    00000005
PS1_PWM3CLKCON                    00000005
PS2_OPTION_REG                    00000002
PS2_PWM1CLKCON                    00000006
PS2_PWM2CLKCON                    00000006
PS2_PWM3CLKCON                    00000006
PSA                               00000003
PWM1CLKCON                        00000D9E
PWM1CON                           00000D9B
PWM1CS0                           00000000
PWM1CS1                           00000001
PWM1DC                            00000D93
PWM1DCH                           00000D94
PWM1DCH0                          00000000
PWM1DCH1                          00000001
PWM1DCH2                          00000002
PWM1DCH3                          00000003
PWM1DCH4                          00000004
PWM1DCH5                          00000005
PWM1DCH6                          00000006
PWM1DCH7                          00000007
PWM1DCIE                          00000001
PWM1DCIF                          00000001
PWM1DCL                           00000D93
PWM1DCL0                          00000000
PWM1DCL1                          00000001
PWM1DCL2                          00000002
PWM1DCL3                          00000003
PWM1DCL4                          00000004
PWM1DCL5                          00000005
PWM1DCL6                          00000006
PWM1DCL7                          00000007
PWM1EN                            00000007
PWM1EN_A                          00000000
PWM1IE                            00000004
PWM1IF                            00000004
PWM1INTCON                        00000D9C
PWM1INTE                          00000D9C
PWM1INTF                          00000D9D
PWM1INTFLG                        00000D9D
PWM1LD                            00000007
PWM1LDA_A                         00000000
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-11-2016  20:53:50         PAGE 44


SYMBOL TABLE
  LABEL                             VALUE 

PWM1LDCON                         00000D9F
PWM1LDM                           00000006
PWM1LDS0                          00000000
PWM1LDS1                          00000001
PWM1MODE0                         00000002
PWM1MODE1                         00000003
PWM1OE                            00000006
PWM1OF                            00000D97
PWM1OFCON                         00000DA0
PWM1OFH                           00000D98
PWM1OFH0                          00000000
PWM1OFH1                          00000001
PWM1OFH2                          00000002
PWM1OFH3                          00000003
PWM1OFH4                          00000004
PWM1OFH5                          00000005
PWM1OFH6                          00000006
PWM1OFH7                          00000007
PWM1OFIE                          00000003
PWM1OFIF                          00000003
PWM1OFL                           00000D97
PWM1OFL0                          00000000
PWM1OFL1                          00000001
PWM1OFL2                          00000002
PWM1OFL3                          00000003
PWM1OFL4                          00000004
PWM1OFL5                          00000005
PWM1OFL6                          00000006
PWM1OFL7                          00000007
PWM1OFM0                          00000005
PWM1OFM1                          00000006
PWM1OFMC                          00000004
PWM1OFS0                          00000000
PWM1OFS1                          00000001
PWM1OUT                           00000005
PWM1OUT_A                         00000000
PWM1PH                            00000D91
PWM1PHH                           00000D92
PWM1PHH0                          00000000
PWM1PHH1                          00000001
PWM1PHH2                          00000002
PWM1PHH3                          00000003
PWM1PHH4                          00000004
PWM1PHH5                          00000005
PWM1PHH6                          00000006
PWM1PHH7                          00000007
PWM1PHIE                          00000002
PWM1PHIF                          00000002
PWM1PHL                           00000D91
PWM1PHL0                          00000000
PWM1PHL1                          00000001
PWM1PHL2                          00000002
PWM1PHL3                          00000003
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-11-2016  20:53:50         PAGE 45


SYMBOL TABLE
  LABEL                             VALUE 

PWM1PHL4                          00000004
PWM1PHL5                          00000005
PWM1PHL6                          00000006
PWM1PHL7                          00000007
PWM1POL                           00000004
PWM1PR                            00000D95
PWM1PRH                           00000D96
PWM1PRH0                          00000000
PWM1PRH1                          00000001
PWM1PRH2                          00000002
PWM1PRH3                          00000003
PWM1PRH4                          00000004
PWM1PRH5                          00000005
PWM1PRH6                          00000006
PWM1PRH7                          00000007
PWM1PRIE                          00000000
PWM1PRIF                          00000000
PWM1PRL                           00000D95
PWM1PRL0                          00000000
PWM1PRL1                          00000001
PWM1PRL2                          00000002
PWM1PRL3                          00000003
PWM1PRL4                          00000004
PWM1PRL5                          00000005
PWM1PRL6                          00000006
PWM1PRL7                          00000007
PWM1PS0                           00000004
PWM1PS1                           00000005
PWM1PS2                           00000006
PWM1TMR                           00000D99
PWM1TMRH                          00000D9A
PWM1TMRH0                         00000000
PWM1TMRH1                         00000001
PWM1TMRH2                         00000002
PWM1TMRH3                         00000003
PWM1TMRH4                         00000004
PWM1TMRH5                         00000005
PWM1TMRH6                         00000006
PWM1TMRH7                         00000007
PWM1TMRL                          00000D99
PWM1TMRL0                         00000000
PWM1TMRL1                         00000001
PWM1TMRL2                         00000002
PWM1TMRL3                         00000003
PWM1TMRL4                         00000004
PWM1TMRL5                         00000005
PWM1TMRL6                         00000006
PWM1TMRL7                         00000007
PWM2CLKCON                        00000DAE
PWM2CON                           00000DAB
PWM2CS0                           00000000
PWM2CS1                           00000001
PWM2DC                            00000DA3
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-11-2016  20:53:50         PAGE 46


SYMBOL TABLE
  LABEL                             VALUE 

PWM2DCH                           00000DA4
PWM2DCH0                          00000000
PWM2DCH1                          00000001
PWM2DCH2                          00000002
PWM2DCH3                          00000003
PWM2DCH4                          00000004
PWM2DCH5                          00000005
PWM2DCH6                          00000006
PWM2DCH7                          00000007
PWM2DCIE                          00000001
PWM2DCIF                          00000001
PWM2DCL                           00000DA3
PWM2DCL0                          00000000
PWM2DCL1                          00000001
PWM2DCL2                          00000002
PWM2DCL3                          00000003
PWM2DCL4                          00000004
PWM2DCL5                          00000005
PWM2DCL6                          00000006
PWM2DCL7                          00000007
PWM2EN                            00000007
PWM2EN_A                          00000001
PWM2IE                            00000005
PWM2IF                            00000005
PWM2INTCON                        00000DAC
PWM2INTE                          00000DAC
PWM2INTF                          00000DAD
PWM2INTFLG                        00000DAD
PWM2LD                            00000007
PWM2LDA_A                         00000001
PWM2LDCON                         00000DAF
PWM2LDM                           00000006
PWM2LDS0                          00000000
PWM2LDS1                          00000001
PWM2MODE0                         00000002
PWM2MODE1                         00000003
PWM2OE                            00000006
PWM2OF                            00000DA7
PWM2OFCON                         00000DB0
PWM2OFH                           00000DA8
PWM2OFH0                          00000000
PWM2OFH1                          00000001
PWM2OFH2                          00000002
PWM2OFH3                          00000003
PWM2OFH4                          00000004
PWM2OFH5                          00000005
PWM2OFH6                          00000006
PWM2OFH7                          00000007
PWM2OFIE                          00000003
PWM2OFIF                          00000003
PWM2OFL                           00000DA7
PWM2OFL0                          00000000
PWM2OFL1                          00000001
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-11-2016  20:53:50         PAGE 47


SYMBOL TABLE
  LABEL                             VALUE 

PWM2OFL2                          00000002
PWM2OFL3                          00000003
PWM2OFL4                          00000004
PWM2OFL5                          00000005
PWM2OFL6                          00000006
PWM2OFL7                          00000007
PWM2OFM0                          00000005
PWM2OFM1                          00000006
PWM2OFMC                          00000004
PWM2OFS0                          00000000
PWM2OFS1                          00000001
PWM2OUT                           00000005
PWM2OUT_A                         00000001
PWM2PH                            00000DA1
PWM2PHH                           00000DA2
PWM2PHH0                          00000000
PWM2PHH1                          00000001
PWM2PHH2                          00000002
PWM2PHH3                          00000003
PWM2PHH4                          00000004
PWM2PHH5                          00000005
PWM2PHH6                          00000006
PWM2PHH7                          00000007
PWM2PHIE                          00000002
PWM2PHIF                          00000002
PWM2PHL                           00000DA1
PWM2PHL0                          00000000
PWM2PHL1                          00000001
PWM2PHL2                          00000002
PWM2PHL3                          00000003
PWM2PHL4                          00000004
PWM2PHL5                          00000005
PWM2PHL6                          00000006
PWM2PHL7                          00000007
PWM2POL                           00000004
PWM2PR                            00000DA5
PWM2PRH                           00000DA6
PWM2PRH0                          00000000
PWM2PRH1                          00000001
PWM2PRH2                          00000002
PWM2PRH3                          00000003
PWM2PRH4                          00000004
PWM2PRH5                          00000005
PWM2PRH6                          00000006
PWM2PRH7                          00000007
PWM2PRIE                          00000000
PWM2PRIF                          00000000
PWM2PRL                           00000DA5
PWM2PRL0                          00000000
PWM2PRL1                          00000001
PWM2PRL2                          00000002
PWM2PRL3                          00000003
PWM2PRL4                          00000004
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-11-2016  20:53:50         PAGE 48


SYMBOL TABLE
  LABEL                             VALUE 

PWM2PRL5                          00000005
PWM2PRL6                          00000006
PWM2PRL7                          00000007
PWM2PS0                           00000004
PWM2PS1                           00000005
PWM2PS2                           00000006
PWM2TMR                           00000DA9
PWM2TMRH                          00000DAA
PWM2TMRH0                         00000000
PWM2TMRH1                         00000001
PWM2TMRH2                         00000002
PWM2TMRH3                         00000003
PWM2TMRH4                         00000004
PWM2TMRH5                         00000005
PWM2TMRH6                         00000006
PWM2TMRH7                         00000007
PWM2TMRL                          00000DA9
PWM2TMRL0                         00000000
PWM2TMRL1                         00000001
PWM2TMRL2                         00000002
PWM2TMRL3                         00000003
PWM2TMRL4                         00000004
PWM2TMRL5                         00000005
PWM2TMRL6                         00000006
PWM2TMRL7                         00000007
PWM3CLKCON                        00000DBE
PWM3CON                           00000DBB
PWM3CS0                           00000000
PWM3CS1                           00000001
PWM3DC                            00000DB3
PWM3DCH                           00000DB4
PWM3DCH0                          00000000
PWM3DCH1                          00000001
PWM3DCH2                          00000002
PWM3DCH3                          00000003
PWM3DCH4                          00000004
PWM3DCH5                          00000005
PWM3DCH6                          00000006
PWM3DCH7                          00000007
PWM3DCIE                          00000001
PWM3DCIF                          00000001
PWM3DCL                           00000DB3
PWM3DCL0                          00000000
PWM3DCL1                          00000001
PWM3DCL2                          00000002
PWM3DCL3                          00000003
PWM3DCL4                          00000004
PWM3DCL5                          00000005
PWM3DCL6                          00000006
PWM3DCL7                          00000007
PWM3EN                            00000007
PWM3EN_A                          00000002
PWM3IE                            00000006
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-11-2016  20:53:50         PAGE 49


SYMBOL TABLE
  LABEL                             VALUE 

PWM3IF                            00000006
PWM3INTCON                        00000DBC
PWM3INTE                          00000DBC
PWM3INTF                          00000DBD
PWM3INTFLG                        00000DBD
PWM3LD                            00000007
PWM3LDA_A                         00000002
PWM3LDCON                         00000DBF
PWM3LDM                           00000006
PWM3LDS0                          00000000
PWM3LDS1                          00000001
PWM3MODE0                         00000002
PWM3MODE1                         00000003
PWM3OE                            00000006
PWM3OF                            00000DB7
PWM3OFCON                         00000DC0
PWM3OFH                           00000DB8
PWM3OFH0                          00000000
PWM3OFH1                          00000001
PWM3OFH2                          00000002
PWM3OFH3                          00000003
PWM3OFH4                          00000004
PWM3OFH5                          00000005
PWM3OFH6                          00000006
PWM3OFH7                          00000007
PWM3OFIE                          00000003
PWM3OFIF                          00000003
PWM3OFL                           00000DB7
PWM3OFL0                          00000000
PWM3OFL1                          00000001
PWM3OFL2                          00000002
PWM3OFL3                          00000003
PWM3OFL4                          00000004
PWM3OFL5                          00000005
PWM3OFL6                          00000006
PWM3OFL7                          00000007
PWM3OFM0                          00000005
PWM3OFM1                          00000006
PWM3OFMC                          00000004
PWM3OFS0                          00000000
PWM3OFS1                          00000001
PWM3OUT                           00000005
PWM3OUT_A                         00000002
PWM3PH                            00000DB1
PWM3PHH                           00000DB2
PWM3PHH0                          00000000
PWM3PHH1                          00000001
PWM3PHH2                          00000002
PWM3PHH3                          00000003
PWM3PHH4                          00000004
PWM3PHH5                          00000005
PWM3PHH6                          00000006
PWM3PHH7                          00000007
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-11-2016  20:53:50         PAGE 50


SYMBOL TABLE
  LABEL                             VALUE 

PWM3PHIE                          00000002
PWM3PHIF                          00000002
PWM3PHL                           00000DB1
PWM3PHL0                          00000000
PWM3PHL1                          00000001
PWM3PHL2                          00000002
PWM3PHL3                          00000003
PWM3PHL4                          00000004
PWM3PHL5                          00000005
PWM3PHL6                          00000006
PWM3PHL7                          00000007
PWM3POL                           00000004
PWM3PR                            00000DB5
PWM3PRH                           00000DB6
PWM3PRH0                          00000000
PWM3PRH1                          00000001
PWM3PRH2                          00000002
PWM3PRH3                          00000003
PWM3PRH4                          00000004
PWM3PRH5                          00000005
PWM3PRH6                          00000006
PWM3PRH7                          00000007
PWM3PRIE                          00000000
PWM3PRIF                          00000000
PWM3PRL                           00000DB5
PWM3PRL0                          00000000
PWM3PRL1                          00000001
PWM3PRL2                          00000002
PWM3PRL3                          00000003
PWM3PRL4                          00000004
PWM3PRL5                          00000005
PWM3PRL6                          00000006
PWM3PRL7                          00000007
PWM3PS0                           00000004
PWM3PS1                           00000005
PWM3PS2                           00000006
PWM3TMR                           00000DB9
PWM3TMRH                          00000DBA
PWM3TMRH0                         00000000
PWM3TMRH1                         00000001
PWM3TMRH2                         00000002
PWM3TMRH3                         00000003
PWM3TMRH4                         00000004
PWM3TMRH5                         00000005
PWM3TMRH6                         00000006
PWM3TMRH7                         00000007
PWM3TMRL                          00000DB9
PWM3TMRL0                         00000000
PWM3TMRL1                         00000001
PWM3TMRL2                         00000002
PWM3TMRL3                         00000003
PWM3TMRL4                         00000004
PWM3TMRL5                         00000005
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-11-2016  20:53:50         PAGE 51


SYMBOL TABLE
  LABEL                             VALUE 

PWM3TMRL6                         00000006
PWM3TMRL7                         00000007
PWMEN                             00000D8E
PWMLD                             00000D8F
PWMOUT                            00000D90
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCREG                             00000199
RCSTA                             0000019D
RD                                00000000
ROW_EMPTY                         00000000
ROW_FULL                          0000000A
RT_THR                            000000B5
RX9                               00000006
RX9D                              00000000
RXDTSEL                           00000007
S0                                0000001F
SBOREN                            00000007
SCKP                              00000004
SCS0                              00000000
SCS1                              00000001
SENDB                             00000003
SLRA0                             00000000
SLRA1                             00000001
SLRA2                             00000002
SLRA4                             00000004
SLRA5                             00000005
SLRCONA                           0000030C
SP                                FSR1
SPBRG                             0000019B
SPBRGH                            0000019C
SPBRGL                            0000019B
SPEN                              00000007
SPLLEN                            00000007
SREN                              00000005
STACK_SIZE                        00000020
STATUS                            00000003
STATUS_SHAD                       00000FE4
STKOVF                            00000007
STKPTR                            00000FED
STKUNF                            00000006
SWDTEN                            00000000
SYNC                              00000004
SYNC_IE                           00000006
SYNC_IF                           00000006
SYNC_OUT                          00000002
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-11-2016  20:53:50         PAGE 52


SYMBOL TABLE
  LABEL                             VALUE 

SYNC_PIE                          00000093
SYNC_PIR                          00000013
SYNC_PWMCLKCON                    00000DBE
SYNC_PWMCON                       00000DBB
SYNC_PWMDCH                       00000DB4
SYNC_PWMDCL                       00000DB3
SYNC_PWMINTE                      00000DBC
SYNC_PWMINTF                      00000DBD
SYNC_PWMLDCON                     00000DBF
SYNC_PWMOF                        00000DB7
SYNC_PWMOFCON                     00000DC0
SYNC_PWMPH                        00000DB1
SYNC_PWMPRH                       00000DB6
SYNC_PWMPRL                       00000DB5
SYNC_PWMTMR                       00000DB9
T                                 INDF1
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000018
T1GCON                            00000019
T1GGO                             00000003
T1GGO_NOT_DONE                    00000003
T1GPOL                            00000006
T1GSEL                            00000003
T1GSPM                            00000004
T1GSS0                            00000000
T1GSS1                            00000001
T1GTM                             00000005
T1GVAL                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             0000001C
T2OUTPS0                          00000003
T2OUTPS1                          00000004
T2OUTPS2                          00000005
T2OUTPS3                          00000006
TC                                00000032
TCY                               000000C8
TMR0                              00000015
TMR0CS                            00000005
TMR0IE                            00000005
TMR0IF                            00000002
TMR0SE                            00000004
TMR1                              00000016
TMR1CS0                           00000006
TMR1CS1                           00000007
TMR1GE                            00000007
TMR1GIE                           00000007
TMR1GIF                           00000007
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-11-2016  20:53:50         PAGE 53


SYMBOL TABLE
  LABEL                             VALUE 

TMR1H                             00000017
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             00000016
TMR1ON                            00000000
TMR2                              0000001A
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOS                               00000FEE
TOSH                              00000FEF
TOSL                              00000FEE
TRIGSEL0                          00000004
TRIGSEL1                          00000005
TRIGSEL2                          00000006
TRIGSEL3                          00000007
TRISA                             0000008C
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRMT                              00000001
TSEN                              00000005
TSRNG                             00000004
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TUN5                              00000005
TX9                               00000006
TX9D                              00000000
TXCKSEL                           00000002
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             0000019A
TXSTA                             0000019E
TX_PIR                            00000011
UP_THR                            000000C6
VDD                               00000400
VERT_DLY                          00000032
VIDEO_BUFFER                      00002030
VIDEO_LAT                         0000010C
VIDEO_OUT                         00000001
VREGCON                           00000197
VREGPM                            00000001
W                                 00000000
WDTCON                            00000097
WDTPS0                            00000001
WDTPS1                            00000002
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-11-2016  20:53:50         PAGE 54


SYMBOL TABLE
  LABEL                             VALUE 

WDTPS2                            00000003
WDTPS3                            00000004
WDTPS4                            00000005
WELL_DEPTH                        00000016
WELL_WIDTH                        0000000A
WPUA                              0000020C
WPUA0                             00000000
WPUA1                             00000001
WPUA2                             00000002
WPUA3                             00000003
WPUA4                             00000004
WPUA5                             00000005
WR                                00000001
WREG                              00000009
WREG_SHAD                         00000FE5
WREN                              00000002
WRERR                             00000003
WUE                               00000001
XOR_OP                            00000001
XSIZE                             00000030
YSIZE                             00000020
Z                                 00000002
Z_SHAD                            00000002
_.org_1_0079                      00000079
_.org_1_007B                      0000007B
_.org_1_007D                      0000007D
_.org_1_0080                      00000080
_.org_1_00C6                      000000C6
_.org_1_00C8                      000000C8
_.org_1_00DE                      000000DE
_.org_1_00E5                      000000E5
_.org_1_0286                      00000286
_.org_1_0293                      00000293
_.org_1_02C3                      000002C3
_BOREN_NSLEEP                     00003DFF
_BOREN_OFF                        000039FF
_BOREN_ON                         00003FFF
_BOREN_SBODEN                     00003BFF
_BORV_19                          00003FFF
_BORV_HI                          00003BFF
_BORV_LO                          00003FFF
_CLKOUTEN_OFF                     00003FFF
_CLKOUTEN_ON                      000037FF
_CONFIG1                          00008007
_CONFIG2                          00008008
_CP_OFF                           00003FFF
_CP_ON                            00003F7F
_DEVID1                           00008006
_FOSC_ECH                         00003FFF
_FOSC_ECL                         00003FFD
_FOSC_ECM                         00003FFE
_FOSC_INTOSC                      00003FFC
_IDLOC0                           00008000
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-11-2016  20:53:50         PAGE 55


SYMBOL TABLE
  LABEL                             VALUE 

_IDLOC1                           00008001
_IDLOC2                           00008002
_IDLOC3                           00008003
_LPBOREN_OFF                      00003FFF
_LPBOREN_ON                       000037FF
_LVP_OFF                          00001FFF
_LVP_ON                           00003FFF
_MCLRE_OFF                        00003FBF
_MCLRE_ON                         00003FFF
_PLLEN_OFF                        00003EFF
_PLLEN_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FDF
_STVREN_OFF                       00003DFF
_STVREN_ON                        00003FFF
_WDTE_NSLEEP                      00003FF7
_WDTE_OFF                         00003FE7
_WDTE_ON                          00003FFF
_WDTE_SWDTEN                      00003FEF
_WRT_ALL                          00003FFC
_WRT_BOOT                         00003FFE
_WRT_HALF                         00003FFD
_WRT_OFF                          00003FFF
__12F1572                         00000001
_stack                            00000020
accaH                             00000009
accaL                             00000008
accbH                             0000000B
accbL                             0000000A
add                               
addpmadr                          
angle                             00000041
bitop                             00000117
bitop00                           00000124
bitop01                           00000127
bitop02                           00000133
buttons                           0000000C
case                              
clear_bit                         0000012B
dec_n                             
digits                            00000339
disable_video                     
div10                             0000005D
div10_loop                        00000061
drop                              
drop_n                            
dropped                           00000046
dup                               
enable_video                      
fall_loop                         000002BB
fetch                             
fill_buffer                       000000ED
fill_loop                         000000F5
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-11-2016  20:53:50         PAGE 56


SYMBOL TABLE
  LABEL                             VALUE 

flags                             00000002
game_init                         00000224
game_loop                         000002BA
game_over                         000002F3
get_flash_word                    00000160
get_nibble                        00000174
get_pixel                         0000010D
gpx00                             00000111
gpx01                             00000114
gt_255                            0000002A
gtimer                            00000003
hard_drop                         000002E2
hline                             00000202
hline_done                        00000211
inc_n                             
init                              000002F6
insert                            
isr                               00000004
isr_exit                          00000059
koro                              0000027A
korobeiniki                       000003D2
labels                            00000385
lcountH                           00000001
lcountL                           00000000
ldpmadr                           
lit                               
lt_256                            0000000E
main                              00000336
move_left                         000002EC
move_right                        000002EE
movtw                             
movwt                             
mult6                             0000006D
new_position                      000002F2
new_tminos                        00000267
next_flash_word                   0000016F
nibble                            0000000D
nibble_mask                       00000183
no_zero                           00000200
over                              
pause                             
pick                              
pixels_loop                       000000D9
pop                               
print_char                        00000191
print_int                         000001E7
print_label                       000001CA
print_last                        000001FA
print_row                         00000187
print_tetrim                      000001A0
prt01                             000001B6
prt_lbl_done                      000001E5
prt_lbl_loop                      000001CC
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-11-2016  20:53:50         PAGE 57


SYMBOL TABLE
  LABEL                             VALUE 

pstack_init                       
push                              
q                                 0000000A
qr00                              00000258
qr01                              00000262
query_row                         00000256
r                                 00000000
randH                             00000006
randL                             00000005
rcount                            00000007
read_exit                         000000A5
read_flash                        00000169
read_pad                          00000072
reserve                           
rot                               
rot_left                          000002E4
rot_right                         000002E8
row0                              00000182
row1                              0000017E
row2                              00000180
rst                               0000000E
scoreH                            00000045
scoreL                            00000044
set_video_ptr                     000000FB
soft_drop                         000002E3
start_timer                       
store                             
sub                               
swap                              
task0                             00000043
task1                             0000004C
task2                             00000053
tasks                             00000035
tbranch                           
tcyDelay                          
tetrim                            00000040
tetriminos                        00000365
tetris                            00000297
ti                                000001AF
tone                              000000A8
tone_pr                           000003A5
tone_tmr                          00000004
try_a                             00000082
try_b                             00000088
try_button                        
try_dn                            000000A0
try_lt                            0000009A
try_rt                            0000008E
try_up                            00000094
tx                                00000042
txt_lines                         00000392
txt_press                         0000039B
txt_score                         00000389
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-11-2016  20:53:50         PAGE 58


SYMBOL TABLE
  LABEL                             VALUE 

ty                                00000043
video_buffer_b0                   00000050
video_buffer_b2                   000000A0
video_buffer_b3                   00000120
video_serialize                   000000BF
vline                             00000213
vline_done                        00000222
vsync_end                         00000022
vsync_start                       0000001A
wait_end                          00000295
wait_sound                        
wait_start                        00000275
wait_timer                        
xor_bit                           0000012E
xor_row                           0000013C
xor_row01                         00000142
xor_row02                         0000015A
xor_row_done                      0000015E
zbranch                           

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,   128 suppressed

