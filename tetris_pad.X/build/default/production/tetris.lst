MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  19:53:03         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001     include p12f1572.inc
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Sep 13 2016
                      00005 ;  MPASM PIC12F1572 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2016 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01601         LIST
                      00002     
                      00003     radix dec
                      00004     errorlevel 0, -302, -305
                      00005     
8007   3FE7           00006     __config _CONFIG1, _FOSC_ECH&_WDTE_OFF
8008   1EFF           00007     __config _CONFIG2, _PLLEN_OFF&_LVP_OFF 
                      00008 
                      00009 #define SOUND_SUPPORT
                      00010     
  01312D00            00011 FOSC equ 20000000 ; 20Mhz
  00000032            00012 TC equ 50 ; nanosecondes 
  004C4B40            00013 FCY equ FOSC/4    ; 5Mhz
  000000C8            00014 TCY equ 200 ; nanoseconds
                      00015 
                      00016 
  00000030            00017 XSIZE equ 48  ; horizontal pixels
  00000020            00018 YSIZE equ 32  ; vertical pixels
  00000006            00019 BPL equ XSIZE/8 ; bytes per line 
  000000C0            00020 BUFFER_SIZE equ  YSIZE*BPL  ; video buffer size
  00002030            00021 VIDEO_BUFFER equ 0x2000+(3*80-BUFFER_SIZE) ; buffer address
  00000032            00022 VERT_DLY equ 50
  00000046            00023 FIRST_VIDEO equ VERT_DLY+20  ; first video output line
  000000C5            00024 LAST_VIDEO equ FIRST_VIDEO+4*YSIZE-1  ; last video output line
  0000019A            00025 PIXEL_TXREG equ TXREG
  00000011            00026 TX_PIR equ PIR1
  00000032            00027 HORZ_DLY equ 10*5  ; there is 5 TCY/µsec
                      00028  
  00000001            00029 VIDEO_OUT equ RA1
  0000010C            00030 VIDEO_LAT equ LATA
  00000002            00031 SYNC_OUT equ RA2 
  00000DB3            00032 SYNC_PWMDCL equ PWM3DCL ; duty cycle low byte
  00000DB4            00033 SYNC_PWMDCH equ PWM3DCH ; high byte    
  00000DB5            00034 SYNC_PWMPRL equ PWM3PRL ; pwm period low byte
  00000DB6            00035 SYNC_PWMPRH equ PWM3PRH ; high byte 
  00000DB1            00036 SYNC_PWMPH equ PWM3PH ; pwm phase
  00000DB7            00037 SYNC_PWMOF equ PWM3OF ; pwm offset
  00000DB9            00038 SYNC_PWMTMR equ PWM3TMR ; timer
  00000DBB            00039 SYNC_PWMCON equ PWM3CON ; control SFR
  00000DBE            00040 SYNC_PWMCLKCON equ PWM3CLKCON  ; clock control SFR
  00000DC0            00041 SYNC_PWMOFCON equ PWM3OFCON ; offset control SFR
  00000DBF            00042 SYNC_PWMLDCON equ PWM3LDCON ; load control SFR
  00000006            00043 SYNC_IE equ PWM3IE  ; interrupt enable bit
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  19:53:03         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000006            00044 SYNC_IF equ PWM3IF  ; interrupt flag bit
  00000093            00045 SYNC_PIE equ PIE3 ; interrupt enable SFR
  00000013            00046 SYNC_PIR equ PIR3 ; interrupt flag SFR 
  00000DBC            00047 SYNC_PWMINTE equ PWM3INTE
  00000DBD            00048 SYNC_PWMINTF equ PWM3INTF
                      00049  
  000004F5            00050 HORZ_PERIOD equ FOSC/15748-1 ; 15748 hertz
  0000005E            00051 HORZ_PULSE equ 4700/TC ; 4.7µsec 
  00000106            00052 LAST_LINE equ 262
                      00053 
  00000000            00054 LED_PIN equ RA0
  00000004            00055 ADC_PIN equ RA4
                      00056 
                      00057 #ifdef SOUND_SUPPORT 
  00000004            00058 AUDIO_PIN equ RA4
  00000DA3            00059 AUDIO_PWMDCL equ PWM2DCL
  00000DA4            00060 AUDIO_PWMDCH equ PWM2DCH
  00000DA5            00061 AUDIO_PWMPRL equ PWM2PRL
  00000DA6            00062 AUDIO_PWMPRH equ PWM2PRH
  00000DA9            00063 AUDIO_PWMTMR equ PWM2TMR
  00000DAE            00064 AUDIO_PWMCLKCON equ PWM2CLKCON
  00000DAF            00065 AUDIO_PWMLDCON equ PWM2LDCON
  00000DAB            00066 AUDIO_PWMCON equ PWM2CON
                      00067 #endif
                      00068  
                      00069 ; game pad resource
                      00070 ; use ADC 
  00000004            00071 PAD_PIN equ ANSA4
  00000003            00072 PAD_CHS equ 3 
  00000000            00073 BTN_UP equ 0
  00000001            00074 BTN_DN equ 1
  00000002            00075 BTN_LT equ 2
  00000003            00076 BTN_RT equ 3
  00000004            00077 BTN_A equ 4
  00000005            00078 BTN_B equ 5
                      00079 ; threshold level for each button
                      00080 ; lower_btn_thr >= BTN_? < btn_thr
                      00081 ; exemple: BTN_UP if RT_THR<=Vadc<UP_THR  
  00000400            00082 VDD equ 1024
  000000D8            00083 DN_THR equ 216 ;(VDD*(6/7+5/6)/2)>>2
  000000D1            00084 LT_THR equ 209 ; (VDD*(5/6+4/5)/2)>>2
  000000C6            00085 UP_THR equ 198 ;(VDD*(4/5+3/4)/2)>>2
  000000B5            00086 RT_THR equ 181 ;(VDD*(3/4+2/3)/2)>>2
  00000095            00087 B_THR  equ 149 ; (VDD*(2/3+1/2)/2)>>2
  00000040            00088 A_THR  equ 64 ;(VDD/4)>>2
                      00089  
                      00090 try_button macro btn, label 
                      00091     movlw btn
                      00092     subwf ADRESH,W
                      00093     skpnc
                      00094     bra label
                      00095     endm
                      00096     
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  19:53:03         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00097 ;boolean flags 
  00000000            00098 F_VSYNC equ 0 ; vertical sync active
  00000001            00099 F_EVEN equ 1  ; even field
  00000002            00100 F_MUTEX equ 2 ; video routine lock out
  00000003            00101 F_GTMR equ 3  ; game timer active
  00000004            00102 F_GSTOP equ 4 ; game stopped
  00000005            00103 F_SND equ 5 ; sound timer active 
  00000006            00104 F_COLL equ 6 ; collision flag
                      00105  
  000000B4            00106 LFSR_TAPS equ 0xB4 ; xor mask
                      00107  
                      00108 disable_video macro ; lockout video_serialize
                      00109     bsf flags, F_MUTEX
                      00110     endm
                      00111     
                      00112 enable_video macro ; unlock video_serialize
                      00113     bcf flags, F_MUTEX
                      00114     endm
                      00115     
                      00116 tcyDelay macro n ; delay in TCY cycles  5TCY per µsec.  
                      00117     variable r=n%5
                      00118     variable q=n/5
                      00119     while r>1
                      00120     bra $+1
                      00121 r-=2
                      00122     endw
                      00123     if r==1
                      00124     nop
                      00125     endif
                      00126     if q
                      00127     movlw q
                      00128     bra $+1
                      00129     decfsz WREG
                      00130     bra $-2
                      00131     endif
                      00132     endm
                      00133 
                      00134 ; button selector case    
                      00135 case macro n, label
                      00136     btfsc buttons,n
                      00137     bra label
                      00138     endm
                      00139  
                      00140 start_timer macro value ; start game timer
                      00141     movlw value
                      00142     movwf gtimer
                      00143     bsf flags, F_GTMR
                      00144     endm
                      00145     
                      00146 wait_timer macro ; wait timer expiration
                      00147     btfsc flags, F_GTMR
                      00148     bra $-1
                      00149     endm
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  19:53:03         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00150     
                      00151 pause macro value ; suspend execution (busy loop)
                      00152     start_timer value
                      00153     wait_timer
                      00154     endm
                      00155 
                      00156 #ifdef SOUND_SUPPORT    
                      00157 wait_sound macro ; wait sound end
                      00158     btfsc flags,F_SND
                      00159     bra $-1
                      00160     endm
                      00161 #endif
                      00162     
                      00163 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00164 ; software stack for arguments passing
                      00165 ; SP is Stack Pointer
                      00166 ; T is Top Of Stack
                      00167 #define SP FSR1
                      00168 #define T INDF1
  00000020            00169 STACK_SIZE equ 32
                      00170  
  0000001F            00171 S0 equ 0x1F ; stack base address - 1
                      00172 
                      00173 pstack_init macro ; initialise stack pointer
                      00174     clrf FSR1H
                      00175     movlw S0
                      00176     movwf FSR1L
                      00177     endm
                      00178     
                      00179 push macro   ; ( -- n ) push WREG on stack
                      00180     movwi ++SP
                      00181     endm
                      00182 
                      00183 pop macro   ; ( n -- )  pop T in WREG
                      00184     moviw SP--
                      00185     endm
                      00186     
                      00187 drop macro  ; ( n -- ) ; discard T
                      00188    addfsr SP,-1
                      00189    endm
                      00190 
                      00191 drop_n macro n  ; discard n elements  n<32
                      00192     addfsr SP,-n
                      00193     endm
                      00194     
                      00195 lit macro  n ; ( -- n ) ; push a literal
                      00196    movlw n
                      00197    movwi ++SP 
                      00198    endm
                      00199 
                      00200 dup macro ; ( n -- n n ) duplicate T
                      00201     movfw T
                      00202     movwi ++SP
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  19:53:03         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00203     endm
                      00204     
                      00205 over macro ; ( n1 n2 -- n1 n2 n1 )
                      00206     moviw -1[SP]
                      00207     push
                      00208     endm
                      00209     
                      00210 swap macro ; exchange WREG and T
                      00211     xorwf T
                      00212     xorwf T,W
                      00213     xorwf T
                      00214     endm
                      00215  
                      00216 store macro var ; ( n -- ) pop T in variable
                      00217    moviw SP--
                      00218    movwf var
                      00219    endm
                      00220    
                      00221 pick macro n  ; pick nth element of stack to WREG
                      00222     moviw -n[SP]
                      00223     endm
                      00224 
                      00225 insert macro n ;  insert WREG at position n on stack
                      00226    movwi -n[SP]
                      00227    endm
                      00228    
                      00229 inc_n macro n ; increament nth element of stack
                      00230     moviw -n[SP]
                      00231     incf WREG,F
                      00232     movwi -n[SP]
                      00233     endm
                      00234     
                      00235 dec_n macro n ; decreament nth element of stack
                      00236     moviw -n[SP]
                      00237     decf WREG,F
                      00238     movwi -n[SP]
                      00239     endm
                      00240     
                      00241 reserve macro n ; reserve n bytes on stack for local variables
                      00242     addfsr SP, n 
                      00243     endm
                      00244  
                      00245 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00246 ; parameter stack section    
                      00247 dstack udata 0x20
0020                  00248 _stack res 32
                      00249 ; game variables section 
  00000000            00250 GAME_VAR equ 0 ; game variables bank
                      00251 game_var udata 0x40 
                      00252 ; tetris game state
0040                  00253 tetrim res 1 ; active tretriminos 
0041                  00254 angle res 1 ; tetriminos rotatation angle in multiple of 90degr. {0:3}
0042                  00255 tx  res 1 ; x coordinate
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  19:53:03         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0043                  00256 ty  res 1 ; y coordinate
0044                  00257 scoreL res 1 ; game score  16 bits
0045                  00258 scoreH res 1 
0046                  00259 droppedL res 1  ; total
0047                  00260 droppedH res 1  ; dropped lines
                      00261   
                      00262  
                      00263 ; These 3 sections are used for video pixels buffering
                      00264 ; with indirect access using FSR0
                      00265 ; to form a contiguous address space. 
                      00266 ; total size 192 bytes 
                      00267 vb_b0    udata 0x50
0050                  00268 video_buffer_b0 res 32
                      00269 vb_b1    udata 0xA0
00A0                  00270 video_buffer_b2 res 80
                      00271 vb_b2    udata 0x120
0120                  00272 video_buffer_b3 res 80
                      00273  
                      00274  
                      00275     udata_shr
                      00276 ;scan lines counter 16 bits
0000                  00277 lcountL res 1
0001                  00278 lcountH res 1
                      00279 ; boolean flags 
0002                  00280 flags res 1
                      00281 ; game timer
0003                  00282 gtimer res 1 
                      00283 #ifdef SOUND_SUPPORT 
                      00284 ; sound timer
0004                  00285 tone_tmr res 1 
                      00286 #endif 
                      00287 ; lfsr PRNG register
0005                  00288 randL res 1 
0006                  00289 randH res 1 
                      00290 ; loop counter
0007                  00291 rcount res 1
                      00292 ; arithmetic accumulator A 24 bits
0008                  00293 accaL res 1
0009                  00294 accaH res 1
                      00295 ; arithmetic accumulator B 16 bits
000A                  00296 accbL res 1
000B                  00297 accbH res 1
                      00298 ; game pad buttons state
000C                  00299 buttons res 1
                      00300 ; flash reader next nibble {0-3}
000D                  00301 nibble res 1
                      00302 ; temporary registers
000E                  00303 t0  res 1
000F                  00304 t1  res 1
                      00305   
                      00306 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00307 ; reset entry point
                      00308 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  19:53:03         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0010                  00309 rst: 
                      00310     org 0
0000   0023           00311     banksel ANSELA
0001   018C           00312     clrf ANSELA
0002   160C           00313     bsf ANSELA,PAD_PIN
0003   2???           00314     goto init
                      00315     
                      00316     org 4
                      00317 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;   
                      00318 ; interrupt service routine
                      00319 ; the only interrupt is on SYNC_PWM timer
                      00320 ; this intterrupt trigger once 
                      00321 ; for every horizontal line, i.e. 15748/sec.    
                      00322 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
0004                  00323 isr:
0004   003B           00324     banksel SYNC_PWMINTF
0005   103D           00325     bcf SYNC_PWMINTF,PRIF
0006   1800           00326     btfsc lcountH,0
0007   3???           00327     bra gt_255 ; lcount > 255
0008   08??           00328     movfw lcountL
0009   1903           00329     skpnz
000A   3???           00330     bra vsync_start
000B   3A03           00331     xorlw 3
000C   1903           00332     skpnz
000D   3???           00333     bra vsync_end
                      00334 ; scanline < 256
                      00335 ; check if visible line    
000E                  00336 lt_256:
000E   1900           00337     btfsc flags, F_MUTEX ; video output lockout
000F   3???           00338     bra isr_exit
0010   08??           00339     movfw lcountL
0011   3C45           00340     sublw FIRST_VIDEO-1
0012   1803           00341     skpnc
0013   3???           00342     bra isr_exit
0014   08??           00343     movfw lcountL
0015   3CC5           00344     sublw LAST_VIDEO
0016   1C03           00345     skpc
0017   3???           00346     bra isr_exit
                      00347 ; output video pixels for this line    
0018   2???           00348     call video_serialize 
0019   3???           00349     bra isr_exit 
                      00350 ; scanline 0 start vertical sync pulse    
001A                  00351 vsync_start: 
001A   003B           00352     banksel SYNC_PWMDCL
001B   3097           00353     movlw (HORZ_PERIOD-HORZ_PULSE)&0xff
001C   00B3           00354     movwf SYNC_PWMDCL
001D   3004           00355     movlw (HORZ_PERIOD-HORZ_PULSE)>>8
001E   00B4           00356     movwf SYNC_PWMDCH
001F   17BF           00357     bsf SYNC_PWMLDCON,LDA
0020   1400           00358     bsf flags, F_VSYNC
0021   3???           00359     bra isr_exit
                      00360 ; scanline 3 end vertical sync pulse
0022                  00361 vsync_end: 
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  19:53:03         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0022   003B           00362     banksel SYNC_PWMDCL
0023   305E           00363     movlw HORZ_PULSE&0xff
0024   00B3           00364     movwf SYNC_PWMDCL
0025   3000           00365     movlw HORZ_PULSE>>8
0026   00B4           00366     movwf SYNC_PWMDCH
0027   17BF           00367     bsf SYNC_PWMLDCON,LDA
0028   1000           00368     bcf flags, F_VSYNC
0029   3???           00369     bra isr_exit
                      00370 ; scan line > 255    
002A                  00371 gt_255:
                      00372 ; check for end of field    
002A   3006           00373     movlw LAST_LINE&0xff
002B   1C80           00374     btfss flags,F_EVEN
002C   3E01           00375     addlw 1
002D   06??           00376     xorwf lcountL,W
002E   1D03           00377     skpz
002F   3???           00378     bra tasks
                      00379 ; this is end of field
                      00380 ; reset line counter    
0030   01??           00381     clrf lcountL
0031   01??           00382     clrf lcountH
0032   3002           00383     movlw 1<<F_EVEN
0033   06??           00384     xorwf flags,F ; toggle field flag
0034   0009           00385     retfie
                      00386 ; round robin task scheduler
                      00387 ; each task execute once every 1/60th sec.
                      00388 ; condition:    
                      00389 ;   Task must complete inside
                      00390 ;   horizontal period. i.e. before SYNC_PWM period end
                      00391 ; 6 tasks slots available    
0035                  00392 tasks:
                      00393 ; task selector    
0035   08??           00394     movfw lcountL
0036   1903           00395     skpnz
0037   3???           00396     bra task0
0038   0389           00397     decf WREG
0039   1903           00398     skpnz 
003A   3???           00399     bra task1
003B   0389           00400     decf WREG
003C   1903           00401     skpnz
003D   3???           00402     bra task2
003E   3???           00403     bra isr_exit
003F                  00404 task0:
                      00405 #ifdef SOUND_SUPPORT    
                      00406 ; sound timer    
003F   08??           00407     movfw tone_tmr
0040   1903           00408     skpnz
0041   3???           00409     bra isr_exit
0042   0B??           00410     decfsz tone_tmr,F
0043   3???           00411     bra isr_exit
0044   1280           00412     bcf flags,F_SND
0045   003B           00413     banksel AUDIO_PWMCON
0046   13AB           00414     bcf AUDIO_PWMCON,EN
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  19:53:03         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00415 #endif    
0047   3???           00416     bra isr_exit
0048                  00417 task1:   
                      00418 ; game timer    
0048   08??           00419     movf gtimer,F ; 
0049   1903           00420     skpnz
004A   3???           00421     bra isr_exit
004B   0B??           00422     decfsz gtimer,F ; 
004C   3???           00423     bra isr_exit ;
004D   1180           00424     bcf flags, F_GTMR
004E   3???           00425     bra isr_exit ;
004F                  00426 task2:
                      00427 ; rotate lfsr
004F   36??           00428     lsrf randH
0050   0C??           00429     rrf randL
0051   1803           00430     skpnc
0052   30B4           00431     movlw LFSR_TAPS
0053   06??           00432     xorwf randH
0054                  00433 isr_exit:
0054   0A??           00434     incf lcountL
0055   1903           00435     skpnz
0056   0A??           00436     incf lcountH
0057   0009           00437     retfie
                      00438 
                      00439 ;div10    
                      00440 ; divsion by 10    
                      00441 ; needed to convert binary to BCD
                      00442 ; input:
                      00443 ;   acca dividend  16 bits
                      00444 ; output:
                      00445 ;   acca: quotient
                      00446 ;   accbL: remainder    
0058                  00447 div10:
                      00448     disable_video
0058   1500               M     bsf flags, F_MUTEX
0059   3011           00449     movlw 17
005A   00??           00450     movwf rcount
005B   01??           00451     clrf accbL
005C                  00452 div10_loop:
005C   300A           00453     movlw 10
005D   02??           00454     subwf accbL,W
005E   1803           00455     skpnc
005F   00??           00456     movwf accbL
0060   0D??           00457     rlf accaL
0061   0D??           00458     rlf accaH
0062   0D??           00459     rlf accbL
0063   0B??           00460     decfsz rcount
0064   3???           00461     bra div10_loop
0065   36??           00462     lsrf accbL
                      00463     enable_video
0066   1100               M     bcf flags, F_MUTEX
0067   0008           00464     return
                      00465     
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  19:53:03         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00466 ;mult6
                      00467 ; multiply WREG by PBL    
                      00468 ; WREG*6
                      00469 ; WREG*6=WREG*4+WREG*2    
                      00470 ; input:
                      00471 ;   WREG
                      00472 ; output:
                      00473 ;   WREG    
0068                  00474 mult6: 
0068   00??           00475     movwf t0
0069   35??           00476     lslf t0,F    ; t0=2*WREG
006A   35??           00477     lslf t0,W  ; WREG=4*WREG
006B   07??           00478     addwf t0,W ; WREG=6*WREG
006C   0008           00479     return
                      00480 
                      00481 ;read_pad    
                      00482 ;read game pad
                      00483 ; store value in 'buttons'
                      00484 ; a button is accepted if
                      00485 ; the Vadc value is below its threshold
006D                  00486 read_pad:
006D   01??           00487     clrf buttons
006E   1A80           00488     btfsc flags, F_SND
006F   0008           00489     return ; can't read while tone playing
0070   0021           00490     banksel TRISA
0071   160C           00491     bsf TRISA,ADC_PIN
0072   0021           00492     banksel ADCON0
0073   141D           00493     bsf ADCON0,ADON
                      00494     tcyDelay 5*4 ; délais d'acquisition 4µsec
  0000                    M     variable r=5*4%5
  0004                    M     variable q=5*4/5
                          M     while r>1
                          M     bra $+1
                          M r-=2
                          M     endw
                          M     if r==1
                          M     nop
                          M     endif
                          M     if q
0074   3004               M     movlw q
0075   3???               M     bra $+1
0076   0B89               M     decfsz WREG
0077   3???               M     bra $-2
                          M     endif
0078   149D           00495     bsf ADCON0,GO
0079   189D           00496     btfsc ADCON0,NOT_DONE
007A   3???           00497     bra $-1
007B   101D           00498     bcf ADCON0,ADON
                      00499 ; try each button from lower to upper
007C                  00500 try_a:
                      00501     try_button A_THR, try_b
007C   3040               M     movlw A_THR
007D   021C               M     subwf ADRESH,W
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  19:53:03         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

007E   1803               M     skpnc
007F   3???               M     bra try_b
0080   1600           00502     bsf buttons,BTN_A
0081   3???           00503     bra read_exit
0082                  00504 try_b:    
                      00505     try_button B_THR, try_rt
0082   3095               M     movlw B_THR
0083   021C               M     subwf ADRESH,W
0084   1803               M     skpnc
0085   3???               M     bra try_rt
0086   1680           00506     bsf buttons,BTN_B
0087   3???           00507     bra read_exit
0088                  00508 try_rt:
                      00509     try_button RT_THR, try_up
0088   30B5               M     movlw RT_THR
0089   021C               M     subwf ADRESH,W
008A   1803               M     skpnc
008B   3???               M     bra try_up
008C   1580           00510     bsf buttons,BTN_RT
008D   3???           00511     bra read_exit
008E                  00512 try_up:
                      00513     try_button UP_THR, try_lt
008E   30C6               M     movlw UP_THR
008F   021C               M     subwf ADRESH,W
0090   1803               M     skpnc
0091   3???               M     bra try_lt
0092   1400           00514     bsf buttons,BTN_UP
0093   3???           00515     bra read_exit
0094                  00516 try_lt:
                      00517     try_button LT_THR, try_dn
0094   30D1               M     movlw LT_THR
0095   021C               M     subwf ADRESH,W
0096   1803               M     skpnc
0097   3???               M     bra try_dn
0098   1500           00518     bsf buttons,BTN_LT
0099   3???           00519     bra read_exit
009A                  00520 try_dn:
                      00521     try_button DN_THR, read_exit
009A   30D8               M     movlw DN_THR
009B   021C               M     subwf ADRESH,W
009C   1803               M     skpnc
009D   3???               M     bra read_exit
009E   1480           00522     bsf buttons,BTN_DN
009F                  00523 read_exit:
009F   0021           00524     banksel TRISA
00A0   120C           00525     bcf TRISA,ADC_PIN
00A1   0008           00526     return
                      00527 
                      00528 #ifdef SOUND_SUPPORT    
                      00529 ; play a tone
                      00530 ; input:
                      00531 ;   t   duration in multiple of 1/60 sec.
                      00532 ;   n   note number
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  19:53:03         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00A2                  00533 tone: ; ( t n -- )
00A2   0021           00534     banksel TRISA
00A3   120C           00535     bcf TRISA,AUDIO_PIN
00A4   003B           00536     banksel AUDIO_PWMPRL
00A5   3581           00537     lslf T
00A6   0801           00538     movfw T
00A7   2???           00539     call tone_pr
00A8   00A5           00540     movwf AUDIO_PWMPRL
00A9   3689           00541     lsrf WREG
00AA   00A3           00542     movwf AUDIO_PWMDCL
00AB   0A01           00543     incf T,W
00AC   2???           00544     call tone_pr
00AD   00A6           00545     movwf AUDIO_PWMPRH
00AE   3689           00546     lsrf WREG
00AF   00A4           00547     movwf AUDIO_PWMDCH
00B0   1803           00548     skpnc
00B1   17A3           00549     bsf AUDIO_PWMDCL,7
                      00550     pop
00B2   0017               M     moviw SP--
                      00551     pop
00B3   0017               M     moviw SP--
00B4   00??           00552     movwf tone_tmr
00B5   17AB           00553     bsf AUDIO_PWMCON,EN
00B6   17AF           00554     bsf AUDIO_PWMLDCON,LDA
00B7   1680           00555     bsf flags,F_SND
00B8   0008           00556     return
                      00557 #endif
                      00558     
                      00559 ; set_yptr    
                      00560 ; set FSR0 to point to
                      00561 ; video_buffer line y    
                      00562 ; input:
                      00563 ;   y  line number {0:YZISE-1}
                      00564 ; output:
                      00565 ;   FSR0 point to beginning of line y    
00B9                  00566 set_yptr: ; ( y -- )
00B9   3030           00567     movlw VIDEO_BUFFER&0xff
00BA   0084           00568     movwf FSR0L
00BB   3020           00569     movlw VIDEO_BUFFER>>8
00BC   0085           00570     movwf FSR0H
                      00571     pop
00BD   0017               M     moviw SP--
00BE   2???           00572     call mult6
00BF   0784           00573     addwf FSR0L
00C0   0103           00574     clrw 
00C1   3D85           00575     addwfc FSR0H
00C2   0008           00576     return
                      00577     
                      00578 ;video_serialize
                      00579 ; serialise video pixels to output pin
                      00580 ; called by isr    
                      00581 ; input:
                      00582 ;   none
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  19:53:03         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00583 ; output:
                      00584 ;   none    
00C3                  00585 video_serialize: 
                      00586     tcyDelay HORZ_DLY
  0000                    M     variable r=HORZ_DLY%5
  000A                    M     variable q=HORZ_DLY/5
                          M     while r>1
                          M     bra $+1
                          M r-=2
                          M     endw
                          M     if r==1
                          M     nop
                          M     endif
                          M     if q
00C3   300A               M     movlw q
00C4   3???               M     bra $+1
00C5   0B89               M     decfsz WREG
00C6   3???               M     bra $-2
                          M     endif
00C7   0804           00587     movfw FSR0L
                      00588     push
00C8   001C               M     movwi ++SP
00C9   0805           00589     movfw FSR0H
                      00590     push
00CA   001C               M     movwi ++SP
00CB   3046           00591     movlw FIRST_VIDEO
00CC   02??           00592     subwf lcountL,W
00CD   3689           00593     lsrf WREG
00CE   3689           00594     lsrf WREG
                      00595     push      ; FSR0L FSR0H y
00CF   001C               M     movwi ++SP
00D0   2???           00596     call set_yptr ; FSR0L FSR0H
                      00597     lit BPL ; FSR0L FSR0H BPL
00D1   3006               M    movlw BPL
00D2   001C               M    movwi ++SP 
00D3   0023           00598     banksel RCSTA
00D4   179D           00599     bsf RCSTA,SPEN
00D5                  00600 byte_serialize:    
00D5   0012           00601     moviw FSR0++
00D6   0023           00602     banksel PIXEL_TXREG
00D7   009A           00603     movwf PIXEL_TXREG
00D8   0020           00604     banksel TX_PIR
00D9   1E11           00605     btfss TX_PIR,TXIF
00DA   3???           00606     bra $-1
00DB   0B81           00607     decfsz T
00DC   3???           00608     bra byte_serialize
                      00609     drop ; discard T
00DD   317F               M    addfsr SP,-1
00DE   0023           00610     banksel PIXEL_TXREG
00DF   019A           00611     clrf PIXEL_TXREG
00E0   0020           00612     banksel TX_PIR
00E1   1E11           00613     btfss TX_PIR,TXIF
00E2   3???           00614     bra $-1
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  19:53:03         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00E3   0023           00615     banksel RCSTA
00E4   139D           00616     bcf RCSTA, SPEN
                      00617     pop
00E5   0017               M     moviw SP--
00E6   0085           00618     movwf FSR0H
                      00619     pop
00E7   0017               M     moviw SP--
00E8   0084           00620     movwf FSR0L
00E9   0008           00621     return
                      00622 
                      00623 ; clear_screen
                      00624 ; set all pixels black
                      00625 ; input:
                      00626 ;   none
                      00627 ; output:
                      00628 ;   none    
00EA                  00629 clear_screen: 
                      00630     disable_video
00EA   1500               M     bsf flags, F_MUTEX
                      00631     lit 0
00EB   3000               M    movlw 0
00EC   001C               M    movwi ++SP 
00ED   2???           00632     call set_yptr
00EE   30C0           00633     movlw BUFFER_SIZE
                      00634     push  ; T=byte count  
00EF   001C               M     movwi ++SP
00F0   3000           00635     movlw 0
00F1                  00636 cls_loop:    
00F1   001A           00637     movwi FSR0++
00F2   0B81           00638     decfsz T
00F3   3???           00639     bra cls_loop
                      00640     drop
00F4   317F               M    addfsr SP,-1
                      00641     enable_video
00F5   1100               M     bcf flags, F_MUTEX
00F6   0008           00642     return
                      00643 
                      00644 ;set_pixel_ptr    
                      00645 ;set FSR0 pointer at byte containing pixel x,y
                      00646 ; input:
                      00647 ;   x,y coordinates of pixel in video_buffer    
                      00648 ; output:
                      00649 ;   WREG = pixel mask  
                      00650 ; NOTE: EUSART output Least Significant Bit first
                      00651 ;       LSB appear left on screen.
00F7                  00652 set_pixel_ptr:  ; ( x y -- )
                      00653     disable_video
00F7   1500               M     bsf flags, F_MUTEX
00F8   2???           00654     call set_yptr
                      00655 ; FSR0+x/8
00F9   3601           00656     lsrf T,W   
00FA   3689           00657     lsrf WREG
00FB   3689           00658     lsrf WREG
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  19:53:03         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00FC   0784           00659     addwf FSR0L
00FD   0103           00660     clrw
00FE   3D85           00661     addwfc FSR0H
                      00662 ;create bit mask    
00FF   3007           00663     movlw 7
0100   0581           00664     andwf T,F ; T=bit position
0101   3001           00665     movlw 0x1
0102   1903           00666     skpnz 
0103   3???           00667     bra mask01 ; least significant bit
0104                  00668 mask00:
0104   3589           00669     lslf WREG
0105   0B81           00670     decfsz T
0106   3???           00671     bra mask00
0107                  00672 mask01:
                      00673     drop ; discard T
0107   317F               M    addfsr SP,-1
                      00674     enable_video
0108   1100               M     bcf flags, F_MUTEX
0109   0008           00675     return
                      00676 
                      00677 ; set_pixel
                      00678 ; set x,y pixel to 1
                      00679 ; input:
                      00680 ;   x,y pixel coordinates x{0:XSIZE-1},y{0:YSIZE-1}
                      00681 ; output:
                      00682 ;   none
010A                  00683 set_pixel: ; ( x y -- )
010A   2???           00684     call set_pixel_ptr
010B   0480           00685     iorwf INDF0,F
010C   0008           00686     return
                      00687 
                      00688 ; clear_pixel
                      00689 ; set x,y pixel to 0
                      00690 ; input:
                      00691 ;   x,y pixel coordinates x{0:XSIZE-1},y{0:YSIZE-1}
                      00692 ; output:
                      00693 ;   none
010D                  00694 clear_pixel: ; ( x y -- )
010D   2???           00695     call set_pixel_ptr
010E   0989           00696     comf WREG
010F   0580           00697     andwf INDF0,F
0110   0008           00698     return
                      00699 
                      00700 ; get_pixel    
                      00701 ; return state of pixel
                      00702 ; input:
                      00703 ;   x,y pixel coordinates x{0:XSIZE-1},y{0:YSIZE-1}
                      00704 ; output:
                      00705 ;   WREG=0|2^n  where n{0:7}
                      00706 ;   Z=1 when T==0    
0111                  00707 get_pixel: ; ( x y -- )
0111   2???           00708     call set_pixel_ptr
0112   0500           00709     andwf INDF0,W
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  19:53:03         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0113   0008           00710     return
                      00711     
                      00712 ; xor_pixel
                      00713 ; inverse pixel at x,y coordinates
                      00714 ; input:
                      00715 ;   x,y pixel coordinates x{0:XSIZE-1},y{0:YSIZE-1}
                      00716 ; output:
                      00717 ;   T= 0|1  collision flag: 0 false, 1 true
0114                  00718 xor_pixel: ; ( x y -- f )
0114   2???           00719     call set_pixel_ptr
0115   0680           00720     xorwf INDF0,F
0116   0500           00721     andwf INDF0,W
0117   3000           00722     movlw 0
0118   1903           00723     skpnz
0119   3001           00724     movlw 1
                      00725     push
011A   001C               M     movwi ++SP
011B   0008           00726     return
                      00727 
                      00728 ;xor_row    
                      00729 ; draw row of 4 pixels
                      00730 ; stop when n==0    
                      00731 ; input:
                      00732 ;   {x,y} left coordinates
                      00733 ;   n pixels to draw, 4 bits in high nibble
                      00734 ;   f collision flag to be modified    
                      00735 ; output:
                      00736 ;   f=collision flag, return modified value   
                      00737 ; >> no bank dependency << 
011C                  00738 xor_row: ; ( f n x y -- f )
                      00739 ; bounds check y
011C   1B81           00740     btfsc T,7
011D   3???           00741     bra xor_row_done ; y<0 out of screen
011E   3020           00742     movlw YSIZE
011F   0201           00743     subwf T,W
0120   1803           00744     skpnc
0121   3???           00745     bra xor_row_done ; y>=YSIZE out of screen
0122                  00746 xor_row01:    
                      00747 ; check for empty row
                      00748     pick 2 ; check if n==0
0122   3F7E               M     moviw -2[SP]
0123   1903           00749     skpnz
0124   3???           00750     bra xor_row_done ; row empty nothing to do
0125   3589           00751     lslf WREG
                      00752     insert 2  ; save shifted n
0126   3FFE               M    movwi -2[SP]
0127   1C03           00753     skpc
0128   3???           00754     bra xor_row02 ; bit==0 no draw
                      00755 ; bounds check x{0:XSIZE-1}    
                      00756     pick 1  ; WREG=x
0129   3F7F               M     moviw -1[SP]
012A   1B89           00757     btfsc WREG,7 
012B   3???           00758     bra xor_row02 ; x<0 out of screen
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  19:53:03         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

012C   3C2F           00759     sublw XSIZE-1
012D   1C03           00760     skpc
012E   3???           00761     bra xor_row_done ; x>=XSIZE out of screen
                      00762     over ; f n x y x 
012F   3F7F               M     moviw -1[SP]
                          M     push
0130   001C               M     movwi ++SP
                      00763     over ; f n x y x y
0131   3F7F               M     moviw -1[SP]
                          M     push
0132   001C               M     movwi ++SP
0133   2???           00764     call xor_pixel ; -- f n x y f
                      00765     pick 4 ; pick flag
0134   3F7C               M     moviw -4[SP]
0135   0481           00766     iorwf T,F
                      00767     pop      ; -- f n x y
0136   0017               M     moviw SP--
                      00768     insert 3 ; store modified flag
0137   3FFD               M    movwi -3[SP]
0138                  00769 xor_row02:
                      00770     inc_n 1  ; x+=1
0138   3F7F               M     moviw -1[SP]
0139   0A89               M     incf WREG,F
013A   3FFF               M     movwi -1[SP]
013B   3???           00771     bra xor_row01
013C                  00772 xor_row_done: ; f n x y
                      00773     drop_n 3  ; only keep f
013C   317D               M     addfsr SP,-3
013D   0008           00774     return
                      00775 
                      00776 ;get_flash_word    
                      00777 ; read flash memory word
                      00778 ; input:
                      00779 ;   lo is low byte of address
                      00780 ;   hi is high byte of address
                      00781 ;   ofs offset in table {0:255}    
                      00782 ; output:
                      00783 ;   PMDATH:PMDAL contain 14 bits data word
                      00784 ;reset <nibble> variable 
                      00785 ; >> modify BSR <<    
013E                  00786 get_flash_word: ; ( ofs lo hi -- )
013E   0023           00787     banksel PMADR
                      00788     pop
013F   0017               M     moviw SP--
0140   0092           00789     movwf PMADRH
                      00790     pop
0141   0017               M     moviw SP--
0142   0091           00791     movwf PMADRL
                      00792     pop
0143   0017               M     moviw SP--
0144   0791           00793     addwf PMADRL
0145   0103           00794     clrw 
0146   3D92           00795     addwfc PMADRH
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  19:53:03         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0147                  00796 read_flash:    
0147   1315           00797     bcf PMCON1,CFGS
0148   1415           00798     bsf PMCON1, RD
0149   0000           00799     nop
014A   0000           00800     nop
014B   01??           00801     clrf nibble
014C   0008           00802     return
                      00803 
                      00804 ;next_flash_word    
                      00805 ; increament pointer 
                      00806 ; and read next flash word    
                      00807 ; >> modify BSR <<    
014D                  00808 next_flash_word:
014D   0023           00809     banksel PMADR
014E   0A91           00810     incf PMADRL
014F   1903           00811     skpnz
0150   0A92           00812     incf PMADRH
0151   3???           00813     bra read_flash
                      00814 
                      00815 ;get_nibble    
                      00816 ;get nibble from PMDAT
                      00817 ; input:
                      00818 ;   none    
                      00819 ; output:
                      00820 ;   T=nibble in bits 7:4
                      00821 ; increment 'nibble' variable    
                      00822 ; >> modify BSR <<    
0152                  00823 get_nibble: ; ( -- nibble )
0152   3003           00824     movlw 3
0153   06??           00825     xorwf nibble,W
0154   1903           00826     skpnz 
0155   2???           00827     call next_flash_word
0156   0023           00828     banksel PMDAT
                      00829 ; select nibble in word    
0157   08??           00830     movfw nibble
0158   1903           00831     skpnz
0159   3???           00832     bra row0
015A   0B89           00833     decfsz WREG
015B   3???           00834     bra row2
015C                  00835 row1:    
015C   0813           00836     movfw PMDATL
015D   3???           00837     bra nibble_mask
015E                  00838 row2:
015E   0E13           00839     swapf PMDATL,W
015F   3???           00840     bra nibble_mask
0160                  00841 row0:    
0160   0E14           00842     swapf PMDATH,W
0161                  00843 nibble_mask:
0161   39F0           00844     andlw 0xf0
                      00845     push
0162   001C               M     movwi ++SP
0163   0A??           00846     incf nibble,F ; advance nibble counter
0164   0008           00847     return
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  19:53:03         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00848 
                      00849 ;print_row    
                      00850 ; print 4 pixels row
                      00851 ; inputs:
                      00852 ;   x,y left coordinates
                      00853 ;   f  collision flag
                      00854 ; output:    
                      00855 ;   advance y coordinate for next row    
0165                  00856 print_row: ; ( x y f -- x y f )     
0165   2???           00857     call get_nibble ; x y f -- x y f n 
                      00858     pick 3 ; x
0166   3F7D               M     moviw -3[SP]
                      00859     push    ; x y f n x
0167   001C               M     movwi ++SP
                      00860     pick 3  ; y
0168   3F7D               M     moviw -3[SP]
                      00861     push      ; x y f n x y
0169   001C               M     movwi ++SP
016A   2???           00862     call xor_row ; x y f n x y -- x y f
                      00863     inc_n 1 ; y+=1
016B   3F7F               M     moviw -1[SP]
016C   0A89               M     incf WREG,F
016D   3FFF               M     movwi -1[SP]
016E   0008           00864     return
                      00865 
                      00866 ;print_char     
                      00867 ; draw character in video_buffer 
                      00868 ; input:
                      00869 ;   x,y left/top coordinates
                      00870 ;   c   character to print    
016F                  00871 print_char: ; ( x y c -- )
016F   3581           00872     lslf T ; 2 words per table entry
                      00873     lit low(digits)
0170   30??               M    movlw low(digits)
0171   001C               M    movwi ++SP 
                      00874     lit high(digits) ; x y ofs adrL adrH
0172   30??               M    movlw high(digits)
0173   001C               M    movwi ++SP 
0174   2???           00875     call get_flash_word  ; -- x y 
                      00876     lit 0   ; x y f=0
0175   3000               M    movlw 0
0176   001C               M    movwi ++SP 
0177   2???           00877     call print_row
0178   2???           00878     call print_row
0179   2???           00879     call print_row 
017A   2???           00880     call print_row 
017B   2???           00881     call print_row 
                      00882     drop_n 3  ; ( x y f -- )
017C   317D               M     addfsr SP,-3
017D   0008           00883     return
                      00884 
                      00885 ;print_tetrim    
                      00886 ; print current tetriminos
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  19:53:03         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00887 ; input:
                      00888 ;   arguments in game variables   
                      00889 ;   titrim: tetriminos id
                      00890 ;   angle: rotation angle    
                      00891 ;   tx,ty  left/top coordinates
                      00892 ; output:
                      00893 ;   collision flag,  0 if no collision    
                      00894 ; >> modify BSR <<    
017E                  00895 print_tetrim: ; (  -- f )
017E   0020           00896     banksel GAME_VAR
017F   35??           00897     lslf tetrim,W
0180   3589           00898     lslf WREG
                      00899     push
0181   001C               M     movwi ++SP
0182   3018           00900     movlw 24
0183   0201           00901     subwf T,W
0184   1803           00902     skpnc
0185   3???           00903     bra ti ; I tetrominos
0186   08??           00904     movfw angle
0187   0781           00905     addwf T,F
0188   30??           00906     movlw low(tetriminos)
                      00907     push    ; ofs addrL
0189   001C               M     movwi ++SP
018A   30??           00908     movlw high(tetriminos)
                      00909     push    ; ofs addrL addrH
018B   001C               M     movwi ++SP
018C   3???           00910     bra prt01
018D                  00911 ti: ; special treatment for I tetriminos 2 words per table entry
018D   0181           00912     clrf T
018E   35??           00913     lslf angle,W
018F   0781           00914     addwf T,F
0190   30??           00915     movlw low(I0) 
                      00916     push     ; ofs addrL
0191   001C               M     movwi ++SP
0192   30??           00917     movlw high(I0)
                      00918     push     ; ofs addrL addrH
0193   001C               M     movwi ++SP
0194                  00919 prt01:    
0194   2???           00920     call get_flash_word  ; of addrL addrH --
0195   0020           00921     banksel GAME_VAR
0196   08??           00922     movfw tx
                      00923     push    ; -- x
0197   001C               M     movwi ++SP
0198   08??           00924     movfw ty
                      00925     push    ; -- x y 
0199   001C               M     movwi ++SP
                      00926     lit 0   ; -- x y f
019A   3000               M    movlw 0
019B   001C               M    movwi ++SP 
019C   2???           00927     call print_row ; x y f -- x y+1 f
019D   2???           00928     call print_row
019E   2???           00929     call print_row
019F   0023           00930     banksel PMDAT
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  19:53:03         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01A0   3030           00931     movlw 0x30
01A1   0514           00932     andwf PMDATH,W
01A2   1903           00933     skpnz
01A3   2???           00934     call print_row
01A4   0801           00935     movfw T
                      00936     drop_n 3
01A5   317D               M     addfsr SP,-3
                      00937     push  ; -- f
01A6   001C               M     movwi ++SP
01A7   0008           00938     return
                      00939 
                      00940 ;print_label    
                      00941 ;print a text line stored in program memory
                      00942 ; text terminated by 0xff
                      00943 ; input: 
                      00944 ;  x,y left coordinates
                      00945 ;  idx  index of message in table 'labels'   
01A8                  00946 print_label: ; ( x y idx -- )
                      00947     lit 0    ; x y idx i  'i' is array indice
01A8   3000               M    movlw 0
01A9   001C               M    movwi ++SP 
01AA                  00948 prt_lbl_loop:
                      00949     dup      ; x y idx i i
01AA   0801               M     movfw T
01AB   001C               M     movwi ++SP
                      00950     pick 2   ; WREG=idx
01AC   3F7E               M     moviw -2[SP]
01AD   2???           00951     call labels ; x y idx i i -- x y idx i  
01AE   1B89           00952     btfsc WREG,7
01AF   3???           00953     bra prt_lbl_done
                      00954     push ; x y idx i c
01B0   001C               M     movwi ++SP
                      00955     pick 4
01B1   3F7C               M     moviw -4[SP]
                      00956     push    ; x y idx i c x 
01B2   001C               M     movwi ++SP
                      00957     pick 4
01B3   3F7C               M     moviw -4[SP]
                      00958     push    ; x y idx i c x y
01B4   001C               M     movwi ++SP
                      00959     ;rot            ; x y idx i x y c
                      00960     pick 2 ; WREG = c
01B5   3F7E               M     moviw -2[SP]
                      00961     push   ;  x y idc i c x y c
01B6   001C               M     movwi ++SP
01B7   2???           00962     call print_char ; -- x y idx i c
                      00963     drop    ; x y idx i 
01B8   317F               M    addfsr SP,-1
01B9   0A81           00964     incf T
                      00965     pick 3    ; x
01BA   3F7D               M     moviw -3[SP]
01BB   3E04           00966     addlw 4   ; x+=4
                      00967     insert 3  
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  19:53:03         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01BC   3FFD               M    movwi -3[SP]
01BD   3???           00968     bra prt_lbl_loop
01BE                  00969 prt_lbl_done:
                      00970     drop_n 4
01BE   317C               M     addfsr SP,-4
01BF   0008           00971     return
                      00972     
                      00973 ;print_int
                      00974 ;print an integer
                      00975 ;from right to left ( least significant digit first)
                      00976 ; input:    
                      00977 ;   x,y  coordinate right end
                      00978 ;   number to print in acca    
                      00979 ; output:
                      00980 ;   none
                      00981 ; condition:    
                      00982 ;   accbL contain digit after div10 call    
01C0                  00983 print_int: ; ( x y -- )
01C0   08??           00984     movfw accaH
01C1   04??           00985     iorwf accaL,W
01C2   1903           00986     skpnz
01C3   3???           00987     bra print_last
                      00988     over
01C4   3F7F               M     moviw -1[SP]
                          M     push
01C5   001C               M     movwi ++SP
                      00989     over    ; x y x y
01C6   3F7F               M     moviw -1[SP]
                          M     push
01C7   001C               M     movwi ++SP
01C8   2???           00990     call div10
01C9   08??           00991     movfw accbL ; remainder of division
                      00992     push   ; x y x y d
01CA   001C               M     movwi ++SP
01CB   2???           00993     call print_char ; -- x y 
                      00994     pick 1
01CC   3F7F               M     moviw -1[SP]
                      00995     push
01CD   001C               M     movwi ++SP
01CE   3004           00996     movlw 4
01CF   0281           00997     subwf T,F
                      00998     pop
01D0   0017               M     moviw SP--
                      00999     insert 1
01D1   3FFF               M    movwi -1[SP]
01D2   3???           01000     bra print_int
01D3                  01001 print_last:
                      01002     pick 1
01D3   3F7F               M     moviw -1[SP]
01D4   3A2B           01003     xorlw 43
01D5   1D03           01004     skpz
01D6   3???           01005     bra no_zero
                      01006     push
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  19:53:03         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01D7   001C               M     movwi ++SP
01D8   3???           01007     bra print_char
01D9                  01008 no_zero:
                      01009     drop_n 2
01D9   317E               M     addfsr SP,-2
01DA   0008           01010     return
                      01011     
                      01012 ; draw horizontal line ( length  y x -- )
                      01013 ; inputs:
                      01014 ;   length of line
                      01015 ;   {x,y} left coordinates       
01DB                  01016 hline:
                      01017     pick 2
01DB   3F7E               M     moviw -2[SP]
01DC   1903           01018     skpnz
01DD   3???           01019     bra hline_done
01DE   0389           01020     decf WREG
                      01021     insert 2
01DF   3FFE               M    movwi -2[SP]
                      01022     dup     ; len y x x
01E0   0801               M     movfw T
01E1   001C               M     movwi ++SP
                      01023     pick 2
01E2   3F7E               M     moviw -2[SP]
                      01024     push    ; len y x x y
01E3   001C               M     movwi ++SP
01E4   2???           01025     call xor_pixel
                      01026     drop
01E5   317F               M    addfsr SP,-1
01E6   0A81           01027     incf T  ; len y x+1
01E7   3???           01028     bra hline
01E8                  01029 hline_done:    
                      01030     drop_n 3
01E8   317D               M     addfsr SP,-3
01E9   0008           01031     return
                      01032 
                      01033 ; vline    
                      01034 ;draw vertical line ( length x y -- )
                      01035 ; inputs:
                      01036 ;   length of line
                      01037 ;   {x,y} top coordinates
01EA                  01038 vline:  ; ( len x y -- ) 
                      01039     pick 2 
01EA   3F7E               M     moviw -2[SP]
01EB   1903           01040     skpnz
01EC   3???           01041     bra vline_done
01ED   0389           01042     decf WREG
                      01043     insert 2
01EE   3FFE               M    movwi -2[SP]
                      01044     over     ; l x y x
01EF   3F7F               M     moviw -1[SP]
                          M     push
01F0   001C               M     movwi ++SP
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  19:53:03         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01045     over     ; l x y x y    
01F1   3F7F               M     moviw -1[SP]
                          M     push
01F2   001C               M     movwi ++SP
01F3   2???           01046     call xor_pixel ; -- l x y f
                      01047     drop
01F4   317F               M    addfsr SP,-1
01F5   0A81           01048     incf T,F
01F6   3???           01049     bra vline
01F7                  01050 vline_done:
                      01051     drop_n 3
01F7   317D               M     addfsr SP,-3
01F8   0008           01052     return
                      01053     
  0000000A            01054 WELL_WIDTH equ 10
  00000016            01055 WELL_DEPTH equ 22 
01F9                  01056 game_init:
01F9   2???           01057     call clear_screen
                      01058 ; draw game well    
                      01059     lit WELL_DEPTH ; len
01FA   3016               M    movlw WELL_DEPTH
01FB   001C               M    movwi ++SP 
                      01060     lit 0          ; len x
01FC   3000               M    movlw 0
01FD   001C               M    movwi ++SP 
                      01061     lit 0          ; len x y
01FE   3000               M    movlw 0
01FF   001C               M    movwi ++SP 
0200   2???           01062     call vline
                      01063     lit WELL_DEPTH
0201   3016               M    movlw WELL_DEPTH
0202   001C               M    movwi ++SP 
                      01064     lit WELL_WIDTH+1
0203   300B               M    movlw WELL_WIDTH+1
0204   001C               M    movwi ++SP 
                      01065     lit 0
0205   3000               M    movlw 0
0206   001C               M    movwi ++SP 
0207   2???           01066     call vline
                      01067     lit WELL_WIDTH+2
0208   300C               M    movlw WELL_WIDTH+2
0209   001C               M    movwi ++SP 
                      01068     lit WELL_DEPTH
020A   3016               M    movlw WELL_DEPTH
020B   001C               M    movwi ++SP 
                      01069     lit 0
020C   3000               M    movlw 0
020D   001C               M    movwi ++SP 
020E   2???           01070     call hline
                      01071 ; print "SCORE" label    
                      01072     lit WELL_WIDTH+3 ; x
020F   300D               M    movlw WELL_WIDTH+3
0210   001C               M    movwi ++SP 
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  19:53:03         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01073     lit 0            ; y
0211   3000               M    movlw 0
0212   001C               M    movwi ++SP 
                      01074     lit LBL_SCORE         
0213   3000               M    movlw LBL_SCORE
0214   001C               M    movwi ++SP 
0215   2???           01075     call print_label
                      01076 ; print "LINES" label    
                      01077     lit WELL_WIDTH+3 ; x
0216   300D               M    movlw WELL_WIDTH+3
0217   001C               M    movwi ++SP 
                      01078     lit 12           ; y
0218   300C               M    movlw 12
0219   001C               M    movwi ++SP 
                      01079     lit LBL_LINES
021A   3001               M    movlw LBL_LINES
021B   001C               M    movwi ++SP 
021C   2???           01080     call print_label
                      01081 ; variables initialization
021D   1600           01082     bsf flags,F_GSTOP
021E                  01083 clear_score:
021E   0020           01084     banksel GAME_VAR
021F   01??           01085     clrf scoreL
0220   01??           01086     clrf scoreH
0221   01??           01087     clrf droppedL
0222   01??           01088     clrf droppedH
0223   0008           01089     return
                      01090 
                      01091 ; drop 1 row
                      01092 ; input:
                      01093 ;   r  row to drop
                      01094 ; output:
                      01095 ;   none
0224                  01096 drop1: ; ( r -- )
                      01097     reserve 1 ; r x  
0224   3141               M     addfsr SP, 1 
0225                  01098 row_loop: ; y{r:1}
0225   300A           01099     movlw 10
0226   0081           01100     movwf T ; -- r x
0227                  01101 col_loop:  ; x{10:1}
                      01102     dup   ; -- r x x
0227   0801               M     movfw T
0228   001C               M     movwi ++SP
                      01103     pick 2
0229   3F7E               M     moviw -2[SP]
022A   0389           01104     decf WREG
                      01105     push  ; -- r x x r-1
022B   001C               M     movwi ++SP
022C   2???           01106     call get_pixel ; -- r x p
022D   00??           01107     movwf t0
                      01108     dup         ; r x x
022E   0801               M     movfw T
022F   001C               M     movwi ++SP
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  19:53:03         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01109     pick 2
0230   3F7E               M     moviw -2[SP]
                      01110     push        ; r x x r
0231   001C               M     movwi ++SP
0232   08??           01111     movf t0,F
0233   1D03           01112     skpz
0234   3???           01113     bra drop00
0235   2???           01114     call clear_pixel ;  r x x r -- r x
0236   3???           01115     bra next_pixel
0237                  01116 drop00:
0237   2???           01117     call set_pixel ; r x x r -- r x
0238                  01118 next_pixel:    
0238   0B81           01119     decfsz T    ; r x-1 
0239   3???           01120     bra col_loop
                      01121     dec_n 1  ; dec r
023A   3F7F               M     moviw -1[SP]
023B   0389               M     decf WREG,F
023C   3FFF               M     movwi -1[SP]
023D   1D03           01122     skpz 
023E   3???           01123     bra row_loop
                      01124     drop_n 2
023F   317E               M     addfsr SP,-2
0240   0008           01125     return
                      01126     
                      01127     
  00000000            01128 ROW_EMPTY equ 0     
  0000000A            01129 ROW_FULL equ 10 ; 10 bits in row
                      01130 ; query_row 
                      01131 ; check the state of well row
                      01132 ; input:
                      01133 ;   s number of bits set initialized at 0 by caller    
                      01134 ;   r row number: 0 top, 21 bottom  
                      01135 ; output:    
                      01136 ;   s={0:10}  number of bits set
0241                  01137 query_row: ; ( s=0 r -- s=0:10 )
                      01138     lit 10 ; s r x   ; check x from  10 to 1
0241   300A               M    movlw 10
0242   001C               M    movwi ++SP 
0243                  01139 qr00:
                      01140     dup   ; s r x x
0243   0801               M     movfw T
0244   001C               M     movwi ++SP
                      01141     pick 2 
0245   3F7E               M     moviw -2[SP]
                      01142     push  ; s r x x y
0246   001C               M     movwi ++SP
0247   2???           01143     call get_pixel ; -- s r x
0248   1903           01144     skpnz   ; Z modified by get_pixel
0249   3???           01145     bra qr01
                      01146     inc_n 2
024A   3F7E               M     moviw -2[SP]
024B   0A89               M     incf WREG,F
024C   3FFE               M     movwi -2[SP]
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  19:53:03         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

024D                  01147 qr01:    
024D   0B81           01148     decfsz T
024E   3???           01149     bra qr00
                      01150     drop_n 2 ; -- s
024F   317E               M     addfsr SP,-2
0250   0008           01151     return
                      01152 
                      01153 ; count and drop full rows
                      01154 ; input:
                      01155 ;   none
                      01156 ; output:
                      01157 ;   n number of droppend rows
                      01158 ;condition:
                      01159 ;  check each row from bottom up
                      01160 ;  stop at first empty row
                      01161 ;  full rows are dropped    
0251                  01162 count_full: ; ( -- n)
                      01163     lit 0 ; full rows counter
0251   3000               M    movlw 0
0252   001C               M    movwi ++SP 
                      01164     lit 21 ; row number {21:1}
0253   3015               M    movlw 21
0254   001C               M    movwi ++SP 
0255                  01165 count_loop:
                      01166     lit 0   ; n r s  number of bits set
0255   3000               M    movlw 0
0256   001C               M    movwi ++SP 
                      01167     over    ; n r s r
0257   3F7F               M     moviw -1[SP]
                          M     push
0258   001C               M     movwi ++SP
0259   2???           01168     call query_row ; n r s r -- n r s
                      01169     pop     ; n r
025A   0017               M     moviw SP--
025B   1903           01170     skpnz
025C   3???           01171     bra count_done
025D   3A0A           01172     xorlw 10
025E   1D03           01173     skpz
025F   3???           01174     bra next_row
                      01175 ; this is a full row    
                      01176     inc_n 1 ; increment n
0260   3F7F               M     moviw -1[SP]
0261   0A89               M     incf WREG,F
0262   3FFF               M     movwi -1[SP]
                      01177     dup    ; n r r
0263   0801               M     movfw T
0264   001C               M     movwi ++SP
0265   2???           01178     call drop1 ; n r r -- n r
0266   0A81           01179     incf T,F
0267                  01180 next_row:
0267   0B81           01181     decfsz T,F
0268   3???           01182     bra count_loop
0269                  01183 count_done:
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  19:53:03         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01184     drop   ; n r -- n
0269   317F               M    addfsr SP,-1
026A   0008           01185     return
                      01186     
                      01187 ; generate a new tetriminos
                      01188 ; input:
                      01189 ;   none
                      01190 ; output:
                      01191 ;   none
026B                  01192 new_tminos:
026B   0020           01193     banksel GAME_VAR
026C   3007           01194     movlw 7
026D   05??           01195     andwf randL,W
026E   3A07           01196     xorlw 7
026F   1D03           01197     skpz
0270   3A07           01198     xorlw 7
0271   00??           01199     movwf tetrim
0272   3003           01200     movlw 3
0273   05??           01201     andwf randH,W
0274   00??           01202     movwf angle
0275   3004           01203     movlw 4
0276   00??           01204     movwf tx
0277   01??           01205     clrf ty
0278   2???           01206     call print_tetrim
                      01207     pop
0279   0017               M     moviw SP--
027A   1D03           01208     skpz
027B   1600           01209     bsf flags, F_GSTOP
027C   2???           01210     call print_tetrim
                      01211     pop
027D   0017               M     moviw SP--
027E   0008           01212     return
                      01213  
                      01214 ; wait player start signal
                      01215 ; button A pressed    
027F                  01216 wait_start:
                      01217 #ifdef SOUND_SUPPORT    
027F   0103           01218     clrw
0280   2???           01219     call korobeiniki
                      01220     push    ; count
0281   001C               M     movwi ++SP
                      01221     lit 0   ; sequence
0282   3000               M    movlw 0
0283   001C               M    movwi ++SP 
0284                  01222 koro:
0284   0A81           01223     incf T,F ; -- count sequence
0285   0801           01224     movfw T  ; WREG=sequence
0286   2???           01225     call korobeiniki
                      01226     push    ; -- count sequence duration
0287   001C               M     movwi ++SP
                      01227     inc_n 1 ;
0288   3F7F               M     moviw -1[SP]
0289   0A89               M     incf WREG,F
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  19:53:03         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

028A   3FFF               M     movwi -1[SP]
                      01228     pick 1  
028B   3F7F               M     moviw -1[SP]
028C   2???           01229     call korobeiniki
                      01230     push    ; -- count nidx duration note
028D   001C               M     movwi ++SP
028E   2???           01231     call tone  ; -- count nidx 
                      01232     wait_sound
028F   1A80               M     btfsc flags,F_SND
0290   3???               M     bra $-1
0291   2???           01233     call read_pad
0292   1A00           01234     btfsc buttons, BTN_A
0293   3???           01235     bra wait_end
                      01236     dec_n 1
0294   3F7F               M     moviw -1[SP]
0295   0389               M     decf WREG,F
0296   3FFF               M     movwi -1[SP]
0297   1D03           01237     skpz
0298   3???           01238     bra koro
                      01239     drop_n 2
0299   317E               M     addfsr SP,-2
                      01240     pause 60
                          M     start_timer 60
029A   303C               M     movlw 60
029B   00??               M     movwf gtimer
029C   1580               M     bsf flags, F_GTMR
                          M     wait_timer
029D   1980               M     btfsc flags, F_GTMR
029E   3???               M     bra $-1
029F   3???           01241     bra wait_start
02A0                  01242 wait_end:    
                      01243     drop_n 2
02A0   317E               M     addfsr SP,-2
                      01244 #else
                      01245     pause 20
                      01246     call read_pad
                      01247     btfss buttons, BTN_A
                      01248     bra wait_start
                      01249 #endif    
02A1   2???           01250     call clear_score
02A2   1200           01251     bcf flags, F_GSTOP
02A3   0008           01252     return
                      01253  
                      01254 ; collision test
                      01255 ; after rotation or translation
                      01256 ; input:
                      01257 ;   none
                      01258 ; output:
                      01259 ;   none
02A4                  01260 coll_test: 
02A4   1300           01261     bcf flags, F_COLL
02A5   2???           01262     call print_tetrim ; collision test
                      01263     pop
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  19:53:03         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02A6   0017               M     moviw SP--
02A7   1D03           01264     skpz
02A8   1700           01265     bsf flags, F_COLL
02A9   2???           01266     call print_tetrim ; erase it
                      01267     pop
02AA   0017               M     moviw SP--
02AB   1F00           01268     btfss flags, F_COLL
02AC   0008           01269     return
02AD   0020           01270     banksel GAME_VAR
                      01271 ;    movfw buttons
                      01272     case BTN_A, undo_hard_drop
02AE   1A00               M     btfsc buttons,BTN_A
02AF   3???               M     bra undo_hard_drop
                      01273     case BTN_B, undo_soft_drop
02B0   1A80               M     btfsc buttons,BTN_B
02B1   3???               M     bra undo_soft_drop
                      01274     case BTN_UP, undo_rot_right
02B2   1800               M     btfsc buttons,BTN_UP
02B3   3???               M     bra undo_rot_right
                      01275     case BTN_DN, undo_rot_left
02B4   1880               M     btfsc buttons,BTN_DN
02B5   3???               M     bra undo_rot_left
                      01276     case BTN_RT, undo_move_right
02B6   1980               M     btfsc buttons,BTN_RT
02B7   3???               M     bra undo_move_right
                      01277     case BTN_LT, undo_move_left
02B8   1900               M     btfsc buttons,BTN_LT
02B9   3???               M     bra undo_move_left
02BA   0008           01278     return
02BB                  01279 undo_hard_drop:
02BB   0008           01280     return
02BC                  01281 undo_soft_drop:
02BC   0008           01282     return
02BD                  01283 undo_rot_right:
02BD   03??           01284     decf angle,F
02BE   3003           01285     movlw 3
02BF   05??           01286     andwf angle,F
02C0   0008           01287     return
02C1                  01288 undo_rot_left:
02C1   0A??           01289     incf angle,F
02C2   3003           01290     movlw 3
02C3   05??           01291     andwf angle,F
02C4   0008           01292     return
02C5                  01293 undo_move_right:
02C5   03??           01294     decf tx,F
02C6   0008           01295     return
02C7                  01296 undo_move_left:
02C7   0A??           01297     incf tx,F
02C8   0008           01298     return
                      01299 
                      01300 ; print score and lines
                      01301 ; input:
                      01302 ;   none
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  19:53:03         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01303 ; output:
                      01304 ;   none
02C9                  01305 update_display:    
                      01306 ; print score
02C9   0020           01307     banksel GAME_VAR
02CA   08??           01308     movfw scoreL
02CB   00??           01309     movwf accaL
02CC   08??           01310     movfw scoreH
02CD   00??           01311     movwf accaH
                      01312     lit 43
02CE   302B               M    movlw 43
02CF   001C               M    movwi ++SP 
                      01313     lit 6
02D0   3006               M    movlw 6
02D1   001C               M    movwi ++SP 
02D2   2???           01314     call print_int
                      01315 ;print dropped line
02D3   0020           01316     banksel GAME_VAR
02D4   08??           01317     movfw droppedL
02D5   00??           01318     movwf accaL
02D6   08??           01319     movfw droppedH
02D7   00??           01320     movwf accaH
                      01321     lit 43
02D8   302B               M    movlw 43
02D9   001C               M    movwi ++SP 
                      01322     lit 18
02DA   3012               M    movlw 18
02DB   001C               M    movwi ++SP 
02DC   2???           01323     call print_int
02DD   0008           01324     return
                      01325     
                      01326 ;;;;;;;;;;;;;;;;;;;;;;;;;
                      01327 ;   game logic
                      01328 ;;;;;;;;;;;;;;;;;;;;;;;;;    
02DE                  01329 tetris:
02DE   2???           01330     call update_display
                      01331 ;print start prompt
                      01332     lit 0
02DF   3000               M    movlw 0
02E0   001C               M    movwi ++SP 
                      01333     lit 24
02E1   3018               M    movlw 24
02E2   001C               M    movwi ++SP 
                      01334     lit LBL_PRESS
02E3   3002               M    movlw LBL_PRESS
02E4   001C               M    movwi ++SP 
02E5   2???           01335     call print_label
                      01336 ; wait button A press
                      01337 ; to start game    
02E6   2???           01338     call wait_start 
                      01339 ; delete prompt
                      01340     lit 0
02E7   3000               M    movlw 0
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  19:53:03         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02E8   001C               M    movwi ++SP 
                      01341     lit 24
02E9   3018               M    movlw 24
02EA   001C               M    movwi ++SP 
                      01342     lit LBL_PRESS
02EB   3002               M    movlw LBL_PRESS
02EC   001C               M    movwi ++SP 
02ED   2???           01343     call print_label
                      01344 ; game start here
02EE                  01345 game_loop:
                      01346 ; generate new tetriminos
                      01347 ; if collision at this stage
                      01348 ; game is over
02EE   2???           01349     call new_tminos
02EF   1E00           01350     btfss flags, F_GSTOP
02F0   3???           01351     bra fall_loop
                      01352 #ifdef SOUND_SUPPORT    
                      01353     lit 30
02F1   301E               M    movlw 30
02F2   001C               M    movwi ++SP 
                      01354     lit 19
02F3   3013               M    movlw 19
02F4   001C               M    movwi ++SP 
02F5   2???           01355     call tone
                      01356     wait_sound
02F6   1A80               M     btfsc flags,F_SND
02F7   3???               M     bra $-1
                      01357 #else
                      01358     pause 60
                      01359 #endif    
02F8   2???           01360     call game_init
02F9   3???           01361     bra tetris
02FA                  01362 fall_loop: ; tetriminos fall in the well
02FA   2???           01363     call print_tetrim
                      01364     pop
02FB   0017               M     moviw SP--
                      01365     pause 10
                          M     start_timer 10
02FC   300A               M     movlw 10
02FD   00??               M     movwf gtimer
02FE   1580               M     bsf flags, F_GTMR
                          M     wait_timer
02FF   1980               M     btfsc flags, F_GTMR
0300   3???               M     bra $-1
0301   2???           01366     call print_tetrim ; erase tetriminos
                      01367     pop
0302   0017               M     moviw SP--
                      01368 ; read pad
0303   2???           01369     call read_pad
0304   0020           01370     banksel GAME_VAR
                      01371     case BTN_A, hard_drop
0305   1A00               M     btfsc buttons,BTN_A
0306   3???               M     bra hard_drop
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  19:53:03         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01372     case BTN_B, soft_drop
0307   1A80               M     btfsc buttons,BTN_B
0308   3???               M     bra soft_drop
                      01373     case BTN_UP, rot_right
0309   1800               M     btfsc buttons,BTN_UP
030A   3???               M     bra rot_right
                      01374     case BTN_DN, rot_left
030B   1880               M     btfsc buttons,BTN_DN
030C   3???               M     bra rot_left
                      01375     case BTN_RT, move_right
030D   1980               M     btfsc buttons,BTN_RT
030E   3???               M     bra move_right
                      01376     case BTN_LT, move_left
030F   1900               M     btfsc buttons,BTN_LT
0310   3???               M     bra move_left
0311   3???           01377     bra move_down
0312                  01378 hard_drop:
0312   3???           01379     bra move_down
0313                  01380 soft_drop:
0313   3???           01381     bra move_down
0314                  01382 rot_left:
0314   03??           01383     decf angle,F
0315   3003           01384     movlw 3
0316   05??           01385     andwf angle,F
0317   2???           01386     call coll_test
0318   3???           01387     bra move_down
0319                  01388 rot_right:
0319   0A??           01389     incf angle,F
031A   3003           01390     movlw 3
031B   05??           01391     andwf angle,F
031C   2???           01392     call coll_test
031D   3???           01393     bra move_down
031E                  01394 move_left:
031E   03??           01395     decf tx,F
031F   2???           01396     call coll_test
0320   3???           01397     bra move_down
0321                  01398 move_right:
0321   0A??           01399     incf tx,F
0322   2???           01400     call coll_test
                      01401 ; move down
0323                  01402 move_down:
0323   1300           01403     bcf flags, F_COLL
0324   0020           01404     banksel GAME_VAR
0325   0A??           01405     incf ty,F ; tetriminos fall
0326   2???           01406     call print_tetrim ; collision test
                      01407     pop
0327   0017               M     moviw SP--
0328   1D03           01408     skpz
0329   1700           01409     bsf flags, F_COLL
032A   2???           01410     call print_tetrim
                      01411     pop
032B   0017               M     moviw SP--
032C   1F00           01412     btfss flags, F_COLL
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  19:53:03         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

032D   3???           01413     bra fall_loop
032E   0020           01414     banksel GAME_VAR
032F   03??           01415     decf ty,F
0330   2???           01416     call print_tetrim
                      01417     pop
0331   0017               M     moviw SP--
                      01418 ; check full row and clean
0332   2???           01419     call update_display ; erase numbers
0333   2???           01420     call count_full
                      01421 ; add full row count to dropped variable
0334   0020           01422     banksel GAME_VAR
0335   0801           01423     movfw T
0336   07??           01424     addwf droppedL,F ; 
0337   0103           01425     clrw
0338   3D??           01426     addwfc droppedH
                      01427 ; count points = 2^n where n is count of dropped rows {1:4}    
0339   0881           01428     movf T,F
033A   1903           01429     skpnz
033B   3???           01430     bra add_points
033C   3001           01431     movlw 1
033D   3589           01432     lslf WREG
033E   0B81           01433     decfsz T,F
033F   3???           01434     bra $-2
0340                  01435 add_points:
0340   07??           01436     addwf scoreL
0341   0103           01437     clrw
0342   3D??           01438     addwfc scoreH
                      01439     drop 
0343   317F               M    addfsr SP,-1
0344   2???           01440     call update_display ; display new values
0345   3???           01441     bra game_loop
0346   0008           01442     return
                      01443     
0347                  01444 init:
                      01445     pstack_init
0347   0187               M     clrf FSR1H
0348   301F               M     movlw S0
0349   0086               M     movwf FSR1L
                      01446 ; ADC configuration
034A   0021           01447     banksel ADCON0
034B   300C           01448     movlw (PAD_CHS<<CHS0)
034C   009D           01449     movwf ADCON0
034D   3020           01450     movlw (2<<ADCS0)
034E   009E           01451     movwf ADCON1
034F   0024           01452     banksel WPUA
0350   120C           01453     bcf WPUA, PAD_PIN
                      01454 ;;;;;;;;;;;;;;;;;;;;;    
0351   0021           01455     banksel TRISA
0352   30F8           01456     movlw ~((1<<SYNC_OUT)|(1<<VIDEO_OUT)|(1<<LED_PIN))
0353   058C           01457     andwf TRISA,F
0354   0022           01458     banksel VIDEO_LAT
0355   108C           01459     bcf VIDEO_LAT,VIDEO_OUT
0356   100C           01460     bcf LATA,LED_PIN
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  19:53:03         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01461 #ifdef SOUND_SUPPORT    
                      01462 ; audio pwm initialization
0357   120C           01463     bcf LATA,AUDIO_PIN
0358   003B           01464     banksel PWM2PH
0359   01A1           01465     clrf PWM2PHL
035A   01A2           01466     clrf PWM2PHH
035B   01A7           01467     clrf PWM2OFL
035C   01A8           01468     clrf PWM2OFH
035D   172B           01469     bsf AUDIO_PWMCON,OE
035E   0022           01470     banksel APFCON
035F   149D           01471     bsf APFCON,P2SEL
                      01472 #endif   
                      01473 ;configure EUSART in sychronsous mode
                      01474 ;to use as pixel serializer
0360   0023           01475     banksel SPBRG
0361   3002           01476     movlw 2
0362   009B           01477     movwf SPBRGL
0363   019C           01478     clrf SPBRGH
0364   019A           01479     clrf TXREG
0365   30B0           01480     movlw (1<<SYNC)|(1<<CSRC)|(1<<TXEN)
0366   009E           01481     movwf TXSTA
0367   179D           01482     bsf RCSTA, SPEN
0368   30CF           01483     movlw ~((1<<CREN)|(1<<SREN))
0369   059D           01484     andwf RCSTA
                      01485 ; configure pwm video sync for horizontal period
036A   003B           01486     banksel SYNC_PWMDCH
036B   01B1           01487     clrf SYNC_PWMPH
036C   01B2           01488     clrf SYNC_PWMPH+1
036D   01BF           01489     clrf SYNC_PWMLDCON
036E   30F5           01490     movlw HORZ_PERIOD&0XFF
036F   00B5           01491     movwf SYNC_PWMPRL
0370   3004           01492     movlw HORZ_PERIOD>>8
0371   00B6           01493     movwf SYNC_PWMPRH
0372   01BE           01494     clrf SYNC_PWMCLKCON
0373   30D0           01495     movlw (3<<OE)|(1<<POL)
0374   00BB           01496     movwf SYNC_PWMCON
0375   305E           01497     movlw HORZ_PULSE&0xff
0376   00B3           01498     movwf SYNC_PWMDCL
0377   3000           01499     movlw HORZ_PULSE>>8
0378   00B4           01500     movwf SYNC_PWMDCH
0379   17BF           01501     bsf SYNC_PWMLDCON,LDA
                      01502    ;enable video interrupt on period match
037A   103D           01503     bcf SYNC_PWMINTF,PRIF
037B   143C           01504     bsf SYNC_PWMINTE,PRIE
                      01505     ; enable peripheral interrupt
037C   0021           01506     banksel SYNC_PIE
037D   1713           01507     bsf SYNC_PIE,SYNC_IE
                      01508     ;enable interrupts
037E   30C0           01509     movlw (1<<GIE)|(1<<PEIE)
037F   008B           01510     movwf INTCON
0380   01??           01511     clrf lcountL
0381   01??           01512     clrf lcountH
0382   01??           01513     clrf flags
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  19:53:03         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01514     ; seed lfsr PRNG
0383   30AC           01515     movlw 0xAC
0384   00??           01516     movwf randL
0385   30E1           01517     movlw 0xE1
0386   00??           01518     movwf randH
                      01519 
                      01520 
                      01521 ;;;;;;; test code ;;;;;;;;;;;;;;
                      01522 
                      01523 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
0387                  01524 main:
0387   2???           01525     call game_init
0388   2???           01526     call tetris
0389   3???           01527     bra main
                      01528   
                      01529 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      01530 ;   data tables
                      01531 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      01532 
                      01533 ; **************** encoding ************************************************
                      01534 ; enhanced PIC instructions are coded on 14 bits
                      01535 ; these 14 bits can be read as data using flash memory
                      01536 ; writing/reading mechanism, see datasheet chapter 10 for detail.
                      01537 ; the 'dw' assembler directive encode data in those 14 bits contrary to 'dt'
                      01538 ; directive which encode a single byte as a RETLW instruction.
                      01539 ; So we get a 50% compression by encoding 3 nibbles/flash word. 
                      01540 ; the encoding used in the following tables is as follow:    
                      01541 ; bits 13:12  number of nibbles where 0 means there is more than 3 nibbles
                      01542 ; in this data chunk so 1 or more other words follow this one.    
                      01543 ; other 12 bits are sliced in 4 bits nibbles.
                      01544 ;****************************************************************************
                      01545 
038A                  01546 digits: ; each digit is 5 rows
038A   0EAA 2AE0      01547     dw 0x0EAA,0x2AE0 ; 0
038C   04C4 24E0      01548     dw 0x04C4,0x24E0 ; 1
038E   0E2E 28E0      01549     dw 0x0E2E,0x28E0 ; 2
0390   0E2E 22E0      01550     dw 0x0E2E,0x22E0 ; 3
0392   0AAE 2220      01551     dw 0x0AAE,0x2220 ; 4
0394   0E8E 22E0      01552     dw 0x0E8E,0x22E0 ; 5
0396   088E 2AE0      01553     dw 0x088E,0x2AE0 ; 6
0398   0E22 2220      01554     dw 0x0E22,0x2220 ; 7
039A   0EAE 2AE0      01555     dw 0x0EAE,0x2AE0 ; 8
039C   0EAE 2220      01556     dw 0x0EAE,0x2220 ; 9
                      01557 ; letters needed for 'SCORE' and 'LINES" labels
039E   0EAE 2AA0      01558     dw 0x0EAE,0x2AA0 ; A  code 10
03A0   0688 2860      01559     dw 0x0688,0x2860 ; C  code 11
03A2   0E8E 28E0      01560     dw 0x0E8E,0x28E0 ; E  code 12
03A4   0E44 24E0      01561     dw 0x0E44,0x24E0 ; I  code 13
03A6   0888 28E0      01562     dw 0x0888,0x28E0 ; L  code 14
03A8   08CA 2AA0      01563     dw 0x08CA,0x2AA0 ; N  code 15
03AA   04AA 2A40      01564     dw 0x04AA,0x2A40 ; O  code 16
03AC   0EAE 2880      01565     dw 0x0EAE,0x2880 ; P  code 17
03AE   08EA 2880      01566     dw 0x08EA,0x2880 ; R  code 18
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  19:53:03         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03B0   0684 22C0      01567     dw 0x0684,0x22C0 ; S  code 19
03B2   0040 2400      01568     dw 0x0040,0x2400 ; :  code 20
03B4   2000 2000      01569     dw 0x2000,0x2000 ; space code 21
                      01570 
                      01571 ; comments notation: Rn clockwise rotation n*90 degr.    
                      01572 ; note that vertical I as 4 rows so it needs 2 words    
03B6                  01573 tetriminos: 
03B6   388C           01574     dw 0x388C ; L R0
03B7   30E8           01575     dw 0x30E8 ; L R1
03B8   3C44           01576     dw 0x3C44 ; L R2
03B9   32E0           01577     dw 0x32E0 ; L R3
03BA   344C           01578     dw 0x344C ; J R0
03BB   38E0           01579     dw 0x38E0 ; J R1
03BC   3644           01580     dw 0x3644 ; J R2
03BD   30E2           01581     dw 0x30E2 ; J R3
03BE   3CC0           01582     dw 0x3CC0 ; O R0 
03BF   3CC0           01583     dw 0x3CC0 ; O R2 
03C0   3CC0           01584     dw 0x3CC0 ; O R2 
03C1   3CC0           01585     dw 0x3CC0 ; O R3 
03C2   36C0           01586     dw 0x36C0 ; S R0
03C3   3462           01587     dw 0x3462 ; S R1
03C4   36C0           01588     dw 0x36C0 ; S R2
03C5   3462           01589     dw 0x3462 ; S R3
03C6   3E40           01590     dw 0x3E40 ; T R0
03C7   3262           01591     dw 0x3262 ; T R1
03C8   304E           01592     dw 0x304E ; T R2
03C9   38C8           01593     dw 0x38C8 ; T R3
03CA   3C60           01594     dw 0x3C60 ; Z R0
03CB   34C8           01595     dw 0x34C8 ; Z R1
03CC   3C60           01596     dw 0x3C60 ; Z R3
03CD   34C8           01597     dw 0x34C8 ; Z R4
                      01598 ; annoying! I tetriminos need a special treatment 
                      01599 ; because vertical I need 2 words for encoding.   
03CE   0444 1400      01600 I0: dw 0x0444,0x1400 ; I R0  
03D0   300F 1000      01601     dw 0x300F,0x1000 ; I R1  second word is filling for alignment
03D2   0222 1200      01602     dw 0x0222,0x1200 ; I R2
03D4   10F0 1000      01603     dw 0x10F0,0x1000 ; I R3  
                      01604 
  00000000            01605 LBL_SCORE equ 0
  00000001            01606 LBL_LINES equ 1
  00000002            01607 LBL_PRESS equ 2
                      01608  
03D6                  01609 labels:
03D6   000B           01610     brw
03D7   3???           01611     bra txt_score
03D8   3???           01612     bra txt_lines
03D9   3???           01613     bra txt_press
                      01614     
03DA                  01615 txt_score: ; "SCORE"
                      01616     pop
03DA   0017               M     moviw SP--
03DB   000B           01617     brw
03DC   3413 340B 3410 01618     dt 19,11,16,18,12,20,255
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  19:53:03         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

       3412 340C 3414 
       34FF 
                      01619     
03E3                  01620 txt_lines: ; "LINES"
                      01621     pop
03E3   0017               M     moviw SP--
03E4   000B           01622     brw
03E5   340E 340D 340F 01623     dt 14,13,15,12,19,20,255
       340C 3413 3414 
       34FF 
                      01624 
03EC                  01625 txt_press: ; "PRESS A"
                      01626     pop
03EC   0017               M     moviw SP--
03ED   000B           01627     brw
03EE   3411 3412 340C 01628     dt 17,18,12,19,19,21,10,255
       3413 3413 3415 
       340A 34FF 
                      01629     
                      01630 #ifdef SOUND_SUPPORT
03F6                  01631 tone_pr:
03F6   000B           01632     brw
03F7   3402 34ED      01633     dt 0x02, 0xed   ; 330   (MI4)   0
03F9   34B5 34DF      01634     dt 0xb5, 0xdf   ; 349   (FA4)   1
03FB   3428 34D3      01635     dt 0x28, 0xd3   ; 370   (FA4#)  2
03FD   344C 34C7      01636     dt 0x4c, 0xc7   ; 392   (SOL4)  3
03FF   341E 34BC      01637     dt 0x1e, 0xbc   ; 415   (SOL4#) 4
0401   348F 34B1      01638     dt 0x8f, 0xb1   ; 440   (LA4)   5
0403   3498 34A7      01639     dt 0x98, 0xa7   ; 466   (LA4#)  6
0405   3430 349E      01640     dt 0x30, 0x9e   ; 494   (SI4)   7
0407   344F 3495      01641     dt 0x4f, 0x95   ; 523hz (DO5)   8
0409   34ED 348C      01642     dt 0xed, 0x8c   ; 554   (DO5#)  9
040B   3404 3485      01643     dt 0x04, 0x85   ; 587   (RÉ5)   10
040D   348D 347D      01644     dt 0x8d, 0x7d   ; 622   (RÉ5#)  11
040F   3481 3476      01645     dt 0x81, 0x76   ; 659   (MI5)   12
0411   34DA 346F      01646     dt 0xda, 0x6f   ; 698   (FA5)   13
0413   3493 3469      01647     dt 0x93, 0x69   ; 740   (FA5#)  14
0415   34A6 3463      01648     dt 0xa6, 0x63   ; 784   (SOL5)  15
0417   340F 345E      01649     dt 0x0f, 0x5e   ; 831   (SOL5#) 16
0419   34C7 3458      01650     dt 0xc7, 0x58   ; 880   (LA5)   17
041B   34CC 3453      01651     dt 0xcc, 0x53   ; 932   (LA5#)  18
041D   3418 344F      01652     dt 0x18, 0x4f   ; 988   (SI5)   19
041F   3482 3442      01653     dt 0x82, 0x42   ; 1046hz (do6)  20
0421   3400 3400      01654     dt 0, 0         ; silence       21
                      01655     
0423                  01656 korobeiniki: ;folklore russe
                      01657     ;nombre de notes
0423   000B           01658     brw
0424   3422           01659     dt 34
                      01660     ; duré, note
0425   342D 3400      01661     dt 45, 0 
0427   340F 3404      01662     dt 15, 4
0429   341E 3407      01663     dt 30, 7
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  19:53:03         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

042B   340F 3403      01664     dt 15, 3
042D   340F 3400      01665     dt 15, 0
                      01666     
042F   342D 3405      01667     dt 45, 5
0431   340F 3409      01668     dt 15, 9
0433   341E 340C      01669     dt 30, 12
0435   340F 340A      01670     dt 15, 10
0437   340F 3408      01671     dt 15, 8
                      01672     
0439   342D 3407      01673     dt 45, 7
043B   340F 3408      01674     dt 15, 8
043D   341E 340A      01675     dt 30, 10
043F   341E 340C      01676     dt 30, 12
                      01677     
0441   341E 3408      01678     dt 30, 8
0443   341E 3405      01679     dt 30, 5
0445   343C 3405      01680     dt 60, 5
                      01681     
0447   342D 340D      01682     dt 45, 13
0449   340F 340F      01683     dt 15, 15
044B   341E 3411      01684     dt 30, 17
044D   340F 340F      01685     dt 15, 15
044F   340F 340D      01686     dt 15, 13
                      01687     
0451   342D 340C      01688     dt 45, 12
0453   340F 340D      01689     dt 15, 13
0455   341E 340C      01690     dt 30, 12
0457   340F 340A      01691     dt 15, 10
0459   340F 3408      01692     dt 15, 8
                      01693     
045B   342D 3407      01694     dt 45, 7
045D   340F 3408      01695     dt 15, 8
045F   341E 340A      01696     dt 30, 10
0461   341E 340C      01697     dt 30, 12
                      01698     
0463   341E 3408      01699     dt 30, 8
0465   341E 3405      01700     dt 30, 5
0467   343C 3405      01701     dt 60, 5
                      01702     
                      01703  #endif
                      01704  
3FE7 1EFF             01705     end
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  19:53:03         PAGE 40


SYMBOL TABLE
  LABEL                             VALUE 

ABDEN                             00000000
ABDOVF                            00000007
ADCON0                            0000009D
ADCON1                            0000009E
ADCON2                            0000009F
ADCS0                             00000004
ADCS1                             00000005
ADCS2                             00000006
ADC_PIN                           00000004
ADDEN                             00000003
ADFM                              00000007
ADFVR0                            00000000
ADFVR1                            00000001
ADGO                              00000001
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADPREF0                           00000000
ADPREF1                           00000001
ADRES                             0000009B
ADRESH                            0000009C
ADRESL                            0000009B
ANSA0                             00000000
ANSA1                             00000001
ANSA2                             00000002
ANSA4                             00000004
ANSELA                            0000018C
APFCON                            0000011D
APFCON0                           0000011D
AUDIO_PIN                         00000004
AUDIO_PWMCLKCON                   00000DAE
AUDIO_PWMCON                      00000DAB
AUDIO_PWMDCH                      00000DA4
AUDIO_PWMDCL                      00000DA3
AUDIO_PWMLDCON                    00000DAF
AUDIO_PWMPRH                      00000DA6
AUDIO_PWMPRL                      00000DA5
AUDIO_PWMTMR                      00000DA9
A_THR                             00000040
BAUDCON                           0000019F
BORCON                            00000116
BORFS                             00000006
BORRDY                            00000000
BPL                               00000006
BRG16                             00000003
BRGH                              00000002
BSR                               00000008
BSR0                              00000000
BSR1                              00000001
BSR2                              00000002
BSR3                              00000003
BSR4                              00000004
BSR_SHAD                          00000FE6
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  19:53:03         PAGE 41


SYMBOL TABLE
  LABEL                             VALUE 

BTN_A                             00000004
BTN_B                             00000005
BTN_DN                            00000001
BTN_LT                            00000002
BTN_RT                            00000003
BTN_UP                            00000000
BUFFER_SIZE                       000000C0
B_THR                             00000095
C                                 00000000
C1HYS                             00000001
C1IE                              00000005
C1IF                              00000005
C1INTN                            00000006
C1INTP                            00000007
C1NCH0                            00000000
C1NCH1                            00000001
C1NCH2                            00000002
C1OE                              00000005
C1ON                              00000007
C1OUT                             00000006
C1PCH0                            00000004
C1PCH1                            00000005
C1POL                             00000004
C1SP                              00000002
C1SYNC                            00000000
CDAFVR0                           00000002
CDAFVR1                           00000003
CFGS                              00000006
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CHS4                              00000006
CM1CON0                           00000111
CM1CON1                           00000112
CMOUT                             00000115
CREN                              00000004
CS0                               00000000
CS1                               00000001
CSRC                              00000007
CWG1CON0                          00000693
CWG1CON1                          00000694
CWG1CON2                          00000695
CWG1DBF                           00000692
CWG1DBF0                          00000000
CWG1DBF1                          00000001
CWG1DBF2                          00000002
CWG1DBF3                          00000003
CWG1DBF4                          00000004
CWG1DBF5                          00000005
CWG1DBR                           00000691
CWG1DBR0                          00000000
CWG1DBR1                          00000001
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  19:53:03         PAGE 42


SYMBOL TABLE
  LABEL                             VALUE 

CWG1DBR2                          00000002
CWG1DBR3                          00000003
CWG1DBR4                          00000004
CWG1DBR5                          00000005
CWGASEL                           00000006
CWGBSEL                           00000005
C_SHAD                            00000000
DACCON0                           00000118
DACCON1                           00000119
DACEN                             00000007
DACLPS                            00000006
DACOE                             00000005
DACPSS0                           00000002
DACPSS1                           00000003
DACR0                             00000000
DACR1                             00000001
DACR2                             00000002
DACR3                             00000003
DACR4                             00000004
DC                                00000001
DCIE                              00000001
DCIF                              00000001
DC_SHAD                           00000001
DN_THR                            000000D8
EN                                00000007
F                                 00000001
FCY                               004C4B40
FERR                              00000002
FIRST_VIDEO                       00000046
FOSC                              01312D00
FREE                              00000004
FSR0                              00000004
FSR0H                             00000005
FSR0H_SHAD                        00000FE9
FSR0L                             00000004
FSR0L_SHAD                        00000FE8
FSR0_SHAD                         00000FE8
FSR1                              00000006
FSR1H                             00000007
FSR1H_SHAD                        00000FEB
FSR1L                             00000006
FSR1L_SHAD                        00000FEA
FSR1_SHAD                         00000FEA
FVRCON                            00000117
FVREN                             00000007
FVRRDY                            00000006
F_COLL                            00000006
F_EVEN                            00000001
F_GSTOP                           00000004
F_GTMR                            00000003
F_MUTEX                           00000002
F_SND                             00000005
F_VSYNC                           00000000
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  19:53:03         PAGE 43


SYMBOL TABLE
  LABEL                             VALUE 

G1ARSEN                           00000006
G1ASDLA0                          00000004
G1ASDLA1                          00000005
G1ASDLB0                          00000006
G1ASDLB1                          00000007
G1ASDSC1                          00000002
G1ASDSFLT                         00000001
G1ASE                             00000007
G1CS0                             00000000
G1EN                              00000007
G1IS0                             00000000
G1IS1                             00000001
G1IS2                             00000002
G1OEA                             00000005
G1OEB                             00000006
G1POLA                            00000003
G1POLB                            00000004
GAME_VAR                          00000000
GIE                               00000007
GO                                00000001
GO_NOT_DONE                       00000001
HFIOFL                            00000003
HFIOFR                            00000004
HFIOFS                            00000000
HORZ_DLY                          00000032
HORZ_PERIOD                       000004F5
HORZ_PULSE                        0000005E
I0                                000003CE
INDF0                             00000000
INDF1                             00000001
INLVLA                            0000038C
INLVLA0                           00000000
INLVLA1                           00000001
INLVLA2                           00000002
INLVLA3                           00000003
INLVLA4                           00000004
INLVLA5                           00000005
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IOCAF                             00000393
IOCAF0                            00000000
IOCAF1                            00000001
IOCAF2                            00000002
IOCAF3                            00000003
IOCAF4                            00000004
IOCAF5                            00000005
IOCAN                             00000392
IOCAN0                            00000000
IOCAN1                            00000001
IOCAN2                            00000002
IOCAN3                            00000003
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  19:53:03         PAGE 44


SYMBOL TABLE
  LABEL                             VALUE 

IOCAN4                            00000004
IOCAN5                            00000005
IOCAP                             00000391
IOCAP0                            00000000
IOCAP1                            00000001
IOCAP2                            00000002
IOCAP3                            00000003
IOCAP4                            00000004
IOCAP5                            00000005
IOCIE                             00000003
IOCIF                             00000000
IRCF0                             00000003
IRCF1                             00000004
IRCF2                             00000005
IRCF3                             00000006
LAST_LINE                         00000106
LAST_VIDEO                        000000C5
LATA                              0000010C
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA4                             00000004
LATA5                             00000005
LBL_LINES                         00000001
LBL_PRESS                         00000002
LBL_SCORE                         00000000
LDA                               00000007
LDS0                              00000000
LDS1                              00000001
LDT                               00000006
LED_PIN                           00000000
LFIOFR                            00000001
LFSR_TAPS                         000000B4
LT_THR                            000000D1
LWLO                              00000005
MC1OUT                            00000000
MFIOFR                            00000002
MODE0                             00000002
MODE1                             00000003
MPWM1EN                           00000000
MPWM1LD                           00000000
MPWM1OUT                          00000000
MPWM2EN                           00000001
MPWM2LD                           00000001
MPWM2OUT                          00000001
MPWM3EN                           00000002
MPWM3LD                           00000002
MPWM3OUT                          00000002
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RI                            00000002
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  19:53:03         PAGE 45


SYMBOL TABLE
  LABEL                             VALUE 

NOT_RMCLR                         00000003
NOT_RWDT                          00000004
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_WPUEN                         00000007
ODA0                              00000000
ODA1                              00000001
ODA2                              00000002
ODA4                              00000004
ODA5                              00000005
ODCONA                            0000028C
OE                                00000006
OERR                              00000001
OFIE                              00000003
OFIF                              00000003
OFM0                              00000005
OFM1                              00000006
OFO                               00000004
OFS0                              00000000
OFS1                              00000001
OPTION_REG                        00000095
OSCCON                            00000099
OSCSTAT                           0000009A
OSCTUNE                           00000098
OSTS                              00000005
OUT                               00000005
P1SEL                             00000000
P2SEL                             00000001
PAD_CHS                           00000003
PAD_PIN                           00000004
PCL                               00000002
PCLATH                            0000000A
PCLATH_SHAD                       00000FE7
PCON                              00000096
PEIE                              00000006
PHIE                              00000002
PHIF                              00000002
PIE1                              00000091
PIE2                              00000092
PIE3                              00000093
PIR1                              00000011
PIR2                              00000012
PIR3                              00000013
PIXEL_TXREG                       0000019A
PLLR                              00000006
PMADR                             00000191
PMADRH                            00000192
PMADRL                            00000191
PMCON1                            00000195
PMCON2                            00000196
PMDAT                             00000193
PMDATH                            00000194
PMDATL                            00000193
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  19:53:03         PAGE 46


SYMBOL TABLE
  LABEL                             VALUE 

POL                               00000004
PORTA                             0000000C
PR2                               0000001B
PRIE                              00000000
PRIF                              00000000
PS0_OPTION_REG                    00000000
PS0_PWM1CLKCON                    00000004
PS0_PWM2CLKCON                    00000004
PS0_PWM3CLKCON                    00000004
PS1_OPTION_REG                    00000001
PS1_PWM1CLKCON                    00000005
PS1_PWM2CLKCON                    00000005
PS1_PWM3CLKCON                    00000005
PS2_OPTION_REG                    00000002
PS2_PWM1CLKCON                    00000006
PS2_PWM2CLKCON                    00000006
PS2_PWM3CLKCON                    00000006
PSA                               00000003
PWM1CLKCON                        00000D9E
PWM1CON                           00000D9B
PWM1CS0                           00000000
PWM1CS1                           00000001
PWM1DC                            00000D93
PWM1DCH                           00000D94
PWM1DCH0                          00000000
PWM1DCH1                          00000001
PWM1DCH2                          00000002
PWM1DCH3                          00000003
PWM1DCH4                          00000004
PWM1DCH5                          00000005
PWM1DCH6                          00000006
PWM1DCH7                          00000007
PWM1DCIE                          00000001
PWM1DCIF                          00000001
PWM1DCL                           00000D93
PWM1DCL0                          00000000
PWM1DCL1                          00000001
PWM1DCL2                          00000002
PWM1DCL3                          00000003
PWM1DCL4                          00000004
PWM1DCL5                          00000005
PWM1DCL6                          00000006
PWM1DCL7                          00000007
PWM1EN                            00000007
PWM1EN_A                          00000000
PWM1IE                            00000004
PWM1IF                            00000004
PWM1INTCON                        00000D9C
PWM1INTE                          00000D9C
PWM1INTF                          00000D9D
PWM1INTFLG                        00000D9D
PWM1LD                            00000007
PWM1LDA_A                         00000000
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  19:53:03         PAGE 47


SYMBOL TABLE
  LABEL                             VALUE 

PWM1LDCON                         00000D9F
PWM1LDM                           00000006
PWM1LDS0                          00000000
PWM1LDS1                          00000001
PWM1MODE0                         00000002
PWM1MODE1                         00000003
PWM1OE                            00000006
PWM1OF                            00000D97
PWM1OFCON                         00000DA0
PWM1OFH                           00000D98
PWM1OFH0                          00000000
PWM1OFH1                          00000001
PWM1OFH2                          00000002
PWM1OFH3                          00000003
PWM1OFH4                          00000004
PWM1OFH5                          00000005
PWM1OFH6                          00000006
PWM1OFH7                          00000007
PWM1OFIE                          00000003
PWM1OFIF                          00000003
PWM1OFL                           00000D97
PWM1OFL0                          00000000
PWM1OFL1                          00000001
PWM1OFL2                          00000002
PWM1OFL3                          00000003
PWM1OFL4                          00000004
PWM1OFL5                          00000005
PWM1OFL6                          00000006
PWM1OFL7                          00000007
PWM1OFM0                          00000005
PWM1OFM1                          00000006
PWM1OFMC                          00000004
PWM1OFS0                          00000000
PWM1OFS1                          00000001
PWM1OUT                           00000005
PWM1OUT_A                         00000000
PWM1PH                            00000D91
PWM1PHH                           00000D92
PWM1PHH0                          00000000
PWM1PHH1                          00000001
PWM1PHH2                          00000002
PWM1PHH3                          00000003
PWM1PHH4                          00000004
PWM1PHH5                          00000005
PWM1PHH6                          00000006
PWM1PHH7                          00000007
PWM1PHIE                          00000002
PWM1PHIF                          00000002
PWM1PHL                           00000D91
PWM1PHL0                          00000000
PWM1PHL1                          00000001
PWM1PHL2                          00000002
PWM1PHL3                          00000003
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  19:53:03         PAGE 48


SYMBOL TABLE
  LABEL                             VALUE 

PWM1PHL4                          00000004
PWM1PHL5                          00000005
PWM1PHL6                          00000006
PWM1PHL7                          00000007
PWM1POL                           00000004
PWM1PR                            00000D95
PWM1PRH                           00000D96
PWM1PRH0                          00000000
PWM1PRH1                          00000001
PWM1PRH2                          00000002
PWM1PRH3                          00000003
PWM1PRH4                          00000004
PWM1PRH5                          00000005
PWM1PRH6                          00000006
PWM1PRH7                          00000007
PWM1PRIE                          00000000
PWM1PRIF                          00000000
PWM1PRL                           00000D95
PWM1PRL0                          00000000
PWM1PRL1                          00000001
PWM1PRL2                          00000002
PWM1PRL3                          00000003
PWM1PRL4                          00000004
PWM1PRL5                          00000005
PWM1PRL6                          00000006
PWM1PRL7                          00000007
PWM1PS0                           00000004
PWM1PS1                           00000005
PWM1PS2                           00000006
PWM1TMR                           00000D99
PWM1TMRH                          00000D9A
PWM1TMRH0                         00000000
PWM1TMRH1                         00000001
PWM1TMRH2                         00000002
PWM1TMRH3                         00000003
PWM1TMRH4                         00000004
PWM1TMRH5                         00000005
PWM1TMRH6                         00000006
PWM1TMRH7                         00000007
PWM1TMRL                          00000D99
PWM1TMRL0                         00000000
PWM1TMRL1                         00000001
PWM1TMRL2                         00000002
PWM1TMRL3                         00000003
PWM1TMRL4                         00000004
PWM1TMRL5                         00000005
PWM1TMRL6                         00000006
PWM1TMRL7                         00000007
PWM2CLKCON                        00000DAE
PWM2CON                           00000DAB
PWM2CS0                           00000000
PWM2CS1                           00000001
PWM2DC                            00000DA3
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  19:53:03         PAGE 49


SYMBOL TABLE
  LABEL                             VALUE 

PWM2DCH                           00000DA4
PWM2DCH0                          00000000
PWM2DCH1                          00000001
PWM2DCH2                          00000002
PWM2DCH3                          00000003
PWM2DCH4                          00000004
PWM2DCH5                          00000005
PWM2DCH6                          00000006
PWM2DCH7                          00000007
PWM2DCIE                          00000001
PWM2DCIF                          00000001
PWM2DCL                           00000DA3
PWM2DCL0                          00000000
PWM2DCL1                          00000001
PWM2DCL2                          00000002
PWM2DCL3                          00000003
PWM2DCL4                          00000004
PWM2DCL5                          00000005
PWM2DCL6                          00000006
PWM2DCL7                          00000007
PWM2EN                            00000007
PWM2EN_A                          00000001
PWM2IE                            00000005
PWM2IF                            00000005
PWM2INTCON                        00000DAC
PWM2INTE                          00000DAC
PWM2INTF                          00000DAD
PWM2INTFLG                        00000DAD
PWM2LD                            00000007
PWM2LDA_A                         00000001
PWM2LDCON                         00000DAF
PWM2LDM                           00000006
PWM2LDS0                          00000000
PWM2LDS1                          00000001
PWM2MODE0                         00000002
PWM2MODE1                         00000003
PWM2OE                            00000006
PWM2OF                            00000DA7
PWM2OFCON                         00000DB0
PWM2OFH                           00000DA8
PWM2OFH0                          00000000
PWM2OFH1                          00000001
PWM2OFH2                          00000002
PWM2OFH3                          00000003
PWM2OFH4                          00000004
PWM2OFH5                          00000005
PWM2OFH6                          00000006
PWM2OFH7                          00000007
PWM2OFIE                          00000003
PWM2OFIF                          00000003
PWM2OFL                           00000DA7
PWM2OFL0                          00000000
PWM2OFL1                          00000001
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  19:53:03         PAGE 50


SYMBOL TABLE
  LABEL                             VALUE 

PWM2OFL2                          00000002
PWM2OFL3                          00000003
PWM2OFL4                          00000004
PWM2OFL5                          00000005
PWM2OFL6                          00000006
PWM2OFL7                          00000007
PWM2OFM0                          00000005
PWM2OFM1                          00000006
PWM2OFMC                          00000004
PWM2OFS0                          00000000
PWM2OFS1                          00000001
PWM2OUT                           00000005
PWM2OUT_A                         00000001
PWM2PH                            00000DA1
PWM2PHH                           00000DA2
PWM2PHH0                          00000000
PWM2PHH1                          00000001
PWM2PHH2                          00000002
PWM2PHH3                          00000003
PWM2PHH4                          00000004
PWM2PHH5                          00000005
PWM2PHH6                          00000006
PWM2PHH7                          00000007
PWM2PHIE                          00000002
PWM2PHIF                          00000002
PWM2PHL                           00000DA1
PWM2PHL0                          00000000
PWM2PHL1                          00000001
PWM2PHL2                          00000002
PWM2PHL3                          00000003
PWM2PHL4                          00000004
PWM2PHL5                          00000005
PWM2PHL6                          00000006
PWM2PHL7                          00000007
PWM2POL                           00000004
PWM2PR                            00000DA5
PWM2PRH                           00000DA6
PWM2PRH0                          00000000
PWM2PRH1                          00000001
PWM2PRH2                          00000002
PWM2PRH3                          00000003
PWM2PRH4                          00000004
PWM2PRH5                          00000005
PWM2PRH6                          00000006
PWM2PRH7                          00000007
PWM2PRIE                          00000000
PWM2PRIF                          00000000
PWM2PRL                           00000DA5
PWM2PRL0                          00000000
PWM2PRL1                          00000001
PWM2PRL2                          00000002
PWM2PRL3                          00000003
PWM2PRL4                          00000004
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  19:53:03         PAGE 51


SYMBOL TABLE
  LABEL                             VALUE 

PWM2PRL5                          00000005
PWM2PRL6                          00000006
PWM2PRL7                          00000007
PWM2PS0                           00000004
PWM2PS1                           00000005
PWM2PS2                           00000006
PWM2TMR                           00000DA9
PWM2TMRH                          00000DAA
PWM2TMRH0                         00000000
PWM2TMRH1                         00000001
PWM2TMRH2                         00000002
PWM2TMRH3                         00000003
PWM2TMRH4                         00000004
PWM2TMRH5                         00000005
PWM2TMRH6                         00000006
PWM2TMRH7                         00000007
PWM2TMRL                          00000DA9
PWM2TMRL0                         00000000
PWM2TMRL1                         00000001
PWM2TMRL2                         00000002
PWM2TMRL3                         00000003
PWM2TMRL4                         00000004
PWM2TMRL5                         00000005
PWM2TMRL6                         00000006
PWM2TMRL7                         00000007
PWM3CLKCON                        00000DBE
PWM3CON                           00000DBB
PWM3CS0                           00000000
PWM3CS1                           00000001
PWM3DC                            00000DB3
PWM3DCH                           00000DB4
PWM3DCH0                          00000000
PWM3DCH1                          00000001
PWM3DCH2                          00000002
PWM3DCH3                          00000003
PWM3DCH4                          00000004
PWM3DCH5                          00000005
PWM3DCH6                          00000006
PWM3DCH7                          00000007
PWM3DCIE                          00000001
PWM3DCIF                          00000001
PWM3DCL                           00000DB3
PWM3DCL0                          00000000
PWM3DCL1                          00000001
PWM3DCL2                          00000002
PWM3DCL3                          00000003
PWM3DCL4                          00000004
PWM3DCL5                          00000005
PWM3DCL6                          00000006
PWM3DCL7                          00000007
PWM3EN                            00000007
PWM3EN_A                          00000002
PWM3IE                            00000006
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  19:53:03         PAGE 52


SYMBOL TABLE
  LABEL                             VALUE 

PWM3IF                            00000006
PWM3INTCON                        00000DBC
PWM3INTE                          00000DBC
PWM3INTF                          00000DBD
PWM3INTFLG                        00000DBD
PWM3LD                            00000007
PWM3LDA_A                         00000002
PWM3LDCON                         00000DBF
PWM3LDM                           00000006
PWM3LDS0                          00000000
PWM3LDS1                          00000001
PWM3MODE0                         00000002
PWM3MODE1                         00000003
PWM3OE                            00000006
PWM3OF                            00000DB7
PWM3OFCON                         00000DC0
PWM3OFH                           00000DB8
PWM3OFH0                          00000000
PWM3OFH1                          00000001
PWM3OFH2                          00000002
PWM3OFH3                          00000003
PWM3OFH4                          00000004
PWM3OFH5                          00000005
PWM3OFH6                          00000006
PWM3OFH7                          00000007
PWM3OFIE                          00000003
PWM3OFIF                          00000003
PWM3OFL                           00000DB7
PWM3OFL0                          00000000
PWM3OFL1                          00000001
PWM3OFL2                          00000002
PWM3OFL3                          00000003
PWM3OFL4                          00000004
PWM3OFL5                          00000005
PWM3OFL6                          00000006
PWM3OFL7                          00000007
PWM3OFM0                          00000005
PWM3OFM1                          00000006
PWM3OFMC                          00000004
PWM3OFS0                          00000000
PWM3OFS1                          00000001
PWM3OUT                           00000005
PWM3OUT_A                         00000002
PWM3PH                            00000DB1
PWM3PHH                           00000DB2
PWM3PHH0                          00000000
PWM3PHH1                          00000001
PWM3PHH2                          00000002
PWM3PHH3                          00000003
PWM3PHH4                          00000004
PWM3PHH5                          00000005
PWM3PHH6                          00000006
PWM3PHH7                          00000007
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  19:53:03         PAGE 53


SYMBOL TABLE
  LABEL                             VALUE 

PWM3PHIE                          00000002
PWM3PHIF                          00000002
PWM3PHL                           00000DB1
PWM3PHL0                          00000000
PWM3PHL1                          00000001
PWM3PHL2                          00000002
PWM3PHL3                          00000003
PWM3PHL4                          00000004
PWM3PHL5                          00000005
PWM3PHL6                          00000006
PWM3PHL7                          00000007
PWM3POL                           00000004
PWM3PR                            00000DB5
PWM3PRH                           00000DB6
PWM3PRH0                          00000000
PWM3PRH1                          00000001
PWM3PRH2                          00000002
PWM3PRH3                          00000003
PWM3PRH4                          00000004
PWM3PRH5                          00000005
PWM3PRH6                          00000006
PWM3PRH7                          00000007
PWM3PRIE                          00000000
PWM3PRIF                          00000000
PWM3PRL                           00000DB5
PWM3PRL0                          00000000
PWM3PRL1                          00000001
PWM3PRL2                          00000002
PWM3PRL3                          00000003
PWM3PRL4                          00000004
PWM3PRL5                          00000005
PWM3PRL6                          00000006
PWM3PRL7                          00000007
PWM3PS0                           00000004
PWM3PS1                           00000005
PWM3PS2                           00000006
PWM3TMR                           00000DB9
PWM3TMRH                          00000DBA
PWM3TMRH0                         00000000
PWM3TMRH1                         00000001
PWM3TMRH2                         00000002
PWM3TMRH3                         00000003
PWM3TMRH4                         00000004
PWM3TMRH5                         00000005
PWM3TMRH6                         00000006
PWM3TMRH7                         00000007
PWM3TMRL                          00000DB9
PWM3TMRL0                         00000000
PWM3TMRL1                         00000001
PWM3TMRL2                         00000002
PWM3TMRL3                         00000003
PWM3TMRL4                         00000004
PWM3TMRL5                         00000005
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  19:53:03         PAGE 54


SYMBOL TABLE
  LABEL                             VALUE 

PWM3TMRL6                         00000006
PWM3TMRL7                         00000007
PWMEN                             00000D8E
PWMLD                             00000D8F
PWMOUT                            00000D90
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCREG                             00000199
RCSTA                             0000019D
RD                                00000000
ROW_EMPTY                         00000000
ROW_FULL                          0000000A
RT_THR                            000000B5
RX9                               00000006
RX9D                              00000000
RXDTSEL                           00000007
S0                                0000001F
SBOREN                            00000007
SCKP                              00000004
SCS0                              00000000
SCS1                              00000001
SENDB                             00000003
SLRA0                             00000000
SLRA1                             00000001
SLRA2                             00000002
SLRA4                             00000004
SLRA5                             00000005
SLRCONA                           0000030C
SOUND_SUPPORT                     
SP                                FSR1
SPBRG                             0000019B
SPBRGH                            0000019C
SPBRGL                            0000019B
SPEN                              00000007
SPLLEN                            00000007
SREN                              00000005
STACK_SIZE                        00000020
STATUS                            00000003
STATUS_SHAD                       00000FE4
STKOVF                            00000007
STKPTR                            00000FED
STKUNF                            00000006
SWDTEN                            00000000
SYNC                              00000004
SYNC_IE                           00000006
SYNC_IF                           00000006
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  19:53:03         PAGE 55


SYMBOL TABLE
  LABEL                             VALUE 

SYNC_OUT                          00000002
SYNC_PIE                          00000093
SYNC_PIR                          00000013
SYNC_PWMCLKCON                    00000DBE
SYNC_PWMCON                       00000DBB
SYNC_PWMDCH                       00000DB4
SYNC_PWMDCL                       00000DB3
SYNC_PWMINTE                      00000DBC
SYNC_PWMINTF                      00000DBD
SYNC_PWMLDCON                     00000DBF
SYNC_PWMOF                        00000DB7
SYNC_PWMOFCON                     00000DC0
SYNC_PWMPH                        00000DB1
SYNC_PWMPRH                       00000DB6
SYNC_PWMPRL                       00000DB5
SYNC_PWMTMR                       00000DB9
T                                 INDF1
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000018
T1GCON                            00000019
T1GGO                             00000003
T1GGO_NOT_DONE                    00000003
T1GPOL                            00000006
T1GSEL                            00000003
T1GSPM                            00000004
T1GSS0                            00000000
T1GSS1                            00000001
T1GTM                             00000005
T1GVAL                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             0000001C
T2OUTPS0                          00000003
T2OUTPS1                          00000004
T2OUTPS2                          00000005
T2OUTPS3                          00000006
TC                                00000032
TCY                               000000C8
TMR0                              00000015
TMR0CS                            00000005
TMR0IE                            00000005
TMR0IF                            00000002
TMR0SE                            00000004
TMR1                              00000016
TMR1CS0                           00000006
TMR1CS1                           00000007
TMR1GE                            00000007
TMR1GIE                           00000007
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  19:53:03         PAGE 56


SYMBOL TABLE
  LABEL                             VALUE 

TMR1GIF                           00000007
TMR1H                             00000017
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             00000016
TMR1ON                            00000000
TMR2                              0000001A
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOS                               00000FEE
TOSH                              00000FEF
TOSL                              00000FEE
TRIGSEL0                          00000004
TRIGSEL1                          00000005
TRIGSEL2                          00000006
TRIGSEL3                          00000007
TRISA                             0000008C
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRMT                              00000001
TSEN                              00000005
TSRNG                             00000004
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TUN5                              00000005
TX9                               00000006
TX9D                              00000000
TXCKSEL                           00000002
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             0000019A
TXSTA                             0000019E
TX_PIR                            00000011
UP_THR                            000000C6
VDD                               00000400
VERT_DLY                          00000032
VIDEO_BUFFER                      00002030
VIDEO_LAT                         0000010C
VIDEO_OUT                         00000001
VREGCON                           00000197
VREGPM                            00000001
W                                 00000000
WDTCON                            00000097
WDTPS0                            00000001
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  19:53:03         PAGE 57


SYMBOL TABLE
  LABEL                             VALUE 

WDTPS1                            00000002
WDTPS2                            00000003
WDTPS3                            00000004
WDTPS4                            00000005
WELL_DEPTH                        00000016
WELL_WIDTH                        0000000A
WPUA                              0000020C
WPUA0                             00000000
WPUA1                             00000001
WPUA2                             00000002
WPUA3                             00000003
WPUA4                             00000004
WPUA5                             00000005
WR                                00000001
WREG                              00000009
WREG_SHAD                         00000FE5
WREN                              00000002
WRERR                             00000003
WUE                               00000001
XSIZE                             00000030
YSIZE                             00000020
Z                                 00000002
Z_SHAD                            00000002
_.org_1_0075                      00000075
_.org_1_0077                      00000077
_.org_1_007A                      0000007A
_.org_1_00C4                      000000C4
_.org_1_00C6                      000000C6
_.org_1_00DA                      000000DA
_.org_1_00E2                      000000E2
_.org_1_0290                      00000290
_.org_1_029E                      0000029E
_.org_1_02F7                      000002F7
_.org_1_0300                      00000300
_.org_1_033F                      0000033F
_BOREN_NSLEEP                     00003DFF
_BOREN_OFF                        000039FF
_BOREN_ON                         00003FFF
_BOREN_SBODEN                     00003BFF
_BORV_19                          00003FFF
_BORV_HI                          00003BFF
_BORV_LO                          00003FFF
_CLKOUTEN_OFF                     00003FFF
_CLKOUTEN_ON                      000037FF
_CONFIG1                          00008007
_CONFIG2                          00008008
_CP_OFF                           00003FFF
_CP_ON                            00003F7F
_DEVID1                           00008006
_FOSC_ECH                         00003FFF
_FOSC_ECL                         00003FFD
_FOSC_ECM                         00003FFE
_FOSC_INTOSC                      00003FFC
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  19:53:03         PAGE 58


SYMBOL TABLE
  LABEL                             VALUE 

_IDLOC0                           00008000
_IDLOC1                           00008001
_IDLOC2                           00008002
_IDLOC3                           00008003
_LPBOREN_OFF                      00003FFF
_LPBOREN_ON                       000037FF
_LVP_OFF                          00001FFF
_LVP_ON                           00003FFF
_MCLRE_OFF                        00003FBF
_MCLRE_ON                         00003FFF
_PLLEN_OFF                        00003EFF
_PLLEN_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FDF
_STVREN_OFF                       00003DFF
_STVREN_ON                        00003FFF
_WDTE_NSLEEP                      00003FF7
_WDTE_OFF                         00003FE7
_WDTE_ON                          00003FFF
_WDTE_SWDTEN                      00003FEF
_WRT_ALL                          00003FFC
_WRT_BOOT                         00003FFE
_WRT_HALF                         00003FFD
_WRT_OFF                          00003FFF
__12F1572                         00000001
_stack                            00000020
accaH                             00000009
accaL                             00000008
accbH                             0000000B
accbL                             0000000A
add_points                        00000340
angle                             00000041
buttons                           0000000C
byte_serialize                    000000D5
case                              
clear_pixel                       0000010D
clear_score                       0000021E
clear_screen                      000000EA
cls_loop                          000000F1
col_loop                          00000227
coll_test                         000002A4
count_done                        00000269
count_full                        00000251
count_loop                        00000255
dec_n                             
digits                            0000038A
disable_video                     
div10                             00000058
div10_loop                        0000005C
drop                              
drop00                            00000237
drop1                             00000224
drop_n                            
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  19:53:03         PAGE 59


SYMBOL TABLE
  LABEL                             VALUE 

droppedH                          00000047
droppedL                          00000046
dup                               
enable_video                      
fall_loop                         000002FA
flags                             00000002
game_init                         000001F9
game_loop                         000002EE
get_flash_word                    0000013E
get_nibble                        00000152
get_pixel                         00000111
gt_255                            0000002A
gtimer                            00000003
hard_drop                         00000312
hline                             000001DB
hline_done                        000001E8
inc_n                             
init                              00000347
insert                            
isr                               00000004
isr_exit                          00000054
koro                              00000284
korobeiniki                       00000423
labels                            000003D6
lcountH                           00000001
lcountL                           00000000
lit                               
lt_256                            0000000E
main                              00000387
mask00                            00000104
mask01                            00000107
move_down                         00000323
move_left                         0000031E
move_right                        00000321
mult6                             00000068
new_tminos                        0000026B
next_flash_word                   0000014D
next_pixel                        00000238
next_row                          00000267
nibble                            0000000D
nibble_mask                       00000161
no_zero                           000001D9
over                              
pause                             
pick                              
pop                               
print_char                        0000016F
print_int                         000001C0
print_label                       000001A8
print_last                        000001D3
print_row                         00000165
print_tetrim                      0000017E
prt01                             00000194
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  19:53:03         PAGE 60


SYMBOL TABLE
  LABEL                             VALUE 

prt_lbl_done                      000001BE
prt_lbl_loop                      000001AA
pstack_init                       
push                              
q                                 0000000A
qr00                              00000243
qr01                              0000024D
query_row                         00000241
r                                 00000000
randH                             00000006
randL                             00000005
rcount                            00000007
read_exit                         0000009F
read_flash                        00000147
read_pad                          0000006D
reserve                           
rot_left                          00000314
rot_right                         00000319
row0                              00000160
row1                              0000015C
row2                              0000015E
row_loop                          00000225
rst                               00000010
scoreH                            00000045
scoreL                            00000044
set_pixel                         0000010A
set_pixel_ptr                     000000F7
set_yptr                          000000B9
soft_drop                         00000313
start_timer                       
store                             
swap                              
t0                                0000000E
t1                                0000000F
task0                             0000003F
task1                             00000048
task2                             0000004F
tasks                             00000035
tcyDelay                          
tetrim                            00000040
tetriminos                        000003B6
tetris                            000002DE
ti                                0000018D
tone                              000000A2
tone_pr                           000003F6
tone_tmr                          00000004
try_a                             0000007C
try_b                             00000082
try_button                        
try_dn                            0000009A
try_lt                            00000094
try_rt                            00000088
try_up                            0000008E
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-15-2016  19:53:03         PAGE 61


SYMBOL TABLE
  LABEL                             VALUE 

tx                                00000042
txt_lines                         000003E3
txt_press                         000003EC
txt_score                         000003DA
ty                                00000043
undo_hard_drop                    000002BB
undo_move_left                    000002C7
undo_move_right                   000002C5
undo_rot_left                     000002C1
undo_rot_right                    000002BD
undo_soft_drop                    000002BC
update_display                    000002C9
video_buffer_b0                   00000050
video_buffer_b2                   000000A0
video_buffer_b3                   00000120
video_serialize                   000000C3
vline                             000001EA
vline_done                        000001F7
vsync_end                         00000022
vsync_start                       0000001A
wait_end                          000002A0
wait_sound                        
wait_start                        0000027F
wait_timer                        
xor_pixel                         00000114
xor_row                           0000011C
xor_row01                         00000122
xor_row02                         00000138
xor_row_done                      0000013C

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,   128 suppressed

