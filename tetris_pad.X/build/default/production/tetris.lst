MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  19:42:20         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001     include p12f1572.inc
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Sep 13 2016
                      00005 ;  MPASM PIC12F1572 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2016 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01601         LIST
                      00002     
                      00003     radix dec
                      00004     errorlevel 0, -302, -305
                      00005     
8007   3FE7           00006     __config _CONFIG1, _FOSC_ECH&_WDTE_OFF
8008   1EFF           00007     __config _CONFIG2, _PLLEN_OFF&_LVP_OFF 
                      00008 
                      00009 #define SOUND_SUPPORT
                      00010     
  01312D00            00011 FOSC equ 20000000 ; 20Mhz
  00000032            00012 TC equ 50 ; nanosecondes 
  004C4B40            00013 FCY equ FOSC/4    ; 5Mhz
  000000C8            00014 TCY equ 200 ; nanoseconds
                      00015 
                      00016 
  00000030            00017 XSIZE equ 48  ; horizontal pixels
  00000020            00018 YSIZE equ 32  ; vertical pixels
  00000006            00019 BPL equ XSIZE/8 ; bytes per line 
  000000C0            00020 BUFFER_SIZE equ  YSIZE*BPL  ; video buffer size
  00002030            00021 VIDEO_BUFFER equ 0x2000+(3*80-BUFFER_SIZE) ; buffer address
  00000032            00022 VERT_DLY equ 50
  00000046            00023 FIRST_VIDEO equ VERT_DLY+20  ; first video output line
  000000C5            00024 LAST_VIDEO equ FIRST_VIDEO+4*YSIZE-1  ; last video output line
  0000019A            00025 PIXEL_TXREG equ TXREG
  00000011            00026 TX_PIR equ PIR1
  00000032            00027 HORZ_DLY equ 10*5  ; there is 5 TCY/µsec
                      00028  
  00000001            00029 VIDEO_OUT equ RA1
  0000010C            00030 VIDEO_LAT equ LATA
  00000002            00031 SYNC_OUT equ RA2 
  00000DB3            00032 SYNC_PWMDCL equ PWM3DCL ; duty cycle low byte
  00000DB4            00033 SYNC_PWMDCH equ PWM3DCH ; high byte    
  00000DB5            00034 SYNC_PWMPRL equ PWM3PRL ; pwm period low byte
  00000DB6            00035 SYNC_PWMPRH equ PWM3PRH ; high byte 
  00000DB1            00036 SYNC_PWMPH equ PWM3PH ; pwm phase
  00000DB7            00037 SYNC_PWMOF equ PWM3OF ; pwm offset
  00000DB9            00038 SYNC_PWMTMR equ PWM3TMR ; timer
  00000DBB            00039 SYNC_PWMCON equ PWM3CON ; control SFR
  00000DBE            00040 SYNC_PWMCLKCON equ PWM3CLKCON  ; clock control SFR
  00000DC0            00041 SYNC_PWMOFCON equ PWM3OFCON ; offset control SFR
  00000DBF            00042 SYNC_PWMLDCON equ PWM3LDCON ; load control SFR
  00000006            00043 SYNC_IE equ PWM3IE  ; interrupt enable bit
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  19:42:20         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000006            00044 SYNC_IF equ PWM3IF  ; interrupt flag bit
  00000093            00045 SYNC_PIE equ PIE3 ; interrupt enable SFR
  00000013            00046 SYNC_PIR equ PIR3 ; interrupt flag SFR 
  00000DBC            00047 SYNC_PWMINTE equ PWM3INTE
  00000DBD            00048 SYNC_PWMINTF equ PWM3INTF
                      00049  
  000004F5            00050 HORZ_PERIOD equ FOSC/15748-1 ; 15748 hertz
  0000005E            00051 HORZ_PULSE equ 4700/TC ; 4.7µsec 
  00000106            00052 LAST_LINE equ 262
                      00053 
  00000000            00054 LED_PIN equ RA0
  00000004            00055 ADC_PIN equ RA4
                      00056 
                      00057 #ifdef SOUND_SUPPORT 
  00000004            00058 AUDIO_PIN equ RA4
  00000DA3            00059 AUDIO_PWMDCL equ PWM2DCL
  00000DA4            00060 AUDIO_PWMDCH equ PWM2DCH
  00000DA5            00061 AUDIO_PWMPRL equ PWM2PRL
  00000DA6            00062 AUDIO_PWMPRH equ PWM2PRH
  00000DA9            00063 AUDIO_PWMTMR equ PWM2TMR
  00000DAE            00064 AUDIO_PWMCLKCON equ PWM2CLKCON
  00000DAF            00065 AUDIO_PWMLDCON equ PWM2LDCON
  00000DAB            00066 AUDIO_PWMCON equ PWM2CON
                      00067 #endif
                      00068  
                      00069 ; game pad resource
                      00070 ; use ADC 
  00000004            00071 PAD_PIN equ ANSA4
  00000003            00072 PAD_CHS equ 3 
  00000000            00073 BTN_UP equ 0
  00000001            00074 BTN_DN equ 1
  00000002            00075 BTN_LT equ 2
  00000003            00076 BTN_RT equ 3
  00000004            00077 BTN_A equ 4
  00000005            00078 BTN_B equ 5
                      00079 ; threshold level for each button
                      00080 ; lower_btn_thr >= BTN_? < btn_thr
                      00081 ; exemple: BTN_UP if RT_THR<=Vadc<UP_THR  
  00000400            00082 VDD equ 1024
  000000D8            00083 DN_THR equ 216 ;(VDD*(6/7+5/6)/2)>>2
  000000D1            00084 LT_THR equ 209 ; (VDD*(5/6+4/5)/2)>>2
  000000C6            00085 UP_THR equ 198 ;(VDD*(4/5+3/4)/2)>>2
  000000B5            00086 RT_THR equ 181 ;(VDD*(3/4+2/3)/2)>>2
  00000095            00087 B_THR  equ 149 ; (VDD*(2/3+1/2)/2)>>2
  00000040            00088 A_THR  equ 64 ;(VDD/4)>>2
                      00089  
                      00090 try_button macro btn, label 
                      00091     movlw btn
                      00092     subwf ADRESH,W
                      00093     skpnc
                      00094     bra label
                      00095     endm
                      00096     
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  19:42:20         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00097 ;boolean flags 
  00000000            00098 F_VSYNC equ 0 ; vertical sync active
  00000001            00099 F_EVEN equ 1  ; even field
  00000002            00100 F_GTMR equ 2  ; game timer active
  00000003            00101 F_GSTOP equ 3 ; game stopped
  00000004            00102 F_SND equ 4 ; sound timer active 
  00000005            00103 F_COLL equ 5 ; collision flag
  00000006            00104 F_NO_SND equ 6 ; quiet mode
                      00105  
  000000B4            00106 LFSR_TAPS equ 0xB4 ; xor mask
                      00107  
                      00108 tcyDelay macro n ; delay in TCY cycles  5TCY per µsec.  
                      00109     variable r=n%5
                      00110     variable q=n/5
                      00111     while r>1
                      00112     bra $+1
                      00113 r-=2
                      00114     endw
                      00115     if r==1
                      00116     nop
                      00117     endif
                      00118     if q
                      00119     movlw q
                      00120     bra $+1
                      00121     decfsz WREG
                      00122     bra $-2
                      00123     endif
                      00124     endm
                      00125 
                      00126 ; button selector case    
                      00127 case macro n, label
                      00128     btfsc buttons,n
                      00129     bra label
                      00130     endm
                      00131  
                      00132 start_timer macro value ; start game timer
                      00133     movlw value
                      00134     movwf gtimer
                      00135     bsf flags, F_GTMR
                      00136     endm
                      00137     
                      00138 wait_timer macro ; wait timer expiration
                      00139     btfsc flags, F_GTMR
                      00140     bra $-1
                      00141     endm
                      00142     
                      00143 pause macro value ; suspend execution (busy loop)
                      00144     start_timer value
                      00145     wait_timer
                      00146     endm
                      00147 
                      00148 #ifdef SOUND_SUPPORT    
                      00149 wait_sound macro ; wait sound end
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  19:42:20         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00150     btfsc flags,F_SND
                      00151     bra $-1
                      00152     endm
                      00153 #endif
                      00154     
                      00155 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00156 ; software stack for arguments passing
                      00157 ; SP is Stack Pointer
                      00158 ; T is Top Of Stack
                      00159 #define SP FSR1
                      00160 #define T INDF1
  00000020            00161 STACK_SIZE equ 32
                      00162  
  0000001F            00163 S0 equ 0x1F ; stack base address - 1
                      00164 
                      00165 pstack_init macro ; initialise stack pointer
                      00166     clrf FSR1H
                      00167     movlw S0
                      00168     movwf FSR1L
                      00169     endm
                      00170     
                      00171 push macro   ; ( -- n ) push WREG on stack
                      00172     movwi ++SP
                      00173     endm
                      00174 
                      00175 pop macro   ; ( n -- )  pop T in WREG
                      00176     moviw SP--
                      00177     endm
                      00178     
                      00179 drop macro  ; ( n -- ) ; discard T
                      00180    addfsr SP,-1
                      00181    endm
                      00182 
                      00183 drop_n macro n  ; discard n elements  n<32
                      00184     addfsr SP,-n
                      00185     endm
                      00186     
                      00187 lit macro  n ; ( -- n ) ; push a literal
                      00188    movlw n
                      00189    movwi ++SP 
                      00190    endm
                      00191 
                      00192 dup macro ; ( n -- n n ) duplicate T
                      00193     movfw T
                      00194     movwi ++SP
                      00195     endm
                      00196     
                      00197 over macro ; ( n1 n2 -- n1 n2 n1 )
                      00198     moviw -1[SP]
                      00199     push
                      00200     endm
                      00201     
                      00202 pick macro n  ; pick nth element of stack to WREG
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  19:42:20         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00203     moviw -n[SP]
                      00204     endm
                      00205 
                      00206 insert macro n ;  insert WREG at position n on stack
                      00207    movwi -n[SP]
                      00208    endm
                      00209    
                      00210 inc_n macro n ; increament nth element of stack
                      00211     moviw -n[SP]
                      00212     incf WREG,F
                      00213     movwi -n[SP]
                      00214     endm
                      00215     
                      00216 dec_n macro n ; decreament nth element of stack
                      00217     moviw -n[SP]
                      00218     decf WREG,F
                      00219     movwi -n[SP]
                      00220     endm
                      00221     
                      00222 reserve macro n ; reserve n bytes on stack for local variables
                      00223     addfsr SP, n 
                      00224     endm
                      00225  
                      00226 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00227 ; parameter stack section    
                      00228 dstack udata 0x20
0020                  00229 _stack res 32
                      00230 ; game variables section 
  00000000            00231 GAME_VAR equ 0 ; game variables bank
                      00232 game_var udata 0x40 
                      00233 ; tetris game state
0040                  00234 tetrim res 1 ; active tretriminos 
0041                  00235 angle res 1 ; tetriminos rotatation angle in multiple of 90degr. {0:3}
0042                  00236 tx  res 1 ; x coordinate
0043                  00237 ty  res 1 ; y coordinate
0044                  00238 scoreL res 1 ; game score  16 bits
0045                  00239 scoreH res 1 
0046                  00240 droppedL res 1  ; total
0047                  00241 droppedH res 1  ; dropped lines
                      00242   
                      00243  
                      00244 ; These 3 sections are used for video pixels buffering
                      00245 ; with indirect access using FSR0
                      00246 ; to form a contiguous address space. 
                      00247 ; total size 192 bytes 
                      00248 vb_b0    udata 0x50
0050                  00249 video_buffer_b0 res 32
                      00250 vb_b1    udata 0xA0
00A0                  00251 video_buffer_b1 res 80
                      00252 vb_b2    udata 0x120
0120                  00253 video_buffer_b2 res 80
                      00254  
                      00255  
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  19:42:20         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00256     udata_shr
                      00257 ;scan lines counter 16 bits
0000                  00258 lcountL res 1
0001                  00259 lcountH res 1
                      00260 ; boolean flags 
0002                  00261 flags res 1
                      00262 ; game timer
0003                  00263 gtimer res 1 
                      00264 #ifdef SOUND_SUPPORT 
                      00265 ; sound timer
0004                  00266 tone_tmr res 1 
                      00267 #endif 
                      00268 ; lfsr PRNG register
0005                  00269 randL res 1 
0006                  00270 randH res 1 
                      00271 ; loop counter
0007                  00272 rcount res 1
                      00273 ; arithmetic accumulator A 16 bits
0008                  00274 accaL res 1
0009                  00275 accaH res 1
                      00276 ; arithmetic accumulator B 16 bits
000A                  00277 accbL res 1
000B                  00278 accbH res 1
                      00279 ; game pad buttons state
000C                  00280 buttons res 1
                      00281 ; program memory reader next nibble {0-3}
000D                  00282 nibble res 1
                      00283 ; temporary registers
000E                  00284 t0  res 1
000F                  00285 t1  res 1
                      00286   
                      00287 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00288 ; reset entry point
                      00289 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0010                  00290 rst: 
                      00291     org 0
0000   0023           00292     banksel ANSELA
0001   018C           00293     clrf ANSELA
0002   160C           00294     bsf ANSELA,PAD_PIN
0003   2???           00295     goto init
                      00296     
                      00297     org 4
                      00298 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;   
                      00299 ; interrupt service routine
                      00300 ; the only interrupt is on SYNC_PWM timer
                      00301 ; this intterrupt trigger once 
                      00302 ; for every horizontal line, i.e. 15748/sec.    
                      00303 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
0004                  00304 isr:
0004   003B           00305     banksel SYNC_PWMINTF
0005   103D           00306     bcf SYNC_PWMINTF,PRIF
0006   1800           00307     btfsc lcountH,0
0007   3???           00308     bra gt_255 ; lcount > 255
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  19:42:20         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00309 ; lcount < 256
0008   08??           00310     movfw lcountL
0009   1903           00311     skpnz
000A   3???           00312     bra vsync_start
000B   3A03           00313     xorlw 3
000C   1903           00314     skpnz
000D   3???           00315     bra vsync_end
                      00316 ; check if visible line    
000E   08??           00317     movfw lcountL
000F   3C45           00318     sublw FIRST_VIDEO-1
0010   1803           00319     skpnc
0011   3???           00320     bra isr_exit
0012   08??           00321     movfw lcountL
0013   3CC5           00322     sublw LAST_VIDEO
0014   1C03           00323     skpc
0015   3???           00324     bra isr_exit
                      00325 ; output video pixels for this line    
0016   2???           00326     call video_serialize 
0017   3???           00327     bra isr_exit 
                      00328 ; scanline 0 start vertical sync pulse    
0018                  00329 vsync_start: 
0018   003B           00330     banksel SYNC_PWMDCL
0019   3097           00331     movlw (HORZ_PERIOD-HORZ_PULSE)&0xff
001A   00B3           00332     movwf SYNC_PWMDCL
001B   3004           00333     movlw (HORZ_PERIOD-HORZ_PULSE)>>8
001C   00B4           00334     movwf SYNC_PWMDCH
001D   17BF           00335     bsf SYNC_PWMLDCON,LDA
001E   1400           00336     bsf flags, F_VSYNC
001F   3???           00337     bra isr_exit
                      00338 ; scanline 3 end vertical sync pulse
0020                  00339 vsync_end: 
0020   003B           00340     banksel SYNC_PWMDCL
0021   305E           00341     movlw HORZ_PULSE&0xff
0022   00B3           00342     movwf SYNC_PWMDCL
0023   3000           00343     movlw HORZ_PULSE>>8
0024   00B4           00344     movwf SYNC_PWMDCH
0025   17BF           00345     bsf SYNC_PWMLDCON,LDA
0026   1000           00346     bcf flags, F_VSYNC
0027   3???           00347     bra isr_exit
                      00348 ; scan line > 255    
0028                  00349 gt_255:
                      00350 ; check for end of field    
0028   3006           00351     movlw LAST_LINE&0xff
0029   1C80           00352     btfss flags,F_EVEN
002A   3E01           00353     addlw 1
002B   06??           00354     xorwf lcountL,W
002C   1D03           00355     skpz
002D   3???           00356     bra tasks
                      00357 ; end of field
                      00358 ; reset line counter    
002E   01??           00359     clrf lcountL
002F   01??           00360     clrf lcountH
0030   3002           00361     movlw 1<<F_EVEN
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  19:42:20         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0031   06??           00362     xorwf flags,F ; toggle even field flag
0032   0009           00363     retfie
                      00364 ; round robin task scheduler
                      00365 ; each task execute once every 1/60th sec.
                      00366 ; condition:    
                      00367 ;   Task must complete inside
                      00368 ;   horizontal period. i.e. before SYNC_PWM period end
                      00369 ; maximum 6 tasks slots available    
0033                  00370 tasks:
                      00371 ; task selector    
0033   08??           00372     movfw lcountL
0034   1903           00373     skpnz
0035   3???           00374     bra task0
0036   0389           00375     decf WREG
0037   1903           00376     skpnz 
0038   3???           00377     bra task1
0039   0389           00378     decf WREG
003A   1903           00379     skpnz
003B   3???           00380     bra task2
003C   3???           00381     bra isr_exit
003D                  00382 task0:
                      00383 #ifdef SOUND_SUPPORT    
                      00384 ; sound timer    
003D   08??           00385     movfw tone_tmr
003E   1903           00386     skpnz
003F   3???           00387     bra isr_exit
0040   0B??           00388     decfsz tone_tmr,F
0041   3???           00389     bra isr_exit
0042   1200           00390     bcf flags,F_SND
0043   003B           00391     banksel AUDIO_PWMCON
0044   13AB           00392     bcf AUDIO_PWMCON,EN
                      00393 #endif    
0045   3???           00394     bra isr_exit
0046                  00395 task1:   
                      00396 ; game timer    
0046   08??           00397     movf gtimer,F ; 
0047   1903           00398     skpnz
0048   3???           00399     bra isr_exit
0049   0B??           00400     decfsz gtimer,F ; 
004A   3???           00401     bra isr_exit ;
004B   1100           00402     bcf flags, F_GTMR
004C   3???           00403     bra isr_exit ;
004D                  00404 task2:
                      00405 ; rotate lfsr
004D   36??           00406     lsrf randH
004E   0C??           00407     rrf randL
004F   1803           00408     skpnc
0050   30B4           00409     movlw LFSR_TAPS
0051   06??           00410     xorwf randH
0052                  00411 isr_exit:
0052   0A??           00412     incf lcountL
0053   1903           00413     skpnz
0054   0A??           00414     incf lcountH
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  19:42:20         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0055   0009           00415     retfie
                      00416 
                      00417 ;div10    
                      00418 ; divsion by 10    
                      00419 ; needed to convert binary to BCD
                      00420 ; input:
                      00421 ;   acca dividend  16 bits
                      00422 ; output:
                      00423 ;   acca: quotient
                      00424 ;   accbL: remainder    
0056                  00425 div10:
0056   3011           00426     movlw 17
0057   00??           00427     movwf rcount
0058   01??           00428     clrf accbL
0059                  00429 div10_loop:
0059   300A           00430     movlw 10
005A   02??           00431     subwf accbL,W
005B   1803           00432     skpnc
005C   00??           00433     movwf accbL
005D   0D??           00434     rlf accaL
005E   0D??           00435     rlf accaH
005F   0D??           00436     rlf accbL
0060   0B??           00437     decfsz rcount
0061   3???           00438     bra div10_loop
0062   36??           00439     lsrf accbL
0063   0008           00440     return
                      00441     
                      00442 ;read_pad    
                      00443 ;read game pad
                      00444 ; store value in 'buttons'
                      00445 ; a button is accepted if
                      00446 ; the Vadc value is below its threshold
0064                  00447 read_pad:
0064   01??           00448     clrf buttons
0065   1A00           00449     btfsc flags, F_SND
0066   0008           00450     return ; can't read while tone playing
0067   0021           00451     banksel TRISA
0068   160C           00452     bsf TRISA,ADC_PIN
0069   0021           00453     banksel ADCON0
006A   141D           00454     bsf ADCON0,ADON
                      00455     tcyDelay 5*4 ; délais d'acquisition 4µsec
  0000                    M     variable r=5*4%5
  0004                    M     variable q=5*4/5
                          M     while r>1
                          M     bra $+1
                          M r-=2
                          M     endw
                          M     if r==1
                          M     nop
                          M     endif
                          M     if q
006B   3004               M     movlw q
006C   3???               M     bra $+1
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  19:42:20         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

006D   0B89               M     decfsz WREG
006E   3???               M     bra $-2
                          M     endif
006F   149D           00456     bsf ADCON0,GO
0070   189D           00457     btfsc ADCON0,NOT_DONE
0071   3???           00458     bra $-1
0072   101D           00459     bcf ADCON0,ADON
                      00460 ; try each button from lower to upper
0073                  00461 try_a:
                      00462     try_button A_THR, try_b
0073   3040               M     movlw A_THR
0074   021C               M     subwf ADRESH,W
0075   1803               M     skpnc
0076   3???               M     bra try_b
0077   1600           00463     bsf buttons,BTN_A
0078   3???           00464     bra read_exit
0079                  00465 try_b:    
                      00466     try_button B_THR, try_rt
0079   3095               M     movlw B_THR
007A   021C               M     subwf ADRESH,W
007B   1803               M     skpnc
007C   3???               M     bra try_rt
007D   1680           00467     bsf buttons,BTN_B
007E   3???           00468     bra read_exit
007F                  00469 try_rt:
                      00470     try_button RT_THR, try_up
007F   30B5               M     movlw RT_THR
0080   021C               M     subwf ADRESH,W
0081   1803               M     skpnc
0082   3???               M     bra try_up
0083   1580           00471     bsf buttons,BTN_RT
0084   3???           00472     bra read_exit
0085                  00473 try_up:
                      00474     try_button UP_THR, try_lt
0085   30C6               M     movlw UP_THR
0086   021C               M     subwf ADRESH,W
0087   1803               M     skpnc
0088   3???               M     bra try_lt
0089   1400           00475     bsf buttons,BTN_UP
008A   3???           00476     bra read_exit
008B                  00477 try_lt:
                      00478     try_button LT_THR, try_dn
008B   30D1               M     movlw LT_THR
008C   021C               M     subwf ADRESH,W
008D   1803               M     skpnc
008E   3???               M     bra try_dn
008F   1500           00479     bsf buttons,BTN_LT
0090   3???           00480     bra read_exit
0091                  00481 try_dn:
                      00482     try_button DN_THR, read_exit
0091   30D8               M     movlw DN_THR
0092   021C               M     subwf ADRESH,W
0093   1803               M     skpnc
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  19:42:20         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0094   3???               M     bra read_exit
0095   1480           00483     bsf buttons,BTN_DN
0096                  00484 read_exit:
0096   0021           00485     banksel TRISA
0097   120C           00486     bcf TRISA,ADC_PIN
0098   0008           00487     return
                      00488 
                      00489 #ifdef SOUND_SUPPORT    
                      00490 ; play a tone
                      00491 ; input:
                      00492 ;   t   duration in multiple of 1/60 sec.
                      00493 ;   n   note number
0099                  00494 tone: ; ( t n -- )
0099   0021           00495     banksel TRISA
009A   120C           00496     bcf TRISA,AUDIO_PIN
009B   003B           00497     banksel AUDIO_PWMPRL
009C   3581           00498     lslf T
009D   0801           00499     movfw T
009E   2???           00500     call tone_pr
009F   00A5           00501     movwf AUDIO_PWMPRL
00A0   3689           00502     lsrf WREG
00A1   00A3           00503     movwf AUDIO_PWMDCL
00A2   0A01           00504     incf T,W
00A3   2???           00505     call tone_pr
00A4   00A6           00506     movwf AUDIO_PWMPRH
00A5   3689           00507     lsrf WREG
00A6   00A4           00508     movwf AUDIO_PWMDCH
00A7   1803           00509     skpnc
00A8   17A3           00510     bsf AUDIO_PWMDCL,7
                      00511     drop  ; n
00A9   317F               M    addfsr SP,-1
                      00512     pop   ; WREG=t
00AA   0017               M     moviw SP--
00AB   00??           00513     movwf tone_tmr
00AC   17AB           00514     bsf AUDIO_PWMCON,EN
00AD   17AF           00515     bsf AUDIO_PWMLDCON,LDA
00AE   1600           00516     bsf flags,F_SND
00AF   0008           00517     return
                      00518 #endif
                      00519     
                      00520 ; set_yptr    
                      00521 ; set FSR0 to point to
                      00522 ; video_buffer line y    
                      00523 ; input:
                      00524 ;   y  line number {0:YZISE-1}
                      00525 ; output:
                      00526 ;   FSR0 point to beginning of line y    
00B0                  00527 set_yptr: ; ( y -- )
00B0   3030           00528     movlw VIDEO_BUFFER&0xff
00B1   0084           00529     movwf FSR0L
00B2   3020           00530     movlw VIDEO_BUFFER>>8
00B3   0085           00531     movwf FSR0H
00B4   3581           00532     lslf T,F
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  19:42:20         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00B5   3501           00533     lslf T,W
00B6   0781           00534     addwf T,F
                      00535     pop
00B7   0017               M     moviw SP--
00B8   0784           00536     addwf FSR0L
00B9   0103           00537     clrw 
00BA   3D85           00538     addwfc FSR0H
00BB   0008           00539     return
                      00540     
                      00541 ;video_serialize
                      00542 ; serialise video pixels to output pin
                      00543 ; use EUSART in synchronous mode    
                      00544 ; called from isr    
                      00545 ; input:
                      00546 ;   none
                      00547 ; output:
                      00548 ;   none    
00BC                  00549 video_serialize: 
                      00550     tcyDelay HORZ_DLY
  0000                    M     variable r=HORZ_DLY%5
  000A                    M     variable q=HORZ_DLY/5
                          M     while r>1
                          M     bra $+1
                          M r-=2
                          M     endw
                          M     if r==1
                          M     nop
                          M     endif
                          M     if q
00BC   300A               M     movlw q
00BD   3???               M     bra $+1
00BE   0B89               M     decfsz WREG
00BF   3???               M     bra $-2
                          M     endif
                      00551 ; save FSR0    
00C0   0804           00552     movfw FSR0L
                      00553     push
00C1   001C               M     movwi ++SP
00C2   0805           00554     movfw FSR0H
                      00555     push
00C3   001C               M     movwi ++SP
00C4   3046           00556     movlw FIRST_VIDEO
00C5   02??           00557     subwf lcountL,W
00C6   3689           00558     lsrf WREG  ; a pixel is 4 scan lines
00C7   3689           00559     lsrf WREG
                      00560     push      ; FSR0L FSR0H y
00C8   001C               M     movwi ++SP
00C9   2???           00561     call set_yptr ; FSR0L FSR0H
                      00562     lit BPL ; FSR0L FSR0H BPL
00CA   3006               M    movlw BPL
00CB   001C               M    movwi ++SP 
00CC   0023           00563     banksel RCSTA
00CD   179D           00564     bsf RCSTA,SPEN
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  19:42:20         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00CE                  00565 byte_serialize:    
00CE   0023           00566     banksel PIXEL_TXREG
00CF   0012           00567     moviw FSR0++
00D0   009A           00568     movwf PIXEL_TXREG
00D1   0020           00569     banksel TX_PIR
00D2   1E11           00570     btfss TX_PIR,TXIF
00D3   3???           00571     bra $-1
00D4   0B81           00572     decfsz T
00D5   3???           00573     bra byte_serialize
                      00574     drop ; discard bytes counter
00D6   317F               M    addfsr SP,-1
00D7   0023           00575     banksel PIXEL_TXREG
00D8   019A           00576     clrf PIXEL_TXREG
00D9   0020           00577     banksel TX_PIR
00DA   1E11           00578     btfss TX_PIR,TXIF
00DB   3???           00579     bra $-1
00DC   0023           00580     banksel RCSTA
00DD   139D           00581     bcf RCSTA, SPEN
                      00582 ;restore FSR0    
                      00583     pop
00DE   0017               M     moviw SP--
00DF   0085           00584     movwf FSR0H
                      00585     pop
00E0   0017               M     moviw SP--
00E1   0084           00586     movwf FSR0L
00E2   0008           00587     return
                      00588 
                      00589 ; clear_screen
                      00590 ; set all pixels black
                      00591 ; input:
                      00592 ;   none
                      00593 ; output:
                      00594 ;   none    
00E3                  00595 clear_screen: 
                      00596     lit 0
00E3   3000               M    movlw 0
00E4   001C               M    movwi ++SP 
00E5   2???           00597     call set_yptr
00E6   30C0           00598     movlw BUFFER_SIZE
                      00599     push  ; T=byte count  
00E7   001C               M     movwi ++SP
00E8   3000           00600     movlw 0
00E9                  00601 cls_loop:    
00E9   001A           00602     movwi FSR0++
00EA   0B81           00603     decfsz T
00EB   3???           00604     bra cls_loop
                      00605     drop
00EC   317F               M    addfsr SP,-1
00ED   0008           00606     return
                      00607 
                      00608 ;set_pixel_ptr    
                      00609 ;set FSR0 pointer at byte containing pixel x,y
                      00610 ; input:
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  19:42:20         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00611 ;   x,y coordinates of pixel in video_buffer    
                      00612 ; output:
                      00613 ;   WREG = pixel mask  
                      00614 ; NOTE: EUSART output Least Significant Bit first
                      00615 ;       LSB appear left on screen.
00EE                  00616 set_pixel_ptr:  ; ( x y -- )
00EE   2???           00617     call set_yptr
                      00618 ; FSR0+x/8
00EF   3601           00619     lsrf T,W   
00F0   3689           00620     lsrf WREG
00F1   3689           00621     lsrf WREG
00F2   0784           00622     addwf FSR0L
00F3   0103           00623     clrw
00F4   3D85           00624     addwfc FSR0H
                      00625 ;create bit mask    
00F5   3007           00626     movlw 7
00F6   0581           00627     andwf T,F ; T=bit position
00F7   3001           00628     movlw 0x1
00F8   1903           00629     skpnz 
00F9   3???           00630     bra mask01 ; least significant bit
00FA                  00631 mask00:
00FA   3589           00632     lslf WREG
00FB   0B81           00633     decfsz T
00FC   3???           00634     bra mask00
00FD                  00635 mask01:
                      00636     drop ; discard shift counter
00FD   317F               M    addfsr SP,-1
00FE   0008           00637     return
                      00638 
                      00639 ; set_pixel
                      00640 ; set x,y pixel to 1
                      00641 ; input:
                      00642 ;   x,y pixel coordinates x{0:XSIZE-1},y{0:YSIZE-1}
                      00643 ; output:
                      00644 ;   none
00FF                  00645 set_pixel: ; ( x y -- )
00FF   2???           00646     call set_pixel_ptr
0100   0480           00647     iorwf INDF0,F
0101   0008           00648     return
                      00649 
                      00650 ; clear_pixel
                      00651 ; set x,y pixel to 0
                      00652 ; input:
                      00653 ;   x,y pixel coordinates x{0:XSIZE-1},y{0:YSIZE-1}
                      00654 ; output:
                      00655 ;   none
0102                  00656 clear_pixel: ; ( x y -- )
0102   2???           00657     call set_pixel_ptr
0103   0989           00658     comf WREG
0104   0580           00659     andwf INDF0,F
0105   0008           00660     return
                      00661 
                      00662 ; get_pixel    
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  19:42:20         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00663 ; return state of pixel
                      00664 ; input:
                      00665 ;   x,y pixel coordinates x{0:XSIZE-1},y{0:YSIZE-1}
                      00666 ; output:
                      00667 ;   WREG=0|2^n  where n{0:7}
                      00668 ;   Z=1 when T==0    
0106                  00669 get_pixel: ; ( x y -- )
0106   2???           00670     call set_pixel_ptr
0107   0500           00671     andwf INDF0,W
0108   0008           00672     return
                      00673     
                      00674 ; xor_pixel
                      00675 ; inverse pixel at x,y coordinates
                      00676 ; input:
                      00677 ;   x,y pixel coordinates x{0:XSIZE-1},y{0:YSIZE-1}
                      00678 ; output:
                      00679 ;   set F_COLL boolean flag if collision
0109                  00680 xor_pixel: ; ( x y -- f )
0109   2???           00681     call set_pixel_ptr
010A   0680           00682     xorwf INDF0,F
010B   0500           00683     andwf INDF0,W
010C   1903           00684     skpnz
010D   1680           00685     bsf flags, F_COLL
010E   0008           00686     return
                      00687 
                      00688 ;xor_row    
                      00689 ; draw row of 4 pixels
                      00690 ; stop when n==0    
                      00691 ; input:
                      00692 ;   {x,y} left coordinates
                      00693 ;   n pixels to draw, 4 bits in high nibble
                      00694 ; output:
                      00695 ;   f=collision flag, return modified value   
                      00696 ; conditions:
                      00697 ;   use 't1' as temporary storage    
                      00698 ; >> no bank dependency << 
010F                  00699 xor_row: ; ( n x y -- )
                      00700 ; check for empty row
                      00701     pick 2 ; check if n==0
010F   3F7E               M     moviw -2[SP]
0110   1903           00702     skpnz
0111   3???           00703     bra xor_row_done ; row empty nothing to do
0112   3589           00704     lslf WREG
                      00705     insert 2  ; save shifted n
0113   3FFE               M    movwi -2[SP]
0114   1C03           00706     skpc
0115   3???           00707     bra xor_row02 ; bit==0 no draw
                      00708 ; bounds check x{0:XSIZE-1}    
                      00709     pick 1  ; WREG=x
0116   3F7F               M     moviw -1[SP]
0117   1B89           00710     btfsc WREG,7 
0118   3???           00711     bra xor_row02 ; x<0 out of screen
                      00712     over ; n x y x 
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  19:42:20         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0119   3F7F               M     moviw -1[SP]
                          M     push
011A   001C               M     movwi ++SP
                      00713     over ; n x y x y
011B   3F7F               M     moviw -1[SP]
                          M     push
011C   001C               M     movwi ++SP
011D   2???           00714     call xor_pixel ; -- n x y
011E                  00715 xor_row02:
                      00716     inc_n 1  ; x+=1
011E   3F7F               M     moviw -1[SP]
011F   0A89               M     incf WREG,F
0120   3FFF               M     movwi -1[SP]
0121   3???           00717     bra xor_row
0122                  00718 xor_row_done: ; n x y
                      00719     drop_n 3  ; clean stack
0122   317D               M     addfsr SP,-3
0123   0008           00720     return
                      00721 
                      00722 ;get_flash_word    
                      00723 ; read program memory word
                      00724 ; input:
                      00725 ;   ofs offset in table {0:255}    
                      00726 ;   lo is low byte of program address
                      00727 ;   hi is high byte of program address
                      00728 ; output:
                      00729 ;   PMDATH:PMDAL contain 14 bits data word
                      00730 ; side effect:    
                      00731 ;   set 'nibble' counter 
                      00732 ;   modify BSR    
0124                  00733 get_flash_word: ; ( ofs -- )
0124   0023           00734     banksel PMADR
                      00735     pop
0125   0017               M     moviw SP--
0126   0791           00736     addwf PMADRL,F
0127   0103           00737     clrw 
0128   3D92           00738     addwfc PMADRH,F
0129                  00739 read_flash:    
0129   1315           00740     bcf PMCON1,CFGS
012A   1415           00741     bsf PMCON1, RD
012B   0000           00742     nop
012C   0000           00743     nop
012D   0E14           00744     swapf PMDATH,W
012E   3903           00745     andlw 3
012F   1903           00746     skpnz
0130   3003           00747     movlw 3
0131   00??           00748     movwf nibble
0132   0008           00749     return
                      00750 
                      00751 ;next_flash_word    
                      00752 ; increment PMADR 
                      00753 ; and read next flash word    
                      00754 ; input:
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  19:42:20         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00755 ;   none
                      00756 ; output:
                      00757 ;   PMDAT    
                      00758 ; side effect:
                      00759 ;   set 'nibble' counter    
                      00760 ;   modify BSR
0133                  00761 next_flash_word:
0133   0023           00762     banksel PMADR
0134   0A91           00763     incf PMADRL
0135   1903           00764     skpnz
0136   0A92           00765     incf PMADRH
0137   3???           00766     bra read_flash
                      00767 
                      00768 ;get_nibble    
                      00769 ;get nibble from PMDAT
                      00770 ; input:
                      00771 ;   none    
                      00772 ; output:
                      00773 ;   T=nibble in bits 7:4
                      00774 ; side effect:    
                      00775 ;   increment 'nibble' variable    
                      00776 ;   modify BSR
0138                  00777 get_nibble: ; ( -- nibble )
0138   08??           00778     movfw nibble
0139   1903           00779     skpnz 
013A   2???           00780     call next_flash_word
                      00781 ;    banksel PMDAT
                      00782 ; select nibble in word    
013B   3A03           00783     xorlw 3
013C   1903           00784     skpnz
013D   3???           00785     bra row0
013E   3A03           00786     xorlw 3
013F   3A02           00787     xorlw 2
0140   1903           00788     skpnz
0141   3???           00789     bra row1
0142                  00790 row2:
0142   0E13           00791     swapf PMDATL,W
0143   3???           00792     bra nibble_mask
0144                  00793 row1:    
0144   0813           00794     movfw PMDATL
0145   3???           00795     bra nibble_mask
0146                  00796 row0:    
0146   0E14           00797     swapf PMDATH,W
0147                  00798 nibble_mask:
0147   39F0           00799     andlw 0xf0
                      00800     push
0148   001C               M     movwi ++SP
0149   03??           00801     decf nibble,F ; advance nibble counter
014A   0008           00802     return
                      00803 
                      00804 ;bitmap
                      00805 ; apply a bitmap from program memory to video_buffer
                      00806 ; a bitmap is 4 pixels wide and any number of rows    
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  19:42:20         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00807 ; input:
                      00808 ;   PMADR  point to table in program memory    
                      00809 ;   x,y  left/top coordinates in video_buffer
                      00810 ;   ofs  offset of bitmap in table
                      00811 ; output:
                      00812 ;   none
014B                  00813 bitmap: ; ( x y ofs -- )
014B   2???           00814     call get_flash_word  ; x y ofs -- x y 
014C                  00815 bmp00:
014C   08??           00816     movfw nibble
                      00817     push    ; x y cntr
014D   001C               M     movwi ++SP
014E                  00818 bmp02:    
014E   2???           00819     call get_nibble ; x y cntr -- x y cntr n 
                      00820     pick 3 ; x
014F   3F7D               M     moviw -3[SP]
                      00821     push    ; x y cntr n x
0150   001C               M     movwi ++SP
                      00822     pick 3  ; y
0151   3F7D               M     moviw -3[SP]
                      00823     push      ; x y cntr n x y
0152   001C               M     movwi ++SP
0153   2???           00824     call xor_row ; x y cntr n x y -- x y cntr
                      00825     inc_n 1 ; y+=1
0154   3F7F               M     moviw -1[SP]
0155   0A89               M     incf WREG,F
0156   3FFF               M     movwi -1[SP]
0157   0B81           00826     decfsz T
0158   3???           00827     bra bmp02
                      00828 ;    banksel PMDAT
0159   0E14           00829     swapf PMDATH,W
015A   3903           00830     andlw 3
015B   1903           00831     skpnz
015C   3???           00832     bra bmp01
                      00833     drop_n 3  ; clean stack
015D   317D               M     addfsr SP,-3
015E   0008           00834     return
015F                  00835 bmp01:
                      00836     drop  ; x y 
015F   317F               M    addfsr SP,-1
0160   2???           00837     call next_flash_word
0161   3???           00838     bra bmp00
                      00839     
                      00840 ;print_char     
                      00841 ; draw character in video_buffer 
                      00842 ; input:
                      00843 ;   x,y left/top coordinates
                      00844 ;   c   character to print 
                      00845 ; output:
                      00846 ;   none    
0162                  00847 print_char: ; ( x y c -- )
0162   3581           00848     lslf T ; 2 words per table entry
0163   0023           00849     banksel PMADR
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  19:42:20         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0164   30??           00850     movlw low(digits)
0165   0091           00851     movwf PMADRL
0166   30??           00852     movlw high(digits)
0167   0092           00853     movwf PMADRH
0168   2???           00854     call bitmap ; x y ofs -- 
0169   0008           00855     return
                      00856 
                      00857 ;print_tetrim    
                      00858 ; print current tetriminos
                      00859 ; input:
                      00860 ;   none
                      00861 ; use game variables   
                      00862 ;   titrim: tetriminos id
                      00863 ;   angle: rotation angle    
                      00864 ;   tx,ty  left/top coordinates
                      00865 ; output:
                      00866 ;   f boolean collision flag   
                      00867 ; side effect:    
                      00868 ;   modify BSR
016A                  00869 print_tetrim: ; ( -- f )
016A   1280           00870     bcf flags, F_COLL
016B   0020           00871     banksel GAME_VAR
016C   08??           00872     movfw tx
                      00873     push    ; -- x
016D   001C               M     movwi ++SP
016E   08??           00874     movfw ty
                      00875     push    ; -- x y 
016F   001C               M     movwi ++SP
0170   08??           00876     movfw angle
                      00877     push    ; -- x y a
0171   001C               M     movwi ++SP
0172   35??           00878     lslf tetrim,W   ; 4 words per table entry, one for each angle
0173   3589           00879     lslf WREG
0174   3A18           00880     xorlw 24
0175   1903           00881     skpnz
0176   3581           00882     lslf T,F
0177   3A18           00883     xorlw 24
0178   0781           00884     addwf T,F  ; x y ofs
0179   0023           00885     banksel PMADR
017A   30??           00886     movlw low(tetriminos)
017B   0091           00887     movwf PMADRL
017C   30??           00888     movlw high(tetriminos)
017D   0092           00889     movwf PMADRH
017E   2???           00890     call bitmap
                      00891     lit 0
017F   3000               M    movlw 0
0180   001C               M    movwi ++SP 
0181   1A80           00892     btfsc flags, F_COLL
0182   0A81           00893     incf T,F
0183   0008           00894     return
                      00895 
                      00896 ;print_label    
                      00897 ;print a text line stored in program memory
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  19:42:20         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00898 ; text terminated by 255
                      00899 ; input: 
                      00900 ;  x,y left coordinates
                      00901 ;  PCLH= high(table)
                      00902 ;  T=low(table) 
                      00903 ; output:
                      00904 ;   none
0184                  00905 print_label: ; ( x y tableL -- )
0184   0801           00906     movfw T     ; WREG= labelL
0185   000A           00907     callw      
0186   1B89           00908     btfsc WREG,7
0187   3???           00909     bra prt_lbl_done
                      00910     push ; x y labelL c
0188   001C               M     movwi ++SP
                      00911     pick 3  ; WREG=x
0189   3F7D               M     moviw -3[SP]
                      00912     push    ; x y labelL c x 
018A   001C               M     movwi ++SP
                      00913     pick 3  ; WREG=y
018B   3F7D               M     moviw -3[SP]
                      00914     push    ; x y labelL c x y
018C   001C               M     movwi ++SP
                      00915     pick 2  ; WREG = c
018D   3F7E               M     moviw -2[SP]
                      00916     push    ; x y labelL c x y c
018E   001C               M     movwi ++SP
018F   2???           00917     call print_char ; x y labelL c x y c -- x y labelL c
                      00918     drop    ; x y labelL
0190   317F               M    addfsr SP,-1
0191   3001           00919     movlw 1
0192   0781           00920     addwf T,F ; advance to next character in table
0193   0103           00921     clrw
0194   3D8A           00922     addwfc PCLATH,F
                      00923     pick 2    ; x
0195   3F7E               M     moviw -2[SP]
0196   3E04           00924     addlw 4   ; x+=4
                      00925     insert 2  
0197   3FFE               M    movwi -2[SP]
0198   3???           00926     bra print_label
0199                  00927 prt_lbl_done:
                      00928     drop_n 3
0199   317D               M     addfsr SP,-3
019A   0008           00929     return
                      00930     
                      00931 ;print_int
                      00932 ;print an integer
                      00933 ;from right to left ( least significant digit first)
                      00934 ; input:    
                      00935 ;   y  line number 
                      00936 ;   number to print in acca    
                      00937 ; output:
                      00938 ;   none
                      00939 ; condition:    
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  19:42:20         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00940 ;   accbL contain digit after div10 call    
019B                  00941 print_int: ; ( y -- )
                      00942     dup     ; y y
019B   0801               M     movfw T
019C   001C               M     movwi ++SP
019D   302B           00943     movlw XSIZE-5
                      00944     insert 1    ; x y
019E   3FFF               M    movwi -1[SP]
019F                  00945 print_int00:    
019F   08??           00946     movfw accaH
01A0   04??           00947     iorwf accaL,W
01A1   1903           00948     skpnz
01A2   3???           00949     bra print_last
                      00950     over    ; x y x 
01A3   3F7F               M     moviw -1[SP]
                          M     push
01A4   001C               M     movwi ++SP
                      00951     over    ; x y x y
01A5   3F7F               M     moviw -1[SP]
                          M     push
01A6   001C               M     movwi ++SP
01A7   2???           00952     call div10
01A8   08??           00953     movfw accbL ; remainder of division
                      00954     push   ; x y x y d
01A9   001C               M     movwi ++SP
01AA   2???           00955     call print_char ; -- x y 
                      00956     pick 1  ; x
01AB   3F7F               M     moviw -1[SP]
                      00957     push    ; x y x
01AC   001C               M     movwi ++SP
01AD   3004           00958     movlw 4
01AE   0281           00959     subwf T,F ; x y x-4  next position in video_buffer
                      00960     pop
01AF   0017               M     moviw SP--
                      00961     insert 1  ; save that x position
01B0   3FFF               M    movwi -1[SP]
01B1   3???           00962     bra print_int00
01B2                  00963 print_last:
                      00964     pick 1  ; x 
01B2   3F7F               M     moviw -1[SP]
01B3   3A2B           00965     xorlw XSIZE-5 ; x at right margin?
01B4   1D03           00966     skpz
01B5   3???           00967     bra no_zero
                      00968     push          ; yes print a zero
01B6   001C               M     movwi ++SP
01B7   3???           00969     bra print_char
01B8                  00970 no_zero:
                      00971     drop_n 2
01B8   317E               M     addfsr SP,-2
01B9   0008           00972     return
                      00973     
                      00974 ; draw horizontal line ( length  y x -- )
                      00975 ; inputs:
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  19:42:20         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00976 ;   length of line
                      00977 ;   {x,y} left coordinates 
                      00978 ; output:
                      00979 ;   none    
01BA                  00980 hline:
                      00981     pick 2  ; length
01BA   3F7E               M     moviw -2[SP]
01BB   1903           00982     skpnz
01BC   3???           00983     bra hline_done  ; length=0
01BD   0389           00984     decf WREG
                      00985     insert 2  ; decrement length
01BE   3FFE               M    movwi -2[SP]
                      00986     dup     ; len y x x
01BF   0801               M     movfw T
01C0   001C               M     movwi ++SP
                      00987     pick 2  ; y
01C1   3F7E               M     moviw -2[SP]
                      00988     push    ; len y x x y
01C2   001C               M     movwi ++SP
01C3   2???           00989     call xor_pixel
01C4   0A81           00990     incf T  ; len y x+1
01C5   3???           00991     bra hline
01C6                  00992 hline_done:    
                      00993     drop_n 3
01C6   317D               M     addfsr SP,-3
01C7   0008           00994     return
                      00995 
                      00996 ; vline    
                      00997 ;draw vertical line ( length x y -- )
                      00998 ; inputs:
                      00999 ;   length of line
                      01000 ;   {x,y} top coordinates
                      01001 ; output:
                      01002 ;   none    
01C8                  01003 vline:  ; ( len x y -- ) 
                      01004     pick 2 ; len
01C8   3F7E               M     moviw -2[SP]
01C9   1903           01005     skpnz
01CA   3???           01006     bra vline_done ; len=0
01CB   0389           01007     decf WREG
                      01008     insert 2  ; decrement len
01CC   3FFE               M    movwi -2[SP]
                      01009     over     ; l x y x
01CD   3F7F               M     moviw -1[SP]
                          M     push
01CE   001C               M     movwi ++SP
                      01010     over     ; l x y x y    
01CF   3F7F               M     moviw -1[SP]
                          M     push
01D0   001C               M     movwi ++SP
01D1   2???           01011     call xor_pixel ; -- l x y
01D2   0A81           01012     incf T,F    ; y+=1
01D3   3???           01013     bra vline
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  19:42:20         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01D4                  01014 vline_done:
                      01015     drop_n 3
01D4   317D               M     addfsr SP,-3
01D5   0008           01016     return
                      01017     
  0000000A            01018 WELL_WIDTH equ 10
  00000016            01019 WELL_DEPTH equ 22 
                      01020 ;game_init
                      01021 ; initialize game state
                      01022 ; input:
                      01023 ;   none
                      01024 ; output:
                      01025 ;   none    
01D6                  01026 game_init:
01D6   2???           01027     call clear_screen
                      01028 ; draw game well
01D7   3016           01029     movlw WELL_DEPTH
                      01030     push
01D8   001C               M     movwi ++SP
                      01031     push  ; len len
01D9   001C               M     movwi ++SP
01DA   0103           01032     clrw
                      01033     push
01DB   001C               M     movwi ++SP
                      01034     push  ; len len x=0, y=0
01DC   001C               M     movwi ++SP
01DD   2???           01035     call vline ; -- len 
                      01036     lit WELL_WIDTH+1 ; len x
01DE   300B               M    movlw WELL_WIDTH+1
01DF   001C               M    movwi ++SP 
                      01037     lit 0            ; len x y
01E0   3000               M    movlw 0
01E1   001C               M    movwi ++SP 
01E2   2???           01038     call vline
                      01039     lit WELL_WIDTH+2
01E3   300C               M    movlw WELL_WIDTH+2
01E4   001C               M    movwi ++SP 
                      01040     lit WELL_DEPTH
01E5   3016               M    movlw WELL_DEPTH
01E6   001C               M    movwi ++SP 
                      01041     lit 0
01E7   3000               M    movlw 0
01E8   001C               M    movwi ++SP 
01E9   2???           01042     call hline
                      01043 ; print "SCORE" label    
                      01044     lit WELL_WIDTH+3 ; x
01EA   300D               M    movlw WELL_WIDTH+3
01EB   001C               M    movwi ++SP 
                      01045     lit 0            ; y
01EC   3000               M    movlw 0
01ED   001C               M    movwi ++SP 
01EE   31??           01046     movlp high(lbl_score)
                      01047     lit low(lbl_score)  
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  19:42:20         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01EF   30??               M    movlw low(lbl_score)
01F0   001C               M    movwi ++SP 
01F1   2???           01048     call print_label
                      01049 ; print "LINES" label    
                      01050     lit WELL_WIDTH+3 ; x
01F2   300D               M    movlw WELL_WIDTH+3
01F3   001C               M    movwi ++SP 
                      01051     lit 12           ; y
01F4   300C               M    movlw 12
01F5   001C               M    movwi ++SP 
01F6   31??           01052     movlp high(lbl_lines)
                      01053     lit low(lbl_lines)
01F7   30??               M    movlw low(lbl_lines)
01F8   001C               M    movwi ++SP 
01F9   2???           01054     call print_label
                      01055 ; variables initialization
01FA   1580           01056     bsf flags,F_GSTOP
01FB                  01057 clear_score:
01FB   0020           01058     banksel GAME_VAR
01FC   01??           01059     clrf scoreL
01FD   01??           01060     clrf scoreH
01FE   01??           01061     clrf droppedL
01FF   01??           01062     clrf droppedH
0200   0008           01063     return
                      01064 
                      01065 ; drop 1 row
                      01066 ; input:
                      01067 ;   r  row to drop
                      01068 ; output:
                      01069 ;   none
0201                  01070 drop1: ; ( r -- )
                      01071     reserve 1 ; r x  
0201   3141               M     addfsr SP, 1 
0202                  01072 row_loop: ; y{r:1}
0202   300A           01073     movlw 10
0203   0081           01074     movwf T ; -- r x
0204                  01075 col_loop:  ; x{10:1}
                      01076     dup   ; -- r x x
0204   0801               M     movfw T
0205   001C               M     movwi ++SP
                      01077     pick 2
0206   3F7E               M     moviw -2[SP]
0207   0389           01078     decf WREG
                      01079     push  ; -- r x x r-1
0208   001C               M     movwi ++SP
0209   2???           01080     call get_pixel ; -- r x p
020A   00??           01081     movwf t0
                      01082     dup         ; r x x
020B   0801               M     movfw T
020C   001C               M     movwi ++SP
                      01083     pick 2
020D   3F7E               M     moviw -2[SP]
                      01084     push        ; r x x r
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  19:42:20         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

020E   001C               M     movwi ++SP
020F   08??           01085     movf t0,F
0210   1D03           01086     skpz
0211   3???           01087     bra drop00
0212   2???           01088     call clear_pixel ;  r x x r -- r x
0213   3???           01089     bra next_pixel
0214                  01090 drop00:
0214   2???           01091     call set_pixel ; r x x r -- r x
0215                  01092 next_pixel:    
0215   0B81           01093     decfsz T    ; r x-1 
0216   3???           01094     bra col_loop
                      01095     dec_n 1  ; dec r
0217   3F7F               M     moviw -1[SP]
0218   0389               M     decf WREG,F
0219   3FFF               M     movwi -1[SP]
021A   1D03           01096     skpz 
021B   3???           01097     bra row_loop
                      01098     drop_n 2
021C   317E               M     addfsr SP,-2
021D   0008           01099     return
                      01100     
                      01101     
  00000000            01102 ROW_EMPTY equ 0     
  0000000A            01103 ROW_FULL equ 10 ; 10 bits in row
                      01104 ; query_row 
                      01105 ; check the state of well row
                      01106 ; input:
                      01107 ;   s number of bits set initialized at 0 by caller    
                      01108 ;   r row number: 0 top, 21 bottom  
                      01109 ; output:    
                      01110 ;   s={0:10}  number of bits set
021E                  01111 query_row: ; ( s=0 r -- s=0:10 )
                      01112     lit 10 ; s r x   ; check x from  10 to 1
021E   300A               M    movlw 10
021F   001C               M    movwi ++SP 
0220                  01113 qr00:
                      01114     dup   ; s r x x
0220   0801               M     movfw T
0221   001C               M     movwi ++SP
                      01115     pick 2 
0222   3F7E               M     moviw -2[SP]
                      01116     push  ; s r x x y
0223   001C               M     movwi ++SP
0224   2???           01117     call get_pixel ; -- s r x
0225   1903           01118     skpnz   ; Z modified by get_pixel
0226   3???           01119     bra qr01
                      01120     inc_n 2
0227   3F7E               M     moviw -2[SP]
0228   0A89               M     incf WREG,F
0229   3FFE               M     movwi -2[SP]
022A                  01121 qr01:    
022A   0B81           01122     decfsz T
022B   3???           01123     bra qr00
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  19:42:20         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01124     drop_n 2 ; -- s
022C   317E               M     addfsr SP,-2
022D   0008           01125     return
                      01126 
                      01127 ; count and drop full rows
                      01128 ; input:
                      01129 ;   none
                      01130 ; output:
                      01131 ;   n number of droppend rows
                      01132 ;condition:
                      01133 ;  check each row from bottom up
                      01134 ;  stop at first empty row
                      01135 ;  full rows are dropped    
022E                  01136 count_full: ; ( -- n)
                      01137     lit 0 ; full rows counter
022E   3000               M    movlw 0
022F   001C               M    movwi ++SP 
                      01138     lit 21 ; row number {21:1}
0230   3015               M    movlw 21
0231   001C               M    movwi ++SP 
0232                  01139 count_loop:
                      01140     lit 0   ; n r s  number of bits set
0232   3000               M    movlw 0
0233   001C               M    movwi ++SP 
                      01141     over    ; n r s r
0234   3F7F               M     moviw -1[SP]
                          M     push
0235   001C               M     movwi ++SP
0236   2???           01142     call query_row ; n r s r -- n r s
                      01143     pop     ; n r
0237   0017               M     moviw SP--
0238   1903           01144     skpnz
0239   3???           01145     bra count_done
023A   3A0A           01146     xorlw ROW_FULL
023B   1D03           01147     skpz
023C   3???           01148     bra next_row
                      01149 ; this is a full row    
                      01150     inc_n 1 ; increment n
023D   3F7F               M     moviw -1[SP]
023E   0A89               M     incf WREG,F
023F   3FFF               M     movwi -1[SP]
                      01151     dup    ; n r r
0240   0801               M     movfw T
0241   001C               M     movwi ++SP
0242   2???           01152     call drop1 ; n r r -- n r
0243   0A81           01153     incf T,F
0244                  01154 next_row:
0244   0B81           01155     decfsz T,F
0245   3???           01156     bra count_loop
0246                  01157 count_done:
                      01158     drop   ; n r -- n
0246   317F               M    addfsr SP,-1
0247   0008           01159     return
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  19:42:20         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01160 
                      01161 ;new_tminos    
                      01162 ; generate a new tetriminos
                      01163 ; input:
                      01164 ;   none
                      01165 ; output:
                      01166 ;   none
0248                  01167 new_tminos:
0248   0020           01168     banksel GAME_VAR
0249   3007           01169     movlw 7
024A   05??           01170     andwf randL,W
024B   3A07           01171     xorlw 7
024C   1D03           01172     skpz
024D   3A07           01173     xorlw 7
024E   00??           01174     movwf tetrim
024F   3003           01175     movlw 3
0250   05??           01176     andwf randH,W
0251   00??           01177     movwf angle
0252   3004           01178     movlw 4
0253   00??           01179     movwf tx
0254   01??           01180     clrf ty
0255   2???           01181     call print_tetrim ; -- f
0256   2???           01182     call print_tetrim ; -- f f
                      01183     drop
0257   317F               M    addfsr SP,-1
                      01184     pop
0258   0017               M     moviw SP--
0259   1D03           01185     skpz
025A   1580           01186     bsf flags, F_GSTOP
025B   0008           01187     return
                      01188 
                      01189 ;wait_start    
                      01190 ; wait player start signal
                      01191 ; button A pressed    
                      01192 ; input:
                      01193 ;   none
                      01194 ; output:
                      01195 ;   none
025C                  01196 wait_start:
                      01197 #ifdef SOUND_SUPPORT    
025C   0103           01198     clrw
025D   2???           01199     call korobeiniki
                      01200     push    ; count
025E   001C               M     movwi ++SP
                      01201     lit 0   ; sequence
025F   3000               M    movlw 0
0260   001C               M    movwi ++SP 
0261                  01202 koro:
0261   1B00           01203     btfsc flags, F_NO_SND
0262   3???           01204     bra no_sound
0263   0A81           01205     incf T,F ; -- count sequence
0264   0801           01206     movfw T  ; WREG=sequence
0265   2???           01207     call korobeiniki
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  19:42:20         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01208     push    ; -- count sequence duration
0266   001C               M     movwi ++SP
                      01209     inc_n 1 ;
0267   3F7F               M     moviw -1[SP]
0268   0A89               M     incf WREG,F
0269   3FFF               M     movwi -1[SP]
                      01210     pick 1  
026A   3F7F               M     moviw -1[SP]
026B   2???           01211     call korobeiniki
                      01212     push    ; -- count nidx duration note
026C   001C               M     movwi ++SP
026D   2???           01213     call tone  ; -- count nidx 
                      01214     wait_sound
026E   1A00               M     btfsc flags,F_SND
026F   3???               M     bra $-1
0270                  01215 no_sound:    
0270   2???           01216     call read_pad
0271   1A00           01217     btfsc buttons, BTN_A
0272   3???           01218     bra wait_end
0273   1A80           01219     btfsc buttons, BTN_B
0274   1700           01220     bsf flags, F_NO_SND
                      01221     dec_n 1
0275   3F7F               M     moviw -1[SP]
0276   0389               M     decf WREG,F
0277   3FFF               M     movwi -1[SP]
0278   1D03           01222     skpz
0279   3???           01223     bra koro
                      01224     drop_n 2
027A   317E               M     addfsr SP,-2
                      01225     pause 60
                          M     start_timer 60
027B   303C               M     movlw 60
027C   00??               M     movwf gtimer
027D   1500               M     bsf flags, F_GTMR
                          M     wait_timer
027E   1900               M     btfsc flags, F_GTMR
027F   3???               M     bra $-1
0280   3???           01226     bra wait_start
0281                  01227 wait_end:    
                      01228     drop_n 2
0281   317E               M     addfsr SP,-2
                      01229 #else
                      01230     pause 20
                      01231     call read_pad
                      01232     btfss buttons, BTN_A
                      01233     bra wait_start
                      01234 #endif    
0282   2???           01235     call clear_score
0283   1180           01236     bcf flags, F_GSTOP
0284   0008           01237     return
                      01238  
                      01239 ;coll_test
                      01240 ; collision test
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  19:42:20         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01241 ; after rotation or translation
                      01242 ; undo last action if collision    
                      01243 ; input:
                      01244 ;   none
                      01245 ; output:
                      01246 ;   none
0285                  01247 coll_test: 
0285   2???           01248     call print_tetrim ; -- f
0286   2???           01249     call print_tetrim ; -- f f
                      01250     drop
0287   317F               M    addfsr SP,-1
                      01251     pop
0288   0017               M     moviw SP--
0289   1903           01252     skpnz
028A   0008           01253     return
                      01254 ; collision occured undo last move    
028B   0020           01255     banksel GAME_VAR
                      01256 ;    movfw buttons
                      01257     case BTN_B, undo_drop_tetrim
028C   1A80               M     btfsc buttons,BTN_B
028D   3???               M     bra undo_drop_tetrim
                      01258     case BTN_UP, undo_rot_right
028E   1800               M     btfsc buttons,BTN_UP
028F   3???               M     bra undo_rot_right
                      01259     case BTN_DN, undo_rot_left
0290   1880               M     btfsc buttons,BTN_DN
0291   3???               M     bra undo_rot_left
                      01260     case BTN_RT, undo_move_right
0292   1980               M     btfsc buttons,BTN_RT
0293   3???               M     bra undo_move_right
                      01261     case BTN_LT, undo_move_left
0294   1900               M     btfsc buttons,BTN_LT
0295   3???               M     bra undo_move_left
0296   0008           01262     return
0297                  01263 undo_drop_tetrim:
0297   03??           01264     decf ty,F
0298   0008           01265     return
0299                  01266 undo_rot_right:
0299   03??           01267     decf angle,F
029A   3003           01268     movlw 3
029B   05??           01269     andwf angle,F
029C   0008           01270     return
029D                  01271 undo_rot_left:
029D   0A??           01272     incf angle,F
029E   3003           01273     movlw 3
029F   05??           01274     andwf angle,F
02A0   0008           01275     return
02A1                  01276 undo_move_right:
02A1   03??           01277     decf tx,F
02A2   0008           01278     return
02A3                  01279 undo_move_left:
02A3   0A??           01280     incf tx,F
02A4   0008           01281     return
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  19:42:20         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01282 
                      01283 ;update_display    
                      01284 ; print 'score' and 'dropped' values
                      01285 ; input:
                      01286 ;   none
                      01287 ; output:
                      01288 ;   none
02A5                  01289 update_display:    
                      01290 ; print score
02A5   0020           01291     banksel GAME_VAR
02A6   08??           01292     movfw scoreL
02A7   00??           01293     movwf accaL
02A8   08??           01294     movfw scoreH
02A9   00??           01295     movwf accaH
                      01296     lit 6
02AA   3006               M    movlw 6
02AB   001C               M    movwi ++SP 
02AC   2???           01297     call print_int
                      01298 ;print dropped line
02AD   0020           01299     banksel GAME_VAR
02AE   08??           01300     movfw droppedL
02AF   00??           01301     movwf accaL
02B0   08??           01302     movfw droppedH
02B1   00??           01303     movwf accaH
                      01304     lit 18
02B2   3012               M    movlw 18
02B3   001C               M    movwi ++SP 
02B4   2???           01305     call print_int
02B5   0008           01306     return
                      01307 
                      01308 ;game_over
                      01309 ; signal game terminated
                      01310 ; input:
                      01311 ;   none
                      01312 ; output:
                      01313 ;   none
02B6                  01314 game_over:
                      01315     lit 10
02B6   300A               M    movlw 10
02B7   001C               M    movwi ++SP 
                      01316     lit 0
02B8   3000               M    movlw 0
02B9   001C               M    movwi ++SP 
02BA                  01317 clr00:    
                      01318     over
02BA   3F7F               M     moviw -1[SP]
                          M     push
02BB   001C               M     movwi ++SP
                      01319     over
02BC   3F7F               M     moviw -1[SP]
                          M     push
02BD   001C               M     movwi ++SP
02BE   2???           01320     call clear_pixel ; x y x y -- x y
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  19:42:20         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01321     dec_n 1 ; x-=1
02BF   3F7F               M     moviw -1[SP]
02C0   0389               M     decf WREG,F
02C1   3FFF               M     movwi -1[SP]
02C2   1D03           01322     skpz
02C3   3???           01323     bra clr00
02C4   3015           01324     movlw 21
02C5   0081           01325     movwf T
                      01326     insert 1  ; counter 21
02C6   3FFF               M    movwi -1[SP]
02C7                  01327 drop21:
                      01328     dup    ; counter 21 21
02C7   0801               M     movfw T
02C8   001C               M     movwi ++SP
02C9   2???           01329     call drop1 ; -- counter 21
                      01330     pause 6
                          M     start_timer 6
02CA   3006               M     movlw 6
02CB   00??               M     movwf gtimer
02CC   1500               M     bsf flags, F_GTMR
                          M     wait_timer
02CD   1900               M     btfsc flags, F_GTMR
02CE   3???               M     bra $-1
                      01331     pick 1
02CF   3F7F               M     moviw -1[SP]
02D0   0389           01332     decf WREG
                      01333     insert 1  ; -- counter-1 21
02D1   3FFF               M    movwi -1[SP]
02D2   1D03           01334     skpz
02D3   3???           01335     bra drop21
                      01336     drop_n 2
02D4   317E               M     addfsr SP,-2
02D5   0008           01337     return
                      01338 
                      01339 ;prompt
                      01340 ; print prompt message    
02D6                  01341 prompt:
                      01342     lit 0
02D6   3000               M    movlw 0
02D7   001C               M    movwi ++SP 
                      01343     lit 24
02D8   3018               M    movlw 24
02D9   001C               M    movwi ++SP 
02DA   31??           01344     movlp high(lbl_press)
                      01345     lit low(lbl_press)
02DB   30??               M    movlw low(lbl_press)
02DC   001C               M    movwi ++SP 
02DD   2???           01346     call print_label
02DE   0008           01347     return
                      01348     
                      01349 ;;;;;;;;;;;;;;;;;;;;;;;;;
                      01350 ;   game logic
                      01351 ;;;;;;;;;;;;;;;;;;;;;;;;;    
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  19:42:20         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02DF                  01352 tetris:
02DF   2???           01353     call update_display
                      01354 ;print start prompt
02E0   2???           01355     call prompt
                      01356 ; wait button A press
                      01357 ; to start game    
02E1   2???           01358     call wait_start 
                      01359 ; delete prompt
02E2   2???           01360     call prompt
                      01361 ; game start here
02E3                  01362 game_loop:
                      01363 ; generate new tetriminos
                      01364 ; if collision at this stage
                      01365 ; game is over
02E3   2???           01366     call new_tminos
02E4   1D80           01367     btfss flags, F_GSTOP
02E5   3???           01368     bra fall_loop
02E6   2???           01369     call game_over
02E7   2???           01370     call game_init
02E8   3???           01371     bra tetris
02E9                  01372 fall_loop: ; tetriminos fall in the well
02E9   2???           01373     call print_tetrim
                      01374     pop
02EA   0017               M     moviw SP--
                      01375     pause 10
                          M     start_timer 10
02EB   300A               M     movlw 10
02EC   00??               M     movwf gtimer
02ED   1500               M     bsf flags, F_GTMR
                          M     wait_timer
02EE   1900               M     btfsc flags, F_GTMR
02EF   3???               M     bra $-1
02F0   2???           01376     call print_tetrim ; erase tetriminos
                      01377     pop
02F1   0017               M     moviw SP--
                      01378 ; read pad
02F2   2???           01379     call read_pad
02F3   0020           01380     banksel GAME_VAR
                      01381     case BTN_B, drop_tetrim
02F4   1A80               M     btfsc buttons,BTN_B
02F5   3???               M     bra drop_tetrim
                      01382     case BTN_UP, rot_right
02F6   1800               M     btfsc buttons,BTN_UP
02F7   3???               M     bra rot_right
                      01383     case BTN_DN, rot_left
02F8   1880               M     btfsc buttons,BTN_DN
02F9   3???               M     bra rot_left
                      01384     case BTN_RT, move_right
02FA   1980               M     btfsc buttons,BTN_RT
02FB   3???               M     bra move_right
                      01385     case BTN_LT, move_left
02FC   1900               M     btfsc buttons,BTN_LT
02FD   3???               M     bra move_left
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  19:42:20         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02FE   3???           01386     bra move_down
02FF                  01387 drop_tetrim:
02FF   0020           01388     banksel GAME_VAR
0300   0A??           01389     incf ty,F
0301   2???           01390     call coll_test
0302   1E80           01391     btfss flags, F_COLL
0303   3???           01392     bra $-4
0304   2???           01393     call print_tetrim
                      01394     pop
0305   0017               M     moviw SP--
0306   3???           01395     bra score_update
0307                  01396 rot_left:
0307   03??           01397     decf angle,F
0308   3003           01398     movlw 3
0309   05??           01399     andwf angle,F
030A   2???           01400     call coll_test
030B   3???           01401     bra move_down
030C                  01402 rot_right:
030C   0A??           01403     incf angle,F
030D   3003           01404     movlw 3
030E   05??           01405     andwf angle,F
030F   2???           01406     call coll_test
0310   3???           01407     bra move_down
0311                  01408 move_left:
0311   03??           01409     decf tx,F
0312   2???           01410     call coll_test
0313   3???           01411     bra move_down
0314                  01412 move_right:
0314   0A??           01413     incf tx,F
0315   2???           01414     call coll_test
                      01415 ; move down
0316                  01416 move_down:
0316   1280           01417     bcf flags, F_COLL
0317   0020           01418     banksel GAME_VAR
0318   0A??           01419     incf ty,F ; tetriminos fall
0319   2???           01420     call print_tetrim ; -- f
031A   2???           01421     call print_tetrim ; -- f f
                      01422     drop
031B   317F               M    addfsr SP,-1
                      01423     pop
031C   0017               M     moviw SP--
031D   1903           01424     skpnz
031E   3???           01425     bra fall_loop
031F   0020           01426     banksel GAME_VAR
0320   03??           01427     decf ty,F
0321   2???           01428     call print_tetrim
                      01429     pop
0322   0017               M     moviw SP--
0323                  01430 score_update:    
                      01431 ; check full row and clean
0323   2???           01432     call update_display ; erase numbers
0324   2???           01433     call count_full
                      01434 ; add full row count to dropped variable
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  19:42:20         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0325   0020           01435     banksel GAME_VAR
0326   0801           01436     movfw T
0327   07??           01437     addwf droppedL,F ; 
0328   0103           01438     clrw
0329   3D??           01439     addwfc droppedH
                      01440 ; count points = 2^n where n is count of dropped rows {1:4}    
032A   0881           01441     movf T,F
032B   1903           01442     skpnz
032C   3???           01443     bra add_points
032D   3001           01444     movlw 1
032E   3589           01445     lslf WREG
032F   0B81           01446     decfsz T,F
0330   3???           01447     bra $-2
0331                  01448 add_points:
0331   07??           01449     addwf scoreL
0332   0103           01450     clrw
0333   3D??           01451     addwfc scoreH
                      01452     drop 
0334   317F               M    addfsr SP,-1
0335   2???           01453     call update_display ; display new values
0336   3???           01454     bra game_loop
0337   0008           01455     return
                      01456 
                      01457 ;;;;;;;;;;;;;;;;;;;;;;;;;;
                      01458 ; hardware initialization
                      01459 ;;;;;;;;;;;;;;;;;;;;;;;;;;    
0338                  01460 init:
                      01461     pstack_init
0338   0187               M     clrf FSR1H
0339   301F               M     movlw S0
033A   0086               M     movwf FSR1L
                      01462 ; ADC configuration
033B   0021           01463     banksel ADCON0
033C   300C           01464     movlw (PAD_CHS<<CHS0)
033D   009D           01465     movwf ADCON0
033E   3020           01466     movlw (2<<ADCS0)
033F   009E           01467     movwf ADCON1
0340   0024           01468     banksel WPUA
0341   120C           01469     bcf WPUA, PAD_PIN
                      01470 ;;;;;;;;;;;;;;;;;;;;;    
0342   0021           01471     banksel TRISA
0343   30F8           01472     movlw ~((1<<SYNC_OUT)|(1<<VIDEO_OUT)|(1<<LED_PIN))
0344   058C           01473     andwf TRISA,F
0345   0022           01474     banksel VIDEO_LAT
0346   108C           01475     bcf VIDEO_LAT,VIDEO_OUT
0347   100C           01476     bcf LATA,LED_PIN
                      01477 #ifdef SOUND_SUPPORT    
                      01478 ; audio pwm initialization
0348   120C           01479     bcf LATA,AUDIO_PIN
0349   003B           01480     banksel PWM2PH
034A   01A1           01481     clrf PWM2PHL
034B   01A2           01482     clrf PWM2PHH
034C   01A7           01483     clrf PWM2OFL
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  19:42:20         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

034D   01A8           01484     clrf PWM2OFH
034E   172B           01485     bsf AUDIO_PWMCON,OE
034F   0022           01486     banksel APFCON
0350   149D           01487     bsf APFCON,P2SEL
                      01488 #endif   
                      01489 ;configure EUSART in sychronsous mode
                      01490 ;to use as pixel serializer
0351   0023           01491     banksel SPBRG
0352   3002           01492     movlw 2
0353   009B           01493     movwf SPBRGL
0354   019C           01494     clrf SPBRGH
0355   019A           01495     clrf TXREG
0356   30B0           01496     movlw (1<<SYNC)|(1<<CSRC)|(1<<TXEN)
0357   009E           01497     movwf TXSTA
0358   179D           01498     bsf RCSTA, SPEN
0359   30CF           01499     movlw ~((1<<CREN)|(1<<SREN))
035A   059D           01500     andwf RCSTA
                      01501 ; configure pwm video sync for horizontal period
035B   003B           01502     banksel SYNC_PWMDCH
035C   01B1           01503     clrf SYNC_PWMPH
035D   01B2           01504     clrf SYNC_PWMPH+1
035E   01BF           01505     clrf SYNC_PWMLDCON
035F   30F5           01506     movlw HORZ_PERIOD&0XFF
0360   00B5           01507     movwf SYNC_PWMPRL
0361   3004           01508     movlw HORZ_PERIOD>>8
0362   00B6           01509     movwf SYNC_PWMPRH
0363   01BE           01510     clrf SYNC_PWMCLKCON
0364   30D0           01511     movlw (3<<OE)|(1<<POL)
0365   00BB           01512     movwf SYNC_PWMCON
0366   305E           01513     movlw HORZ_PULSE&0xff
0367   00B3           01514     movwf SYNC_PWMDCL
0368   3000           01515     movlw HORZ_PULSE>>8
0369   00B4           01516     movwf SYNC_PWMDCH
036A   17BF           01517     bsf SYNC_PWMLDCON,LDA
                      01518    ;enable video interrupt on period match
036B   103D           01519     bcf SYNC_PWMINTF,PRIF
036C   143C           01520     bsf SYNC_PWMINTE,PRIE
                      01521     ; enable peripheral interrupt
036D   0021           01522     banksel SYNC_PIE
036E   1713           01523     bsf SYNC_PIE,SYNC_IE
                      01524     ;enable interrupts
036F   30C0           01525     movlw (1<<GIE)|(1<<PEIE)
0370   008B           01526     movwf INTCON
0371   01??           01527     clrf lcountL
0372   01??           01528     clrf lcountH
0373   01??           01529     clrf flags
                      01530     ; seed lfsr PRNG
0374   30AC           01531     movlw 0xAC
0375   00??           01532     movwf randL
0376   30E1           01533     movlw 0xE1
0377   00??           01534     movwf randH
                      01535 
                      01536 
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  19:42:20         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01537 ;;;;;;;;;;;;;;;;;;;;;
                      01538 ;  main function
                      01539 ;;;;;;;;;;;;;;;;;;;;;    
0378                  01540 main:
0378   2???           01541     call game_init
0379   2???           01542     call tetris
037A   3???           01543     bra main
                      01544   
                      01545 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      01546 ;   data tables
                      01547 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      01548 
                      01549 ; **************** encoding ************************************************
                      01550 ; enhanced PIC instructions are coded on 14 bits
                      01551 ; these 14 bits can be read as data using program memory
                      01552 ; writing/reading mechanism, see datasheet chapter 10 for detail.
                      01553 ; the 'dw' assembler directive encode data in those 14 bits contrary to 'dt'
                      01554 ; directive which encode a single byte as a RETLW instruction.
                      01555 ; So we get a 50% compression by encoding 3 nibbles/program word. 
                      01556 ; The encoding used in the following tables is as follow:    
                      01557 ; bits 13:12  number of nibbles where 0 means there is more than 3 nibbles
                      01558 ; in this data chunk so 1 or more other words follow this one.    
                      01559 ; other 12 bits are 3 nibbles (i.e. 4 bits slices).
                      01560 ;****************************************************************************
                      01561 
037B                  01562 digits: ; each digit is 5 rows
037B   0EAA 20AE      01563     dw 0x0EAA,0x20AE ; 0
037D   04C4 204E      01564     dw 0x04C4,0x204E ; 1
037F   0E2E 208E      01565     dw 0x0E2E,0x208E ; 2
0381   0E2E 202E      01566     dw 0x0E2E,0x202E ; 3
0383   0AAE 2022      01567     dw 0x0AAE,0x2022 ; 4
0385   0E8E 202E      01568     dw 0x0E8E,0x202E ; 5
0387   088E 20AE      01569     dw 0x088E,0x20AE ; 6
0389   0E22 2022      01570     dw 0x0E22,0x2022 ; 7
038B   0EAE 20AE      01571     dw 0x0EAE,0x20AE ; 8
038D   0EAE 2022      01572     dw 0x0EAE,0x2022 ; 9
                      01573 ; letters needed for 'SCORE' and 'LINES" labels
038F   0EAE 20AA      01574     dw 0x0EAE,0x20AA ; A  code 10
0391   0688 2086      01575     dw 0x0688,0x2086 ; C  code 11
0393   0E8E 208E      01576     dw 0x0E8E,0x208E ; E  code 12
0395   0E44 204E      01577     dw 0x0E44,0x204E ; I  code 13
0397   0888 208E      01578     dw 0x0888,0x208E ; L  code 14
0399   08CA 20AA      01579     dw 0x08CA,0x20AA ; N  code 15
039B   04AA 20A4      01580     dw 0x04AA,0x20A4 ; O  code 16
039D   0EAE 2088      01581     dw 0x0EAE,0x2088 ; P  code 17
039F   08EA 2088      01582     dw 0x08EA,0x2088 ; R  code 18
03A1   0684 202C      01583     dw 0x0684,0x202C ; S  code 19
03A3   0040 2040      01584     dw 0x0040,0x2040 ; :  code 20
03A5   1000 0000      01585     dw 0x1000,0x0000 ; space code 21
                      01586 
                      01587 ; comments notation: Rn clockwise rotation n*90 degr.    
                      01588 ; note that vertical I as 4 rows so it needs 2 words    
03A7                  01589 tetriminos: 
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  19:42:20         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03A7   388C           01590     dw 0x388C ; L R0
03A8   30E8           01591     dw 0x30E8 ; L R1
03A9   3C44           01592     dw 0x3C44 ; L R2
03AA   202E           01593     dw 0x202E ; L R3
03AB   344C           01594     dw 0x344C ; J R0
03AC   208E           01595     dw 0x208E ; J R1
03AD   3644           01596     dw 0x3644 ; J R2
03AE   30E2           01597     dw 0x30E2 ; J R3
03AF   20CC           01598     dw 0x20CC ; O R0 
03B0   20CC           01599     dw 0x20CC ; O R2 
03B1   20CC           01600     dw 0x20CC ; O R2 
03B2   20CC           01601     dw 0x20CC ; O R3 
03B3   206C           01602     dw 0x206C ; S R0
03B4   3462           01603     dw 0x3462 ; S R1
03B5   206C           01604     dw 0x206C ; S R2
03B6   3462           01605     dw 0x3462 ; S R3
03B7   20E4           01606     dw 0x20E4 ; T R0
03B8   3262           01607     dw 0x3262 ; T R1
03B9   304E           01608     dw 0x304E ; T R2
03BA   38C8           01609     dw 0x38C8 ; T R3
03BB   20C6           01610     dw 0x20C6 ; Z R0
03BC   34C8           01611     dw 0x34C8 ; Z R1
03BD   20C6           01612     dw 0x20C6 ; Z R3
03BE   34C8           01613     dw 0x34C8 ; Z R4
                      01614 ; annoying! I tetriminos need a special treatment 
                      01615 ; because vertical I need 2 words for encoding.   
03BF   0444 1004      01616     dw 0x0444,0x1004 ; I R0  
03C1   200F 0000      01617     dw 0x200F,0x0000 ; I R1  second word is filling for alignment
03C3   0444 1004      01618     dw 0x0444,0x1004 ; I R2
03C5   200F 0000      01619     dw 0x200F,0x0000 ; I R3  
                      01620 
                      01621 #ifdef SOUND_SUPPORT
                      01622 ; tempered scale timer period values    
03C7                  01623 tone_pr:
03C7   000B           01624     brw
03C8   3402 34ED      01625     dt 0x02, 0xed   ; 330   (MI4)   0
03CA   34B5 34DF      01626     dt 0xb5, 0xdf   ; 349   (FA4)   1
03CC   3428 34D3      01627     dt 0x28, 0xd3   ; 370   (FA4#)  2
03CE   344C 34C7      01628     dt 0x4c, 0xc7   ; 392   (SOL4)  3
03D0   341E 34BC      01629     dt 0x1e, 0xbc   ; 415   (SOL4#) 4
03D2   348F 34B1      01630     dt 0x8f, 0xb1   ; 440   (LA4)   5
03D4   3498 34A7      01631     dt 0x98, 0xa7   ; 466   (LA4#)  6
03D6   3430 349E      01632     dt 0x30, 0x9e   ; 494   (SI4)   7
03D8   344F 3495      01633     dt 0x4f, 0x95   ; 523hz (DO5)   8
03DA   34ED 348C      01634     dt 0xed, 0x8c   ; 554   (DO5#)  9
03DC   3404 3485      01635     dt 0x04, 0x85   ; 587   (RÉ5)   10
03DE   348D 347D      01636     dt 0x8d, 0x7d   ; 622   (RÉ5#)  11
03E0   3481 3476      01637     dt 0x81, 0x76   ; 659   (MI5)   12
03E2   34DA 346F      01638     dt 0xda, 0x6f   ; 698   (FA5)   13
03E4   3493 3469      01639     dt 0x93, 0x69   ; 740   (FA5#)  14
03E6   34A6 3463      01640     dt 0xa6, 0x63   ; 784   (SOL5)  15
03E8   340F 345E      01641     dt 0x0f, 0x5e   ; 831   (SOL5#) 16
03EA   34C7 3458      01642     dt 0xc7, 0x58   ; 880   (LA5)   17
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  19:42:20         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03EC   34CC 3453      01643     dt 0xcc, 0x53   ; 932   (LA5#)  18
03EE   3418 344F      01644     dt 0x18, 0x4f   ; 988   (SI5)   19
03F0   3482 3442      01645     dt 0x82, 0x42   ; 1046hz (do6)  20
03F2   3400 3400      01646     dt 0, 0         ; silence       21
                      01647 
                      01648     
                      01649 ; a russian folklore soung    
03F4                  01650 korobeiniki:
                      01651     ;nombre de notes
03F4   000B           01652     brw
03F5   3422           01653     dt 34
                      01654     ; duré, note
03F6   342D 3400      01655     dt 45, 0 
03F8   340F 3404      01656     dt 15, 4
03FA   341E 3407      01657     dt 30, 7
03FC   340F 3403      01658     dt 15, 3
03FE   340F 3400      01659     dt 15, 0
                      01660     
0400   342D 3405      01661     dt 45, 5
0402   340F 3409      01662     dt 15, 9
0404   341E 340C      01663     dt 30, 12
0406   340F 340A      01664     dt 15, 10
0408   340F 3408      01665     dt 15, 8
                      01666     
040A   342D 3407      01667     dt 45, 7
040C   340F 3408      01668     dt 15, 8
040E   341E 340A      01669     dt 30, 10
0410   341E 340C      01670     dt 30, 12
                      01671     
0412   341E 3408      01672     dt 30, 8
0414   341E 3405      01673     dt 30, 5
0416   343C 3405      01674     dt 60, 5
                      01675     
0418   342D 340D      01676     dt 45, 13
041A   340F 340F      01677     dt 15, 15
041C   341E 3411      01678     dt 30, 17
041E   340F 340F      01679     dt 15, 15
0420   340F 340D      01680     dt 15, 13
                      01681     
0422   342D 340C      01682     dt 45, 12
0424   340F 340D      01683     dt 15, 13
0426   341E 340C      01684     dt 30, 12
0428   340F 340A      01685     dt 15, 10
042A   340F 3408      01686     dt 15, 8
                      01687     
042C   342D 3407      01688     dt 45, 7
042E   340F 3408      01689     dt 15, 8
0430   341E 340A      01690     dt 30, 10
0432   341E 340C      01691     dt 30, 12
                      01692     
0434   341E 3408      01693     dt 30, 8
0436   341E 3405      01694     dt 30, 5
0438   343C 3405      01695     dt 60, 5
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  19:42:20         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01696     
                      01697  #endif
                      01698 
043A                  01699 lbl_score: ; "SCORE" label
043A   3413 340B 3410 01700     dt 19,11,16,18,12,20,255
       3412 340C 3414 
       34FF 
                      01701     
0441                  01702 lbl_lines: ; "LINES"  label
0441   340E 340D 340F 01703     dt 14,13,15,12,19,20,255
       340C 3413 3414 
       34FF 
                      01704 
0448                  01705 lbl_press: ; "PRESS A" label
0448   3411 3412 340C 01706     dt 17,18,12,19,19,21,10,255
       3413 3413 3415 
       340A 34FF 
                      01707 
                      01708     
                      01709  
3FE7 1EFF             01710     end
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  19:42:20         PAGE 40


SYMBOL TABLE
  LABEL                             VALUE 

ABDEN                             00000000
ABDOVF                            00000007
ADCON0                            0000009D
ADCON1                            0000009E
ADCON2                            0000009F
ADCS0                             00000004
ADCS1                             00000005
ADCS2                             00000006
ADC_PIN                           00000004
ADDEN                             00000003
ADFM                              00000007
ADFVR0                            00000000
ADFVR1                            00000001
ADGO                              00000001
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADPREF0                           00000000
ADPREF1                           00000001
ADRES                             0000009B
ADRESH                            0000009C
ADRESL                            0000009B
ANSA0                             00000000
ANSA1                             00000001
ANSA2                             00000002
ANSA4                             00000004
ANSELA                            0000018C
APFCON                            0000011D
APFCON0                           0000011D
AUDIO_PIN                         00000004
AUDIO_PWMCLKCON                   00000DAE
AUDIO_PWMCON                      00000DAB
AUDIO_PWMDCH                      00000DA4
AUDIO_PWMDCL                      00000DA3
AUDIO_PWMLDCON                    00000DAF
AUDIO_PWMPRH                      00000DA6
AUDIO_PWMPRL                      00000DA5
AUDIO_PWMTMR                      00000DA9
A_THR                             00000040
BAUDCON                           0000019F
BORCON                            00000116
BORFS                             00000006
BORRDY                            00000000
BPL                               00000006
BRG16                             00000003
BRGH                              00000002
BSR                               00000008
BSR0                              00000000
BSR1                              00000001
BSR2                              00000002
BSR3                              00000003
BSR4                              00000004
BSR_SHAD                          00000FE6
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  19:42:20         PAGE 41


SYMBOL TABLE
  LABEL                             VALUE 

BTN_A                             00000004
BTN_B                             00000005
BTN_DN                            00000001
BTN_LT                            00000002
BTN_RT                            00000003
BTN_UP                            00000000
BUFFER_SIZE                       000000C0
B_THR                             00000095
C                                 00000000
C1HYS                             00000001
C1IE                              00000005
C1IF                              00000005
C1INTN                            00000006
C1INTP                            00000007
C1NCH0                            00000000
C1NCH1                            00000001
C1NCH2                            00000002
C1OE                              00000005
C1ON                              00000007
C1OUT                             00000006
C1PCH0                            00000004
C1PCH1                            00000005
C1POL                             00000004
C1SP                              00000002
C1SYNC                            00000000
CDAFVR0                           00000002
CDAFVR1                           00000003
CFGS                              00000006
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CHS4                              00000006
CM1CON0                           00000111
CM1CON1                           00000112
CMOUT                             00000115
CREN                              00000004
CS0                               00000000
CS1                               00000001
CSRC                              00000007
CWG1CON0                          00000693
CWG1CON1                          00000694
CWG1CON2                          00000695
CWG1DBF                           00000692
CWG1DBF0                          00000000
CWG1DBF1                          00000001
CWG1DBF2                          00000002
CWG1DBF3                          00000003
CWG1DBF4                          00000004
CWG1DBF5                          00000005
CWG1DBR                           00000691
CWG1DBR0                          00000000
CWG1DBR1                          00000001
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  19:42:20         PAGE 42


SYMBOL TABLE
  LABEL                             VALUE 

CWG1DBR2                          00000002
CWG1DBR3                          00000003
CWG1DBR4                          00000004
CWG1DBR5                          00000005
CWGASEL                           00000006
CWGBSEL                           00000005
C_SHAD                            00000000
DACCON0                           00000118
DACCON1                           00000119
DACEN                             00000007
DACLPS                            00000006
DACOE                             00000005
DACPSS0                           00000002
DACPSS1                           00000003
DACR0                             00000000
DACR1                             00000001
DACR2                             00000002
DACR3                             00000003
DACR4                             00000004
DC                                00000001
DCIE                              00000001
DCIF                              00000001
DC_SHAD                           00000001
DN_THR                            000000D8
EN                                00000007
F                                 00000001
FCY                               004C4B40
FERR                              00000002
FIRST_VIDEO                       00000046
FOSC                              01312D00
FREE                              00000004
FSR0                              00000004
FSR0H                             00000005
FSR0H_SHAD                        00000FE9
FSR0L                             00000004
FSR0L_SHAD                        00000FE8
FSR0_SHAD                         00000FE8
FSR1                              00000006
FSR1H                             00000007
FSR1H_SHAD                        00000FEB
FSR1L                             00000006
FSR1L_SHAD                        00000FEA
FSR1_SHAD                         00000FEA
FVRCON                            00000117
FVREN                             00000007
FVRRDY                            00000006
F_COLL                            00000005
F_EVEN                            00000001
F_GSTOP                           00000003
F_GTMR                            00000002
F_NO_SND                          00000006
F_SND                             00000004
F_VSYNC                           00000000
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  19:42:20         PAGE 43


SYMBOL TABLE
  LABEL                             VALUE 

G1ARSEN                           00000006
G1ASDLA0                          00000004
G1ASDLA1                          00000005
G1ASDLB0                          00000006
G1ASDLB1                          00000007
G1ASDSC1                          00000002
G1ASDSFLT                         00000001
G1ASE                             00000007
G1CS0                             00000000
G1EN                              00000007
G1IS0                             00000000
G1IS1                             00000001
G1IS2                             00000002
G1OEA                             00000005
G1OEB                             00000006
G1POLA                            00000003
G1POLB                            00000004
GAME_VAR                          00000000
GIE                               00000007
GO                                00000001
GO_NOT_DONE                       00000001
HFIOFL                            00000003
HFIOFR                            00000004
HFIOFS                            00000000
HORZ_DLY                          00000032
HORZ_PERIOD                       000004F5
HORZ_PULSE                        0000005E
INDF0                             00000000
INDF1                             00000001
INLVLA                            0000038C
INLVLA0                           00000000
INLVLA1                           00000001
INLVLA2                           00000002
INLVLA3                           00000003
INLVLA4                           00000004
INLVLA5                           00000005
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IOCAF                             00000393
IOCAF0                            00000000
IOCAF1                            00000001
IOCAF2                            00000002
IOCAF3                            00000003
IOCAF4                            00000004
IOCAF5                            00000005
IOCAN                             00000392
IOCAN0                            00000000
IOCAN1                            00000001
IOCAN2                            00000002
IOCAN3                            00000003
IOCAN4                            00000004
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  19:42:20         PAGE 44


SYMBOL TABLE
  LABEL                             VALUE 

IOCAN5                            00000005
IOCAP                             00000391
IOCAP0                            00000000
IOCAP1                            00000001
IOCAP2                            00000002
IOCAP3                            00000003
IOCAP4                            00000004
IOCAP5                            00000005
IOCIE                             00000003
IOCIF                             00000000
IRCF0                             00000003
IRCF1                             00000004
IRCF2                             00000005
IRCF3                             00000006
LAST_LINE                         00000106
LAST_VIDEO                        000000C5
LATA                              0000010C
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA4                             00000004
LATA5                             00000005
LDA                               00000007
LDS0                              00000000
LDS1                              00000001
LDT                               00000006
LED_PIN                           00000000
LFIOFR                            00000001
LFSR_TAPS                         000000B4
LT_THR                            000000D1
LWLO                              00000005
MC1OUT                            00000000
MFIOFR                            00000002
MODE0                             00000002
MODE1                             00000003
MPWM1EN                           00000000
MPWM1LD                           00000000
MPWM1OUT                          00000000
MPWM2EN                           00000001
MPWM2LD                           00000001
MPWM2OUT                          00000001
MPWM3EN                           00000002
MPWM3LD                           00000002
MPWM3OUT                          00000002
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RI                            00000002
NOT_RMCLR                         00000003
NOT_RWDT                          00000004
NOT_T1SYNC                        00000002
NOT_TO                            00000004
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  19:42:20         PAGE 45


SYMBOL TABLE
  LABEL                             VALUE 

NOT_WPUEN                         00000007
ODA0                              00000000
ODA1                              00000001
ODA2                              00000002
ODA4                              00000004
ODA5                              00000005
ODCONA                            0000028C
OE                                00000006
OERR                              00000001
OFIE                              00000003
OFIF                              00000003
OFM0                              00000005
OFM1                              00000006
OFO                               00000004
OFS0                              00000000
OFS1                              00000001
OPTION_REG                        00000095
OSCCON                            00000099
OSCSTAT                           0000009A
OSCTUNE                           00000098
OSTS                              00000005
OUT                               00000005
P1SEL                             00000000
P2SEL                             00000001
PAD_CHS                           00000003
PAD_PIN                           00000004
PCL                               00000002
PCLATH                            0000000A
PCLATH_SHAD                       00000FE7
PCON                              00000096
PEIE                              00000006
PHIE                              00000002
PHIF                              00000002
PIE1                              00000091
PIE2                              00000092
PIE3                              00000093
PIR1                              00000011
PIR2                              00000012
PIR3                              00000013
PIXEL_TXREG                       0000019A
PLLR                              00000006
PMADR                             00000191
PMADRH                            00000192
PMADRL                            00000191
PMCON1                            00000195
PMCON2                            00000196
PMDAT                             00000193
PMDATH                            00000194
PMDATL                            00000193
POL                               00000004
PORTA                             0000000C
PR2                               0000001B
PRIE                              00000000
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  19:42:20         PAGE 46


SYMBOL TABLE
  LABEL                             VALUE 

PRIF                              00000000
PS0_OPTION_REG                    00000000
PS0_PWM1CLKCON                    00000004
PS0_PWM2CLKCON                    00000004
PS0_PWM3CLKCON                    00000004
PS1_OPTION_REG                    00000001
PS1_PWM1CLKCON                    00000005
PS1_PWM2CLKCON                    00000005
PS1_PWM3CLKCON                    00000005
PS2_OPTION_REG                    00000002
PS2_PWM1CLKCON                    00000006
PS2_PWM2CLKCON                    00000006
PS2_PWM3CLKCON                    00000006
PSA                               00000003
PWM1CLKCON                        00000D9E
PWM1CON                           00000D9B
PWM1CS0                           00000000
PWM1CS1                           00000001
PWM1DC                            00000D93
PWM1DCH                           00000D94
PWM1DCH0                          00000000
PWM1DCH1                          00000001
PWM1DCH2                          00000002
PWM1DCH3                          00000003
PWM1DCH4                          00000004
PWM1DCH5                          00000005
PWM1DCH6                          00000006
PWM1DCH7                          00000007
PWM1DCIE                          00000001
PWM1DCIF                          00000001
PWM1DCL                           00000D93
PWM1DCL0                          00000000
PWM1DCL1                          00000001
PWM1DCL2                          00000002
PWM1DCL3                          00000003
PWM1DCL4                          00000004
PWM1DCL5                          00000005
PWM1DCL6                          00000006
PWM1DCL7                          00000007
PWM1EN                            00000007
PWM1EN_A                          00000000
PWM1IE                            00000004
PWM1IF                            00000004
PWM1INTCON                        00000D9C
PWM1INTE                          00000D9C
PWM1INTF                          00000D9D
PWM1INTFLG                        00000D9D
PWM1LD                            00000007
PWM1LDA_A                         00000000
PWM1LDCON                         00000D9F
PWM1LDM                           00000006
PWM1LDS0                          00000000
PWM1LDS1                          00000001
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  19:42:20         PAGE 47


SYMBOL TABLE
  LABEL                             VALUE 

PWM1MODE0                         00000002
PWM1MODE1                         00000003
PWM1OE                            00000006
PWM1OF                            00000D97
PWM1OFCON                         00000DA0
PWM1OFH                           00000D98
PWM1OFH0                          00000000
PWM1OFH1                          00000001
PWM1OFH2                          00000002
PWM1OFH3                          00000003
PWM1OFH4                          00000004
PWM1OFH5                          00000005
PWM1OFH6                          00000006
PWM1OFH7                          00000007
PWM1OFIE                          00000003
PWM1OFIF                          00000003
PWM1OFL                           00000D97
PWM1OFL0                          00000000
PWM1OFL1                          00000001
PWM1OFL2                          00000002
PWM1OFL3                          00000003
PWM1OFL4                          00000004
PWM1OFL5                          00000005
PWM1OFL6                          00000006
PWM1OFL7                          00000007
PWM1OFM0                          00000005
PWM1OFM1                          00000006
PWM1OFMC                          00000004
PWM1OFS0                          00000000
PWM1OFS1                          00000001
PWM1OUT                           00000005
PWM1OUT_A                         00000000
PWM1PH                            00000D91
PWM1PHH                           00000D92
PWM1PHH0                          00000000
PWM1PHH1                          00000001
PWM1PHH2                          00000002
PWM1PHH3                          00000003
PWM1PHH4                          00000004
PWM1PHH5                          00000005
PWM1PHH6                          00000006
PWM1PHH7                          00000007
PWM1PHIE                          00000002
PWM1PHIF                          00000002
PWM1PHL                           00000D91
PWM1PHL0                          00000000
PWM1PHL1                          00000001
PWM1PHL2                          00000002
PWM1PHL3                          00000003
PWM1PHL4                          00000004
PWM1PHL5                          00000005
PWM1PHL6                          00000006
PWM1PHL7                          00000007
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  19:42:20         PAGE 48


SYMBOL TABLE
  LABEL                             VALUE 

PWM1POL                           00000004
PWM1PR                            00000D95
PWM1PRH                           00000D96
PWM1PRH0                          00000000
PWM1PRH1                          00000001
PWM1PRH2                          00000002
PWM1PRH3                          00000003
PWM1PRH4                          00000004
PWM1PRH5                          00000005
PWM1PRH6                          00000006
PWM1PRH7                          00000007
PWM1PRIE                          00000000
PWM1PRIF                          00000000
PWM1PRL                           00000D95
PWM1PRL0                          00000000
PWM1PRL1                          00000001
PWM1PRL2                          00000002
PWM1PRL3                          00000003
PWM1PRL4                          00000004
PWM1PRL5                          00000005
PWM1PRL6                          00000006
PWM1PRL7                          00000007
PWM1PS0                           00000004
PWM1PS1                           00000005
PWM1PS2                           00000006
PWM1TMR                           00000D99
PWM1TMRH                          00000D9A
PWM1TMRH0                         00000000
PWM1TMRH1                         00000001
PWM1TMRH2                         00000002
PWM1TMRH3                         00000003
PWM1TMRH4                         00000004
PWM1TMRH5                         00000005
PWM1TMRH6                         00000006
PWM1TMRH7                         00000007
PWM1TMRL                          00000D99
PWM1TMRL0                         00000000
PWM1TMRL1                         00000001
PWM1TMRL2                         00000002
PWM1TMRL3                         00000003
PWM1TMRL4                         00000004
PWM1TMRL5                         00000005
PWM1TMRL6                         00000006
PWM1TMRL7                         00000007
PWM2CLKCON                        00000DAE
PWM2CON                           00000DAB
PWM2CS0                           00000000
PWM2CS1                           00000001
PWM2DC                            00000DA3
PWM2DCH                           00000DA4
PWM2DCH0                          00000000
PWM2DCH1                          00000001
PWM2DCH2                          00000002
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  19:42:20         PAGE 49


SYMBOL TABLE
  LABEL                             VALUE 

PWM2DCH3                          00000003
PWM2DCH4                          00000004
PWM2DCH5                          00000005
PWM2DCH6                          00000006
PWM2DCH7                          00000007
PWM2DCIE                          00000001
PWM2DCIF                          00000001
PWM2DCL                           00000DA3
PWM2DCL0                          00000000
PWM2DCL1                          00000001
PWM2DCL2                          00000002
PWM2DCL3                          00000003
PWM2DCL4                          00000004
PWM2DCL5                          00000005
PWM2DCL6                          00000006
PWM2DCL7                          00000007
PWM2EN                            00000007
PWM2EN_A                          00000001
PWM2IE                            00000005
PWM2IF                            00000005
PWM2INTCON                        00000DAC
PWM2INTE                          00000DAC
PWM2INTF                          00000DAD
PWM2INTFLG                        00000DAD
PWM2LD                            00000007
PWM2LDA_A                         00000001
PWM2LDCON                         00000DAF
PWM2LDM                           00000006
PWM2LDS0                          00000000
PWM2LDS1                          00000001
PWM2MODE0                         00000002
PWM2MODE1                         00000003
PWM2OE                            00000006
PWM2OF                            00000DA7
PWM2OFCON                         00000DB0
PWM2OFH                           00000DA8
PWM2OFH0                          00000000
PWM2OFH1                          00000001
PWM2OFH2                          00000002
PWM2OFH3                          00000003
PWM2OFH4                          00000004
PWM2OFH5                          00000005
PWM2OFH6                          00000006
PWM2OFH7                          00000007
PWM2OFIE                          00000003
PWM2OFIF                          00000003
PWM2OFL                           00000DA7
PWM2OFL0                          00000000
PWM2OFL1                          00000001
PWM2OFL2                          00000002
PWM2OFL3                          00000003
PWM2OFL4                          00000004
PWM2OFL5                          00000005
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  19:42:20         PAGE 50


SYMBOL TABLE
  LABEL                             VALUE 

PWM2OFL6                          00000006
PWM2OFL7                          00000007
PWM2OFM0                          00000005
PWM2OFM1                          00000006
PWM2OFMC                          00000004
PWM2OFS0                          00000000
PWM2OFS1                          00000001
PWM2OUT                           00000005
PWM2OUT_A                         00000001
PWM2PH                            00000DA1
PWM2PHH                           00000DA2
PWM2PHH0                          00000000
PWM2PHH1                          00000001
PWM2PHH2                          00000002
PWM2PHH3                          00000003
PWM2PHH4                          00000004
PWM2PHH5                          00000005
PWM2PHH6                          00000006
PWM2PHH7                          00000007
PWM2PHIE                          00000002
PWM2PHIF                          00000002
PWM2PHL                           00000DA1
PWM2PHL0                          00000000
PWM2PHL1                          00000001
PWM2PHL2                          00000002
PWM2PHL3                          00000003
PWM2PHL4                          00000004
PWM2PHL5                          00000005
PWM2PHL6                          00000006
PWM2PHL7                          00000007
PWM2POL                           00000004
PWM2PR                            00000DA5
PWM2PRH                           00000DA6
PWM2PRH0                          00000000
PWM2PRH1                          00000001
PWM2PRH2                          00000002
PWM2PRH3                          00000003
PWM2PRH4                          00000004
PWM2PRH5                          00000005
PWM2PRH6                          00000006
PWM2PRH7                          00000007
PWM2PRIE                          00000000
PWM2PRIF                          00000000
PWM2PRL                           00000DA5
PWM2PRL0                          00000000
PWM2PRL1                          00000001
PWM2PRL2                          00000002
PWM2PRL3                          00000003
PWM2PRL4                          00000004
PWM2PRL5                          00000005
PWM2PRL6                          00000006
PWM2PRL7                          00000007
PWM2PS0                           00000004
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  19:42:20         PAGE 51


SYMBOL TABLE
  LABEL                             VALUE 

PWM2PS1                           00000005
PWM2PS2                           00000006
PWM2TMR                           00000DA9
PWM2TMRH                          00000DAA
PWM2TMRH0                         00000000
PWM2TMRH1                         00000001
PWM2TMRH2                         00000002
PWM2TMRH3                         00000003
PWM2TMRH4                         00000004
PWM2TMRH5                         00000005
PWM2TMRH6                         00000006
PWM2TMRH7                         00000007
PWM2TMRL                          00000DA9
PWM2TMRL0                         00000000
PWM2TMRL1                         00000001
PWM2TMRL2                         00000002
PWM2TMRL3                         00000003
PWM2TMRL4                         00000004
PWM2TMRL5                         00000005
PWM2TMRL6                         00000006
PWM2TMRL7                         00000007
PWM3CLKCON                        00000DBE
PWM3CON                           00000DBB
PWM3CS0                           00000000
PWM3CS1                           00000001
PWM3DC                            00000DB3
PWM3DCH                           00000DB4
PWM3DCH0                          00000000
PWM3DCH1                          00000001
PWM3DCH2                          00000002
PWM3DCH3                          00000003
PWM3DCH4                          00000004
PWM3DCH5                          00000005
PWM3DCH6                          00000006
PWM3DCH7                          00000007
PWM3DCIE                          00000001
PWM3DCIF                          00000001
PWM3DCL                           00000DB3
PWM3DCL0                          00000000
PWM3DCL1                          00000001
PWM3DCL2                          00000002
PWM3DCL3                          00000003
PWM3DCL4                          00000004
PWM3DCL5                          00000005
PWM3DCL6                          00000006
PWM3DCL7                          00000007
PWM3EN                            00000007
PWM3EN_A                          00000002
PWM3IE                            00000006
PWM3IF                            00000006
PWM3INTCON                        00000DBC
PWM3INTE                          00000DBC
PWM3INTF                          00000DBD
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  19:42:20         PAGE 52


SYMBOL TABLE
  LABEL                             VALUE 

PWM3INTFLG                        00000DBD
PWM3LD                            00000007
PWM3LDA_A                         00000002
PWM3LDCON                         00000DBF
PWM3LDM                           00000006
PWM3LDS0                          00000000
PWM3LDS1                          00000001
PWM3MODE0                         00000002
PWM3MODE1                         00000003
PWM3OE                            00000006
PWM3OF                            00000DB7
PWM3OFCON                         00000DC0
PWM3OFH                           00000DB8
PWM3OFH0                          00000000
PWM3OFH1                          00000001
PWM3OFH2                          00000002
PWM3OFH3                          00000003
PWM3OFH4                          00000004
PWM3OFH5                          00000005
PWM3OFH6                          00000006
PWM3OFH7                          00000007
PWM3OFIE                          00000003
PWM3OFIF                          00000003
PWM3OFL                           00000DB7
PWM3OFL0                          00000000
PWM3OFL1                          00000001
PWM3OFL2                          00000002
PWM3OFL3                          00000003
PWM3OFL4                          00000004
PWM3OFL5                          00000005
PWM3OFL6                          00000006
PWM3OFL7                          00000007
PWM3OFM0                          00000005
PWM3OFM1                          00000006
PWM3OFMC                          00000004
PWM3OFS0                          00000000
PWM3OFS1                          00000001
PWM3OUT                           00000005
PWM3OUT_A                         00000002
PWM3PH                            00000DB1
PWM3PHH                           00000DB2
PWM3PHH0                          00000000
PWM3PHH1                          00000001
PWM3PHH2                          00000002
PWM3PHH3                          00000003
PWM3PHH4                          00000004
PWM3PHH5                          00000005
PWM3PHH6                          00000006
PWM3PHH7                          00000007
PWM3PHIE                          00000002
PWM3PHIF                          00000002
PWM3PHL                           00000DB1
PWM3PHL0                          00000000
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  19:42:20         PAGE 53


SYMBOL TABLE
  LABEL                             VALUE 

PWM3PHL1                          00000001
PWM3PHL2                          00000002
PWM3PHL3                          00000003
PWM3PHL4                          00000004
PWM3PHL5                          00000005
PWM3PHL6                          00000006
PWM3PHL7                          00000007
PWM3POL                           00000004
PWM3PR                            00000DB5
PWM3PRH                           00000DB6
PWM3PRH0                          00000000
PWM3PRH1                          00000001
PWM3PRH2                          00000002
PWM3PRH3                          00000003
PWM3PRH4                          00000004
PWM3PRH5                          00000005
PWM3PRH6                          00000006
PWM3PRH7                          00000007
PWM3PRIE                          00000000
PWM3PRIF                          00000000
PWM3PRL                           00000DB5
PWM3PRL0                          00000000
PWM3PRL1                          00000001
PWM3PRL2                          00000002
PWM3PRL3                          00000003
PWM3PRL4                          00000004
PWM3PRL5                          00000005
PWM3PRL6                          00000006
PWM3PRL7                          00000007
PWM3PS0                           00000004
PWM3PS1                           00000005
PWM3PS2                           00000006
PWM3TMR                           00000DB9
PWM3TMRH                          00000DBA
PWM3TMRH0                         00000000
PWM3TMRH1                         00000001
PWM3TMRH2                         00000002
PWM3TMRH3                         00000003
PWM3TMRH4                         00000004
PWM3TMRH5                         00000005
PWM3TMRH6                         00000006
PWM3TMRH7                         00000007
PWM3TMRL                          00000DB9
PWM3TMRL0                         00000000
PWM3TMRL1                         00000001
PWM3TMRL2                         00000002
PWM3TMRL3                         00000003
PWM3TMRL4                         00000004
PWM3TMRL5                         00000005
PWM3TMRL6                         00000006
PWM3TMRL7                         00000007
PWMEN                             00000D8E
PWMLD                             00000D8F
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  19:42:20         PAGE 54


SYMBOL TABLE
  LABEL                             VALUE 

PWMOUT                            00000D90
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCREG                             00000199
RCSTA                             0000019D
RD                                00000000
ROW_EMPTY                         00000000
ROW_FULL                          0000000A
RT_THR                            000000B5
RX9                               00000006
RX9D                              00000000
RXDTSEL                           00000007
S0                                0000001F
SBOREN                            00000007
SCKP                              00000004
SCS0                              00000000
SCS1                              00000001
SENDB                             00000003
SLRA0                             00000000
SLRA1                             00000001
SLRA2                             00000002
SLRA4                             00000004
SLRA5                             00000005
SLRCONA                           0000030C
SOUND_SUPPORT                     
SP                                FSR1
SPBRG                             0000019B
SPBRGH                            0000019C
SPBRGL                            0000019B
SPEN                              00000007
SPLLEN                            00000007
SREN                              00000005
STACK_SIZE                        00000020
STATUS                            00000003
STATUS_SHAD                       00000FE4
STKOVF                            00000007
STKPTR                            00000FED
STKUNF                            00000006
SWDTEN                            00000000
SYNC                              00000004
SYNC_IE                           00000006
SYNC_IF                           00000006
SYNC_OUT                          00000002
SYNC_PIE                          00000093
SYNC_PIR                          00000013
SYNC_PWMCLKCON                    00000DBE
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  19:42:20         PAGE 55


SYMBOL TABLE
  LABEL                             VALUE 

SYNC_PWMCON                       00000DBB
SYNC_PWMDCH                       00000DB4
SYNC_PWMDCL                       00000DB3
SYNC_PWMINTE                      00000DBC
SYNC_PWMINTF                      00000DBD
SYNC_PWMLDCON                     00000DBF
SYNC_PWMOF                        00000DB7
SYNC_PWMOFCON                     00000DC0
SYNC_PWMPH                        00000DB1
SYNC_PWMPRH                       00000DB6
SYNC_PWMPRL                       00000DB5
SYNC_PWMTMR                       00000DB9
T                                 INDF1
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000018
T1GCON                            00000019
T1GGO                             00000003
T1GGO_NOT_DONE                    00000003
T1GPOL                            00000006
T1GSEL                            00000003
T1GSPM                            00000004
T1GSS0                            00000000
T1GSS1                            00000001
T1GTM                             00000005
T1GVAL                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             0000001C
T2OUTPS0                          00000003
T2OUTPS1                          00000004
T2OUTPS2                          00000005
T2OUTPS3                          00000006
TC                                00000032
TCY                               000000C8
TMR0                              00000015
TMR0CS                            00000005
TMR0IE                            00000005
TMR0IF                            00000002
TMR0SE                            00000004
TMR1                              00000016
TMR1CS0                           00000006
TMR1CS1                           00000007
TMR1GE                            00000007
TMR1GIE                           00000007
TMR1GIF                           00000007
TMR1H                             00000017
TMR1IE                            00000000
TMR1IF                            00000000
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  19:42:20         PAGE 56


SYMBOL TABLE
  LABEL                             VALUE 

TMR1L                             00000016
TMR1ON                            00000000
TMR2                              0000001A
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOS                               00000FEE
TOSH                              00000FEF
TOSL                              00000FEE
TRIGSEL0                          00000004
TRIGSEL1                          00000005
TRIGSEL2                          00000006
TRIGSEL3                          00000007
TRISA                             0000008C
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRMT                              00000001
TSEN                              00000005
TSRNG                             00000004
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TUN5                              00000005
TX9                               00000006
TX9D                              00000000
TXCKSEL                           00000002
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             0000019A
TXSTA                             0000019E
TX_PIR                            00000011
UP_THR                            000000C6
VDD                               00000400
VERT_DLY                          00000032
VIDEO_BUFFER                      00002030
VIDEO_LAT                         0000010C
VIDEO_OUT                         00000001
VREGCON                           00000197
VREGPM                            00000001
W                                 00000000
WDTCON                            00000097
WDTPS0                            00000001
WDTPS1                            00000002
WDTPS2                            00000003
WDTPS3                            00000004
WDTPS4                            00000005
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  19:42:20         PAGE 57


SYMBOL TABLE
  LABEL                             VALUE 

WELL_DEPTH                        00000016
WELL_WIDTH                        0000000A
WPUA                              0000020C
WPUA0                             00000000
WPUA1                             00000001
WPUA2                             00000002
WPUA3                             00000003
WPUA4                             00000004
WPUA5                             00000005
WR                                00000001
WREG                              00000009
WREG_SHAD                         00000FE5
WREN                              00000002
WRERR                             00000003
WUE                               00000001
XSIZE                             00000030
YSIZE                             00000020
Z                                 00000002
Z_SHAD                            00000002
_.org_1_006C                      0000006C
_.org_1_006E                      0000006E
_.org_1_0071                      00000071
_.org_1_00BD                      000000BD
_.org_1_00BF                      000000BF
_.org_1_00D3                      000000D3
_.org_1_00DB                      000000DB
_.org_1_026F                      0000026F
_.org_1_027F                      0000027F
_.org_1_02CE                      000002CE
_.org_1_02EF                      000002EF
_.org_1_0303                      00000303
_.org_1_0330                      00000330
_BOREN_NSLEEP                     00003DFF
_BOREN_OFF                        000039FF
_BOREN_ON                         00003FFF
_BOREN_SBODEN                     00003BFF
_BORV_19                          00003FFF
_BORV_HI                          00003BFF
_BORV_LO                          00003FFF
_CLKOUTEN_OFF                     00003FFF
_CLKOUTEN_ON                      000037FF
_CONFIG1                          00008007
_CONFIG2                          00008008
_CP_OFF                           00003FFF
_CP_ON                            00003F7F
_DEVID1                           00008006
_FOSC_ECH                         00003FFF
_FOSC_ECL                         00003FFD
_FOSC_ECM                         00003FFE
_FOSC_INTOSC                      00003FFC
_IDLOC0                           00008000
_IDLOC1                           00008001
_IDLOC2                           00008002
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  19:42:20         PAGE 58


SYMBOL TABLE
  LABEL                             VALUE 

_IDLOC3                           00008003
_LPBOREN_OFF                      00003FFF
_LPBOREN_ON                       000037FF
_LVP_OFF                          00001FFF
_LVP_ON                           00003FFF
_MCLRE_OFF                        00003FBF
_MCLRE_ON                         00003FFF
_PLLEN_OFF                        00003EFF
_PLLEN_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FDF
_STVREN_OFF                       00003DFF
_STVREN_ON                        00003FFF
_WDTE_NSLEEP                      00003FF7
_WDTE_OFF                         00003FE7
_WDTE_ON                          00003FFF
_WDTE_SWDTEN                      00003FEF
_WRT_ALL                          00003FFC
_WRT_BOOT                         00003FFE
_WRT_HALF                         00003FFD
_WRT_OFF                          00003FFF
__12F1572                         00000001
_stack                            00000020
accaH                             00000009
accaL                             00000008
accbH                             0000000B
accbL                             0000000A
add_points                        00000331
angle                             00000041
bitmap                            0000014B
bmp00                             0000014C
bmp01                             0000015F
bmp02                             0000014E
buttons                           0000000C
byte_serialize                    000000CE
case                              
clear_pixel                       00000102
clear_score                       000001FB
clear_screen                      000000E3
clr00                             000002BA
cls_loop                          000000E9
col_loop                          00000204
coll_test                         00000285
count_done                        00000246
count_full                        0000022E
count_loop                        00000232
dec_n                             
digits                            0000037B
div10                             00000056
div10_loop                        00000059
drop                              
drop00                            00000214
drop1                             00000201
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  19:42:20         PAGE 59


SYMBOL TABLE
  LABEL                             VALUE 

drop21                            000002C7
drop_n                            
drop_tetrim                       000002FF
droppedH                          00000047
droppedL                          00000046
dup                               
fall_loop                         000002E9
flags                             00000002
game_init                         000001D6
game_loop                         000002E3
game_over                         000002B6
get_flash_word                    00000124
get_nibble                        00000138
get_pixel                         00000106
gt_255                            00000028
gtimer                            00000003
hline                             000001BA
hline_done                        000001C6
inc_n                             
init                              00000338
insert                            
isr                               00000004
isr_exit                          00000052
koro                              00000261
korobeiniki                       000003F4
lbl_lines                         00000441
lbl_press                         00000448
lbl_score                         0000043A
lcountH                           00000001
lcountL                           00000000
lit                               
main                              00000378
mask00                            000000FA
mask01                            000000FD
move_down                         00000316
move_left                         00000311
move_right                        00000314
new_tminos                        00000248
next_flash_word                   00000133
next_pixel                        00000215
next_row                          00000244
nibble                            0000000D
nibble_mask                       00000147
no_sound                          00000270
no_zero                           000001B8
over                              
pause                             
pick                              
pop                               
print_char                        00000162
print_int                         0000019B
print_int00                       0000019F
print_label                       00000184
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  19:42:20         PAGE 60


SYMBOL TABLE
  LABEL                             VALUE 

print_last                        000001B2
print_tetrim                      0000016A
prompt                            000002D6
prt_lbl_done                      00000199
pstack_init                       
push                              
q                                 0000000A
qr00                              00000220
qr01                              0000022A
query_row                         0000021E
r                                 00000000
randH                             00000006
randL                             00000005
rcount                            00000007
read_exit                         00000096
read_flash                        00000129
read_pad                          00000064
reserve                           
rot_left                          00000307
rot_right                         0000030C
row0                              00000146
row1                              00000144
row2                              00000142
row_loop                          00000202
rst                               00000010
scoreH                            00000045
scoreL                            00000044
score_update                      00000323
set_pixel                         000000FF
set_pixel_ptr                     000000EE
set_yptr                          000000B0
start_timer                       
t0                                0000000E
t1                                0000000F
task0                             0000003D
task1                             00000046
task2                             0000004D
tasks                             00000033
tcyDelay                          
tetrim                            00000040
tetriminos                        000003A7
tetris                            000002DF
tone                              00000099
tone_pr                           000003C7
tone_tmr                          00000004
try_a                             00000073
try_b                             00000079
try_button                        
try_dn                            00000091
try_lt                            0000008B
try_rt                            0000007F
try_up                            00000085
tx                                00000042
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  19:42:20         PAGE 61


SYMBOL TABLE
  LABEL                             VALUE 

ty                                00000043
undo_drop_tetrim                  00000297
undo_move_left                    000002A3
undo_move_right                   000002A1
undo_rot_left                     0000029D
undo_rot_right                    00000299
update_display                    000002A5
video_buffer_b0                   00000050
video_buffer_b1                   000000A0
video_buffer_b2                   00000120
video_serialize                   000000BC
vline                             000001C8
vline_done                        000001D4
vsync_end                         00000020
vsync_start                       00000018
wait_end                          00000281
wait_sound                        
wait_start                        0000025C
wait_timer                        
xor_pixel                         00000109
xor_row                           0000010F
xor_row02                         0000011E
xor_row_done                      00000122

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,   129 suppressed

