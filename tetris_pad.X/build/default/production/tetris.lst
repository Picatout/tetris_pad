MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-12-2016  11:57:40         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001     include p12f1572.inc
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Sep 13 2016
                      00005 ;  MPASM PIC12F1572 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2016 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01601         LIST
                      00002     
                      00003     radix dec
                      00004     errorlevel 0, -302, -305
                      00005     
8007   3FE7           00006     __config _CONFIG1, _FOSC_ECH&_WDTE_OFF
8008   1EFF           00007     __config _CONFIG2, _PLLEN_OFF&_LVP_OFF 
                      00008 
  01312D00            00009 FOSC equ 20000000 ; 20Mhz
  00000032            00010 TC equ 50 ; nanosecondes 
  004C4B40            00011 FCY equ FOSC/4    ; 5Mhz
  000000C8            00012 TCY equ 200 ; nanoseconds
                      00013 
                      00014 
  00000030            00015 XSIZE equ 48  ; horizontal pixels
  00000020            00016 YSIZE equ 32  ; vertical pixels
  00000006            00017 BPL equ XSIZE/8 ; bytes per line 
  000000C0            00018 BUFFER_SIZE equ  YSIZE*BPL  ; video buffer size
  00002030            00019 VIDEO_BUFFER equ 0x2000+(3*80-BUFFER_SIZE) ; buffer address
  00000032            00020 VERT_DLY equ 50
  00000046            00021 FIRST_VIDEO equ VERT_DLY+20  ; first video output line
  000000C5            00022 LAST_VIDEO equ FIRST_VIDEO+4*YSIZE-1  ; last video output line
  0000019A            00023 PIXEL_TXREG equ TXREG
  00000011            00024 TX_PIR equ PIR1
  00000032            00025 HORZ_DLY equ 10*5  ; there is 5 TCY/µsec
                      00026  
  00000001            00027 VIDEO_OUT equ RA1
  0000010C            00028 VIDEO_LAT equ LATA
  00000002            00029 SYNC_OUT equ RA2 
  00000DB3            00030 SYNC_PWMDCL equ PWM3DCL ; duty cycle low byte
  00000DB4            00031 SYNC_PWMDCH equ PWM3DCH ; high byte    
  00000DB5            00032 SYNC_PWMPRL equ PWM3PRL ; pwm period low byte
  00000DB6            00033 SYNC_PWMPRH equ PWM3PRH ; high byte 
  00000DB1            00034 SYNC_PWMPH equ PWM3PH ; pwm phase
  00000DB7            00035 SYNC_PWMOF equ PWM3OF ; pwm offset
  00000DB9            00036 SYNC_PWMTMR equ PWM3TMR ; timer
  00000DBB            00037 SYNC_PWMCON equ PWM3CON ; control SFR
  00000DBE            00038 SYNC_PWMCLKCON equ PWM3CLKCON  ; clock control SFR
  00000DC0            00039 SYNC_PWMOFCON equ PWM3OFCON ; offset control SFR
  00000DBF            00040 SYNC_PWMLDCON equ PWM3LDCON ; load control SFR
  00000006            00041 SYNC_IE equ PWM3IE  ; interrupt enable bit
  00000006            00042 SYNC_IF equ PWM3IF  ; interrupt flag bit
  00000093            00043 SYNC_PIE equ PIE3 ; interrupt enable SFR
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-12-2016  11:57:40         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000013            00044 SYNC_PIR equ PIR3 ; interrupt flag SFR 
  00000DBC            00045 SYNC_PWMINTE equ PWM3INTE
  00000DBD            00046 SYNC_PWMINTF equ PWM3INTF
                      00047  
  000004F5            00048 HORZ_PERIOD equ FOSC/15748-1 ; 15748 hertz
  0000005E            00049 HORZ_PULSE equ 4700/TC ; 4.7µsec 
  00000106            00050 LAST_LINE equ 262
                      00051 
  00000000            00052 LED_PIN equ RA0
  00000004            00053 ADC_PIN equ RA4
                      00054  
  00000004            00055 AUDIO_PIN equ RA4
  00000DA3            00056 AUDIO_PWMDCL equ PWM2DCL
  00000DA4            00057 AUDIO_PWMDCH equ PWM2DCH
  00000DA5            00058 AUDIO_PWMPRL equ PWM2PRL
  00000DA6            00059 AUDIO_PWMPRH equ PWM2PRH
  00000DA9            00060 AUDIO_PWMTMR equ PWM2TMR
  00000DAE            00061 AUDIO_PWMCLKCON equ PWM2CLKCON
  00000DAF            00062 AUDIO_PWMLDCON equ PWM2LDCON
  00000DAB            00063 AUDIO_PWMCON equ PWM2CON
                      00064  
                      00065 ; game pad resource
                      00066 ; use ADC 
  00000004            00067 PAD_PIN equ ANSA4
  00000003            00068 PAD_CHS equ 3 
  00000000            00069 BTN_UP equ 0
  00000001            00070 BTN_DN equ 1
  00000002            00071 BTN_LT equ 2
  00000003            00072 BTN_RT equ 3
  00000004            00073 BTN_A equ 4
  00000005            00074 BTN_B equ 5
                      00075 ; threshold level for each button
                      00076 ; lower_btn_thr >= BTN_? < btn_thr
                      00077 ; exemple: BTN_UP if RT_THR<=Vadc<UP_THR  
  00000400            00078 VDD equ 1024
  000000D8            00079 DN_THR equ 216 ;(VDD*(6/7+5/6)/2)>>2
  000000D1            00080 LT_THR equ 209 ; (VDD*(5/6+4/5)/2)>>2
  000000C6            00081 UP_THR equ 198 ;(VDD*(4/5+3/4)/2)>>2
  000000B5            00082 RT_THR equ 181 ;(VDD*(3/4+2/3)/2)>>2
  00000095            00083 B_THR  equ 149 ; (VDD*(2/3+1/2)/2)>>2
  00000040            00084 A_THR  equ 64 ;(VDD/4)>>2
                      00085  
                      00086 try_button macro btn, label 
                      00087     movlw btn
                      00088     subwf ADRESH,W
                      00089     skpnc
                      00090     bra label
                      00091     endm
                      00092     
                      00093 ;boolean flags 
  00000000            00094 F_VSYNC equ 0 ; vertical sync active
  00000001            00095 F_EVEN equ 1  ; even field
  00000002            00096 F_MUTEX equ 2 ; video routine lock out
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-12-2016  11:57:40         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000003            00097 F_GTMR equ 3  ; game timer active
  00000004            00098 F_GSTOP equ 4 ; game stopped
  00000005            00099 F_SND equ 5 ; sound timer active 
                      00100  
  000000B4            00101 LFSR_TAPS equ 0xB4 ; xor mask
                      00102  
                      00103 disable_video macro ; lockout video_serialize
                      00104     bsf flags, F_MUTEX
                      00105     endm
                      00106     
                      00107 enable_video macro ; unlock video_serialize
                      00108     bcf flags, F_MUTEX
                      00109     endm
                      00110     
                      00111 tcyDelay macro n ; delay in TCY cycles  5TCY per µsec.  
                      00112     variable r=n%5
                      00113     variable q=n/5
                      00114     while r>1
                      00115     bra $+1
                      00116 r-=2
                      00117     endw
                      00118     if r==1
                      00119     nop
                      00120     endif
                      00121     if q
                      00122     movlw q
                      00123     bra $+1
                      00124     decfsz WREG
                      00125     bra $-2
                      00126     endif
                      00127     endm
                      00128 
                      00129 case macro n, label
                      00130     xorlw n
                      00131     skpnz
                      00132     bra label
                      00133     xorlw n
                      00134     endm
                      00135  
                      00136 ldpmadr macro addr ; load PMADR register
                      00137     movlw low(addr)
                      00138     movwf PMADRL
                      00139     movlw high(addr)
                      00140     movwf PMADRH
                      00141     endm
                      00142     
                      00143 addpmadr macro value ; add value to PMADR
                      00144     movlw value
                      00145     addwf PMADRL
                      00146     clrw
                      00147     addwfc PMADRH
                      00148     endm
                      00149     
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-12-2016  11:57:40         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00150 start_timer macro value ; start game timer
                      00151     movlw value
                      00152     movwf gtimer
                      00153     bsf flags, F_GTMR
                      00154     endm
                      00155     
                      00156 wait_timer macro ; wait timer expiration
                      00157     btfsc flags, F_GTMR
                      00158     bra $-1
                      00159     endm
                      00160     
                      00161 pause macro value ; suspend execution (busy loop)
                      00162     start_timer value
                      00163     wait_timer
                      00164     endm
                      00165  
                      00166 wait_sound macro ; wait sound end
                      00167     btfsc flags,F_SND
                      00168     bra $-1
                      00169     endm
                      00170     
                      00171 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00172 ; software stack for arguments passing
                      00173 ; SP is Stack Pointer
                      00174 ; T is Top Of Stack
                      00175 #define SP FSR1
                      00176 #define T INDF1
  00000020            00177 STACK_SIZE equ 32
                      00178  
  0000001F            00179 S0 equ 0x1F ; stack base address - 1
                      00180 
                      00181 pstack_init macro ; initialise stack pointer
                      00182     clrf FSR1H
                      00183     movlw S0
                      00184     movwf FSR1L
                      00185     endm
                      00186     
                      00187 push macro   ; ( -- n ) push WREG on stack
                      00188     movwi ++SP
                      00189     endm
                      00190 
                      00191 pop macro   ; ( n -- )  pop T in WREG
                      00192     moviw SP--
                      00193     endm
                      00194     
                      00195 drop macro  ; ( n -- ) ; discard T
                      00196    addfsr SP,-1
                      00197    endm
                      00198 
                      00199 drop_n macro n  ; discard n elements  n<32
                      00200     addfsr SP,-n
                      00201     endm
                      00202     
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-12-2016  11:57:40         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00203 lit macro  n ; ( -- n ) ; push a literal
                      00204    movlw n
                      00205    movwi ++SP 
                      00206    endm
                      00207 
                      00208 dup macro ; ( n -- n n ) duplicate T
                      00209     movfw T
                      00210     movwi ++SP
                      00211     endm
                      00212     
                      00213 over macro ; ( n1 n2 -- n1 n2 n1 )
                      00214     moviw -1[SP]
                      00215     push
                      00216     endm
                      00217     
                      00218 swap macro ; exchange WREG and T
                      00219     xorwf T
                      00220     xorwf T,W
                      00221     xorwf T
                      00222     endm
                      00223  
                      00224 store macro var ; ( n -- ) pop T in variable
                      00225    moviw SP--
                      00226    movwf var
                      00227    endm
                      00228    
                      00229 fetch macro var  ; ( -- n ) push var on stack
                      00230    movfw var
                      00231    movwi ++SP
                      00232    endm
                      00233 
                      00234 pick macro n  ; pick nth element of stack to WREG
                      00235     moviw -n[SP]
                      00236     endm
                      00237 
                      00238 insert macro n ;  insert WREG at position n on stack
                      00239    movwi -n[SP]
                      00240    endm
                      00241    
                      00242 movtw macro ; ( n -- n ) overwrite WREG with T
                      00243    movfw T
                      00244    endm
                      00245    
                      00246 movwt macro ; ( n1 -- n2 ) overwrite T with WREG
                      00247     movwf T
                      00248     endm
                      00249     
                      00250 add macro  ; add WREG to T result on T
                      00251     addwf T,F
                      00252    endm
                      00253    
                      00254 sub macro  ; substract WREG from T result on T
                      00255    subwf T,F
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-12-2016  11:57:40         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00256    endm
                      00257 
                      00258 inc_n macro n ; increament nth element of stack
                      00259     moviw -n[SP]
                      00260     incf WREG,F
                      00261     movwi -n[SP]
                      00262     endm
                      00263     
                      00264 dec_n macro n ; decreament nth element of stack
                      00265     moviw -n[SP]
                      00266     decf WREG,F
                      00267     movwi -n[SP]
                      00268     endm
                      00269     
                      00270 zbranch macro label ; branch if T == 0
                      00271     pop
                      00272     skpnz
                      00273     bra label
                      00274     endm
                      00275     
                      00276 tbranch macro label ; branch if T != 0
                      00277     pop
                      00278     skpz
                      00279     bra label
                      00280     endm
                      00281     
                      00282 reserve macro n ; reserve n bytes on stack for local variables
                      00283     addfsr SP, n 
                      00284     endm
                      00285  
                      00286 rot macro ; ( n1 n2 n3 -- n2 n3 n1 )
                      00287     pick 2
                      00288     push        ; n1 n2 n3 n1
                      00289     pick 2
                      00290     insert 3   ;  n2 n2 n3 n1
                      00291     pick 1
                      00292     insert 2   ; n2 n3 n3 n1
                      00293     pop        ; n2 n3 n3 
                      00294     movwf T    ; n2 n3 n1
                      00295     endm
                      00296  
                      00297 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00298 ; parameter stack section    
                      00299 dstack udata 0x20
0020                  00300 _stack res 32
                      00301 ; game variables section 
  00000000            00302 GAME_VAR equ 0 ; variables bank
                      00303 game_var udata 0x40 
                      00304 ; tetris game state
0040                  00305 tetrim res 1 ; active tretriminos 
0041                  00306 angle res 1 ; tetriminos rotatation angle in multiple of 90degr. {0:3}
0042                  00307 tx  res 1 ; x coordinate
0043                  00308 ty  res 1 ; y coordinate
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-12-2016  11:57:40         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0044                  00309 scoreL res 1 ; game score  16 bits
0045                  00310 scoreH res 1 
0046                  00311 dropped res 1 ; dropped lines
                      00312 
                      00313 ; These 3 sections are used for video pixels buffering
                      00314 ; with indirect access using FSR0
                      00315 ; to form a contiguous address space. 
                      00316 vb_b0    udata 0x50
0050                  00317 video_buffer_b0 res 32
                      00318 vb_b1    udata 0xA0
00A0                  00319 video_buffer_b2 res 80
                      00320 vb_b2    udata 0x120
0120                  00321 video_buffer_b3 res 80
                      00322  
                      00323  
                      00324     udata_shr
                      00325 ;scan lines counter 16 bits
0000                  00326 lcountL res 1
0001                  00327 lcountH res 1
                      00328 ; boolean flags 
0002                  00329 flags res 1
                      00330 ; game timer
0003                  00331 gtimer res 1 
                      00332 ; sound timer
0004                  00333 tone_tmr res 1 
                      00334 ; lfsr PRNG register
0005                  00335 randL res 1 
0006                  00336 randH res 1 
                      00337 ; loop counter
0007                  00338 rcount res 1
                      00339 ; arithmetic accumulator A 24 bits
0008                  00340 accaL res 1
0009                  00341 accaH res 1
                      00342 ; arithmetic accumulator B 16 bits
000A                  00343 accbL res 1
000B                  00344 accbH res 1
                      00345 ; game pad buttons state
000C                  00346 buttons res 1
                      00347 ; flash reader next nibble {0-3}
000D                  00348 nibble res 1
                      00349  
                      00350 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
000E                  00351 rst: 
                      00352     org 0
0000   0023           00353     banksel ANSELA
0001   018C           00354     clrf ANSELA
0002   160C           00355     bsf ANSELA,PAD_PIN
0003   2???           00356     goto init
                      00357     
                      00358     org 4
0004                  00359 isr:
0004   003B           00360     banksel SYNC_PWMINTF
0005   103D           00361     bcf SYNC_PWMINTF,PRIF
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-12-2016  11:57:40         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0006   1800           00362     btfsc lcountH,0
0007   3???           00363     bra gt_255 ; lcount > 255
0008   08??           00364     movfw lcountL
0009   1903           00365     skpnz
000A   3???           00366     bra vsync_start
000B   3A03           00367     xorlw 3
000C   1903           00368     skpnz
000D   3???           00369     bra vsync_end
000E                  00370 lt_256: ; lcount < 256
000E   1900           00371     btfsc flags, F_MUTEX
000F   3???           00372     bra isr_exit
0010   08??           00373     movfw lcountL
0011   3C45           00374     sublw FIRST_VIDEO-1
0012   1803           00375     skpnc
0013   3???           00376     bra isr_exit
0014   08??           00377     movfw lcountL
0015   3CC5           00378     sublw LAST_VIDEO
0016   1C03           00379     skpc
0017   3???           00380     bra isr_exit
0018   2???           00381     call video_serialize
0019   3???           00382     bra isr_exit    
001A                  00383 vsync_start: ; scanline 0 start vertical sync pulse
001A   003B           00384     banksel SYNC_PWMDCL
001B   3097           00385     movlw (HORZ_PERIOD-HORZ_PULSE)&0xff
001C   00B3           00386     movwf SYNC_PWMDCL
001D   3004           00387     movlw (HORZ_PERIOD-HORZ_PULSE)>>8
001E   00B4           00388     movwf SYNC_PWMDCH
001F   17BF           00389     bsf SYNC_PWMLDCON,LDA
0020   1400           00390     bsf flags, F_VSYNC
0021   3???           00391     bra isr_exit
0022                  00392 vsync_end: ; scanline 3 end vertical sync pulse
0022   003B           00393     banksel SYNC_PWMDCL
0023   305E           00394     movlw HORZ_PULSE&0xff
0024   00B3           00395     movwf SYNC_PWMDCL
0025   3000           00396     movlw HORZ_PULSE>>8
0026   00B4           00397     movwf SYNC_PWMDCH
0027   17BF           00398     bsf SYNC_PWMLDCON,LDA
0028   1000           00399     bcf flags, F_VSYNC
0029   3???           00400     bra isr_exit
002A                  00401 gt_255: ; lcount>255
002A   3006           00402     movlw LAST_LINE&0xff
002B   1C80           00403     btfss flags,F_EVEN
002C   3E01           00404     addlw 1
002D   06??           00405     xorwf lcountL,W
002E   1D03           00406     skpz
002F   3???           00407     bra tasks
0030   01??           00408     clrf lcountL
0031   01??           00409     clrf lcountH
0032   3002           00410     movlw 1<<F_EVEN
0033   06??           00411     xorwf flags,F
0034   0009           00412     retfie
                      00413 ; round robin task scheduler
                      00414 ; each task execute once every 1/60th sec.
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-12-2016  11:57:40         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00415 ; condition:    
                      00416 ;   Task must complete inside
                      00417 ;   horizontal period.
0035                  00418 tasks:
0035   08??           00419     movfw lcountL
0036   1903           00420     skpnz
0037   3???           00421     bra task0
0038   0389           00422     decf WREG
0039   1903           00423     skpnz 
003A   3???           00424     bra task1
003B   0389           00425     decf WREG
003C   1903           00426     skpnz
003D   3???           00427     bra task2
003E   3???           00428     bra isr_exit
003F                  00429 task0:
                      00430 ; sound timer    
003F   08??           00431     movfw tone_tmr
0040   1903           00432     skpnz
0041   3???           00433     bra isr_exit
0042   0B??           00434     decfsz tone_tmr,F
0043   3???           00435     bra isr_exit
0044   1280           00436     bcf flags,F_SND
0045   003B           00437     banksel AUDIO_PWMCON
0046   13AB           00438     bcf AUDIO_PWMCON,EN
0047   3???           00439     bra isr_exit
0048                  00440 task1:   
                      00441 ; decrement game timer    
0048   08??           00442     movf gtimer,F ; 
0049   1903           00443     skpnz
004A   3???           00444     bra isr_exit
004B   0B??           00445     decfsz gtimer,F ; 
004C   3???           00446     bra isr_exit ;
004D   1180           00447     bcf flags, F_GTMR
004E   3???           00448     bra isr_exit ;
004F                  00449 task2:
                      00450 ; rotate lfsr
004F   36??           00451     lsrf randH
0050   0C??           00452     rrf randL
0051   1803           00453     skpnc
0052   30B4           00454     movlw LFSR_TAPS
0053   06??           00455     xorwf randH
0054   3???           00456     bra isr_exit 
0055                  00457 isr_exit:
0055   0A??           00458     incf lcountL
0056   1903           00459     skpnz
0057   0A??           00460     incf lcountH
0058   0009           00461     retfie
                      00462 
                      00463 ;divsion by 10    
                      00464 ;needed to convert binary to BCD
                      00465 ; input:
                      00466 ;   acca dividend  16 bits
                      00467 ; output:
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-12-2016  11:57:40         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00468 ;   acca: quotient
                      00469 ;   accbL: remainder    
0059                  00470 div10:
                      00471     disable_video
0059   1500               M     bsf flags, F_MUTEX
005A   3011           00472     movlw 17
005B   00??           00473     movwf rcount
005C   01??           00474     clrf accbL
005D                  00475 div10_loop:
005D   300A           00476     movlw 10
005E   02??           00477     subwf accbL,W
005F   1803           00478     skpnc
0060   00??           00479     movwf accbL
0061   0D??           00480     rlf accaL
0062   0D??           00481     rlf accaH
0063   0D??           00482     rlf accbL
0064   0B??           00483     decfsz rcount
0065   3???           00484     bra div10_loop
0066   36??           00485     lsrf accbL
                      00486     enable_video
0067   1100               M     bcf flags, F_MUTEX
0068   0008           00487     return
                      00488     
                      00489     
                      00490 ; WREG*6  because BPL=6
                      00491 ; WREG*6=WREG*4+WREG*2    
0069                  00492 mult6: 
0069   00??           00493     movwf accbH
006A   35??           00494     lslf accbH    ; accbH=2*WREG
006B   35??           00495     lslf accbH,W  ; WREG=4*WREG
006C   07??           00496     addwf accbH,W ; WREG=6*WREG
006D   0008           00497     return
                      00498 
                      00499 ;read game pad
                      00500 ; store value in
                      00501 ; buttons
                      00502 ; a button is accepted if
                      00503 ; the Vadc value is below its threshold
006E                  00504 read_pad:
006E   01??           00505     clrf buttons
006F   1A80           00506     btfsc flags, F_SND
0070   0008           00507     return ; can't read while tone playing
0071   0021           00508     banksel TRISA
0072   160C           00509     bsf TRISA,ADC_PIN
0073   0021           00510     banksel ADCON0
0074   141D           00511     bsf ADCON0,ADON
                      00512     tcyDelay 8*4 ; délais d'acquisition 4µsec
  0002                    M     variable r=8*4%5
  0006                    M     variable q=8*4/5
                          M     while r>1
0075   3???               M     bra $+1
  00000000                M r-=2
                          M     endw
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-12-2016  11:57:40         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if r==1
                          M     nop
                          M     endif
                          M     if q
0076   3006               M     movlw q
0077   3???               M     bra $+1
0078   0B89               M     decfsz WREG
0079   3???               M     bra $-2
                          M     endif
007A   149D           00513     bsf ADCON0,GO
007B   189D           00514     btfsc ADCON0,NOT_DONE
007C   3???           00515     bra $-1
007D   101D           00516     bcf ADCON0,ADON
                      00517 ; try each button from lower to upper
007E                  00518 try_a:
                      00519     try_button A_THR, try_b
007E   3040               M     movlw A_THR
007F   021C               M     subwf ADRESH,W
0080   1803               M     skpnc
0081   3???               M     bra try_b
0082   1600           00520     bsf buttons,BTN_A
0083   3???           00521     bra read_exit
0084                  00522 try_b:    
                      00523     try_button B_THR, try_rt
0084   3095               M     movlw B_THR
0085   021C               M     subwf ADRESH,W
0086   1803               M     skpnc
0087   3???               M     bra try_rt
0088   1680           00524     bsf buttons,BTN_B
0089   3???           00525     bra read_exit
008A                  00526 try_rt:
                      00527     try_button RT_THR, try_up
008A   30B5               M     movlw RT_THR
008B   021C               M     subwf ADRESH,W
008C   1803               M     skpnc
008D   3???               M     bra try_up
008E   1580           00528     bsf buttons,BTN_RT
008F   3???           00529     bra read_exit
0090                  00530 try_up:
                      00531     try_button UP_THR, try_lt
0090   30C6               M     movlw UP_THR
0091   021C               M     subwf ADRESH,W
0092   1803               M     skpnc
0093   3???               M     bra try_lt
0094   1400           00532     bsf buttons,BTN_UP
0095   3???           00533     bra read_exit
0096                  00534 try_lt:
                      00535     try_button LT_THR, try_dn
0096   30D1               M     movlw LT_THR
0097   021C               M     subwf ADRESH,W
0098   1803               M     skpnc
0099   3???               M     bra try_dn
009A   1500           00536     bsf buttons,BTN_LT
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-12-2016  11:57:40         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

009B   3???           00537     bra read_exit
009C                  00538 try_dn:
                      00539     try_button DN_THR, read_exit
009C   30D8               M     movlw DN_THR
009D   021C               M     subwf ADRESH,W
009E   1803               M     skpnc
009F   3???               M     bra read_exit
00A0   1480           00540     bsf buttons,BTN_DN
00A1                  00541 read_exit:
00A1   0021           00542     banksel TRISA
00A2   120C           00543     bcf TRISA,ADC_PIN
00A3   0008           00544     return
                      00545     
                      00546 ; play a tone
                      00547 ; input:
                      00548 ;   t   duration in multiple of 1/60 sec.
                      00549 ;   n   note number
00A4                  00550 tone: ; ( t n -- )
00A4   0021           00551     banksel TRISA
00A5   120C           00552     bcf TRISA,AUDIO_PIN
00A6   003B           00553     banksel AUDIO_PWMPRL
00A7   3581           00554     lslf T
00A8   0801           00555     movfw T
00A9   2???           00556     call tone_pr
00AA   00A5           00557     movwf AUDIO_PWMPRL
00AB   3689           00558     lsrf WREG
00AC   00A3           00559     movwf AUDIO_PWMDCL
00AD   0A01           00560     incf T,W
00AE   2???           00561     call tone_pr
00AF   00A6           00562     movwf AUDIO_PWMPRH
00B0   3689           00563     lsrf WREG
00B1   00A4           00564     movwf AUDIO_PWMDCH
00B2   1803           00565     skpnc
00B3   17A3           00566     bsf AUDIO_PWMDCL,7
                      00567     pop
00B4   0017               M     moviw SP--
                      00568     pop
00B5   0017               M     moviw SP--
00B6   00??           00569     movwf tone_tmr
00B7   17AB           00570     bsf AUDIO_PWMCON,EN
00B8   17AF           00571     bsf AUDIO_PWMLDCON,LDA
00B9   1680           00572     bsf flags,F_SND
00BA   0008           00573     return
                      00574     
                      00575     
                      00576 ; serialise video pixels to output
00BB                  00577 video_serialize: 
                      00578     tcyDelay HORZ_DLY
  0000                    M     variable r=HORZ_DLY%5
  000A                    M     variable q=HORZ_DLY/5
                          M     while r>1
                          M     bra $+1
                          M r-=2
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-12-2016  11:57:40         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endw
                          M     if r==1
                          M     nop
                          M     endif
                          M     if q
00BB   300A               M     movlw q
00BC   3???               M     bra $+1
00BD   0B89               M     decfsz WREG
00BE   3???               M     bra $-2
                          M     endif
00BF   0804           00579     movfw FSR0L
                      00580     push
00C0   001C               M     movwi ++SP
00C1   0805           00581     movfw FSR0H
                      00582     push
00C2   001C               M     movwi ++SP
                      00583     lit 0 ;  x 
00C3   3000               M    movlw 0
00C4   001C               M    movwi ++SP 
00C5   3030           00584     movlw VIDEO_BUFFER&0xff
00C6   0084           00585     movwf FSR0L
00C7   3020           00586     movlw VIDEO_BUFFER>>8
00C8   0085           00587     movwf FSR0H
00C9   3046           00588     movlw FIRST_VIDEO
00CA   02??           00589     subwf lcountL,W
00CB   3689           00590     lsrf WREG
00CC   3689           00591     lsrf WREG
00CD   2???           00592     call mult6  ; 6 byte per line
00CE   0784           00593     addwf FSR0L
00CF   0103           00594     clrw
00D0   3D85           00595     addwfc FSR0H
00D1   3006           00596     movlw XSIZE/8 ; 8 pixels per byte
00D2   00??           00597     movwf rcount  ;
00D3   0023           00598     banksel RCSTA
00D4   179D           00599     bsf RCSTA,SPEN
00D5                  00600 pixels_loop:    
00D5   0012           00601     moviw FSR0++
00D6   0023           00602     banksel PIXEL_TXREG
00D7   009A           00603     movwf PIXEL_TXREG
00D8   0020           00604     banksel TX_PIR
00D9   1E11           00605     btfss TX_PIR,TXIF
00DA   3???           00606     bra $-1
00DB   0B??           00607     decfsz rcount
00DC   3???           00608     bra pixels_loop
00DD   0023           00609     banksel PIXEL_TXREG
00DE   019A           00610     clrf PIXEL_TXREG
00DF   0020           00611     banksel TX_PIR
00E0   1E11           00612     btfss TX_PIR,TXIF
00E1   3???           00613     bra $-1
00E2   0023           00614     banksel RCSTA
00E3   139D           00615     bcf RCSTA, SPEN
                      00616     pop
00E4   0017               M     moviw SP--
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-12-2016  11:57:40         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00E5   0085           00617     movwf FSR0H
                      00618     pop
00E6   0017               M     moviw SP--
00E7   0084           00619     movwf FSR0L
00E8   0008           00620     return
                      00621 
                      00622 ; fill_buffer
                      00623 ; fill screen buffer with WREG value    
00E9                  00624 fill_buffer: ; ( c -- )
                      00625     disable_video
00E9   1500               M     bsf flags, F_MUTEX
00EA   3020           00626     movlw high(VIDEO_BUFFER)
00EB   0085           00627     movwf FSR0H
00EC   3030           00628     movlw low(VIDEO_BUFFER)
00ED   0084           00629     movwf FSR0L
00EE   30C0           00630     movlw BUFFER_SIZE
                      00631     push    ; c size
00EF   001C               M     movwi ++SP
                      00632     pick 1
00F0   3F7F               M     moviw -1[SP]
00F1                  00633 fill_loop:    
00F1   001A           00634     movwi FSR0++
00F2   0B81           00635     decfsz T
00F3   3???           00636     bra fill_loop
                      00637     drop_n 2
00F4   317E               M     addfsr SP,-2
                      00638     enable_video
00F5   1100               M     bcf flags, F_MUTEX
00F6   0008           00639     return
                      00640 
                      00641     
                      00642 ;set video pointer at 
                      00643 ; input:
                      00644 ;   x,y coordinates of pixel in video_buffer    
                      00645 ; output:
                      00646 ;   T = pixel offset, 0 left, 7 right  
                      00647 ;   Z=0 if offset==0 
                      00648 ; NOTE: EUSART output least significant bit first
                      00649 ;       so bit 0 appear left on screen.    
00F7                  00650 set_video_ptr:  ; ( x y -- b )
00F7   3020           00651     movlw high(VIDEO_BUFFER)
00F8   0085           00652     movwf FSR0H
00F9   3030           00653     movlw low(VIDEO_BUFFER)
00FA   0084           00654     movwf FSR0L
                      00655 ; buffer_addr+y*BPL
                      00656     pop         ; ( x y -- x )
00FB   0017               M     moviw SP--
00FC   2???           00657     call mult6
00FD   0784           00658     addwf FSR0L
00FE   0103           00659     clrw
00FF   3D85           00660     addwfc FSR0H
                      00661 ; buffer_addr+x/8
0100   3601           00662     lsrf T,W   
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-12-2016  11:57:40         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0101   3689           00663     lsrf WREG
0102   3689           00664     lsrf WREG
0103   0784           00665     addwf FSR0L
0104   0103           00666     clrw
0105   3D85           00667     addwfc FSR0H
0106   3007           00668     movlw 7
0107   0581           00669     andwf T,F
0108   0008           00670     return
                      00671 
                      00672 ; return state of pixel
                      00673 ; input:
                      00674 ;   x,y coordinates of pixel
                      00675 ; output:
                      00676 ;   T=0|2^n  where n{0:7}
                      00677 ;   Z=1 when T==0    
0109                  00678 get_pixel: ; ( x y -- 0|2^n ) n{0:7)
                      00679     lit TEST_OP
0109   3002               M    movlw TEST_OP
010A   001C               M    movwi ++SP 
010B   2???           00680     call bitop
010C   0801           00681     movfw T  ; 
010D   0008           00682     return
                      00683     
                      00684     
  00000000            00685 CLR_OP equ 0 ; put pixel to 0
  00000001            00686 XOR_OP equ 1 ; invert pixel
  00000002            00687 TEST_OP  equ 2  ; test bit value  return its value as flag
  00000003            00688 SET_OP equ 3 ; put pixel to 1    
                      00689 ;operation on pixel    
                      00690 ; inputs:
                      00691 ;   {x,y} coordinates
                      00692 ;   op operation XOR_OP|CLR_OP 
                      00693 ; output:
                      00694 ;   WREG=collision flag, 0 if collision 
                      00695 ; >> no bank dependency << 
010E                  00696 bitop: ; ( x y op -- f )
                      00697     disable_video
010E   1500               M     bsf flags, F_MUTEX
                      00698     pick 2
010F   3F7E               M     moviw -2[SP]
                      00699     push        ; x y op x
0110   001C               M     movwi ++SP
                      00700     pick 2
0111   3F7E               M     moviw -2[SP]
                      00701     push        ; x y op x y
0112   001C               M     movwi ++SP
                      00702 ; preserve FSR0    
0113   0804           00703     movfw FSR0L
                      00704     insert 4
0114   3FFC               M    movwi -4[SP]
0115   0805           00705     movfw FSR0H
                      00706     insert 3    ; -- FSR0L FSR0H op x y 
0116   3FFD               M    movwi -3[SP]
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-12-2016  11:57:40         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0117   2???           00707     call set_video_ptr  ; -- FSR0L FSR0H op bit
0118   3001           00708     movlw 0x1
0119   1903           00709     skpnz ; bit Z modified before leaving set_video_ptr
011A   3???           00710     bra bitop01 ; least significant bit
011B                  00711 bitop00:
011B   3589           00712     lslf WREG
011C   0B81           00713     decfsz T
011D   3???           00714     bra bitop00
011E                  00715 bitop01: 
                      00716     ; WREG= bit mask
011E   0081           00717     movwf T    ; -- FSR0L FSR0H op mask
                      00718 ;operation selector    
                      00719     pick 1  ; WREG= op
011F   3F7F               M     moviw -1[SP]
0120   1903           00720     skpnz
0121   3???           00721     bra clear_bit
0122   0389           00722     decf WREG
0123   1903           00723     skpnz
0124   3???           00724     bra xor_bit  ;
0125   0389           00725     decf WREG
0126   1903           00726     skpnz
0127   3???           00727     bra test_bit
                      00728 ; set bit  SET_OP
0128   0801           00729     movfw T
0129   0480           00730     iorwf INDF0,F
012A   3???           00731     bra bitop02
012B                  00732 test_bit:  ; TEST_OP
012B   0801           00733     movfw T
012C   0500           00734     andwf INDF0,W
012D   0081           00735     movwf T     ; FSR0L FSR0H op bit
012E   3???           00736     bra bitop02
012F                  00737 clear_bit:  ; CLR_OP
012F   0901           00738     comf T,W
0130   0580           00739     andwf INDF0,F
0131   3???           00740     bra bitop02 ; -- FSR0L FSR0H op mask
0132                  00741 xor_bit: ; XOR_OP
0132   0801           00742     movfw T   ; -- FSR0L FSR0H op mask
0133   0680           00743     xorwf INDF0,F
0134   0500           00744     andwf INDF0,W
0135   0601           00745     xorwf T,W ; on screen bit value, 0 if no collision
0136   0081           00746     movwf T  ; -- FSR0L FSR0H op f
0137                  00747 bitop02:    
                      00748 ; restore FSR0    
                      00749     pick 2  
0137   3F7E               M     moviw -2[SP]
0138   0085           00750     movwf FSR0H
                      00751     pick 3
0139   3F7D               M     moviw -3[SP]
013A   0084           00752     movwf FSR0L
                      00753     pop  ; collision flag
013B   0017               M     moviw SP--
                      00754     drop_n 3 ; drop parameters frame
013C   317D               M     addfsr SP,-3
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-12-2016  11:57:40         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00755     push ; store collision flag
013D   001C               M     movwi ++SP
                      00756     enable_video
013E   1100               M     bcf flags, F_MUTEX
013F   0008           00757     return
                      00758 
                      00759 ; draw row of 4 pixels
                      00760 ; stop when n==0    
                      00761 ; input:
                      00762 ;   {x,y} left coordinates
                      00763 ;   n pixels to draw
                      00764 ;   f collision flag to be modified    
                      00765 ; output:
                      00766 ;   f=collision flag, return modified value   
                      00767 ; >> no bank dependency << 
0140                  00768 xor_row: ; ( f n x y -- f )
                      00769 ; bounds check y
0140   1B81           00770     btfsc T,7
0141   3???           00771     bra xor_row_done ; y<0
0142   3020           00772     movlw YSIZE
0143   0201           00773     subwf T,W
0144   1803           00774     skpnc
0145   3???           00775     bra xor_row_done ; y>=YSIZE
0146                  00776 xor_row01:    
                      00777     pick 2 ; check if n==0
0146   3F7E               M     moviw -2[SP]
0147   1903           00778     skpnz
0148   3???           00779     bra xor_row_done ; row empty nothing to do
0149   3589           00780     lslf WREG
                      00781     insert 2  ; save shifted n
014A   3FFE               M    movwi -2[SP]
014B   1C03           00782     skpc
014C   3???           00783     bra xor_row02 ; bit==0 no draw
                      00784 ; bounds check x{0:43}    
                      00785     pick 1
014D   3F7F               M     moviw -1[SP]
014E   1B89           00786     btfsc WREG,7 
014F   3???           00787     bra xor_row02 ; x<0 don't print
0150   3C2F           00788     sublw XSIZE-1
0151   1C03           00789     skpc
0152   3???           00790     bra xor_row_done ; x>=XSIZE
                      00791 ; check for empty row
                      00792     over ; f n x y x 
0153   3F7F               M     moviw -1[SP]
                          M     push
0154   001C               M     movwi ++SP
                      00793     over ; f n x y x y
0155   3F7F               M     moviw -1[SP]
                          M     push
0156   001C               M     movwi ++SP
                      00794     lit XOR_OP ; f n x y x y op
0157   3001               M    movlw XOR_OP
0158   001C               M    movwi ++SP 
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-12-2016  11:57:40         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0159   2???           00795     call bitop ; -- f n x y f
                      00796     pick 4 ; pick flag
015A   3F7C               M     moviw -4[SP]
015B   0481           00797     iorwf T
                      00798     pop      ; -- f n x y
015C   0017               M     moviw SP--
                      00799     insert 3 ; store modified flag
015D   3FFD               M    movwi -3[SP]
015E                  00800 xor_row02:
                      00801     inc_n 1  ; x+=1
015E   3F7F               M     moviw -1[SP]
015F   0A89               M     incf WREG,F
0160   3FFF               M     movwi -1[SP]
0161   3???           00802     bra xor_row01
0162                  00803 xor_row_done: ; f n x y
                      00804     drop_n 3  ; only keep f
0162   317D               M     addfsr SP,-3
0163   0008           00805     return
                      00806 
                      00807 ; read flash memory word
                      00808 ; input:
                      00809 ;   lo is low byte of address
                      00810 ;   hi is high byte of address
                      00811 ;   ofs offset in table (limited to 255 )    
                      00812 ; output:
                      00813 ;   PMDATH: PMDAL
                      00814 ;reset <nibble> variable 
                      00815 ; >> modify BSR <<    
0164                  00816 get_flash_word: ; ( ofs lo hi -- )
0164   0023           00817     banksel PMADR
                      00818     pop
0165   0017               M     moviw SP--
0166   0092           00819     movwf PMADRH
                      00820     pop
0167   0017               M     moviw SP--
0168   0091           00821     movwf PMADRL
                      00822     pop
0169   0017               M     moviw SP--
016A   0791           00823     addwf PMADRL
016B   0103           00824     clrw 
016C   3D92           00825     addwfc PMADRH
016D                  00826 read_flash:    
016D   1315           00827     bcf PMCON1,CFGS
016E   1415           00828     bsf PMCON1, RD
016F   0000           00829     nop
0170   0000           00830     nop
0171   01??           00831     clrf nibble
0172   0008           00832     return
                      00833 
                      00834 ; increament pointer 
                      00835 ; and read next flash word    
                      00836 ; >> modify BSR <<    
0173                  00837 next_flash_word:
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-12-2016  11:57:40         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0173   0023           00838     banksel PMADR
0174   0A91           00839     incf PMADRL
0175   1903           00840     skpnz
0176   0A92           00841     incf PMADRH
0177   3???           00842     bra read_flash
                      00843     
                      00844 ;get nibble from PMDAT
                      00845 ; output:
                      00846 ;   stack nibble in bits 7:4
                      00847 ; increment nibble variable    
                      00848 ; >> modify BSR <<    
0178                  00849 get_nibble: ; ( -- nibble )
0178   3003           00850     movlw 3
0179   06??           00851     xorwf nibble,W
017A   1903           00852     skpnz ; if set all nibbles of this word read
017B   2???           00853     call next_flash_word
017C   0023           00854     banksel PMDAT
017D   08??           00855     movfw nibble
017E   1903           00856     skpnz
017F   3???           00857     bra row0
0180   0B89           00858     decfsz WREG
0181   3???           00859     bra row2
0182                  00860 row1:    
0182   0813           00861     movfw PMDATL
0183   3???           00862     bra nibble_mask
0184                  00863 row2:
0184   0E13           00864     swapf PMDATL,W
0185   3???           00865     bra nibble_mask
0186                  00866 row0:    
0186   0E14           00867     swapf PMDATH,W
0187                  00868 nibble_mask:
0187   39F0           00869     andlw 0xf0
                      00870     push
0188   001C               M     movwi ++SP
0189   0A??           00871     incf nibble,F ; advance nibble pointer
018A   0008           00872     return
                      00873 
                      00874 ; print 4 pixels row
                      00875 ; inputs:
                      00876 ;   x,y left coordinates
                      00877 ;   f  collision flag
                      00878 ; output:    
                      00879 ;   advance y coordinate for next row    
018B                  00880 print_row: ; ( x y f -- x y f )     
018B   2???           00881     call get_nibble ; -- x y f n 
                      00882     pick 3 
018C   3F7D               M     moviw -3[SP]
                      00883     push    ; x y f n x
018D   001C               M     movwi ++SP
                      00884     pick 3
018E   3F7D               M     moviw -3[SP]
                      00885     push      ; x y f n x y
018F   001C               M     movwi ++SP
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-12-2016  11:57:40         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0190   2???           00886     call xor_row ; -- x y f
                      00887     inc_n 1 ; y+=1
0191   3F7F               M     moviw -1[SP]
0192   0A89               M     incf WREG,F
0193   3FFF               M     movwi -1[SP]
0194   0008           00888     return
                      00889     
                      00890 ; draw character 
                      00891 ; input:
                      00892 ;   x,y left/top coordinates
                      00893 ;   c   character to print    
0195                  00894 print_char: ; ( x y c -- )
0195   3581           00895     lslf T ; 2 words per digit
                      00896     lit low(digits)
0196   30??               M    movlw low(digits)
0197   001C               M    movwi ++SP 
                      00897     lit high(digits) ; x y ofs adrL adrH
0198   30??               M    movlw high(digits)
0199   001C               M    movwi ++SP 
019A   2???           00898     call get_flash_word  ; x y
                      00899     lit 0   ; x y f=0
019B   3000               M    movlw 0
019C   001C               M    movwi ++SP 
019D   2???           00900     call print_row
019E   2???           00901     call print_row
019F   2???           00902     call print_row 
01A0   2???           00903     call print_row 
01A1   2???           00904     call print_row 
                      00905     drop_n 3  ; ( x y f -- )
01A2   317D               M     addfsr SP,-3
01A3   0008           00906     return
                      00907 
                      00908 ; print current tetriminos
                      00909 ; input:
                      00910 ;   arguments in game variables   
                      00911 ;   titrim: tetriminos id
                      00912 ;   angle: rotation angle    
                      00913 ;   tx,ty  left/top coordinates
                      00914 ; output:
                      00915 ;   collision flag,  0 if no collision    
                      00916 ; >> modify BSR <<    
01A4                  00917 print_tetrim: ; (  -- f )
01A4   0020           00918     banksel GAME_VAR
01A5   35??           00919     lslf tetrim,W
01A6   3589           00920     lslf WREG
                      00921     push
01A7   001C               M     movwi ++SP
01A8   3018           00922     movlw 24
01A9   0201           00923     subwf T,W
01AA   1803           00924     skpnc
01AB   3???           00925     bra ti ; I tetrominos
01AC   08??           00926     movfw angle
01AD   0781           00927     addwf T,F
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-12-2016  11:57:40         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01AE   30??           00928     movlw low(tetriminos)
                      00929     push    ; ofs addrL
01AF   001C               M     movwi ++SP
01B0   30??           00930     movlw high(tetriminos)
                      00931     push    ; ofs addrL addrH
01B1   001C               M     movwi ++SP
01B2   3???           00932     bra prt01
01B3                  00933 ti: ; special treatment for I tetriminos
01B3   0181           00934     clrf T
01B4   35??           00935     lslf angle,W
01B5   0781           00936     addwf T,F
01B6   30??           00937     movlw low(I0) 
                      00938     push     ; ofs addrL
01B7   001C               M     movwi ++SP
01B8   30??           00939     movlw high(I0)
                      00940     push     ; ofs addrL addrH
01B9   001C               M     movwi ++SP
01BA                  00941 prt01:    
01BA   2???           00942     call get_flash_word  ; --
01BB   002?           00943     banksel tx
01BC   08??           00944     movfw tx
                      00945     push    ; -- x
01BD   001C               M     movwi ++SP
01BE   08??           00946     movfw ty
                      00947     push    ; -- x y 
01BF   001C               M     movwi ++SP
                      00948     lit 0   ; -- x y f
01C0   3000               M    movlw 0
01C1   001C               M    movwi ++SP 
01C2   2???           00949     call print_row ; x y f -- x y+1 f
01C3   2???           00950     call print_row
01C4   2???           00951     call print_row
01C5   0023           00952     banksel PMDAT
01C6   3030           00953     movlw 0x30
01C7   0514           00954     andwf PMDATH,W
01C8   1903           00955     skpnz
01C9   2???           00956     call print_row
01CA   0801           00957     movfw T
                      00958     drop_n 3
01CB   317D               M     addfsr SP,-3
                      00959     push  ; -- f
01CC   001C               M     movwi ++SP
01CD   0008           00960     return
                      00961     
                      00962 ;print a text line store in flash
                      00963 ; text terminated by 0xff
                      00964 ; input: 
                      00965 ;  x, y left coordinates
                      00966 ;  idx  index of message    
01CE                  00967 print_label: ; ( x y idx -- )
                      00968     lit 0    ; x y idx i
01CE   3000               M    movlw 0
01CF   001C               M    movwi ++SP 
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-12-2016  11:57:40         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01D0                  00969 prt_lbl_loop:
                      00970     dup      ; x y idx i i
01D0   0801               M     movfw T
01D1   001C               M     movwi ++SP
                      00971     pick 2   ; WREG=idx
01D2   3F7E               M     moviw -2[SP]
01D3   2???           00972     call labels ; x y idx i i -- x y idx i  
01D4   1B89           00973     btfsc WREG,7
01D5   3???           00974     bra prt_lbl_done
                      00975     push ; x y idx i c
01D6   001C               M     movwi ++SP
                      00976     pick 4
01D7   3F7C               M     moviw -4[SP]
                      00977     push    ; x y idx i c x 
01D8   001C               M     movwi ++SP
                      00978     pick 4
01D9   3F7C               M     moviw -4[SP]
                      00979     push    ; x y idx i c x y
01DA   001C               M     movwi ++SP
                      00980     rot     ; x y idx i x y c
                          M     pick 2
01DB   3F7E               M     moviw -2[SP]
                          M     push        ; n1 n2 n3 n1
01DC   001C               M     movwi ++SP
                          M     pick 2
01DD   3F7E               M     moviw -2[SP]
                          M     insert 3   ;  n2 n2 n3 n1
01DE   3FFD               M    movwi -3[SP]
                          M     pick 1
01DF   3F7F               M     moviw -1[SP]
                          M     insert 2   ; n2 n3 n3 n1
01E0   3FFE               M    movwi -2[SP]
                          M     pop        ; n2 n3 n3 
01E1   0017               M     moviw SP--
01E2   0081               M     movwf T    ; n2 n3 n1
01E3   2???           00981     call print_char ; -- x y idx i 
01E4   0A81           00982     incf T
                      00983     pick 3    ; x
01E5   3F7D               M     moviw -3[SP]
01E6   3E04           00984     addlw 4   ; x+=4
                      00985     insert 3  
01E7   3FFD               M    movwi -3[SP]
01E8   3???           00986     bra prt_lbl_loop
01E9                  00987 prt_lbl_done:
                      00988     drop_n 4
01E9   317C               M     addfsr SP,-4
01EA   0008           00989     return
                      00990 
                      00991 ;print an integer
                      00992 ;from right to left ( least first)
                      00993 ; input:    
                      00994 ;   x,y  coordinate right end
                      00995 ;   number to print in acca    
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-12-2016  11:57:40         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00996 ;   accbL contain digit after div10 call    
01EB                  00997 print_int: ; ( x y -- )
01EB   08??           00998     movfw accaH
01EC   04??           00999     iorwf accaL,W
01ED   1903           01000     skpnz
01EE   3???           01001     bra print_last
                      01002     over
01EF   3F7F               M     moviw -1[SP]
                          M     push
01F0   001C               M     movwi ++SP
                      01003     over    ; x y x y
01F1   3F7F               M     moviw -1[SP]
                          M     push
01F2   001C               M     movwi ++SP
01F3   2???           01004     call div10
01F4   08??           01005     movfw accbL ; remainder of division
                      01006     push   ; x y x y d
01F5   001C               M     movwi ++SP
01F6   2???           01007     call print_char ; -- x y 
                      01008     pick 1
01F7   3F7F               M     moviw -1[SP]
                      01009     push
01F8   001C               M     movwi ++SP
01F9   3004           01010     movlw 4
01FA   0281           01011     subwf T
                      01012     pop
01FB   0017               M     moviw SP--
                      01013     insert 1
01FC   3FFF               M    movwi -1[SP]
01FD   3???           01014     bra print_int
01FE                  01015 print_last:
                      01016     pick 1
01FE   3F7F               M     moviw -1[SP]
01FF   3A2B           01017     xorlw 43
0200   1D03           01018     skpz
0201   3???           01019     bra no_zero
                      01020     push
0202   001C               M     movwi ++SP
0203   3???           01021     bra print_char
0204                  01022 no_zero:
                      01023     drop_n 2
0204   317E               M     addfsr SP,-2
0205   0008           01024     return
                      01025     
                      01026 ; draw horizontal line ( length  y x -- )
                      01027 ; inputs:
                      01028 ;   length of line
                      01029 ;   {x,y} left coordinates       
0206                  01030 hline:
                      01031     pick 2
0206   3F7E               M     moviw -2[SP]
0207   1903           01032     skpnz
0208   3???           01033     bra hline_done
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-12-2016  11:57:40         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0209   0389           01034     decf WREG
                      01035     insert 2
020A   3FFE               M    movwi -2[SP]
                      01036     dup     ; len y x x
020B   0801               M     movfw T
020C   001C               M     movwi ++SP
                      01037     pick 2
020D   3F7E               M     moviw -2[SP]
                      01038     push    ; len y x x y
020E   001C               M     movwi ++SP
                      01039     lit XOR_OP
020F   3001               M    movlw XOR_OP
0210   001C               M    movwi ++SP 
0211   2???           01040     call bitop
                      01041     drop
0212   317F               M    addfsr SP,-1
0213   0A81           01042     incf T  ; len y x+1
0214   3???           01043     bra hline
0215                  01044 hline_done:    
                      01045     drop_n 3
0215   317D               M     addfsr SP,-3
0216   0008           01046     return
                      01047 
                      01048 ;draw vertical line ( length x y -- )
                      01049 ; inputs:
                      01050 ;   length of line
                      01051 ;   {x,y} top coordinate
0217                  01052 vline:  ; len y x
                      01053     pick 2 
0217   3F7E               M     moviw -2[SP]
0218   1903           01054     skpnz
0219   3???           01055     bra vline_done
021A   0389           01056     decf WREG
                      01057     insert 2
021B   3FFE               M    movwi -2[SP]
                      01058     pick 1      
021C   3F7F               M     moviw -1[SP]
                      01059     push    ; len x y x
021D   001C               M     movwi ++SP
                      01060     pick 1
021E   3F7F               M     moviw -1[SP]
                      01061     push    ; len x y x y
021F   001C               M     movwi ++SP
                      01062     lit XOR_OP
0220   3001               M    movlw XOR_OP
0221   001C               M    movwi ++SP 
0222   2???           01063     call bitop
                      01064     drop
0223   317F               M    addfsr SP,-1
0224   0A81           01065     incf T
0225   3???           01066     bra vline
0226                  01067 vline_done:
                      01068     drop_n 3
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-12-2016  11:57:40         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0226   317D               M     addfsr SP,-3
0227   0008           01069     return
                      01070     
  0000000A            01071 WELL_WIDTH equ 10
  00000016            01072 WELL_DEPTH equ 22 
0228                  01073 game_init:
                      01074 ;clear screen    
                      01075     lit 0  
0228   3000               M    movlw 0
0229   001C               M    movwi ++SP 
022A   2???           01076     call fill_buffer
                      01077 ; draw game well    
                      01078     lit WELL_DEPTH
022B   3016               M    movlw WELL_DEPTH
022C   001C               M    movwi ++SP 
                      01079     lit 0
022D   3000               M    movlw 0
022E   001C               M    movwi ++SP 
                      01080     lit 0
022F   3000               M    movlw 0
0230   001C               M    movwi ++SP 
0231   2???           01081      call vline
                      01082     lit WELL_DEPTH
0232   3016               M    movlw WELL_DEPTH
0233   001C               M    movwi ++SP 
                      01083     lit WELL_WIDTH+1
0234   300B               M    movlw WELL_WIDTH+1
0235   001C               M    movwi ++SP 
                      01084     lit 0
0236   3000               M    movlw 0
0237   001C               M    movwi ++SP 
0238   2???           01085     call vline
                      01086     lit WELL_WIDTH+2
0239   300C               M    movlw WELL_WIDTH+2
023A   001C               M    movwi ++SP 
                      01087     lit WELL_DEPTH
023B   3016               M    movlw WELL_DEPTH
023C   001C               M    movwi ++SP 
                      01088     lit 0
023D   3000               M    movlw 0
023E   001C               M    movwi ++SP 
023F   2???           01089     call hline
                      01090 ; print "SCORE" label    
                      01091     lit WELL_WIDTH+3 ; x
0240   300D               M    movlw WELL_WIDTH+3
0241   001C               M    movwi ++SP 
                      01092     lit 0            ; y
0242   3000               M    movlw 0
0243   001C               M    movwi ++SP 
                      01093     lit LBL_SCORE         
0244   3000               M    movlw LBL_SCORE
0245   001C               M    movwi ++SP 
0246   2???           01094     call print_label
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-12-2016  11:57:40         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01095 ; print "LINES" label    
                      01096     lit WELL_WIDTH+3 ; x
0247   300D               M    movlw WELL_WIDTH+3
0248   001C               M    movwi ++SP 
                      01097     lit 12           ; y
0249   300C               M    movlw 12
024A   001C               M    movwi ++SP 
                      01098     lit LBL_LINES
024B   3001               M    movlw LBL_LINES
024C   001C               M    movwi ++SP 
024D   2???           01099     call print_label
                      01100 ; variables initialization
024E   0020           01101     banksel 0
024F   3004           01102     movlw 4
0250   00??           01103     movwf tx
0251   01??           01104     clrf ty
0252   01??           01105     clrf tetrim
0253   01??           01106     clrf angle
0254   01??           01107     clrf scoreL
0255   01??           01108     clrf scoreH
0256   01??           01109     clrf dropped
0257   01??           01110     clrf buttons
0258   1600           01111     bsf flags,F_GSTOP
0259   0008           01112     return
                      01113 
                      01114 ; slide well row down
                      01115 ; input:
                      01116 ;   b  bottom row to slide
                      01117 ;   t  target row
                      01118 ; output:
                      01119 ;   none
025A                  01120 slide_down: ; ( b t -- )
                      01121     reserve 1
025A   3141               M     addfsr SP, 1 
025B                  01122 row_loop: ; y{b:1}
025B   300A           01123     movlw 10
025C   0081           01124     movwf T ; -- b t x
025D                  01125 col_loop:  ; x{10:1}
                      01126     dup   ; -- b t x x
025D   0801               M     movfw T
025E   001C               M     movwi ++SP
                      01127     pick 3
025F   3F7D               M     moviw -3[SP]
                      01128     push  ; -- b t x x y
0260   001C               M     movwi ++SP
0261   2???           01129     call get_pixel
0262   1903           01130     skpnz
                      01131     lit CLR_OP
0263   3000               M    movlw CLR_OP
0264   001C               M    movwi ++SP 
0265   1D03           01132     skpz
                      01133     lit SET_OP
0266   3003               M    movlw SET_OP
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-12-2016  11:57:40         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0267   001C               M    movwi ++SP 
0268   2???           01134     call bitop ; b t x x y op -- b t x f
                      01135     drop   ; no need for f
0269   317F               M    addfsr SP,-1
026A   0B81           01136     decfsz T
026B   3???           01137     bra col_loop
                      01138     dec_n 1  ; dec t
026C   3F7F               M     moviw -1[SP]
026D   0389               M     decf WREG,F
026E   3FFF               M     movwi -1[SP]
                      01139     dec_n 2  ; dec b
026F   3F7E               M     moviw -2[SP]
0270   0389               M     decf WREG,F
0271   3FFE               M     movwi -2[SP]
0272   1D03           01140     skpz 
0273   3???           01141     bra row_loop
                      01142     drop_n 3
0274   317D               M     addfsr SP,-3
0275   0008           01143     return
                      01144     
                      01145     
  00000000            01146 ROW_EMPTY equ 0     
  0000000A            01147 ROW_FULL equ 10 ; 10 bits in row
                      01148 ; check the state of well row
                      01149 ; input:
                      01150 ;   s number of bits set initialized at 0 by caller    
                      01151 ;   r row number: 0 top, 22 bottom  
                      01152 ; output:    
                      01153 ;   s={0:10}  number of bits set
0276                  01154 query_row: ; ( s=0 r -- s=0:10 )
                      01155     lit 10 ; s r x   ; check x from  10 to 1
0276   300A               M    movlw 10
0277   001C               M    movwi ++SP 
0278                  01156 qr00:
                      01157     dup   ; s r x x
0278   0801               M     movfw T
0279   001C               M     movwi ++SP
                      01158     pick 2 
027A   3F7E               M     moviw -2[SP]
                      01159     push  ; s r x x y
027B   001C               M     movwi ++SP
027C   2???           01160     call get_pixel ; -- s r x n
027D   1903           01161     skpnz   ; Z modified by get_pixel
027E   3???           01162     bra qr01
                      01163     inc_n 3
027F   3F7D               M     moviw -3[SP]
0280   0A89               M     incf WREG,F
0281   3FFD               M     movwi -3[SP]
0282                  01164 qr01:    
                      01165     drop     ; -- s r x 
0282   317F               M    addfsr SP,-1
0283   0B81           01166     decfsz T
0284   3???           01167     bra qr00
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-12-2016  11:57:40         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01168     drop_n 2 ; -- s
0285   317E               M     addfsr SP,-2
0286   0008           01169     return
                      01170  
                      01171 ; collision test
                      01172 ; check if current tetriminos
                      01173 ; is in collision position
                      01174 ; input:
                      01175 ;   none
                      01176 ; output:
                      01177 ;   WREG, Z
0287                  01178 coll_test:
                      01179     
0287   0008           01180     return
                      01181     
                      01182     
                      01183 ; generate a new tetriminos
                      01184 ; input:
                      01185 ;   none
                      01186 ; output:
                      01187 ;   none
0288                  01188 new_tminos:
0288   0020           01189     banksel GAME_VAR
0289   3007           01190     movlw 7
028A   05??           01191     andwf randL,W
028B   3A07           01192     xorlw 7
028C   1D03           01193     skpz
028D   3A07           01194     xorlw 7
028E   00??           01195     movwf tetrim
028F   3003           01196     movlw 3
0290   05??           01197     andwf randH,W
0291   00??           01198     movwf angle
0292   3004           01199     movlw 4
0293   00??           01200     movwf tx
0294   01??           01201     clrf ty
0295   0008           01202     return
                      01203  
                      01204 ; wait player start signal
                      01205 ; button A pressed    
0296                  01206 wait_start:
0296   0103           01207     clrw
0297   2???           01208     call korobeiniki
                      01209     push
0298   001C               M     movwi ++SP
                      01210     lit 0
0299   3000               M    movlw 0
029A   001C               M    movwi ++SP 
029B                  01211 koro:
029B   0A81           01212     incf T
029C   0801           01213     movfw T
029D   2???           01214     call korobeiniki
                      01215     push
029E   001C               M     movwi ++SP
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-12-2016  11:57:40         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01216     inc_n 1
029F   3F7F               M     moviw -1[SP]
02A0   0A89               M     incf WREG,F
02A1   3FFF               M     movwi -1[SP]
                      01217     pick 1
02A2   3F7F               M     moviw -1[SP]
02A3   2???           01218     call korobeiniki
                      01219     push
02A4   001C               M     movwi ++SP
02A5   2???           01220     call tone
                      01221     wait_sound
02A6   1A80               M     btfsc flags,F_SND
02A7   3???               M     bra $-1
02A8   2???           01222     call read_pad
02A9   1A00           01223     btfsc buttons, BTN_A
02AA   3???           01224     bra wait_end
                      01225     dec_n 1
02AB   3F7F               M     moviw -1[SP]
02AC   0389               M     decf WREG,F
02AD   3FFF               M     movwi -1[SP]
02AE   1D03           01226     skpz
02AF   3???           01227     bra koro
                      01228     pause 60
                          M     start_timer 60
02B0   303C               M     movlw 60
02B1   00??               M     movwf gtimer
02B2   1580               M     bsf flags, F_GTMR
                          M     wait_timer
02B3   1980               M     btfsc flags, F_GTMR
02B4   3???               M     bra $-1
02B5   3???           01229     bra wait_start
02B6                  01230 wait_end:    
                      01231     drop_n 2
02B6   317E               M     addfsr SP,-2
02B7   0008           01232     return
                      01233     
                      01234 ;;;;;;;;;;;;;;;;;;;;;;;;;
                      01235 ;   game logic
                      01236 ;;;;;;;;;;;;;;;;;;;;;;;;;    
02B8                  01237 tetris:
                      01238 ; print score
02B8   002?           01239     banksel scoreL
02B9   08??           01240     movfw scoreL
02BA   00??           01241     movwf accaL
02BB   08??           01242     movfw scoreH
02BC   00??           01243     movwf accaH
                      01244     lit 43
02BD   302B               M    movlw 43
02BE   001C               M    movwi ++SP 
                      01245     lit 6
02BF   3006               M    movlw 6
02C0   001C               M    movwi ++SP 
02C1   2???           01246     call print_int
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-12-2016  11:57:40         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01247 ;print dropped line
02C2   002?           01248     banksel dropped
02C3   08??           01249     movfw dropped
02C4   00??           01250     movwf accaL
02C5   01??           01251     clrf accaH
                      01252     lit 43
02C6   302B               M    movlw 43
02C7   001C               M    movwi ++SP 
                      01253     lit 18
02C8   3012               M    movlw 18
02C9   001C               M    movwi ++SP 
02CA   2???           01254     call print_int
                      01255 ;print start prompt
                      01256     lit 0
02CB   3000               M    movlw 0
02CC   001C               M    movwi ++SP 
                      01257     lit 24
02CD   3018               M    movlw 24
02CE   001C               M    movwi ++SP 
                      01258     lit LBL_PRESS
02CF   3002               M    movlw LBL_PRESS
02D0   001C               M    movwi ++SP 
02D1   2???           01259     call print_label
                      01260 ; wait button A press
                      01261 ; to start game    
02D2   2???           01262     call wait_start 
02D3   1200           01263     bcf flags, F_GSTOP
                      01264 ; delete prompt
                      01265     lit 0
02D4   3000               M    movlw 0
02D5   001C               M    movwi ++SP 
                      01266     lit 24
02D6   3018               M    movlw 24
02D7   001C               M    movwi ++SP 
                      01267     lit LBL_PRESS
02D8   3002               M    movlw LBL_PRESS
02D9   001C               M    movwi ++SP 
02DA   2???           01268     call print_label
                      01269 ; game start
02DB                  01270 game_loop:
                      01271 ; generate new tetriminos
                      01272 ; if collision at this stage
                      01273 ; game is over
02DB   2???           01274     call new_tminos 
02DC                  01275 fall_loop: ; tetriminos fall in the well
02DC   2???           01276     call coll_test ; collision test
02DD   2???           01277     call print_tetrim
                      01278     pop
02DE   0017               M     moviw SP--
02DF   1D03           01279     skpz
02E0   3???           01280     bra game_over
                      01281     pause 10
                          M     start_timer 10
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-12-2016  11:57:40         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02E1   300A               M     movlw 10
02E2   00??               M     movwf gtimer
02E3   1580               M     bsf flags, F_GTMR
                          M     wait_timer
02E4   1980               M     btfsc flags, F_GTMR
02E5   3???               M     bra $-1
02E6   2???           01282     call print_tetrim
                      01283     pop
02E7   0017               M     moviw SP--
                      01284 ; read pad
02E8   2???           01285     call read_pad
02E9   0020           01286     banksel GAME_VAR
02EA   08??           01287     movfw buttons
                      01288     case 1<<BTN_A, hard_drop
02EB   3A10               M     xorlw 1<<BTN_A
02EC   1903               M     skpnz
02ED   3???               M     bra hard_drop
02EE   3A10               M     xorlw 1<<BTN_A
                      01289     case 1<<BTN_B, soft_drop
02EF   3A20               M     xorlw 1<<BTN_B
02F0   1903               M     skpnz
02F1   3???               M     bra soft_drop
02F2   3A20               M     xorlw 1<<BTN_B
                      01290     case 1<<BTN_UP, rot_right
02F3   3A01               M     xorlw 1<<BTN_UP
02F4   1903               M     skpnz
02F5   3???               M     bra rot_right
02F6   3A01               M     xorlw 1<<BTN_UP
                      01291     case 1<<BTN_DN, rot_left
02F7   3A02               M     xorlw 1<<BTN_DN
02F8   1903               M     skpnz
02F9   3???               M     bra rot_left
02FA   3A02               M     xorlw 1<<BTN_DN
                      01292     case 1<<BTN_RT, move_right
02FB   3A08               M     xorlw 1<<BTN_RT
02FC   1903               M     skpnz
02FD   3???               M     bra move_right
02FE   3A08               M     xorlw 1<<BTN_RT
                      01293     case 1<<BTN_LT, move_left
02FF   3A04               M     xorlw 1<<BTN_LT
0300   1903               M     skpnz
0301   3???               M     bra move_left
0302   3A04               M     xorlw 1<<BTN_LT
0303   3???           01294     bra new_position
0304                  01295 hard_drop:
0304   3???           01296     bra new_position
0305                  01297 soft_drop:
0305   3???           01298     bra new_position
0306                  01299 rot_left:
0306   03??           01300     decf angle,F
0307   3003           01301     movlw 3
0308   05??           01302     andwf angle,F
0309   3???           01303     bra new_position
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-12-2016  11:57:40         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

030A                  01304 rot_right:
030A   0A??           01305     incf angle,F
030B   3003           01306     movlw 3
030C   05??           01307     andwf angle,F
030D   3???           01308     bra new_position
030E                  01309 move_left:
030E   03??           01310     decf tx,F
030F   3???           01311     bra new_position
0310                  01312 move_right:
0310   300A           01313     movlw 10
0311   06??           01314     xorwf tx,W
0312   1D03           01315     skpz
0313   0A??           01316     incf tx,F
                      01317 ; apply move and rotation
0314                  01318 new_position:    
                      01319 ; check full row and clean
                      01320 ; adjust score 
0314   3???           01321     bra fall_loop
0315                  01322 game_over:
0315   2???           01323     call print_tetrim
                      01324     pop
0316   0017               M     moviw SP--
                      01325     
0317   0008           01326     return
                      01327     
0318                  01328 init:
                      01329     pstack_init
0318   0187               M     clrf FSR1H
0319   301F               M     movlw S0
031A   0086               M     movwf FSR1L
                      01330 ; ADC configuration
031B   0021           01331     banksel ADCON0
031C   300C           01332     movlw (PAD_CHS<<CHS0)
031D   009D           01333     movwf ADCON0
031E   3020           01334     movlw (2<<ADCS0)
031F   009E           01335     movwf ADCON1
0320   0024           01336     banksel WPUA
0321   120C           01337     bcf WPUA, PAD_PIN
                      01338 ;;;;;;;;;;;;;;;;;;;;;    
0322   0021           01339     banksel TRISA
0323   30F8           01340     movlw ~((1<<SYNC_OUT)|(1<<VIDEO_OUT)|(1<<LED_PIN))
0324   058C           01341     andwf TRISA,F
0325   0022           01342     banksel VIDEO_LAT
0326   108C           01343     bcf VIDEO_LAT,VIDEO_OUT
0327   100C           01344     bcf LATA,LED_PIN
                      01345 ; audio pwm initialization
0328   120C           01346     bcf LATA,AUDIO_PIN
0329   003B           01347     banksel PWM2PH
032A   01A1           01348     clrf PWM2PHL
032B   01A2           01349     clrf PWM2PHH
032C   01A7           01350     clrf PWM2OFL
032D   01A8           01351     clrf PWM2OFH
032E   172B           01352     bsf AUDIO_PWMCON,OE
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-12-2016  11:57:40         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

032F   0022           01353     banksel APFCON
0330   149D           01354     bsf APFCON,P2SEL
                      01355    
                      01356 ;configure EUSART in sychronsous mode
                      01357 ;to use as pixel serializer
0331   0023           01358     banksel SPBRG
0332   3002           01359     movlw 2
0333   009B           01360     movwf SPBRGL
0334   019C           01361     clrf SPBRGH
0335   019A           01362     clrf TXREG
0336   30B0           01363     movlw (1<<SYNC)|(1<<CSRC)|(1<<TXEN)
0337   009E           01364     movwf TXSTA
0338   179D           01365     bsf RCSTA, SPEN
0339   30CF           01366     movlw ~((1<<CREN)|(1<<SREN))
033A   059D           01367     andwf RCSTA
                      01368 ; configure pwm video sync for horizontal period
033B   003B           01369     banksel SYNC_PWMDCH
033C   01B1           01370     clrf SYNC_PWMPH
033D   01B2           01371     clrf SYNC_PWMPH+1
033E   01BF           01372     clrf SYNC_PWMLDCON
033F   30F5           01373     movlw HORZ_PERIOD&0XFF
0340   00B5           01374     movwf SYNC_PWMPRL
0341   3004           01375     movlw HORZ_PERIOD>>8
0342   00B6           01376     movwf SYNC_PWMPRH
0343   01BE           01377     clrf SYNC_PWMCLKCON
0344   30D0           01378     movlw (3<<OE)|(1<<POL)
0345   00BB           01379     movwf SYNC_PWMCON
0346   305E           01380     movlw HORZ_PULSE&0xff
0347   00B3           01381     movwf SYNC_PWMDCL
0348   3000           01382     movlw HORZ_PULSE>>8
0349   00B4           01383     movwf SYNC_PWMDCH
034A   17BF           01384     bsf SYNC_PWMLDCON,LDA
                      01385    ;enable video interrupt on period match
034B   103D           01386     bcf SYNC_PWMINTF,PRIF
034C   143C           01387     bsf SYNC_PWMINTE,PRIE
                      01388     ; enable peripheral interrupt
034D   0021           01389     banksel SYNC_PIE
034E   1713           01390     bsf SYNC_PIE,SYNC_IE
                      01391     ;enable interrupts
034F   30C0           01392     movlw (1<<GIE)|(1<<PEIE)
0350   008B           01393     movwf INTCON
0351   01??           01394     clrf lcountL
0352   01??           01395     clrf lcountH
0353   01??           01396     clrf flags
                      01397     ; seed lfsr PRNG
0354   30AC           01398     movlw 0xAC
0355   00??           01399     movwf randL
0356   30E1           01400     movlw 0xE1
0357   00??           01401     movwf randH
                      01402 
                      01403     
0358                  01404 main:
0358   2???           01405     call game_init
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-12-2016  11:57:40         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0359   2???           01406     call tetris
035A   3???           01407     bra main
                      01408   
                      01409 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      01410 ;   data tables
                      01411 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      01412 
                      01413 ; **************** encoding ************************************************
                      01414 ; enhanced PIC instructions are coded on 14 bits
                      01415 ; these 14 bits can be read as data using flash memory
                      01416 ; writing/reading mechanism, see datasheet chapter 10 for detail.
                      01417 ; the 'dw' assembler directive encode data in those 14 bits contrary to 'dt'
                      01418 ; directive which encode a single byte as a RETLW instruction.
                      01419 ; So we get a 50% compression by encoding 3 nibbles/flash word. 
                      01420 ; the encoding used in the following tables is as follow:    
                      01421 ; bits 13:12  number of nibbles where 0 means there is more than 3 nibbles
                      01422 ; in this data chunk so 1 or more other words follow this one.    
                      01423 ; other 12 bits are sliced in 4 bits nibbles.
                      01424 ;****************************************************************************
                      01425 
035B                  01426 digits: ; each digit is 5 rows
035B   0EAA 2AE0      01427     dw 0x0EAA,0x2AE0 ; 0
035D   04C4 24E0      01428     dw 0x04C4,0x24E0 ; 1
035F   0E2E 28E0      01429     dw 0x0E2E,0x28E0 ; 2
0361   0E2E 22E0      01430     dw 0x0E2E,0x22E0 ; 3
0363   0AAE 2220      01431     dw 0x0AAE,0x2220 ; 4
0365   0E8E 22E0      01432     dw 0x0E8E,0x22E0 ; 5
0367   088E 2AE0      01433     dw 0x088E,0x2AE0 ; 6
0369   0E22 2220      01434     dw 0x0E22,0x2220 ; 7
036B   0EAE 2AE0      01435     dw 0x0EAE,0x2AE0 ; 8
036D   0EAE 2220      01436     dw 0x0EAE,0x2220 ; 9
                      01437 ; letters needed for 'SCORE' and 'LINES" labels
036F   0EAE 2AA0      01438     dw 0x0EAE,0x2AA0 ; A  code 10
0371   0688 2860      01439     dw 0x0688,0x2860 ; C  code 11
0373   0E8E 28E0      01440     dw 0x0E8E,0x28E0 ; E  code 12
0375   0E44 24E0      01441     dw 0x0E44,0x24E0 ; I  code 13
0377   0888 28E0      01442     dw 0x0888,0x28E0 ; L  code 14
0379   08CA 2AA0      01443     dw 0x08CA,0x2AA0 ; N  code 15
037B   04AA 2A40      01444     dw 0x04AA,0x2A40 ; O  code 16
037D   0EAE 2880      01445     dw 0x0EAE,0x2880 ; P  code 17
037F   08EA 2880      01446     dw 0x08EA,0x2880 ; R  code 18
0381   0684 22C0      01447     dw 0x0684,0x22C0 ; S  code 19
0383   0040 2400      01448     dw 0x0040,0x2400 ; :  code 20
0385   2000 2000      01449     dw 0x2000,0x2000 ; space code 21
                      01450 
                      01451 ; comments notation: Rn clockwise rotation n*90 degr.    
                      01452 ; note that vertical I as 4 rows so it needs 2 words    
0387                  01453 tetriminos: 
0387   388C           01454     dw 0x388C ; L R0
0388   30E8           01455     dw 0x30E8 ; L R1
0389   3C44           01456     dw 0x3C44 ; L R2
038A   32E0           01457     dw 0x32E0 ; L R3
038B   344C           01458     dw 0x344C ; J R0
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-12-2016  11:57:40         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

038C   38E0           01459     dw 0x38E0 ; J R1
038D   3644           01460     dw 0x3644 ; J R2
038E   30E2           01461     dw 0x30E2 ; J R3
038F   3CC0           01462     dw 0x3CC0 ; O R0 
0390   3CC0           01463     dw 0x3CC0 ; O R2 
0391   3CC0           01464     dw 0x3CC0 ; O R2 
0392   3CC0           01465     dw 0x3CC0 ; O R3 
0393   36C0           01466     dw 0x36C0 ; S R0
0394   3462           01467     dw 0x3462 ; S R1
0395   36C0           01468     dw 0x36C0 ; S R2
0396   3462           01469     dw 0x3462 ; S R3
0397   3E40           01470     dw 0x3E40 ; T R0
0398   3262           01471     dw 0x3262 ; T R1
0399   304E           01472     dw 0x304E ; T R2
039A   38C8           01473     dw 0x38C8 ; T R3
039B   3C60           01474     dw 0x3C60 ; Z R0
039C   34C8           01475     dw 0x34C8 ; Z R1
039D   3C60           01476     dw 0x3C60 ; Z R3
039E   34C8           01477     dw 0x34C8 ; Z R4
                      01478 ; annoying! I tetriminos need a special treatment 
                      01479 ; because vertical I need 2 words for encoding.   
039F   0444 1400      01480 I0: dw 0x0444,0x1400 ; I R0  
03A1   300F 1000      01481     dw 0x300F,0x1000 ; I R1  second word is filling for alignment
03A3   0222 1200      01482     dw 0x0222,0x1200 ; I R2
03A5   10F0 1000      01483     dw 0x10F0,0x1000 ; I R3  
                      01484 
  00000000            01485 LBL_SCORE equ 0
  00000001            01486 LBL_LINES equ 1
  00000002            01487 LBL_PRESS equ 2
                      01488  
03A7                  01489 labels:
03A7   000B           01490     brw
03A8   3???           01491     bra txt_score
03A9   3???           01492     bra txt_lines
03AA   3???           01493     bra txt_press
                      01494     
03AB                  01495 txt_score: ; "SCORE"
                      01496     pop
03AB   0017               M     moviw SP--
03AC   000B           01497     brw
03AD   3413 340B 3410 01498     dt 19,11,16,18,12,20,255
       3412 340C 3414 
       34FF 
                      01499     
03B4                  01500 txt_lines: ; "LINES"
                      01501     pop
03B4   0017               M     moviw SP--
03B5   000B           01502     brw
03B6   340E 340D 340F 01503     dt 14,13,15,12,19,20,255
       340C 3413 3414 
       34FF 
                      01504 
03BD                  01505 txt_press: ; "PRESS A"
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-12-2016  11:57:40         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01506     pop
03BD   0017               M     moviw SP--
03BE   000B           01507     brw
03BF   3411 3412 340C 01508     dt 17,18,12,19,19,21,10,255
       3413 3413 3415 
       340A 34FF 
                      01509     
                      01510 
03C7                  01511 tone_pr:
03C7   000B           01512     brw
03C8   3402 34ED      01513     dt 0x02, 0xed   ; 330   (MI4)   0
03CA   34B5 34DF      01514     dt 0xb5, 0xdf   ; 349   (FA4)   1
03CC   3428 34D3      01515     dt 0x28, 0xd3   ; 370   (FA4#)  2
03CE   344C 34C7      01516     dt 0x4c, 0xc7   ; 392   (SOL4)  3
03D0   341E 34BC      01517     dt 0x1e, 0xbc   ; 415   (SOL4#) 4
03D2   348F 34B1      01518     dt 0x8f, 0xb1   ; 440   (LA4)   5
03D4   3498 34A7      01519     dt 0x98, 0xa7   ; 466   (LA4#)  6
03D6   3430 349E      01520     dt 0x30, 0x9e   ; 494   (SI4)   7
03D8   344F 3495      01521     dt 0x4f, 0x95   ; 523hz (DO5)   8
03DA   34ED 348C      01522     dt 0xed, 0x8c   ; 554   (DO5#)  9
03DC   3404 3485      01523     dt 0x04, 0x85   ; 587   (RÉ5)   10
03DE   348D 347D      01524     dt 0x8d, 0x7d   ; 622   (RÉ5#)  11
03E0   3481 3476      01525     dt 0x81, 0x76   ; 659   (MI5)   12
03E2   34DA 346F      01526     dt 0xda, 0x6f   ; 698   (FA5)   13
03E4   3493 3469      01527     dt 0x93, 0x69   ; 740   (FA5#)  14
03E6   34A6 3463      01528     dt 0xa6, 0x63   ; 784   (SOL5)  15
03E8   340F 345E      01529     dt 0x0f, 0x5e   ; 831   (SOL5#) 16
03EA   34C7 3458      01530     dt 0xc7, 0x58   ; 880   (LA5)   17
03EC   34CC 3453      01531     dt 0xcc, 0x53   ; 932   (LA5#)  18
03EE   3418 344F      01532     dt 0x18, 0x4f   ; 988   (SI5)   19
03F0   3482 3442      01533     dt 0x82, 0x42   ; 1046hz (do6)  20
03F2   3400 3400      01534     dt 0, 0         ; silence       21
                      01535     
03F4                  01536 korobeiniki: ;folklore russe
                      01537     ;nombre de notes
03F4   000B           01538     brw
03F5   3422           01539     dt 34
                      01540     ; duré, note
03F6   342D 3400      01541     dt 45, 0 
03F8   340F 3404      01542     dt 15, 4
03FA   341E 3407      01543     dt 30, 7
03FC   340F 3403      01544     dt 15, 3
03FE   340F 3400      01545     dt 15, 0
                      01546     
0400   342D 3405      01547     dt 45, 5
0402   340F 3409      01548     dt 15, 9
0404   341E 340C      01549     dt 30, 12
0406   340F 340A      01550     dt 15, 10
0408   340F 3408      01551     dt 15, 8
                      01552     
040A   342D 3407      01553     dt 45, 7
040C   340F 3408      01554     dt 15, 8
040E   341E 340A      01555     dt 30, 10
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-12-2016  11:57:40         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0410   341E 340C      01556     dt 30, 12
                      01557     
0412   341E 3408      01558     dt 30, 8
0414   341E 3405      01559     dt 30, 5
0416   343C 3405      01560     dt 60, 5
                      01561     
0418   342D 340D      01562     dt 45, 13
041A   340F 340F      01563     dt 15, 15
041C   341E 3411      01564     dt 30, 17
041E   340F 340F      01565     dt 15, 15
0420   340F 340D      01566     dt 15, 13
                      01567     
0422   342D 340C      01568     dt 45, 12
0424   340F 340D      01569     dt 15, 13
0426   341E 340C      01570     dt 30, 12
0428   340F 340A      01571     dt 15, 10
042A   340F 3408      01572     dt 15, 8
                      01573     
042C   342D 3407      01574     dt 45, 7
042E   340F 3408      01575     dt 15, 8
0430   341E 340A      01576     dt 30, 10
0432   341E 340C      01577     dt 30, 12
                      01578     
0434   341E 3408      01579     dt 30, 8
0436   341E 3405      01580     dt 30, 5
0438   343C 3405      01581     dt 60, 5
                      01582     
                      01583     
3FE7 1EFF             01584     end
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-12-2016  11:57:40         PAGE 38


SYMBOL TABLE
  LABEL                             VALUE 

ABDEN                             00000000
ABDOVF                            00000007
ADCON0                            0000009D
ADCON1                            0000009E
ADCON2                            0000009F
ADCS0                             00000004
ADCS1                             00000005
ADCS2                             00000006
ADC_PIN                           00000004
ADDEN                             00000003
ADFM                              00000007
ADFVR0                            00000000
ADFVR1                            00000001
ADGO                              00000001
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADPREF0                           00000000
ADPREF1                           00000001
ADRES                             0000009B
ADRESH                            0000009C
ADRESL                            0000009B
ANSA0                             00000000
ANSA1                             00000001
ANSA2                             00000002
ANSA4                             00000004
ANSELA                            0000018C
APFCON                            0000011D
APFCON0                           0000011D
AUDIO_PIN                         00000004
AUDIO_PWMCLKCON                   00000DAE
AUDIO_PWMCON                      00000DAB
AUDIO_PWMDCH                      00000DA4
AUDIO_PWMDCL                      00000DA3
AUDIO_PWMLDCON                    00000DAF
AUDIO_PWMPRH                      00000DA6
AUDIO_PWMPRL                      00000DA5
AUDIO_PWMTMR                      00000DA9
A_THR                             00000040
BAUDCON                           0000019F
BORCON                            00000116
BORFS                             00000006
BORRDY                            00000000
BPL                               00000006
BRG16                             00000003
BRGH                              00000002
BSR                               00000008
BSR0                              00000000
BSR1                              00000001
BSR2                              00000002
BSR3                              00000003
BSR4                              00000004
BSR_SHAD                          00000FE6
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-12-2016  11:57:40         PAGE 39


SYMBOL TABLE
  LABEL                             VALUE 

BTN_A                             00000004
BTN_B                             00000005
BTN_DN                            00000001
BTN_LT                            00000002
BTN_RT                            00000003
BTN_UP                            00000000
BUFFER_SIZE                       000000C0
B_THR                             00000095
C                                 00000000
C1HYS                             00000001
C1IE                              00000005
C1IF                              00000005
C1INTN                            00000006
C1INTP                            00000007
C1NCH0                            00000000
C1NCH1                            00000001
C1NCH2                            00000002
C1OE                              00000005
C1ON                              00000007
C1OUT                             00000006
C1PCH0                            00000004
C1PCH1                            00000005
C1POL                             00000004
C1SP                              00000002
C1SYNC                            00000000
CDAFVR0                           00000002
CDAFVR1                           00000003
CFGS                              00000006
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CHS4                              00000006
CLR_OP                            00000000
CM1CON0                           00000111
CM1CON1                           00000112
CMOUT                             00000115
CREN                              00000004
CS0                               00000000
CS1                               00000001
CSRC                              00000007
CWG1CON0                          00000693
CWG1CON1                          00000694
CWG1CON2                          00000695
CWG1DBF                           00000692
CWG1DBF0                          00000000
CWG1DBF1                          00000001
CWG1DBF2                          00000002
CWG1DBF3                          00000003
CWG1DBF4                          00000004
CWG1DBF5                          00000005
CWG1DBR                           00000691
CWG1DBR0                          00000000
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-12-2016  11:57:40         PAGE 40


SYMBOL TABLE
  LABEL                             VALUE 

CWG1DBR1                          00000001
CWG1DBR2                          00000002
CWG1DBR3                          00000003
CWG1DBR4                          00000004
CWG1DBR5                          00000005
CWGASEL                           00000006
CWGBSEL                           00000005
C_SHAD                            00000000
DACCON0                           00000118
DACCON1                           00000119
DACEN                             00000007
DACLPS                            00000006
DACOE                             00000005
DACPSS0                           00000002
DACPSS1                           00000003
DACR0                             00000000
DACR1                             00000001
DACR2                             00000002
DACR3                             00000003
DACR4                             00000004
DC                                00000001
DCIE                              00000001
DCIF                              00000001
DC_SHAD                           00000001
DN_THR                            000000D8
EN                                00000007
F                                 00000001
FCY                               004C4B40
FERR                              00000002
FIRST_VIDEO                       00000046
FOSC                              01312D00
FREE                              00000004
FSR0                              00000004
FSR0H                             00000005
FSR0H_SHAD                        00000FE9
FSR0L                             00000004
FSR0L_SHAD                        00000FE8
FSR0_SHAD                         00000FE8
FSR1                              00000006
FSR1H                             00000007
FSR1H_SHAD                        00000FEB
FSR1L                             00000006
FSR1L_SHAD                        00000FEA
FSR1_SHAD                         00000FEA
FVRCON                            00000117
FVREN                             00000007
FVRRDY                            00000006
F_EVEN                            00000001
F_GSTOP                           00000004
F_GTMR                            00000003
F_MUTEX                           00000002
F_SND                             00000005
F_VSYNC                           00000000
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-12-2016  11:57:40         PAGE 41


SYMBOL TABLE
  LABEL                             VALUE 

G1ARSEN                           00000006
G1ASDLA0                          00000004
G1ASDLA1                          00000005
G1ASDLB0                          00000006
G1ASDLB1                          00000007
G1ASDSC1                          00000002
G1ASDSFLT                         00000001
G1ASE                             00000007
G1CS0                             00000000
G1EN                              00000007
G1IS0                             00000000
G1IS1                             00000001
G1IS2                             00000002
G1OEA                             00000005
G1OEB                             00000006
G1POLA                            00000003
G1POLB                            00000004
GAME_VAR                          00000000
GIE                               00000007
GO                                00000001
GO_NOT_DONE                       00000001
HFIOFL                            00000003
HFIOFR                            00000004
HFIOFS                            00000000
HORZ_DLY                          00000032
HORZ_PERIOD                       000004F5
HORZ_PULSE                        0000005E
I0                                0000039F
INDF0                             00000000
INDF1                             00000001
INLVLA                            0000038C
INLVLA0                           00000000
INLVLA1                           00000001
INLVLA2                           00000002
INLVLA3                           00000003
INLVLA4                           00000004
INLVLA5                           00000005
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IOCAF                             00000393
IOCAF0                            00000000
IOCAF1                            00000001
IOCAF2                            00000002
IOCAF3                            00000003
IOCAF4                            00000004
IOCAF5                            00000005
IOCAN                             00000392
IOCAN0                            00000000
IOCAN1                            00000001
IOCAN2                            00000002
IOCAN3                            00000003
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-12-2016  11:57:40         PAGE 42


SYMBOL TABLE
  LABEL                             VALUE 

IOCAN4                            00000004
IOCAN5                            00000005
IOCAP                             00000391
IOCAP0                            00000000
IOCAP1                            00000001
IOCAP2                            00000002
IOCAP3                            00000003
IOCAP4                            00000004
IOCAP5                            00000005
IOCIE                             00000003
IOCIF                             00000000
IRCF0                             00000003
IRCF1                             00000004
IRCF2                             00000005
IRCF3                             00000006
LAST_LINE                         00000106
LAST_VIDEO                        000000C5
LATA                              0000010C
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA4                             00000004
LATA5                             00000005
LBL_LINES                         00000001
LBL_PRESS                         00000002
LBL_SCORE                         00000000
LDA                               00000007
LDS0                              00000000
LDS1                              00000001
LDT                               00000006
LED_PIN                           00000000
LFIOFR                            00000001
LFSR_TAPS                         000000B4
LT_THR                            000000D1
LWLO                              00000005
MC1OUT                            00000000
MFIOFR                            00000002
MODE0                             00000002
MODE1                             00000003
MPWM1EN                           00000000
MPWM1LD                           00000000
MPWM1OUT                          00000000
MPWM2EN                           00000001
MPWM2LD                           00000001
MPWM2OUT                          00000001
MPWM3EN                           00000002
MPWM3LD                           00000002
MPWM3OUT                          00000002
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RI                            00000002
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-12-2016  11:57:40         PAGE 43


SYMBOL TABLE
  LABEL                             VALUE 

NOT_RMCLR                         00000003
NOT_RWDT                          00000004
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_WPUEN                         00000007
ODA0                              00000000
ODA1                              00000001
ODA2                              00000002
ODA4                              00000004
ODA5                              00000005
ODCONA                            0000028C
OE                                00000006
OERR                              00000001
OFIE                              00000003
OFIF                              00000003
OFM0                              00000005
OFM1                              00000006
OFO                               00000004
OFS0                              00000000
OFS1                              00000001
OPTION_REG                        00000095
OSCCON                            00000099
OSCSTAT                           0000009A
OSCTUNE                           00000098
OSTS                              00000005
OUT                               00000005
P1SEL                             00000000
P2SEL                             00000001
PAD_CHS                           00000003
PAD_PIN                           00000004
PCL                               00000002
PCLATH                            0000000A
PCLATH_SHAD                       00000FE7
PCON                              00000096
PEIE                              00000006
PHIE                              00000002
PHIF                              00000002
PIE1                              00000091
PIE2                              00000092
PIE3                              00000093
PIR1                              00000011
PIR2                              00000012
PIR3                              00000013
PIXEL_TXREG                       0000019A
PLLR                              00000006
PMADR                             00000191
PMADRH                            00000192
PMADRL                            00000191
PMCON1                            00000195
PMCON2                            00000196
PMDAT                             00000193
PMDATH                            00000194
PMDATL                            00000193
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-12-2016  11:57:40         PAGE 44


SYMBOL TABLE
  LABEL                             VALUE 

POL                               00000004
PORTA                             0000000C
PR2                               0000001B
PRIE                              00000000
PRIF                              00000000
PS0_OPTION_REG                    00000000
PS0_PWM1CLKCON                    00000004
PS0_PWM2CLKCON                    00000004
PS0_PWM3CLKCON                    00000004
PS1_OPTION_REG                    00000001
PS1_PWM1CLKCON                    00000005
PS1_PWM2CLKCON                    00000005
PS1_PWM3CLKCON                    00000005
PS2_OPTION_REG                    00000002
PS2_PWM1CLKCON                    00000006
PS2_PWM2CLKCON                    00000006
PS2_PWM3CLKCON                    00000006
PSA                               00000003
PWM1CLKCON                        00000D9E
PWM1CON                           00000D9B
PWM1CS0                           00000000
PWM1CS1                           00000001
PWM1DC                            00000D93
PWM1DCH                           00000D94
PWM1DCH0                          00000000
PWM1DCH1                          00000001
PWM1DCH2                          00000002
PWM1DCH3                          00000003
PWM1DCH4                          00000004
PWM1DCH5                          00000005
PWM1DCH6                          00000006
PWM1DCH7                          00000007
PWM1DCIE                          00000001
PWM1DCIF                          00000001
PWM1DCL                           00000D93
PWM1DCL0                          00000000
PWM1DCL1                          00000001
PWM1DCL2                          00000002
PWM1DCL3                          00000003
PWM1DCL4                          00000004
PWM1DCL5                          00000005
PWM1DCL6                          00000006
PWM1DCL7                          00000007
PWM1EN                            00000007
PWM1EN_A                          00000000
PWM1IE                            00000004
PWM1IF                            00000004
PWM1INTCON                        00000D9C
PWM1INTE                          00000D9C
PWM1INTF                          00000D9D
PWM1INTFLG                        00000D9D
PWM1LD                            00000007
PWM1LDA_A                         00000000
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-12-2016  11:57:40         PAGE 45


SYMBOL TABLE
  LABEL                             VALUE 

PWM1LDCON                         00000D9F
PWM1LDM                           00000006
PWM1LDS0                          00000000
PWM1LDS1                          00000001
PWM1MODE0                         00000002
PWM1MODE1                         00000003
PWM1OE                            00000006
PWM1OF                            00000D97
PWM1OFCON                         00000DA0
PWM1OFH                           00000D98
PWM1OFH0                          00000000
PWM1OFH1                          00000001
PWM1OFH2                          00000002
PWM1OFH3                          00000003
PWM1OFH4                          00000004
PWM1OFH5                          00000005
PWM1OFH6                          00000006
PWM1OFH7                          00000007
PWM1OFIE                          00000003
PWM1OFIF                          00000003
PWM1OFL                           00000D97
PWM1OFL0                          00000000
PWM1OFL1                          00000001
PWM1OFL2                          00000002
PWM1OFL3                          00000003
PWM1OFL4                          00000004
PWM1OFL5                          00000005
PWM1OFL6                          00000006
PWM1OFL7                          00000007
PWM1OFM0                          00000005
PWM1OFM1                          00000006
PWM1OFMC                          00000004
PWM1OFS0                          00000000
PWM1OFS1                          00000001
PWM1OUT                           00000005
PWM1OUT_A                         00000000
PWM1PH                            00000D91
PWM1PHH                           00000D92
PWM1PHH0                          00000000
PWM1PHH1                          00000001
PWM1PHH2                          00000002
PWM1PHH3                          00000003
PWM1PHH4                          00000004
PWM1PHH5                          00000005
PWM1PHH6                          00000006
PWM1PHH7                          00000007
PWM1PHIE                          00000002
PWM1PHIF                          00000002
PWM1PHL                           00000D91
PWM1PHL0                          00000000
PWM1PHL1                          00000001
PWM1PHL2                          00000002
PWM1PHL3                          00000003
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-12-2016  11:57:40         PAGE 46


SYMBOL TABLE
  LABEL                             VALUE 

PWM1PHL4                          00000004
PWM1PHL5                          00000005
PWM1PHL6                          00000006
PWM1PHL7                          00000007
PWM1POL                           00000004
PWM1PR                            00000D95
PWM1PRH                           00000D96
PWM1PRH0                          00000000
PWM1PRH1                          00000001
PWM1PRH2                          00000002
PWM1PRH3                          00000003
PWM1PRH4                          00000004
PWM1PRH5                          00000005
PWM1PRH6                          00000006
PWM1PRH7                          00000007
PWM1PRIE                          00000000
PWM1PRIF                          00000000
PWM1PRL                           00000D95
PWM1PRL0                          00000000
PWM1PRL1                          00000001
PWM1PRL2                          00000002
PWM1PRL3                          00000003
PWM1PRL4                          00000004
PWM1PRL5                          00000005
PWM1PRL6                          00000006
PWM1PRL7                          00000007
PWM1PS0                           00000004
PWM1PS1                           00000005
PWM1PS2                           00000006
PWM1TMR                           00000D99
PWM1TMRH                          00000D9A
PWM1TMRH0                         00000000
PWM1TMRH1                         00000001
PWM1TMRH2                         00000002
PWM1TMRH3                         00000003
PWM1TMRH4                         00000004
PWM1TMRH5                         00000005
PWM1TMRH6                         00000006
PWM1TMRH7                         00000007
PWM1TMRL                          00000D99
PWM1TMRL0                         00000000
PWM1TMRL1                         00000001
PWM1TMRL2                         00000002
PWM1TMRL3                         00000003
PWM1TMRL4                         00000004
PWM1TMRL5                         00000005
PWM1TMRL6                         00000006
PWM1TMRL7                         00000007
PWM2CLKCON                        00000DAE
PWM2CON                           00000DAB
PWM2CS0                           00000000
PWM2CS1                           00000001
PWM2DC                            00000DA3
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-12-2016  11:57:40         PAGE 47


SYMBOL TABLE
  LABEL                             VALUE 

PWM2DCH                           00000DA4
PWM2DCH0                          00000000
PWM2DCH1                          00000001
PWM2DCH2                          00000002
PWM2DCH3                          00000003
PWM2DCH4                          00000004
PWM2DCH5                          00000005
PWM2DCH6                          00000006
PWM2DCH7                          00000007
PWM2DCIE                          00000001
PWM2DCIF                          00000001
PWM2DCL                           00000DA3
PWM2DCL0                          00000000
PWM2DCL1                          00000001
PWM2DCL2                          00000002
PWM2DCL3                          00000003
PWM2DCL4                          00000004
PWM2DCL5                          00000005
PWM2DCL6                          00000006
PWM2DCL7                          00000007
PWM2EN                            00000007
PWM2EN_A                          00000001
PWM2IE                            00000005
PWM2IF                            00000005
PWM2INTCON                        00000DAC
PWM2INTE                          00000DAC
PWM2INTF                          00000DAD
PWM2INTFLG                        00000DAD
PWM2LD                            00000007
PWM2LDA_A                         00000001
PWM2LDCON                         00000DAF
PWM2LDM                           00000006
PWM2LDS0                          00000000
PWM2LDS1                          00000001
PWM2MODE0                         00000002
PWM2MODE1                         00000003
PWM2OE                            00000006
PWM2OF                            00000DA7
PWM2OFCON                         00000DB0
PWM2OFH                           00000DA8
PWM2OFH0                          00000000
PWM2OFH1                          00000001
PWM2OFH2                          00000002
PWM2OFH3                          00000003
PWM2OFH4                          00000004
PWM2OFH5                          00000005
PWM2OFH6                          00000006
PWM2OFH7                          00000007
PWM2OFIE                          00000003
PWM2OFIF                          00000003
PWM2OFL                           00000DA7
PWM2OFL0                          00000000
PWM2OFL1                          00000001
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-12-2016  11:57:40         PAGE 48


SYMBOL TABLE
  LABEL                             VALUE 

PWM2OFL2                          00000002
PWM2OFL3                          00000003
PWM2OFL4                          00000004
PWM2OFL5                          00000005
PWM2OFL6                          00000006
PWM2OFL7                          00000007
PWM2OFM0                          00000005
PWM2OFM1                          00000006
PWM2OFMC                          00000004
PWM2OFS0                          00000000
PWM2OFS1                          00000001
PWM2OUT                           00000005
PWM2OUT_A                         00000001
PWM2PH                            00000DA1
PWM2PHH                           00000DA2
PWM2PHH0                          00000000
PWM2PHH1                          00000001
PWM2PHH2                          00000002
PWM2PHH3                          00000003
PWM2PHH4                          00000004
PWM2PHH5                          00000005
PWM2PHH6                          00000006
PWM2PHH7                          00000007
PWM2PHIE                          00000002
PWM2PHIF                          00000002
PWM2PHL                           00000DA1
PWM2PHL0                          00000000
PWM2PHL1                          00000001
PWM2PHL2                          00000002
PWM2PHL3                          00000003
PWM2PHL4                          00000004
PWM2PHL5                          00000005
PWM2PHL6                          00000006
PWM2PHL7                          00000007
PWM2POL                           00000004
PWM2PR                            00000DA5
PWM2PRH                           00000DA6
PWM2PRH0                          00000000
PWM2PRH1                          00000001
PWM2PRH2                          00000002
PWM2PRH3                          00000003
PWM2PRH4                          00000004
PWM2PRH5                          00000005
PWM2PRH6                          00000006
PWM2PRH7                          00000007
PWM2PRIE                          00000000
PWM2PRIF                          00000000
PWM2PRL                           00000DA5
PWM2PRL0                          00000000
PWM2PRL1                          00000001
PWM2PRL2                          00000002
PWM2PRL3                          00000003
PWM2PRL4                          00000004
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-12-2016  11:57:40         PAGE 49


SYMBOL TABLE
  LABEL                             VALUE 

PWM2PRL5                          00000005
PWM2PRL6                          00000006
PWM2PRL7                          00000007
PWM2PS0                           00000004
PWM2PS1                           00000005
PWM2PS2                           00000006
PWM2TMR                           00000DA9
PWM2TMRH                          00000DAA
PWM2TMRH0                         00000000
PWM2TMRH1                         00000001
PWM2TMRH2                         00000002
PWM2TMRH3                         00000003
PWM2TMRH4                         00000004
PWM2TMRH5                         00000005
PWM2TMRH6                         00000006
PWM2TMRH7                         00000007
PWM2TMRL                          00000DA9
PWM2TMRL0                         00000000
PWM2TMRL1                         00000001
PWM2TMRL2                         00000002
PWM2TMRL3                         00000003
PWM2TMRL4                         00000004
PWM2TMRL5                         00000005
PWM2TMRL6                         00000006
PWM2TMRL7                         00000007
PWM3CLKCON                        00000DBE
PWM3CON                           00000DBB
PWM3CS0                           00000000
PWM3CS1                           00000001
PWM3DC                            00000DB3
PWM3DCH                           00000DB4
PWM3DCH0                          00000000
PWM3DCH1                          00000001
PWM3DCH2                          00000002
PWM3DCH3                          00000003
PWM3DCH4                          00000004
PWM3DCH5                          00000005
PWM3DCH6                          00000006
PWM3DCH7                          00000007
PWM3DCIE                          00000001
PWM3DCIF                          00000001
PWM3DCL                           00000DB3
PWM3DCL0                          00000000
PWM3DCL1                          00000001
PWM3DCL2                          00000002
PWM3DCL3                          00000003
PWM3DCL4                          00000004
PWM3DCL5                          00000005
PWM3DCL6                          00000006
PWM3DCL7                          00000007
PWM3EN                            00000007
PWM3EN_A                          00000002
PWM3IE                            00000006
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-12-2016  11:57:40         PAGE 50


SYMBOL TABLE
  LABEL                             VALUE 

PWM3IF                            00000006
PWM3INTCON                        00000DBC
PWM3INTE                          00000DBC
PWM3INTF                          00000DBD
PWM3INTFLG                        00000DBD
PWM3LD                            00000007
PWM3LDA_A                         00000002
PWM3LDCON                         00000DBF
PWM3LDM                           00000006
PWM3LDS0                          00000000
PWM3LDS1                          00000001
PWM3MODE0                         00000002
PWM3MODE1                         00000003
PWM3OE                            00000006
PWM3OF                            00000DB7
PWM3OFCON                         00000DC0
PWM3OFH                           00000DB8
PWM3OFH0                          00000000
PWM3OFH1                          00000001
PWM3OFH2                          00000002
PWM3OFH3                          00000003
PWM3OFH4                          00000004
PWM3OFH5                          00000005
PWM3OFH6                          00000006
PWM3OFH7                          00000007
PWM3OFIE                          00000003
PWM3OFIF                          00000003
PWM3OFL                           00000DB7
PWM3OFL0                          00000000
PWM3OFL1                          00000001
PWM3OFL2                          00000002
PWM3OFL3                          00000003
PWM3OFL4                          00000004
PWM3OFL5                          00000005
PWM3OFL6                          00000006
PWM3OFL7                          00000007
PWM3OFM0                          00000005
PWM3OFM1                          00000006
PWM3OFMC                          00000004
PWM3OFS0                          00000000
PWM3OFS1                          00000001
PWM3OUT                           00000005
PWM3OUT_A                         00000002
PWM3PH                            00000DB1
PWM3PHH                           00000DB2
PWM3PHH0                          00000000
PWM3PHH1                          00000001
PWM3PHH2                          00000002
PWM3PHH3                          00000003
PWM3PHH4                          00000004
PWM3PHH5                          00000005
PWM3PHH6                          00000006
PWM3PHH7                          00000007
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-12-2016  11:57:40         PAGE 51


SYMBOL TABLE
  LABEL                             VALUE 

PWM3PHIE                          00000002
PWM3PHIF                          00000002
PWM3PHL                           00000DB1
PWM3PHL0                          00000000
PWM3PHL1                          00000001
PWM3PHL2                          00000002
PWM3PHL3                          00000003
PWM3PHL4                          00000004
PWM3PHL5                          00000005
PWM3PHL6                          00000006
PWM3PHL7                          00000007
PWM3POL                           00000004
PWM3PR                            00000DB5
PWM3PRH                           00000DB6
PWM3PRH0                          00000000
PWM3PRH1                          00000001
PWM3PRH2                          00000002
PWM3PRH3                          00000003
PWM3PRH4                          00000004
PWM3PRH5                          00000005
PWM3PRH6                          00000006
PWM3PRH7                          00000007
PWM3PRIE                          00000000
PWM3PRIF                          00000000
PWM3PRL                           00000DB5
PWM3PRL0                          00000000
PWM3PRL1                          00000001
PWM3PRL2                          00000002
PWM3PRL3                          00000003
PWM3PRL4                          00000004
PWM3PRL5                          00000005
PWM3PRL6                          00000006
PWM3PRL7                          00000007
PWM3PS0                           00000004
PWM3PS1                           00000005
PWM3PS2                           00000006
PWM3TMR                           00000DB9
PWM3TMRH                          00000DBA
PWM3TMRH0                         00000000
PWM3TMRH1                         00000001
PWM3TMRH2                         00000002
PWM3TMRH3                         00000003
PWM3TMRH4                         00000004
PWM3TMRH5                         00000005
PWM3TMRH6                         00000006
PWM3TMRH7                         00000007
PWM3TMRL                          00000DB9
PWM3TMRL0                         00000000
PWM3TMRL1                         00000001
PWM3TMRL2                         00000002
PWM3TMRL3                         00000003
PWM3TMRL4                         00000004
PWM3TMRL5                         00000005
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-12-2016  11:57:40         PAGE 52


SYMBOL TABLE
  LABEL                             VALUE 

PWM3TMRL6                         00000006
PWM3TMRL7                         00000007
PWMEN                             00000D8E
PWMLD                             00000D8F
PWMOUT                            00000D90
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCREG                             00000199
RCSTA                             0000019D
RD                                00000000
ROW_EMPTY                         00000000
ROW_FULL                          0000000A
RT_THR                            000000B5
RX9                               00000006
RX9D                              00000000
RXDTSEL                           00000007
S0                                0000001F
SBOREN                            00000007
SCKP                              00000004
SCS0                              00000000
SCS1                              00000001
SENDB                             00000003
SET_OP                            00000003
SLRA0                             00000000
SLRA1                             00000001
SLRA2                             00000002
SLRA4                             00000004
SLRA5                             00000005
SLRCONA                           0000030C
SP                                FSR1
SPBRG                             0000019B
SPBRGH                            0000019C
SPBRGL                            0000019B
SPEN                              00000007
SPLLEN                            00000007
SREN                              00000005
STACK_SIZE                        00000020
STATUS                            00000003
STATUS_SHAD                       00000FE4
STKOVF                            00000007
STKPTR                            00000FED
STKUNF                            00000006
SWDTEN                            00000000
SYNC                              00000004
SYNC_IE                           00000006
SYNC_IF                           00000006
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-12-2016  11:57:40         PAGE 53


SYMBOL TABLE
  LABEL                             VALUE 

SYNC_OUT                          00000002
SYNC_PIE                          00000093
SYNC_PIR                          00000013
SYNC_PWMCLKCON                    00000DBE
SYNC_PWMCON                       00000DBB
SYNC_PWMDCH                       00000DB4
SYNC_PWMDCL                       00000DB3
SYNC_PWMINTE                      00000DBC
SYNC_PWMINTF                      00000DBD
SYNC_PWMLDCON                     00000DBF
SYNC_PWMOF                        00000DB7
SYNC_PWMOFCON                     00000DC0
SYNC_PWMPH                        00000DB1
SYNC_PWMPRH                       00000DB6
SYNC_PWMPRL                       00000DB5
SYNC_PWMTMR                       00000DB9
T                                 INDF1
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000018
T1GCON                            00000019
T1GGO                             00000003
T1GGO_NOT_DONE                    00000003
T1GPOL                            00000006
T1GSEL                            00000003
T1GSPM                            00000004
T1GSS0                            00000000
T1GSS1                            00000001
T1GTM                             00000005
T1GVAL                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             0000001C
T2OUTPS0                          00000003
T2OUTPS1                          00000004
T2OUTPS2                          00000005
T2OUTPS3                          00000006
TC                                00000032
TCY                               000000C8
TEST_OP                           00000002
TMR0                              00000015
TMR0CS                            00000005
TMR0IE                            00000005
TMR0IF                            00000002
TMR0SE                            00000004
TMR1                              00000016
TMR1CS0                           00000006
TMR1CS1                           00000007
TMR1GE                            00000007
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-12-2016  11:57:40         PAGE 54


SYMBOL TABLE
  LABEL                             VALUE 

TMR1GIE                           00000007
TMR1GIF                           00000007
TMR1H                             00000017
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             00000016
TMR1ON                            00000000
TMR2                              0000001A
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOS                               00000FEE
TOSH                              00000FEF
TOSL                              00000FEE
TRIGSEL0                          00000004
TRIGSEL1                          00000005
TRIGSEL2                          00000006
TRIGSEL3                          00000007
TRISA                             0000008C
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRMT                              00000001
TSEN                              00000005
TSRNG                             00000004
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TUN5                              00000005
TX9                               00000006
TX9D                              00000000
TXCKSEL                           00000002
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             0000019A
TXSTA                             0000019E
TX_PIR                            00000011
UP_THR                            000000C6
VDD                               00000400
VERT_DLY                          00000032
VIDEO_BUFFER                      00002030
VIDEO_LAT                         0000010C
VIDEO_OUT                         00000001
VREGCON                           00000197
VREGPM                            00000001
W                                 00000000
WDTCON                            00000097
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-12-2016  11:57:40         PAGE 55


SYMBOL TABLE
  LABEL                             VALUE 

WDTPS0                            00000001
WDTPS1                            00000002
WDTPS2                            00000003
WDTPS3                            00000004
WDTPS4                            00000005
WELL_DEPTH                        00000016
WELL_WIDTH                        0000000A
WPUA                              0000020C
WPUA0                             00000000
WPUA1                             00000001
WPUA2                             00000002
WPUA3                             00000003
WPUA4                             00000004
WPUA5                             00000005
WR                                00000001
WREG                              00000009
WREG_SHAD                         00000FE5
WREN                              00000002
WRERR                             00000003
WUE                               00000001
XOR_OP                            00000001
XSIZE                             00000030
YSIZE                             00000020
Z                                 00000002
Z_SHAD                            00000002
_.org_1_0075                      00000075
_.org_1_0077                      00000077
_.org_1_0079                      00000079
_.org_1_007C                      0000007C
_.org_1_00BC                      000000BC
_.org_1_00BE                      000000BE
_.org_1_00DA                      000000DA
_.org_1_00E1                      000000E1
_.org_1_02A7                      000002A7
_.org_1_02B4                      000002B4
_.org_1_02E5                      000002E5
_BOREN_NSLEEP                     00003DFF
_BOREN_OFF                        000039FF
_BOREN_ON                         00003FFF
_BOREN_SBODEN                     00003BFF
_BORV_19                          00003FFF
_BORV_HI                          00003BFF
_BORV_LO                          00003FFF
_CLKOUTEN_OFF                     00003FFF
_CLKOUTEN_ON                      000037FF
_CONFIG1                          00008007
_CONFIG2                          00008008
_CP_OFF                           00003FFF
_CP_ON                            00003F7F
_DEVID1                           00008006
_FOSC_ECH                         00003FFF
_FOSC_ECL                         00003FFD
_FOSC_ECM                         00003FFE
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-12-2016  11:57:40         PAGE 56


SYMBOL TABLE
  LABEL                             VALUE 

_FOSC_INTOSC                      00003FFC
_IDLOC0                           00008000
_IDLOC1                           00008001
_IDLOC2                           00008002
_IDLOC3                           00008003
_LPBOREN_OFF                      00003FFF
_LPBOREN_ON                       000037FF
_LVP_OFF                          00001FFF
_LVP_ON                           00003FFF
_MCLRE_OFF                        00003FBF
_MCLRE_ON                         00003FFF
_PLLEN_OFF                        00003EFF
_PLLEN_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FDF
_STVREN_OFF                       00003DFF
_STVREN_ON                        00003FFF
_WDTE_NSLEEP                      00003FF7
_WDTE_OFF                         00003FE7
_WDTE_ON                          00003FFF
_WDTE_SWDTEN                      00003FEF
_WRT_ALL                          00003FFC
_WRT_BOOT                         00003FFE
_WRT_HALF                         00003FFD
_WRT_OFF                          00003FFF
__12F1572                         00000001
_stack                            00000020
accaH                             00000009
accaL                             00000008
accbH                             0000000B
accbL                             0000000A
add                               
addpmadr                          
angle                             00000041
bitop                             0000010E
bitop00                           0000011B
bitop01                           0000011E
bitop02                           00000137
buttons                           0000000C
case                              
clear_bit                         0000012F
col_loop                          0000025D
coll_test                         00000287
dec_n                             
digits                            0000035B
disable_video                     
div10                             00000059
div10_loop                        0000005D
drop                              
drop_n                            
dropped                           00000046
dup                               
enable_video                      
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-12-2016  11:57:40         PAGE 57


SYMBOL TABLE
  LABEL                             VALUE 

fall_loop                         000002DC
fetch                             
fill_buffer                       000000E9
fill_loop                         000000F1
flags                             00000002
game_init                         00000228
game_loop                         000002DB
game_over                         00000315
get_flash_word                    00000164
get_nibble                        00000178
get_pixel                         00000109
gt_255                            0000002A
gtimer                            00000003
hard_drop                         00000304
hline                             00000206
hline_done                        00000215
inc_n                             
init                              00000318
insert                            
isr                               00000004
isr_exit                          00000055
koro                              0000029B
korobeiniki                       000003F4
labels                            000003A7
lcountH                           00000001
lcountL                           00000000
ldpmadr                           
lit                               
lt_256                            0000000E
main                              00000358
move_left                         0000030E
move_right                        00000310
movtw                             
movwt                             
mult6                             00000069
new_position                      00000314
new_tminos                        00000288
next_flash_word                   00000173
nibble                            0000000D
nibble_mask                       00000187
no_zero                           00000204
over                              
pause                             
pick                              
pixels_loop                       000000D5
pop                               
print_char                        00000195
print_int                         000001EB
print_label                       000001CE
print_last                        000001FE
print_row                         0000018B
print_tetrim                      000001A4
prt01                             000001BA
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-12-2016  11:57:40         PAGE 58


SYMBOL TABLE
  LABEL                             VALUE 

prt_lbl_done                      000001E9
prt_lbl_loop                      000001D0
pstack_init                       
push                              
q                                 0000000A
qr00                              00000278
qr01                              00000282
query_row                         00000276
r                                 00000000
randH                             00000006
randL                             00000005
rcount                            00000007
read_exit                         000000A1
read_flash                        0000016D
read_pad                          0000006E
reserve                           
rot                               
rot_left                          00000306
rot_right                         0000030A
row0                              00000186
row1                              00000182
row2                              00000184
row_loop                          0000025B
rst                               0000000E
scoreH                            00000045
scoreL                            00000044
set_video_ptr                     000000F7
slide_down                        0000025A
soft_drop                         00000305
start_timer                       
store                             
sub                               
swap                              
task0                             0000003F
task1                             00000048
task2                             0000004F
tasks                             00000035
tbranch                           
tcyDelay                          
test_bit                          0000012B
tetrim                            00000040
tetriminos                        00000387
tetris                            000002B8
ti                                000001B3
tone                              000000A4
tone_pr                           000003C7
tone_tmr                          00000004
try_a                             0000007E
try_b                             00000084
try_button                        
try_dn                            0000009C
try_lt                            00000096
try_rt                            0000008A
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-12-2016  11:57:40         PAGE 59


SYMBOL TABLE
  LABEL                             VALUE 

try_up                            00000090
tx                                00000042
txt_lines                         000003B4
txt_press                         000003BD
txt_score                         000003AB
ty                                00000043
video_buffer_b0                   00000050
video_buffer_b2                   000000A0
video_buffer_b3                   00000120
video_serialize                   000000BB
vline                             00000217
vline_done                        00000226
vsync_end                         00000022
vsync_start                       0000001A
wait_end                          000002B6
wait_sound                        
wait_start                        00000296
wait_timer                        
xor_bit                           00000132
xor_row                           00000140
xor_row01                         00000146
xor_row02                         0000015E
xor_row_done                      00000162
zbranch                           

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,   131 suppressed

