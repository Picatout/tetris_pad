MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  11:31:51         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001     include p12f1572.inc
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Sep 13 2016
                      00005 ;  MPASM PIC12F1572 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2016 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01601         LIST
                      00002     
                      00003     radix dec
                      00004     errorlevel 0, -302, -305
                      00005     
8007   3FE7           00006     __config _CONFIG1, _FOSC_ECH&_WDTE_OFF
8008   1EFF           00007     __config _CONFIG2, _PLLEN_OFF&_LVP_OFF 
                      00008 
                      00009 #define SOUND_SUPPORT
                      00010     
  01312D00            00011 FOSC equ 20000000 ; 20Mhz
  00000032            00012 TC equ 50 ; nanosecondes 
  004C4B40            00013 FCY equ FOSC/4    ; 5Mhz
  000000C8            00014 TCY equ 200 ; nanoseconds
                      00015 
                      00016 
  00000030            00017 XSIZE equ 48  ; horizontal pixels
  00000020            00018 YSIZE equ 32  ; vertical pixels
  00000006            00019 BPL equ XSIZE/8 ; bytes per line 
  000000C0            00020 BUFFER_SIZE equ  YSIZE*BPL  ; video buffer size
  00002030            00021 VIDEO_BUFFER equ 0x2000+(3*80-BUFFER_SIZE) ; buffer address
  00000032            00022 VERT_DLY equ 50
  00000046            00023 FIRST_VIDEO equ VERT_DLY+20  ; first video output line
  000000C5            00024 LAST_VIDEO equ FIRST_VIDEO+4*YSIZE-1  ; last video output line
  0000019A            00025 PIXEL_TXREG equ TXREG
  00000011            00026 TX_PIR equ PIR1
  00000032            00027 HORZ_DLY equ 10*5  ; there is 5 TCY/µsec
                      00028  
  00000001            00029 VIDEO_OUT equ RA1
  0000010C            00030 VIDEO_LAT equ LATA
  00000002            00031 SYNC_OUT equ RA2 
  00000DB3            00032 SYNC_PWMDCL equ PWM3DCL ; duty cycle low byte
  00000DB4            00033 SYNC_PWMDCH equ PWM3DCH ; high byte    
  00000DB5            00034 SYNC_PWMPRL equ PWM3PRL ; pwm period low byte
  00000DB6            00035 SYNC_PWMPRH equ PWM3PRH ; high byte 
  00000DB1            00036 SYNC_PWMPH equ PWM3PH ; pwm phase
  00000DB7            00037 SYNC_PWMOF equ PWM3OF ; pwm offset
  00000DB9            00038 SYNC_PWMTMR equ PWM3TMR ; timer
  00000DBB            00039 SYNC_PWMCON equ PWM3CON ; control SFR
  00000DBE            00040 SYNC_PWMCLKCON equ PWM3CLKCON  ; clock control SFR
  00000DC0            00041 SYNC_PWMOFCON equ PWM3OFCON ; offset control SFR
  00000DBF            00042 SYNC_PWMLDCON equ PWM3LDCON ; load control SFR
  00000006            00043 SYNC_IE equ PWM3IE  ; interrupt enable bit
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  11:31:51         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000006            00044 SYNC_IF equ PWM3IF  ; interrupt flag bit
  00000093            00045 SYNC_PIE equ PIE3 ; interrupt enable SFR
  00000013            00046 SYNC_PIR equ PIR3 ; interrupt flag SFR 
  00000DBC            00047 SYNC_PWMINTE equ PWM3INTE
  00000DBD            00048 SYNC_PWMINTF equ PWM3INTF
                      00049  
  000004F5            00050 HORZ_PERIOD equ FOSC/15748-1 ; 15748 hertz
  0000005E            00051 HORZ_PULSE equ 4700/TC ; 4.7µsec 
  00000106            00052 LAST_LINE equ 262
                      00053 
  00000000            00054 LED_PIN equ RA0
  00000004            00055 ADC_PIN equ RA4
                      00056 
                      00057 #ifdef SOUND_SUPPORT 
  00000004            00058 AUDIO_PIN equ RA4
  00000DA3            00059 AUDIO_PWMDCL equ PWM2DCL
  00000DA4            00060 AUDIO_PWMDCH equ PWM2DCH
  00000DA5            00061 AUDIO_PWMPRL equ PWM2PRL
  00000DA6            00062 AUDIO_PWMPRH equ PWM2PRH
  00000DA9            00063 AUDIO_PWMTMR equ PWM2TMR
  00000DAE            00064 AUDIO_PWMCLKCON equ PWM2CLKCON
  00000DAF            00065 AUDIO_PWMLDCON equ PWM2LDCON
  00000DAB            00066 AUDIO_PWMCON equ PWM2CON
                      00067 #endif
                      00068  
                      00069 ; game pad resource
                      00070 ; use ADC 
  00000004            00071 PAD_PIN equ ANSA4
  00000003            00072 PAD_CHS equ 3 
  00000000            00073 BTN_UP equ 0
  00000001            00074 BTN_DN equ 1
  00000002            00075 BTN_LT equ 2
  00000003            00076 BTN_RT equ 3
  00000004            00077 BTN_A equ 4
  00000005            00078 BTN_B equ 5
                      00079 ; threshold level for each button
                      00080 ; lower_btn_thr >= BTN_? < btn_thr
                      00081 ; exemple: BTN_UP if RT_THR<=Vadc<UP_THR  
  00000400            00082 VDD equ 1024
  000000D8            00083 DN_THR equ 216 ;(VDD*(6/7+5/6)/2)>>2
  000000D1            00084 LT_THR equ 209 ; (VDD*(5/6+4/5)/2)>>2
  000000C6            00085 UP_THR equ 198 ;(VDD*(4/5+3/4)/2)>>2
  000000B5            00086 RT_THR equ 181 ;(VDD*(3/4+2/3)/2)>>2
  00000095            00087 B_THR  equ 149 ; (VDD*(2/3+1/2)/2)>>2
  00000040            00088 A_THR  equ 64 ;(VDD/4)>>2
                      00089  
                      00090 try_button macro btn, label 
                      00091     movlw btn
                      00092     subwf ADRESH,W
                      00093     skpnc
                      00094     bra label
                      00095     endm
                      00096     
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  11:31:51         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00097 ;boolean flags 
  00000000            00098 F_VSYNC equ 0 ; vertical sync active
  00000001            00099 F_EVEN equ 1  ; even field
  00000002            00100 F_GTMR equ 2  ; game timer active
  00000003            00101 F_GSTOP equ 3 ; game stopped
  00000004            00102 F_SND equ 4 ; sound timer active 
  00000005            00103 F_COLL equ 5 ; collision flag
                      00104  
  000000B4            00105 LFSR_TAPS equ 0xB4 ; xor mask
                      00106  
                      00107 tcyDelay macro n ; delay in TCY cycles  5TCY per µsec.  
                      00108     variable r=n%5
                      00109     variable q=n/5
                      00110     while r>1
                      00111     bra $+1
                      00112 r-=2
                      00113     endw
                      00114     if r==1
                      00115     nop
                      00116     endif
                      00117     if q
                      00118     movlw q
                      00119     bra $+1
                      00120     decfsz WREG
                      00121     bra $-2
                      00122     endif
                      00123     endm
                      00124 
                      00125 ; button selector case    
                      00126 case macro n, label
                      00127     btfsc buttons,n
                      00128     bra label
                      00129     endm
                      00130  
                      00131 start_timer macro value ; start game timer
                      00132     movlw value
                      00133     movwf gtimer
                      00134     bsf flags, F_GTMR
                      00135     endm
                      00136     
                      00137 wait_timer macro ; wait timer expiration
                      00138     btfsc flags, F_GTMR
                      00139     bra $-1
                      00140     endm
                      00141     
                      00142 pause macro value ; suspend execution (busy loop)
                      00143     start_timer value
                      00144     wait_timer
                      00145     endm
                      00146 
                      00147 #ifdef SOUND_SUPPORT    
                      00148 wait_sound macro ; wait sound end
                      00149     btfsc flags,F_SND
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  11:31:51         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00150     bra $-1
                      00151     endm
                      00152 #endif
                      00153     
                      00154 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00155 ; software stack for arguments passing
                      00156 ; SP is Stack Pointer
                      00157 ; T is Top Of Stack
                      00158 #define SP FSR1
                      00159 #define T INDF1
  00000020            00160 STACK_SIZE equ 32
                      00161  
  0000001F            00162 S0 equ 0x1F ; stack base address - 1
                      00163 
                      00164 pstack_init macro ; initialise stack pointer
                      00165     clrf FSR1H
                      00166     movlw S0
                      00167     movwf FSR1L
                      00168     endm
                      00169     
                      00170 push macro   ; ( -- n ) push WREG on stack
                      00171     movwi ++SP
                      00172     endm
                      00173 
                      00174 pop macro   ; ( n -- )  pop T in WREG
                      00175     moviw SP--
                      00176     endm
                      00177     
                      00178 drop macro  ; ( n -- ) ; discard T
                      00179    addfsr SP,-1
                      00180    endm
                      00181 
                      00182 drop_n macro n  ; discard n elements  n<32
                      00183     addfsr SP,-n
                      00184     endm
                      00185     
                      00186 lit macro  n ; ( -- n ) ; push a literal
                      00187    movlw n
                      00188    movwi ++SP 
                      00189    endm
                      00190 
                      00191 dup macro ; ( n -- n n ) duplicate T
                      00192     movfw T
                      00193     movwi ++SP
                      00194     endm
                      00195     
                      00196 over macro ; ( n1 n2 -- n1 n2 n1 )
                      00197     moviw -1[SP]
                      00198     push
                      00199     endm
                      00200     
                      00201 pick macro n  ; pick nth element of stack to WREG
                      00202     moviw -n[SP]
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  11:31:51         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00203     endm
                      00204 
                      00205 insert macro n ;  insert WREG at position n on stack
                      00206    movwi -n[SP]
                      00207    endm
                      00208    
                      00209 inc_n macro n ; increament nth element of stack
                      00210     moviw -n[SP]
                      00211     incf WREG,F
                      00212     movwi -n[SP]
                      00213     endm
                      00214     
                      00215 dec_n macro n ; decreament nth element of stack
                      00216     moviw -n[SP]
                      00217     decf WREG,F
                      00218     movwi -n[SP]
                      00219     endm
                      00220     
                      00221 reserve macro n ; reserve n bytes on stack for local variables
                      00222     addfsr SP, n 
                      00223     endm
                      00224  
                      00225 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00226 ; parameter stack section    
                      00227 dstack udata 0x20
0020                  00228 _stack res 32
                      00229 ; game variables section 
  00000000            00230 GAME_VAR equ 0 ; game variables bank
                      00231 game_var udata 0x40 
                      00232 ; tetris game state
0040                  00233 tetrim res 1 ; active tretriminos 
0041                  00234 angle res 1 ; tetriminos rotatation angle in multiple of 90degr. {0:3}
0042                  00235 tx  res 1 ; x coordinate
0043                  00236 ty  res 1 ; y coordinate
0044                  00237 scoreL res 1 ; game score  16 bits
0045                  00238 scoreH res 1 
0046                  00239 droppedL res 1  ; total
0047                  00240 droppedH res 1  ; dropped lines
                      00241   
                      00242  
                      00243 ; These 3 sections are used for video pixels buffering
                      00244 ; with indirect access using FSR0
                      00245 ; to form a contiguous address space. 
                      00246 ; total size 192 bytes 
                      00247 vb_b0    udata 0x50
0050                  00248 video_buffer_b0 res 32
                      00249 vb_b1    udata 0xA0
00A0                  00250 video_buffer_b1 res 80
                      00251 vb_b2    udata 0x120
0120                  00252 video_buffer_b2 res 80
                      00253  
                      00254  
                      00255     udata_shr
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  11:31:51         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00256 ;scan lines counter 16 bits
0000                  00257 lcountL res 1
0001                  00258 lcountH res 1
                      00259 ; boolean flags 
0002                  00260 flags res 1
                      00261 ; game timer
0003                  00262 gtimer res 1 
                      00263 #ifdef SOUND_SUPPORT 
                      00264 ; sound timer
0004                  00265 tone_tmr res 1 
                      00266 #endif 
                      00267 ; lfsr PRNG register
0005                  00268 randL res 1 
0006                  00269 randH res 1 
                      00270 ; loop counter
0007                  00271 rcount res 1
                      00272 ; arithmetic accumulator A 16 bits
0008                  00273 accaL res 1
0009                  00274 accaH res 1
                      00275 ; arithmetic accumulator B 16 bits
000A                  00276 accbL res 1
000B                  00277 accbH res 1
                      00278 ; game pad buttons state
000C                  00279 buttons res 1
                      00280 ; program memory reader next nibble {0-3}
000D                  00281 nibble res 1
                      00282 ; temporary registers
000E                  00283 t0  res 1
000F                  00284 t1  res 1
                      00285   
                      00286 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00287 ; reset entry point
                      00288 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0010                  00289 rst: 
                      00290     org 0
0000   0023           00291     banksel ANSELA
0001   018C           00292     clrf ANSELA
0002   160C           00293     bsf ANSELA,PAD_PIN
0003   2???           00294     goto init
                      00295     
                      00296     org 4
                      00297 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;   
                      00298 ; interrupt service routine
                      00299 ; the only interrupt is on SYNC_PWM timer
                      00300 ; this intterrupt trigger once 
                      00301 ; for every horizontal line, i.e. 15748/sec.    
                      00302 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
0004                  00303 isr:
0004   003B           00304     banksel SYNC_PWMINTF
0005   103D           00305     bcf SYNC_PWMINTF,PRIF
0006   1800           00306     btfsc lcountH,0
0007   3???           00307     bra gt_255 ; lcount > 255
                      00308 ; lcount < 256
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  11:31:51         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0008   08??           00309     movfw lcountL
0009   1903           00310     skpnz
000A   3???           00311     bra vsync_start
000B   3A03           00312     xorlw 3
000C   1903           00313     skpnz
000D   3???           00314     bra vsync_end
                      00315 ; check if visible line    
000E   08??           00316     movfw lcountL
000F   3C45           00317     sublw FIRST_VIDEO-1
0010   1803           00318     skpnc
0011   3???           00319     bra isr_exit
0012   08??           00320     movfw lcountL
0013   3CC5           00321     sublw LAST_VIDEO
0014   1C03           00322     skpc
0015   3???           00323     bra isr_exit
                      00324 ; output video pixels for this line    
0016   2???           00325     call video_serialize 
0017   3???           00326     bra isr_exit 
                      00327 ; scanline 0 start vertical sync pulse    
0018                  00328 vsync_start: 
0018   003B           00329     banksel SYNC_PWMDCL
0019   3097           00330     movlw (HORZ_PERIOD-HORZ_PULSE)&0xff
001A   00B3           00331     movwf SYNC_PWMDCL
001B   3004           00332     movlw (HORZ_PERIOD-HORZ_PULSE)>>8
001C   00B4           00333     movwf SYNC_PWMDCH
001D   17BF           00334     bsf SYNC_PWMLDCON,LDA
001E   1400           00335     bsf flags, F_VSYNC
001F   3???           00336     bra isr_exit
                      00337 ; scanline 3 end vertical sync pulse
0020                  00338 vsync_end: 
0020   003B           00339     banksel SYNC_PWMDCL
0021   305E           00340     movlw HORZ_PULSE&0xff
0022   00B3           00341     movwf SYNC_PWMDCL
0023   3000           00342     movlw HORZ_PULSE>>8
0024   00B4           00343     movwf SYNC_PWMDCH
0025   17BF           00344     bsf SYNC_PWMLDCON,LDA
0026   1000           00345     bcf flags, F_VSYNC
0027   3???           00346     bra isr_exit
                      00347 ; scan line > 255    
0028                  00348 gt_255:
                      00349 ; check for end of field    
0028   3006           00350     movlw LAST_LINE&0xff
0029   1C80           00351     btfss flags,F_EVEN
002A   3E01           00352     addlw 1
002B   06??           00353     xorwf lcountL,W
002C   1D03           00354     skpz
002D   3???           00355     bra tasks
                      00356 ; end of field
                      00357 ; reset line counter    
002E   01??           00358     clrf lcountL
002F   01??           00359     clrf lcountH
0030   3002           00360     movlw 1<<F_EVEN
0031   06??           00361     xorwf flags,F ; toggle even field flag
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  11:31:51         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0032   0009           00362     retfie
                      00363 ; round robin task scheduler
                      00364 ; each task execute once every 1/60th sec.
                      00365 ; condition:    
                      00366 ;   Task must complete inside
                      00367 ;   horizontal period. i.e. before SYNC_PWM period end
                      00368 ; maximum 6 tasks slots available    
0033                  00369 tasks:
                      00370 ; task selector    
0033   08??           00371     movfw lcountL
0034   1903           00372     skpnz
0035   3???           00373     bra task0
0036   0389           00374     decf WREG
0037   1903           00375     skpnz 
0038   3???           00376     bra task1
0039   0389           00377     decf WREG
003A   1903           00378     skpnz
003B   3???           00379     bra task2
003C   3???           00380     bra isr_exit
003D                  00381 task0:
                      00382 #ifdef SOUND_SUPPORT    
                      00383 ; sound timer    
003D   08??           00384     movfw tone_tmr
003E   1903           00385     skpnz
003F   3???           00386     bra isr_exit
0040   0B??           00387     decfsz tone_tmr,F
0041   3???           00388     bra isr_exit
0042   1200           00389     bcf flags,F_SND
0043   003B           00390     banksel AUDIO_PWMCON
0044   13AB           00391     bcf AUDIO_PWMCON,EN
                      00392 #endif    
0045   3???           00393     bra isr_exit
0046                  00394 task1:   
                      00395 ; game timer    
0046   08??           00396     movf gtimer,F ; 
0047   1903           00397     skpnz
0048   3???           00398     bra isr_exit
0049   0B??           00399     decfsz gtimer,F ; 
004A   3???           00400     bra isr_exit ;
004B   1100           00401     bcf flags, F_GTMR
004C   3???           00402     bra isr_exit ;
004D                  00403 task2:
                      00404 ; rotate lfsr
004D   36??           00405     lsrf randH
004E   0C??           00406     rrf randL
004F   1803           00407     skpnc
0050   30B4           00408     movlw LFSR_TAPS
0051   06??           00409     xorwf randH
0052                  00410 isr_exit:
0052   0A??           00411     incf lcountL
0053   1903           00412     skpnz
0054   0A??           00413     incf lcountH
0055   0009           00414     retfie
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  11:31:51         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00415 
                      00416 ;div10    
                      00417 ; divsion by 10    
                      00418 ; needed to convert binary to BCD
                      00419 ; input:
                      00420 ;   acca dividend  16 bits
                      00421 ; output:
                      00422 ;   acca: quotient
                      00423 ;   accbL: remainder    
0056                  00424 div10:
0056   3011           00425     movlw 17
0057   00??           00426     movwf rcount
0058   01??           00427     clrf accbL
0059                  00428 div10_loop:
0059   300A           00429     movlw 10
005A   02??           00430     subwf accbL,W
005B   1803           00431     skpnc
005C   00??           00432     movwf accbL
005D   0D??           00433     rlf accaL
005E   0D??           00434     rlf accaH
005F   0D??           00435     rlf accbL
0060   0B??           00436     decfsz rcount
0061   3???           00437     bra div10_loop
0062   36??           00438     lsrf accbL
0063   0008           00439     return
                      00440     
                      00441 ;read_pad    
                      00442 ;read game pad
                      00443 ; store value in 'buttons'
                      00444 ; a button is accepted if
                      00445 ; the Vadc value is below its threshold
0064                  00446 read_pad:
0064   01??           00447     clrf buttons
0065   1A00           00448     btfsc flags, F_SND
0066   0008           00449     return ; can't read while tone playing
0067   0021           00450     banksel TRISA
0068   160C           00451     bsf TRISA,ADC_PIN
0069   0021           00452     banksel ADCON0
006A   141D           00453     bsf ADCON0,ADON
                      00454     tcyDelay 5*4 ; délais d'acquisition 4µsec
  0000                    M     variable r=5*4%5
  0004                    M     variable q=5*4/5
                          M     while r>1
                          M     bra $+1
                          M r-=2
                          M     endw
                          M     if r==1
                          M     nop
                          M     endif
                          M     if q
006B   3004               M     movlw q
006C   3???               M     bra $+1
006D   0B89               M     decfsz WREG
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  11:31:51         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

006E   3???               M     bra $-2
                          M     endif
006F   149D           00455     bsf ADCON0,GO
0070   189D           00456     btfsc ADCON0,NOT_DONE
0071   3???           00457     bra $-1
0072   101D           00458     bcf ADCON0,ADON
                      00459 ; try each button from lower to upper
0073                  00460 try_a:
                      00461     try_button A_THR, try_b
0073   3040               M     movlw A_THR
0074   021C               M     subwf ADRESH,W
0075   1803               M     skpnc
0076   3???               M     bra try_b
0077   1600           00462     bsf buttons,BTN_A
0078   3???           00463     bra read_exit
0079                  00464 try_b:    
                      00465     try_button B_THR, try_rt
0079   3095               M     movlw B_THR
007A   021C               M     subwf ADRESH,W
007B   1803               M     skpnc
007C   3???               M     bra try_rt
007D   1680           00466     bsf buttons,BTN_B
007E   3???           00467     bra read_exit
007F                  00468 try_rt:
                      00469     try_button RT_THR, try_up
007F   30B5               M     movlw RT_THR
0080   021C               M     subwf ADRESH,W
0081   1803               M     skpnc
0082   3???               M     bra try_up
0083   1580           00470     bsf buttons,BTN_RT
0084   3???           00471     bra read_exit
0085                  00472 try_up:
                      00473     try_button UP_THR, try_lt
0085   30C6               M     movlw UP_THR
0086   021C               M     subwf ADRESH,W
0087   1803               M     skpnc
0088   3???               M     bra try_lt
0089   1400           00474     bsf buttons,BTN_UP
008A   3???           00475     bra read_exit
008B                  00476 try_lt:
                      00477     try_button LT_THR, try_dn
008B   30D1               M     movlw LT_THR
008C   021C               M     subwf ADRESH,W
008D   1803               M     skpnc
008E   3???               M     bra try_dn
008F   1500           00478     bsf buttons,BTN_LT
0090   3???           00479     bra read_exit
0091                  00480 try_dn:
                      00481     try_button DN_THR, read_exit
0091   30D8               M     movlw DN_THR
0092   021C               M     subwf ADRESH,W
0093   1803               M     skpnc
0094   3???               M     bra read_exit
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  11:31:51         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0095   1480           00482     bsf buttons,BTN_DN
0096                  00483 read_exit:
0096   0021           00484     banksel TRISA
0097   120C           00485     bcf TRISA,ADC_PIN
0098   0008           00486     return
                      00487 
                      00488 #ifdef SOUND_SUPPORT    
                      00489 ; play a tone
                      00490 ; input:
                      00491 ;   t   duration in multiple of 1/60 sec.
                      00492 ;   n   note number
0099                  00493 tone: ; ( t n -- )
0099   0021           00494     banksel TRISA
009A   120C           00495     bcf TRISA,AUDIO_PIN
009B   003B           00496     banksel AUDIO_PWMPRL
009C   3581           00497     lslf T
009D   0801           00498     movfw T
009E   2???           00499     call tone_pr
009F   00A5           00500     movwf AUDIO_PWMPRL
00A0   3689           00501     lsrf WREG
00A1   00A3           00502     movwf AUDIO_PWMDCL
00A2   0A01           00503     incf T,W
00A3   2???           00504     call tone_pr
00A4   00A6           00505     movwf AUDIO_PWMPRH
00A5   3689           00506     lsrf WREG
00A6   00A4           00507     movwf AUDIO_PWMDCH
00A7   1803           00508     skpnc
00A8   17A3           00509     bsf AUDIO_PWMDCL,7
                      00510     drop  ; n
00A9   317F               M    addfsr SP,-1
                      00511     pop   ; WREG=t
00AA   0017               M     moviw SP--
00AB   00??           00512     movwf tone_tmr
00AC   17AB           00513     bsf AUDIO_PWMCON,EN
00AD   17AF           00514     bsf AUDIO_PWMLDCON,LDA
00AE   1600           00515     bsf flags,F_SND
00AF   0008           00516     return
                      00517 #endif
                      00518     
                      00519 ; set_yptr    
                      00520 ; set FSR0 to point to
                      00521 ; video_buffer line y    
                      00522 ; input:
                      00523 ;   y  line number {0:YZISE-1}
                      00524 ; output:
                      00525 ;   FSR0 point to beginning of line y    
00B0                  00526 set_yptr: ; ( y -- )
00B0   3030           00527     movlw VIDEO_BUFFER&0xff
00B1   0084           00528     movwf FSR0L
00B2   3020           00529     movlw VIDEO_BUFFER>>8
00B3   0085           00530     movwf FSR0H
00B4   3581           00531     lslf T,F
00B5   3501           00532     lslf T,W
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  11:31:51         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00B6   0781           00533     addwf T,F
                      00534     pop
00B7   0017               M     moviw SP--
00B8   0784           00535     addwf FSR0L
00B9   0103           00536     clrw 
00BA   3D85           00537     addwfc FSR0H
00BB   0008           00538     return
                      00539     
                      00540 ;video_serialize
                      00541 ; serialise video pixels to output pin
                      00542 ; use EUSART in synchronous mode    
                      00543 ; called from isr    
                      00544 ; input:
                      00545 ;   none
                      00546 ; output:
                      00547 ;   none    
00BC                  00548 video_serialize: 
                      00549     tcyDelay HORZ_DLY
  0000                    M     variable r=HORZ_DLY%5
  000A                    M     variable q=HORZ_DLY/5
                          M     while r>1
                          M     bra $+1
                          M r-=2
                          M     endw
                          M     if r==1
                          M     nop
                          M     endif
                          M     if q
00BC   300A               M     movlw q
00BD   3???               M     bra $+1
00BE   0B89               M     decfsz WREG
00BF   3???               M     bra $-2
                          M     endif
                      00550 ; save FSR0    
00C0   0804           00551     movfw FSR0L
                      00552     push
00C1   001C               M     movwi ++SP
00C2   0805           00553     movfw FSR0H
                      00554     push
00C3   001C               M     movwi ++SP
00C4   3046           00555     movlw FIRST_VIDEO
00C5   02??           00556     subwf lcountL,W
00C6   3689           00557     lsrf WREG  ; a pixel is 4 scan lines
00C7   3689           00558     lsrf WREG
                      00559     push      ; FSR0L FSR0H y
00C8   001C               M     movwi ++SP
00C9   2???           00560     call set_yptr ; FSR0L FSR0H
                      00561     lit BPL ; FSR0L FSR0H BPL
00CA   3006               M    movlw BPL
00CB   001C               M    movwi ++SP 
00CC   0023           00562     banksel RCSTA
00CD   179D           00563     bsf RCSTA,SPEN
00CE                  00564 byte_serialize:    
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  11:31:51         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00CE   0023           00565     banksel PIXEL_TXREG
00CF   0012           00566     moviw FSR0++
00D0   009A           00567     movwf PIXEL_TXREG
00D1   0020           00568     banksel TX_PIR
00D2   1E11           00569     btfss TX_PIR,TXIF
00D3   3???           00570     bra $-1
00D4   0B81           00571     decfsz T
00D5   3???           00572     bra byte_serialize
                      00573     drop ; discard bytes counter
00D6   317F               M    addfsr SP,-1
00D7   0023           00574     banksel PIXEL_TXREG
00D8   019A           00575     clrf PIXEL_TXREG
00D9   0020           00576     banksel TX_PIR
00DA   1E11           00577     btfss TX_PIR,TXIF
00DB   3???           00578     bra $-1
00DC   0023           00579     banksel RCSTA
00DD   139D           00580     bcf RCSTA, SPEN
                      00581 ;restore FSR0    
                      00582     pop
00DE   0017               M     moviw SP--
00DF   0085           00583     movwf FSR0H
                      00584     pop
00E0   0017               M     moviw SP--
00E1   0084           00585     movwf FSR0L
00E2   0008           00586     return
                      00587 
                      00588 ; clear_screen
                      00589 ; set all pixels black
                      00590 ; input:
                      00591 ;   none
                      00592 ; output:
                      00593 ;   none    
00E3                  00594 clear_screen: 
                      00595     lit 0
00E3   3000               M    movlw 0
00E4   001C               M    movwi ++SP 
00E5   2???           00596     call set_yptr
00E6   30C0           00597     movlw BUFFER_SIZE
                      00598     push  ; T=byte count  
00E7   001C               M     movwi ++SP
00E8   3000           00599     movlw 0
00E9                  00600 cls_loop:    
00E9   001A           00601     movwi FSR0++
00EA   0B81           00602     decfsz T
00EB   3???           00603     bra cls_loop
                      00604     drop
00EC   317F               M    addfsr SP,-1
00ED   0008           00605     return
                      00606 
                      00607 ;set_pixel_ptr    
                      00608 ;set FSR0 pointer at byte containing pixel x,y
                      00609 ; input:
                      00610 ;   x,y coordinates of pixel in video_buffer    
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  11:31:51         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00611 ; output:
                      00612 ;   WREG = pixel mask  
                      00613 ; NOTE: EUSART output Least Significant Bit first
                      00614 ;       LSB appear left on screen.
00EE                  00615 set_pixel_ptr:  ; ( x y -- )
00EE   2???           00616     call set_yptr
                      00617 ; FSR0+x/8
00EF   3601           00618     lsrf T,W   
00F0   3689           00619     lsrf WREG
00F1   3689           00620     lsrf WREG
00F2   0784           00621     addwf FSR0L
00F3   0103           00622     clrw
00F4   3D85           00623     addwfc FSR0H
                      00624 ;create bit mask    
00F5   3007           00625     movlw 7
00F6   0581           00626     andwf T,F ; T=bit position
00F7   3001           00627     movlw 0x1
00F8   1903           00628     skpnz 
00F9   3???           00629     bra mask01 ; least significant bit
00FA                  00630 mask00:
00FA   3589           00631     lslf WREG
00FB   0B81           00632     decfsz T
00FC   3???           00633     bra mask00
00FD                  00634 mask01:
                      00635     drop ; discard shift counter
00FD   317F               M    addfsr SP,-1
00FE   0008           00636     return
                      00637 
                      00638 ; set_pixel
                      00639 ; set x,y pixel to 1
                      00640 ; input:
                      00641 ;   x,y pixel coordinates x{0:XSIZE-1},y{0:YSIZE-1}
                      00642 ; output:
                      00643 ;   none
00FF                  00644 set_pixel: ; ( x y -- )
00FF   2???           00645     call set_pixel_ptr
0100   0480           00646     iorwf INDF0,F
0101   0008           00647     return
                      00648 
                      00649 ; clear_pixel
                      00650 ; set x,y pixel to 0
                      00651 ; input:
                      00652 ;   x,y pixel coordinates x{0:XSIZE-1},y{0:YSIZE-1}
                      00653 ; output:
                      00654 ;   none
0102                  00655 clear_pixel: ; ( x y -- )
0102   2???           00656     call set_pixel_ptr
0103   0989           00657     comf WREG
0104   0580           00658     andwf INDF0,F
0105   0008           00659     return
                      00660 
                      00661 ; get_pixel    
                      00662 ; return state of pixel
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  11:31:51         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00663 ; input:
                      00664 ;   x,y pixel coordinates x{0:XSIZE-1},y{0:YSIZE-1}
                      00665 ; output:
                      00666 ;   WREG=0|2^n  where n{0:7}
                      00667 ;   Z=1 when T==0    
0106                  00668 get_pixel: ; ( x y -- )
0106   2???           00669     call set_pixel_ptr
0107   0500           00670     andwf INDF0,W
0108   0008           00671     return
                      00672     
                      00673 ; xor_pixel
                      00674 ; inverse pixel at x,y coordinates
                      00675 ; input:
                      00676 ;   x,y pixel coordinates x{0:XSIZE-1},y{0:YSIZE-1}
                      00677 ; output:
                      00678 ;   set F_COLL boolean flag if collision
0109                  00679 xor_pixel: ; ( x y -- f )
0109   2???           00680     call set_pixel_ptr
010A   0680           00681     xorwf INDF0,F
010B   0500           00682     andwf INDF0,W
010C   1903           00683     skpnz
010D   1680           00684     bsf flags, F_COLL
010E   0008           00685     return
                      00686 
                      00687 ;xor_row    
                      00688 ; draw row of 4 pixels
                      00689 ; stop when n==0    
                      00690 ; input:
                      00691 ;   {x,y} left coordinates
                      00692 ;   n pixels to draw, 4 bits in high nibble
                      00693 ; output:
                      00694 ;   f=collision flag, return modified value   
                      00695 ; conditions:
                      00696 ;   use 't1' as temporary storage    
                      00697 ; >> no bank dependency << 
010F                  00698 xor_row: ; ( n x y -- )
                      00699 ; check for empty row
                      00700     pick 2 ; check if n==0
010F   3F7E               M     moviw -2[SP]
0110   1903           00701     skpnz
0111   3???           00702     bra xor_row_done ; row empty nothing to do
0112   3589           00703     lslf WREG
                      00704     insert 2  ; save shifted n
0113   3FFE               M    movwi -2[SP]
0114   1C03           00705     skpc
0115   3???           00706     bra xor_row02 ; bit==0 no draw
                      00707 ; bounds check x{0:XSIZE-1}    
                      00708     pick 1  ; WREG=x
0116   3F7F               M     moviw -1[SP]
0117   1B89           00709     btfsc WREG,7 
0118   3???           00710     bra xor_row02 ; x<0 out of screen
                      00711     over ; n x y x 
0119   3F7F               M     moviw -1[SP]
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  11:31:51         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     push
011A   001C               M     movwi ++SP
                      00712     over ; n x y x y
011B   3F7F               M     moviw -1[SP]
                          M     push
011C   001C               M     movwi ++SP
011D   2???           00713     call xor_pixel ; -- n x y
011E                  00714 xor_row02:
                      00715     inc_n 1  ; x+=1
011E   3F7F               M     moviw -1[SP]
011F   0A89               M     incf WREG,F
0120   3FFF               M     movwi -1[SP]
0121   3???           00716     bra xor_row
0122                  00717 xor_row_done: ; n x y
                      00718     drop_n 3  ; clean stack
0122   317D               M     addfsr SP,-3
0123   0008           00719     return
                      00720 
                      00721 ;get_flash_word    
                      00722 ; read program memory word
                      00723 ; input:
                      00724 ;   ofs offset in table {0:255}    
                      00725 ;   lo is low byte of program address
                      00726 ;   hi is high byte of program address
                      00727 ; output:
                      00728 ;   PMDATH:PMDAL contain 14 bits data word
                      00729 ; side effect:    
                      00730 ;   reset <nibble> variable 
                      00731 ;   modify BSR    
0124                  00732 get_flash_word: ; ( ofs lo hi -- )
0124   0023           00733     banksel PMADR
                      00734     pop
0125   0017               M     moviw SP--
0126   0092           00735     movwf PMADRH
                      00736     pop
0127   0017               M     moviw SP--
0128   0091           00737     movwf PMADRL
                      00738     pop
0129   0017               M     moviw SP--
012A   0791           00739     addwf PMADRL,F
012B   0103           00740     clrw 
012C   3D92           00741     addwfc PMADRH,F
012D                  00742 read_flash:    
012D   1315           00743     bcf PMCON1,CFGS
012E   1415           00744     bsf PMCON1, RD
012F   0000           00745     nop
0130   0000           00746     nop
0131   01??           00747     clrf nibble
0132   0008           00748     return
                      00749 
                      00750 ;next_flash_word    
                      00751 ; increment PMADR 
                      00752 ; and read next flash word    
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  11:31:51         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00753 ; input:
                      00754 ;   none
                      00755 ; output:
                      00756 ;   PMDAT    
                      00757 ; side effect:
                      00758 ;   clear 'nibble'    
                      00759 ;   modify BSR
0133                  00760 next_flash_word:
0133   0023           00761     banksel PMADR
0134   0A91           00762     incf PMADRL
0135   1903           00763     skpnz
0136   0A92           00764     incf PMADRH
0137   3???           00765     bra read_flash
                      00766 
                      00767 ;get_nibble    
                      00768 ;get nibble from PMDAT
                      00769 ; input:
                      00770 ;   none    
                      00771 ; output:
                      00772 ;   T=nibble in bits 7:4
                      00773 ; side effect:    
                      00774 ;   increment 'nibble' variable    
                      00775 ;   modify BSR
0138                  00776 get_nibble: ; ( -- nibble )
0138   3003           00777     movlw 3
0139   06??           00778     xorwf nibble,W
013A   1903           00779     skpnz 
013B   2???           00780     call next_flash_word
013C   0023           00781     banksel PMDAT
                      00782 ; select nibble in word    
013D   08??           00783     movfw nibble
013E   1903           00784     skpnz
013F   3???           00785     bra row0
0140   0B89           00786     decfsz WREG
0141   3???           00787     bra row2
0142                  00788 row1:    
0142   0813           00789     movfw PMDATL
0143   3???           00790     bra nibble_mask
0144                  00791 row2:
0144   0E13           00792     swapf PMDATL,W
0145   3???           00793     bra nibble_mask
0146                  00794 row0:    
0146   0E14           00795     swapf PMDATH,W
0147                  00796 nibble_mask:
0147   39F0           00797     andlw 0xf0
                      00798     push
0148   001C               M     movwi ++SP
0149   0A??           00799     incf nibble,F ; advance nibble counter
014A   0008           00800     return
                      00801 
                      00802 ;print_row    
                      00803 ; print 4 pixels row
                      00804 ; inputs:
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  11:31:51         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00805 ;   x,y left coordinates
                      00806 ; output:    
                      00807 ;   advance y coordinate to next row    
014B                  00808 print_row: ; ( x y -- x y )     
014B   2???           00809     call get_nibble ; x y -- x y n 
                      00810     pick 2 ; x
014C   3F7E               M     moviw -2[SP]
                      00811     push    ; x y n x
014D   001C               M     movwi ++SP
                      00812     pick 2  ; y
014E   3F7E               M     moviw -2[SP]
                      00813     push      ; x y n x y
014F   001C               M     movwi ++SP
0150   2???           00814     call xor_row ; x y n x y -- x y
0151   0A81           00815     incf T,F ; y+=1
0152   0008           00816     return
                      00817 
                      00818 ;print_char     
                      00819 ; draw character in video_buffer 
                      00820 ; input:
                      00821 ;   x,y left/top coordinates
                      00822 ;   c   character to print 
                      00823 ; output:
                      00824 ;   none    
0153                  00825 print_char: ; ( x y c -- )
0153   3581           00826     lslf T ; 2 words per table entry
                      00827     lit low(digits)
0154   30??               M    movlw low(digits)
0155   001C               M    movwi ++SP 
                      00828     lit high(digits) ; x y ofs adrL adrH
0156   30??               M    movlw high(digits)
0157   001C               M    movwi ++SP 
0158   2???           00829     call get_flash_word  ; -- x y 
0159   2???           00830     call print_row
015A   2???           00831     call print_row
015B   2???           00832     call print_row 
015C   2???           00833     call print_row 
015D   2???           00834     call print_row 
                      00835     drop_n 2  ; ( x y -- )
015E   317E               M     addfsr SP,-2
015F   0008           00836     return
                      00837 
                      00838 ;print_tetrim    
                      00839 ; print current tetriminos
                      00840 ; input:
                      00841 ;   none
                      00842 ; use game variables   
                      00843 ;   titrim: tetriminos id
                      00844 ;   angle: rotation angle    
                      00845 ;   tx,ty  left/top coordinates
                      00846 ; output:
                      00847 ;   f boolean collision flag   
                      00848 ; side effect:    
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  11:31:51         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00849 ;   modify BSR
0160                  00850 print_tetrim: ; ( -- f )
0160   1280           00851     bcf flags, F_COLL
0161   0020           00852     banksel GAME_VAR
0162   08??           00853     movfw angle
                      00854     push    
0163   001C               M     movwi ++SP
0164   35??           00855     lslf tetrim,W   ; 4 words per table entry, one for each angle
0165   3589           00856     lslf WREG
0166   3A18           00857     xorlw 24
0167   1903           00858     skpnz
0168   3581           00859     lslf T,F
0169   3A18           00860     xorlw 24
016A   0781           00861     addwf T,F  ; ofs
016B   30??           00862     movlw low(tetriminos)
                      00863     push    ; ofs addrL
016C   001C               M     movwi ++SP
016D   30??           00864     movlw high(tetriminos)
                      00865     push    ; ofs addrL addrH
016E   001C               M     movwi ++SP
016F   2???           00866     call get_flash_word  ; of addrL addrH --
0170   0020           00867     banksel GAME_VAR
0171   08??           00868     movfw tx
                      00869     push    ; -- x
0172   001C               M     movwi ++SP
0173   08??           00870     movfw ty
                      00871     push    ; -- x y 
0174   001C               M     movwi ++SP
0175   2???           00872     call print_row ; x y -- x y+1
0176   2???           00873     call print_row
0177   2???           00874     call print_row
0178   0023           00875     banksel PMDAT
0179   3030           00876     movlw 0x30
017A   0514           00877     andwf PMDATH,W
017B   1903           00878     skpnz
017C   2???           00879     call print_row
                      00880     drop_n 1
017D   317F               M     addfsr SP,-1
017E   0181           00881     clrf T
017F   1A80           00882     btfsc flags, F_COLL
0180   0A81           00883     incf T,F
0181   0008           00884     return
                      00885 
                      00886 ;print_label    
                      00887 ;print a text line stored in program memory
                      00888 ; text terminated by 255
                      00889 ; input: 
                      00890 ;  x,y left coordinates
                      00891 ;  PCLH= high(table)
                      00892 ;  T=low(table) 
                      00893 ; output:
                      00894 ;   none
0182                  00895 print_label: ; ( x y tableL -- )
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  11:31:51         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0182   0801           00896     movfw T     ; WREG= labelL
0183   000A           00897     callw      
0184   1B89           00898     btfsc WREG,7
0185   3???           00899     bra prt_lbl_done
                      00900     push ; x y labelL c
0186   001C               M     movwi ++SP
                      00901     pick 3  ; WREG=x
0187   3F7D               M     moviw -3[SP]
                      00902     push    ; x y labelL c x 
0188   001C               M     movwi ++SP
                      00903     pick 3  ; WREG=y
0189   3F7D               M     moviw -3[SP]
                      00904     push    ; x y labelL c x y
018A   001C               M     movwi ++SP
                      00905     pick 2  ; WREG = c
018B   3F7E               M     moviw -2[SP]
                      00906     push    ; x y labelL c x y c
018C   001C               M     movwi ++SP
018D   2???           00907     call print_char ; x y labelL c x y c -- x y labelL c
                      00908     drop    ; x y labelL
018E   317F               M    addfsr SP,-1
018F   3001           00909     movlw 1
0190   0781           00910     addwf T,F ; advance to next character in table
0191   0103           00911     clrw
0192   3D8A           00912     addwfc PCLATH,F
                      00913     pick 2    ; x
0193   3F7E               M     moviw -2[SP]
0194   3E04           00914     addlw 4   ; x+=4
                      00915     insert 2  
0195   3FFE               M    movwi -2[SP]
0196   3???           00916     bra print_label
0197                  00917 prt_lbl_done:
                      00918     drop_n 3
0197   317D               M     addfsr SP,-3
0198   0008           00919     return
                      00920     
                      00921 ;print_int
                      00922 ;print an integer
                      00923 ;from right to left ( least significant digit first)
                      00924 ; input:    
                      00925 ;   y  line number 
                      00926 ;   number to print in acca    
                      00927 ; output:
                      00928 ;   none
                      00929 ; condition:    
                      00930 ;   accbL contain digit after div10 call    
0199                  00931 print_int: ; ( y -- )
                      00932     dup     ; y y
0199   0801               M     movfw T
019A   001C               M     movwi ++SP
019B   302B           00933     movlw XSIZE-5
                      00934     insert 1    ; x y
019C   3FFF               M    movwi -1[SP]
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  11:31:51         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

019D                  00935 print_int00:    
019D   08??           00936     movfw accaH
019E   04??           00937     iorwf accaL,W
019F   1903           00938     skpnz
01A0   3???           00939     bra print_last
                      00940     over    ; x y x 
01A1   3F7F               M     moviw -1[SP]
                          M     push
01A2   001C               M     movwi ++SP
                      00941     over    ; x y x y
01A3   3F7F               M     moviw -1[SP]
                          M     push
01A4   001C               M     movwi ++SP
01A5   2???           00942     call div10
01A6   08??           00943     movfw accbL ; remainder of division
                      00944     push   ; x y x y d
01A7   001C               M     movwi ++SP
01A8   2???           00945     call print_char ; -- x y 
                      00946     pick 1  ; x
01A9   3F7F               M     moviw -1[SP]
                      00947     push    ; x y x
01AA   001C               M     movwi ++SP
01AB   3004           00948     movlw 4
01AC   0281           00949     subwf T,F ; x y x-4  next position in video_buffer
                      00950     pop
01AD   0017               M     moviw SP--
                      00951     insert 1  ; save that x position
01AE   3FFF               M    movwi -1[SP]
01AF   3???           00952     bra print_int00
01B0                  00953 print_last:
                      00954     pick 1  ; x 
01B0   3F7F               M     moviw -1[SP]
01B1   3A2B           00955     xorlw XSIZE-5 ; x at right margin?
01B2   1D03           00956     skpz
01B3   3???           00957     bra no_zero
                      00958     push          ; yes print a zero
01B4   001C               M     movwi ++SP
01B5   3???           00959     bra print_char
01B6                  00960 no_zero:
                      00961     drop_n 2
01B6   317E               M     addfsr SP,-2
01B7   0008           00962     return
                      00963     
                      00964 ; draw horizontal line ( length  y x -- )
                      00965 ; inputs:
                      00966 ;   length of line
                      00967 ;   {x,y} left coordinates 
                      00968 ; output:
                      00969 ;   none    
01B8                  00970 hline:
                      00971     pick 2  ; length
01B8   3F7E               M     moviw -2[SP]
01B9   1903           00972     skpnz
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  11:31:51         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01BA   3???           00973     bra hline_done  ; length=0
01BB   0389           00974     decf WREG
                      00975     insert 2  ; decrement length
01BC   3FFE               M    movwi -2[SP]
                      00976     dup     ; len y x x
01BD   0801               M     movfw T
01BE   001C               M     movwi ++SP
                      00977     pick 2  ; y
01BF   3F7E               M     moviw -2[SP]
                      00978     push    ; len y x x y
01C0   001C               M     movwi ++SP
01C1   2???           00979     call xor_pixel
01C2   0A81           00980     incf T  ; len y x+1
01C3   3???           00981     bra hline
01C4                  00982 hline_done:    
                      00983     drop_n 3
01C4   317D               M     addfsr SP,-3
01C5   0008           00984     return
                      00985 
                      00986 ; vline    
                      00987 ;draw vertical line ( length x y -- )
                      00988 ; inputs:
                      00989 ;   length of line
                      00990 ;   {x,y} top coordinates
                      00991 ; output:
                      00992 ;   none    
01C6                  00993 vline:  ; ( len x y -- ) 
                      00994     pick 2 ; len
01C6   3F7E               M     moviw -2[SP]
01C7   1903           00995     skpnz
01C8   3???           00996     bra vline_done ; len=0
01C9   0389           00997     decf WREG
                      00998     insert 2  ; decrement len
01CA   3FFE               M    movwi -2[SP]
                      00999     over     ; l x y x
01CB   3F7F               M     moviw -1[SP]
                          M     push
01CC   001C               M     movwi ++SP
                      01000     over     ; l x y x y    
01CD   3F7F               M     moviw -1[SP]
                          M     push
01CE   001C               M     movwi ++SP
01CF   2???           01001     call xor_pixel ; -- l x y
01D0   0A81           01002     incf T,F    ; y+=1
01D1   3???           01003     bra vline
01D2                  01004 vline_done:
                      01005     drop_n 3
01D2   317D               M     addfsr SP,-3
01D3   0008           01006     return
                      01007     
  0000000A            01008 WELL_WIDTH equ 10
  00000016            01009 WELL_DEPTH equ 22 
                      01010 ;game_init
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  11:31:51         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01011 ; initialize game state
                      01012 ; input:
                      01013 ;   none
                      01014 ; output:
                      01015 ;   none    
01D4                  01016 game_init:
01D4   2???           01017     call clear_screen
                      01018 ; draw game well
01D5   3016           01019     movlw WELL_DEPTH
                      01020     push
01D6   001C               M     movwi ++SP
                      01021     push  ; len len
01D7   001C               M     movwi ++SP
01D8   0103           01022     clrw
                      01023     push
01D9   001C               M     movwi ++SP
                      01024     push  ; len len x=0, y=0
01DA   001C               M     movwi ++SP
01DB   2???           01025     call vline ; -- len 
                      01026     lit WELL_WIDTH+1 ; len x
01DC   300B               M    movlw WELL_WIDTH+1
01DD   001C               M    movwi ++SP 
                      01027     lit 0            ; len x y
01DE   3000               M    movlw 0
01DF   001C               M    movwi ++SP 
01E0   2???           01028     call vline
                      01029     lit WELL_WIDTH+2
01E1   300C               M    movlw WELL_WIDTH+2
01E2   001C               M    movwi ++SP 
                      01030     lit WELL_DEPTH
01E3   3016               M    movlw WELL_DEPTH
01E4   001C               M    movwi ++SP 
                      01031     lit 0
01E5   3000               M    movlw 0
01E6   001C               M    movwi ++SP 
01E7   2???           01032     call hline
                      01033 ; print "SCORE" label    
                      01034     lit WELL_WIDTH+3 ; x
01E8   300D               M    movlw WELL_WIDTH+3
01E9   001C               M    movwi ++SP 
                      01035     lit 0            ; y
01EA   3000               M    movlw 0
01EB   001C               M    movwi ++SP 
01EC   31??           01036     movlp high(lbl_score)
                      01037     lit low(lbl_score)  
01ED   30??               M    movlw low(lbl_score)
01EE   001C               M    movwi ++SP 
01EF   2???           01038     call print_label
                      01039 ; print "LINES" label    
                      01040     lit WELL_WIDTH+3 ; x
01F0   300D               M    movlw WELL_WIDTH+3
01F1   001C               M    movwi ++SP 
                      01041     lit 12           ; y
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  11:31:51         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01F2   300C               M    movlw 12
01F3   001C               M    movwi ++SP 
01F4   31??           01042     movlp high(lbl_lines)
                      01043     lit low(lbl_lines)
01F5   30??               M    movlw low(lbl_lines)
01F6   001C               M    movwi ++SP 
01F7   2???           01044     call print_label
                      01045 ; variables initialization
01F8   1580           01046     bsf flags,F_GSTOP
01F9                  01047 clear_score:
01F9   0020           01048     banksel GAME_VAR
01FA   01??           01049     clrf scoreL
01FB   01??           01050     clrf scoreH
01FC   01??           01051     clrf droppedL
01FD   01??           01052     clrf droppedH
01FE   0008           01053     return
                      01054 
                      01055 ; drop 1 row
                      01056 ; input:
                      01057 ;   r  row to drop
                      01058 ; output:
                      01059 ;   none
01FF                  01060 drop1: ; ( r -- )
                      01061     reserve 1 ; r x  
01FF   3141               M     addfsr SP, 1 
0200                  01062 row_loop: ; y{r:1}
0200   300A           01063     movlw 10
0201   0081           01064     movwf T ; -- r x
0202                  01065 col_loop:  ; x{10:1}
                      01066     dup   ; -- r x x
0202   0801               M     movfw T
0203   001C               M     movwi ++SP
                      01067     pick 2
0204   3F7E               M     moviw -2[SP]
0205   0389           01068     decf WREG
                      01069     push  ; -- r x x r-1
0206   001C               M     movwi ++SP
0207   2???           01070     call get_pixel ; -- r x p
0208   00??           01071     movwf t0
                      01072     dup         ; r x x
0209   0801               M     movfw T
020A   001C               M     movwi ++SP
                      01073     pick 2
020B   3F7E               M     moviw -2[SP]
                      01074     push        ; r x x r
020C   001C               M     movwi ++SP
020D   08??           01075     movf t0,F
020E   1D03           01076     skpz
020F   3???           01077     bra drop00
0210   2???           01078     call clear_pixel ;  r x x r -- r x
0211   3???           01079     bra next_pixel
0212                  01080 drop00:
0212   2???           01081     call set_pixel ; r x x r -- r x
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  11:31:51         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0213                  01082 next_pixel:    
0213   0B81           01083     decfsz T    ; r x-1 
0214   3???           01084     bra col_loop
                      01085     dec_n 1  ; dec r
0215   3F7F               M     moviw -1[SP]
0216   0389               M     decf WREG,F
0217   3FFF               M     movwi -1[SP]
0218   1D03           01086     skpz 
0219   3???           01087     bra row_loop
                      01088     drop_n 2
021A   317E               M     addfsr SP,-2
021B   0008           01089     return
                      01090     
                      01091     
  00000000            01092 ROW_EMPTY equ 0     
  0000000A            01093 ROW_FULL equ 10 ; 10 bits in row
                      01094 ; query_row 
                      01095 ; check the state of well row
                      01096 ; input:
                      01097 ;   s number of bits set initialized at 0 by caller    
                      01098 ;   r row number: 0 top, 21 bottom  
                      01099 ; output:    
                      01100 ;   s={0:10}  number of bits set
021C                  01101 query_row: ; ( s=0 r -- s=0:10 )
                      01102     lit 10 ; s r x   ; check x from  10 to 1
021C   300A               M    movlw 10
021D   001C               M    movwi ++SP 
021E                  01103 qr00:
                      01104     dup   ; s r x x
021E   0801               M     movfw T
021F   001C               M     movwi ++SP
                      01105     pick 2 
0220   3F7E               M     moviw -2[SP]
                      01106     push  ; s r x x y
0221   001C               M     movwi ++SP
0222   2???           01107     call get_pixel ; -- s r x
0223   1903           01108     skpnz   ; Z modified by get_pixel
0224   3???           01109     bra qr01
                      01110     inc_n 2
0225   3F7E               M     moviw -2[SP]
0226   0A89               M     incf WREG,F
0227   3FFE               M     movwi -2[SP]
0228                  01111 qr01:    
0228   0B81           01112     decfsz T
0229   3???           01113     bra qr00
                      01114     drop_n 2 ; -- s
022A   317E               M     addfsr SP,-2
022B   0008           01115     return
                      01116 
                      01117 ; count and drop full rows
                      01118 ; input:
                      01119 ;   none
                      01120 ; output:
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  11:31:51         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01121 ;   n number of droppend rows
                      01122 ;condition:
                      01123 ;  check each row from bottom up
                      01124 ;  stop at first empty row
                      01125 ;  full rows are dropped    
022C                  01126 count_full: ; ( -- n)
                      01127     lit 0 ; full rows counter
022C   3000               M    movlw 0
022D   001C               M    movwi ++SP 
                      01128     lit 21 ; row number {21:1}
022E   3015               M    movlw 21
022F   001C               M    movwi ++SP 
0230                  01129 count_loop:
                      01130     lit 0   ; n r s  number of bits set
0230   3000               M    movlw 0
0231   001C               M    movwi ++SP 
                      01131     over    ; n r s r
0232   3F7F               M     moviw -1[SP]
                          M     push
0233   001C               M     movwi ++SP
0234   2???           01132     call query_row ; n r s r -- n r s
                      01133     pop     ; n r
0235   0017               M     moviw SP--
0236   1903           01134     skpnz
0237   3???           01135     bra count_done
0238   3A0A           01136     xorlw ROW_FULL
0239   1D03           01137     skpz
023A   3???           01138     bra next_row
                      01139 ; this is a full row    
                      01140     inc_n 1 ; increment n
023B   3F7F               M     moviw -1[SP]
023C   0A89               M     incf WREG,F
023D   3FFF               M     movwi -1[SP]
                      01141     dup    ; n r r
023E   0801               M     movfw T
023F   001C               M     movwi ++SP
0240   2???           01142     call drop1 ; n r r -- n r
0241   0A81           01143     incf T,F
0242                  01144 next_row:
0242   0B81           01145     decfsz T,F
0243   3???           01146     bra count_loop
0244                  01147 count_done:
                      01148     drop   ; n r -- n
0244   317F               M    addfsr SP,-1
0245   0008           01149     return
                      01150 
                      01151 ;new_tminos    
                      01152 ; generate a new tetriminos
                      01153 ; input:
                      01154 ;   none
                      01155 ; output:
                      01156 ;   none
0246                  01157 new_tminos:
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  11:31:51         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0246   0020           01158     banksel GAME_VAR
0247   3007           01159     movlw 7
0248   05??           01160     andwf randL,W
0249   3A07           01161     xorlw 7
024A   1D03           01162     skpz
024B   3A07           01163     xorlw 7
024C   00??           01164     movwf tetrim
024D   3003           01165     movlw 3
024E   05??           01166     andwf randH,W
024F   00??           01167     movwf angle
0250   3004           01168     movlw 4
0251   00??           01169     movwf tx
0252   01??           01170     clrf ty
0253   2???           01171     call print_tetrim ; -- f
0254   2???           01172     call print_tetrim ; -- f f
                      01173     drop
0255   317F               M    addfsr SP,-1
                      01174     pop
0256   0017               M     moviw SP--
0257   1D03           01175     skpz
0258   1580           01176     bsf flags, F_GSTOP
0259   0008           01177     return
                      01178 
                      01179 ;wait_start    
                      01180 ; wait player start signal
                      01181 ; button A pressed    
                      01182 ; input:
                      01183 ;   none
                      01184 ; output:
                      01185 ;   none
025A                  01186 wait_start:
                      01187 #ifdef SOUND_SUPPORT    
025A   0103           01188     clrw
025B   2???           01189     call korobeiniki
                      01190     push    ; count
025C   001C               M     movwi ++SP
                      01191     lit 0   ; sequence
025D   3000               M    movlw 0
025E   001C               M    movwi ++SP 
025F                  01192 koro:
025F   0A81           01193     incf T,F ; -- count sequence
0260   0801           01194     movfw T  ; WREG=sequence
0261   2???           01195     call korobeiniki
                      01196     push    ; -- count sequence duration
0262   001C               M     movwi ++SP
                      01197     inc_n 1 ;
0263   3F7F               M     moviw -1[SP]
0264   0A89               M     incf WREG,F
0265   3FFF               M     movwi -1[SP]
                      01198     pick 1  
0266   3F7F               M     moviw -1[SP]
0267   2???           01199     call korobeiniki
                      01200     push    ; -- count nidx duration note
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  11:31:51         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0268   001C               M     movwi ++SP
0269   2???           01201     call tone  ; -- count nidx 
                      01202     wait_sound
026A   1A00               M     btfsc flags,F_SND
026B   3???               M     bra $-1
026C   2???           01203     call read_pad
026D   1A00           01204     btfsc buttons, BTN_A
026E   3???           01205     bra wait_end
                      01206     dec_n 1
026F   3F7F               M     moviw -1[SP]
0270   0389               M     decf WREG,F
0271   3FFF               M     movwi -1[SP]
0272   1D03           01207     skpz
0273   3???           01208     bra koro
                      01209     drop_n 2
0274   317E               M     addfsr SP,-2
                      01210     pause 60
                          M     start_timer 60
0275   303C               M     movlw 60
0276   00??               M     movwf gtimer
0277   1500               M     bsf flags, F_GTMR
                          M     wait_timer
0278   1900               M     btfsc flags, F_GTMR
0279   3???               M     bra $-1
027A   3???           01211     bra wait_start
027B                  01212 wait_end:    
                      01213     drop_n 2
027B   317E               M     addfsr SP,-2
                      01214 #else
                      01215     pause 20
                      01216     call read_pad
                      01217     btfss buttons, BTN_A
                      01218     bra wait_start
                      01219 #endif    
027C   2???           01220     call clear_score
027D   1180           01221     bcf flags, F_GSTOP
027E   0008           01222     return
                      01223  
                      01224 ;coll_test
                      01225 ; collision test
                      01226 ; after rotation or translation
                      01227 ; undo last action if collision    
                      01228 ; input:
                      01229 ;   none
                      01230 ; output:
                      01231 ;   none
027F                  01232 coll_test: 
027F   2???           01233     call print_tetrim ; -- f
0280   2???           01234     call print_tetrim ; -- f f
                      01235     drop
0281   317F               M    addfsr SP,-1
                      01236     pop
0282   0017               M     moviw SP--
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  11:31:51         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0283   1903           01237     skpnz
0284   0008           01238     return
                      01239 ; collision occured undo last move    
0285   0020           01240     banksel GAME_VAR
                      01241 ;    movfw buttons
                      01242     case BTN_B, undo_drop_tetrim
0286   1A80               M     btfsc buttons,BTN_B
0287   3???               M     bra undo_drop_tetrim
                      01243     case BTN_UP, undo_rot_right
0288   1800               M     btfsc buttons,BTN_UP
0289   3???               M     bra undo_rot_right
                      01244     case BTN_DN, undo_rot_left
028A   1880               M     btfsc buttons,BTN_DN
028B   3???               M     bra undo_rot_left
                      01245     case BTN_RT, undo_move_right
028C   1980               M     btfsc buttons,BTN_RT
028D   3???               M     bra undo_move_right
                      01246     case BTN_LT, undo_move_left
028E   1900               M     btfsc buttons,BTN_LT
028F   3???               M     bra undo_move_left
0290   0008           01247     return
0291                  01248 undo_drop_tetrim:
0291   03??           01249     decf ty,F
0292   0008           01250     return
0293                  01251 undo_rot_right:
0293   03??           01252     decf angle,F
0294   3003           01253     movlw 3
0295   05??           01254     andwf angle,F
0296   0008           01255     return
0297                  01256 undo_rot_left:
0297   0A??           01257     incf angle,F
0298   3003           01258     movlw 3
0299   05??           01259     andwf angle,F
029A   0008           01260     return
029B                  01261 undo_move_right:
029B   03??           01262     decf tx,F
029C   0008           01263     return
029D                  01264 undo_move_left:
029D   0A??           01265     incf tx,F
029E   0008           01266     return
                      01267 
                      01268 ;update_display    
                      01269 ; print 'score' and 'dropped' values
                      01270 ; input:
                      01271 ;   none
                      01272 ; output:
                      01273 ;   none
029F                  01274 update_display:    
                      01275 ; print score
029F   0020           01276     banksel GAME_VAR
02A0   08??           01277     movfw scoreL
02A1   00??           01278     movwf accaL
02A2   08??           01279     movfw scoreH
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  11:31:51         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02A3   00??           01280     movwf accaH
                      01281     lit 6
02A4   3006               M    movlw 6
02A5   001C               M    movwi ++SP 
02A6   2???           01282     call print_int
                      01283 ;print dropped line
02A7   0020           01284     banksel GAME_VAR
02A8   08??           01285     movfw droppedL
02A9   00??           01286     movwf accaL
02AA   08??           01287     movfw droppedH
02AB   00??           01288     movwf accaH
                      01289     lit 18
02AC   3012               M    movlw 18
02AD   001C               M    movwi ++SP 
02AE   2???           01290     call print_int
02AF   0008           01291     return
                      01292 
                      01293 ;game_over
                      01294 ; signal game terminated
                      01295 ; input:
                      01296 ;   none
                      01297 ; output:
                      01298 ;   none
02B0                  01299 game_over:
                      01300     lit 10
02B0   300A               M    movlw 10
02B1   001C               M    movwi ++SP 
                      01301     lit 0
02B2   3000               M    movlw 0
02B3   001C               M    movwi ++SP 
02B4                  01302 clr00:    
                      01303     over
02B4   3F7F               M     moviw -1[SP]
                          M     push
02B5   001C               M     movwi ++SP
                      01304     over
02B6   3F7F               M     moviw -1[SP]
                          M     push
02B7   001C               M     movwi ++SP
02B8   2???           01305     call clear_pixel ; x y x y -- x y
                      01306     dec_n 1 ; x-=1
02B9   3F7F               M     moviw -1[SP]
02BA   0389               M     decf WREG,F
02BB   3FFF               M     movwi -1[SP]
02BC   1D03           01307     skpz
02BD   3???           01308     bra clr00
02BE   3015           01309     movlw 21
02BF   0081           01310     movwf T
                      01311     insert 1  ; counter 21
02C0   3FFF               M    movwi -1[SP]
02C1                  01312 drop21:
                      01313     dup    ; counter 21 21
02C1   0801               M     movfw T
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  11:31:51         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02C2   001C               M     movwi ++SP
02C3   2???           01314     call drop1 ; -- counter 21
                      01315     pause 6
                          M     start_timer 6
02C4   3006               M     movlw 6
02C5   00??               M     movwf gtimer
02C6   1500               M     bsf flags, F_GTMR
                          M     wait_timer
02C7   1900               M     btfsc flags, F_GTMR
02C8   3???               M     bra $-1
                      01316     pick 1
02C9   3F7F               M     moviw -1[SP]
02CA   0389           01317     decf WREG
                      01318     insert 1  ; -- counter-1 21
02CB   3FFF               M    movwi -1[SP]
02CC   1D03           01319     skpz
02CD   3???           01320     bra drop21
                      01321     drop_n 2
02CE   317E               M     addfsr SP,-2
02CF   0008           01322     return
                      01323 
                      01324 ;prompt
                      01325 ; print prompt message    
02D0                  01326 prompt:
                      01327     lit 0
02D0   3000               M    movlw 0
02D1   001C               M    movwi ++SP 
                      01328     lit 24
02D2   3018               M    movlw 24
02D3   001C               M    movwi ++SP 
02D4   31??           01329     movlp high(lbl_press)
                      01330     lit low(lbl_press)
02D5   30??               M    movlw low(lbl_press)
02D6   001C               M    movwi ++SP 
02D7   2???           01331     call print_label
02D8   0008           01332     return
                      01333     
                      01334 ;;;;;;;;;;;;;;;;;;;;;;;;;
                      01335 ;   game logic
                      01336 ;;;;;;;;;;;;;;;;;;;;;;;;;    
02D9                  01337 tetris:
02D9   2???           01338     call update_display
                      01339 ;print start prompt
02DA   2???           01340     call prompt
                      01341 ; wait button A press
                      01342 ; to start game    
02DB   2???           01343     call wait_start 
                      01344 ; delete prompt
02DC   2???           01345     call prompt
                      01346 ; game start here
02DD                  01347 game_loop:
                      01348 ; generate new tetriminos
                      01349 ; if collision at this stage
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  11:31:51         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01350 ; game is over
02DD   2???           01351     call new_tminos
02DE   1D80           01352     btfss flags, F_GSTOP
02DF   3???           01353     bra fall_loop
02E0   2???           01354     call game_over
02E1   2???           01355     call game_init
02E2   3???           01356     bra tetris
02E3                  01357 fall_loop: ; tetriminos fall in the well
02E3   2???           01358     call print_tetrim
                      01359     pop
02E4   0017               M     moviw SP--
                      01360     pause 10
                          M     start_timer 10
02E5   300A               M     movlw 10
02E6   00??               M     movwf gtimer
02E7   1500               M     bsf flags, F_GTMR
                          M     wait_timer
02E8   1900               M     btfsc flags, F_GTMR
02E9   3???               M     bra $-1
02EA   2???           01361     call print_tetrim ; erase tetriminos
                      01362     pop
02EB   0017               M     moviw SP--
                      01363 ; read pad
02EC   2???           01364     call read_pad
02ED   0020           01365     banksel GAME_VAR
                      01366     case BTN_B, drop_tetrim
02EE   1A80               M     btfsc buttons,BTN_B
02EF   3???               M     bra drop_tetrim
                      01367     case BTN_UP, rot_right
02F0   1800               M     btfsc buttons,BTN_UP
02F1   3???               M     bra rot_right
                      01368     case BTN_DN, rot_left
02F2   1880               M     btfsc buttons,BTN_DN
02F3   3???               M     bra rot_left
                      01369     case BTN_RT, move_right
02F4   1980               M     btfsc buttons,BTN_RT
02F5   3???               M     bra move_right
                      01370     case BTN_LT, move_left
02F6   1900               M     btfsc buttons,BTN_LT
02F7   3???               M     bra move_left
02F8   3???           01371     bra move_down
02F9                  01372 drop_tetrim:
02F9   0020           01373     banksel GAME_VAR
02FA   0A??           01374     incf ty,F
02FB   2???           01375     call coll_test
02FC   1E80           01376     btfss flags, F_COLL
02FD   3???           01377     bra $-4
02FE   2???           01378     call print_tetrim
                      01379     pop
02FF   0017               M     moviw SP--
0300   3???           01380     bra score_update
0301                  01381 rot_left:
0301   03??           01382     decf angle,F
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  11:31:51         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0302   3003           01383     movlw 3
0303   05??           01384     andwf angle,F
0304   2???           01385     call coll_test
0305   3???           01386     bra move_down
0306                  01387 rot_right:
0306   0A??           01388     incf angle,F
0307   3003           01389     movlw 3
0308   05??           01390     andwf angle,F
0309   2???           01391     call coll_test
030A   3???           01392     bra move_down
030B                  01393 move_left:
030B   03??           01394     decf tx,F
030C   2???           01395     call coll_test
030D   3???           01396     bra move_down
030E                  01397 move_right:
030E   0A??           01398     incf tx,F
030F   2???           01399     call coll_test
                      01400 ; move down
0310                  01401 move_down:
0310   1280           01402     bcf flags, F_COLL
0311   0020           01403     banksel GAME_VAR
0312   0A??           01404     incf ty,F ; tetriminos fall
0313   2???           01405     call print_tetrim ; -- f
0314   2???           01406     call print_tetrim ; -- f f
                      01407     drop
0315   317F               M    addfsr SP,-1
                      01408     pop
0316   0017               M     moviw SP--
0317   1903           01409     skpnz
0318   3???           01410     bra fall_loop
0319   0020           01411     banksel GAME_VAR
031A   03??           01412     decf ty,F
031B   2???           01413     call print_tetrim
                      01414     pop
031C   0017               M     moviw SP--
031D                  01415 score_update:    
                      01416 ; check full row and clean
031D   2???           01417     call update_display ; erase numbers
031E   2???           01418     call count_full
                      01419 ; add full row count to dropped variable
031F   0020           01420     banksel GAME_VAR
0320   0801           01421     movfw T
0321   07??           01422     addwf droppedL,F ; 
0322   0103           01423     clrw
0323   3D??           01424     addwfc droppedH
                      01425 ; count points = 2^n where n is count of dropped rows {1:4}    
0324   0881           01426     movf T,F
0325   1903           01427     skpnz
0326   3???           01428     bra add_points
0327   3001           01429     movlw 1
0328   3589           01430     lslf WREG
0329   0B81           01431     decfsz T,F
032A   3???           01432     bra $-2
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  11:31:51         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

032B                  01433 add_points:
032B   07??           01434     addwf scoreL
032C   0103           01435     clrw
032D   3D??           01436     addwfc scoreH
                      01437     drop 
032E   317F               M    addfsr SP,-1
032F   2???           01438     call update_display ; display new values
0330   3???           01439     bra game_loop
0331   0008           01440     return
                      01441 
                      01442 ;;;;;;;;;;;;;;;;;;;;;;;;;;
                      01443 ; hardware initialization
                      01444 ;;;;;;;;;;;;;;;;;;;;;;;;;;    
0332                  01445 init:
                      01446     pstack_init
0332   0187               M     clrf FSR1H
0333   301F               M     movlw S0
0334   0086               M     movwf FSR1L
                      01447 ; ADC configuration
0335   0021           01448     banksel ADCON0
0336   300C           01449     movlw (PAD_CHS<<CHS0)
0337   009D           01450     movwf ADCON0
0338   3020           01451     movlw (2<<ADCS0)
0339   009E           01452     movwf ADCON1
033A   0024           01453     banksel WPUA
033B   120C           01454     bcf WPUA, PAD_PIN
                      01455 ;;;;;;;;;;;;;;;;;;;;;    
033C   0021           01456     banksel TRISA
033D   30F8           01457     movlw ~((1<<SYNC_OUT)|(1<<VIDEO_OUT)|(1<<LED_PIN))
033E   058C           01458     andwf TRISA,F
033F   0022           01459     banksel VIDEO_LAT
0340   108C           01460     bcf VIDEO_LAT,VIDEO_OUT
0341   100C           01461     bcf LATA,LED_PIN
                      01462 #ifdef SOUND_SUPPORT    
                      01463 ; audio pwm initialization
0342   120C           01464     bcf LATA,AUDIO_PIN
0343   003B           01465     banksel PWM2PH
0344   01A1           01466     clrf PWM2PHL
0345   01A2           01467     clrf PWM2PHH
0346   01A7           01468     clrf PWM2OFL
0347   01A8           01469     clrf PWM2OFH
0348   172B           01470     bsf AUDIO_PWMCON,OE
0349   0022           01471     banksel APFCON
034A   149D           01472     bsf APFCON,P2SEL
                      01473 #endif   
                      01474 ;configure EUSART in sychronsous mode
                      01475 ;to use as pixel serializer
034B   0023           01476     banksel SPBRG
034C   3002           01477     movlw 2
034D   009B           01478     movwf SPBRGL
034E   019C           01479     clrf SPBRGH
034F   019A           01480     clrf TXREG
0350   30B0           01481     movlw (1<<SYNC)|(1<<CSRC)|(1<<TXEN)
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  11:31:51         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0351   009E           01482     movwf TXSTA
0352   179D           01483     bsf RCSTA, SPEN
0353   30CF           01484     movlw ~((1<<CREN)|(1<<SREN))
0354   059D           01485     andwf RCSTA
                      01486 ; configure pwm video sync for horizontal period
0355   003B           01487     banksel SYNC_PWMDCH
0356   01B1           01488     clrf SYNC_PWMPH
0357   01B2           01489     clrf SYNC_PWMPH+1
0358   01BF           01490     clrf SYNC_PWMLDCON
0359   30F5           01491     movlw HORZ_PERIOD&0XFF
035A   00B5           01492     movwf SYNC_PWMPRL
035B   3004           01493     movlw HORZ_PERIOD>>8
035C   00B6           01494     movwf SYNC_PWMPRH
035D   01BE           01495     clrf SYNC_PWMCLKCON
035E   30D0           01496     movlw (3<<OE)|(1<<POL)
035F   00BB           01497     movwf SYNC_PWMCON
0360   305E           01498     movlw HORZ_PULSE&0xff
0361   00B3           01499     movwf SYNC_PWMDCL
0362   3000           01500     movlw HORZ_PULSE>>8
0363   00B4           01501     movwf SYNC_PWMDCH
0364   17BF           01502     bsf SYNC_PWMLDCON,LDA
                      01503    ;enable video interrupt on period match
0365   103D           01504     bcf SYNC_PWMINTF,PRIF
0366   143C           01505     bsf SYNC_PWMINTE,PRIE
                      01506     ; enable peripheral interrupt
0367   0021           01507     banksel SYNC_PIE
0368   1713           01508     bsf SYNC_PIE,SYNC_IE
                      01509     ;enable interrupts
0369   30C0           01510     movlw (1<<GIE)|(1<<PEIE)
036A   008B           01511     movwf INTCON
036B   01??           01512     clrf lcountL
036C   01??           01513     clrf lcountH
036D   01??           01514     clrf flags
                      01515     ; seed lfsr PRNG
036E   30AC           01516     movlw 0xAC
036F   00??           01517     movwf randL
0370   30E1           01518     movlw 0xE1
0371   00??           01519     movwf randH
                      01520 
                      01521 
                      01522 ;;;;;;;;;;;;;;;;;;;;;
                      01523 ;  main function
                      01524 ;;;;;;;;;;;;;;;;;;;;;    
0372                  01525 main:
0372   2???           01526     call game_init
0373   2???           01527     call tetris
0374   3???           01528     bra main
                      01529   
                      01530 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      01531 ;   data tables
                      01532 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      01533 
                      01534 ; **************** encoding ************************************************
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  11:31:51         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01535 ; enhanced PIC instructions are coded on 14 bits
                      01536 ; these 14 bits can be read as data using program memory
                      01537 ; writing/reading mechanism, see datasheet chapter 10 for detail.
                      01538 ; the 'dw' assembler directive encode data in those 14 bits contrary to 'dt'
                      01539 ; directive which encode a single byte as a RETLW instruction.
                      01540 ; So we get a 50% compression by encoding 3 nibbles/program word. 
                      01541 ; The encoding used in the following tables is as follow:    
                      01542 ; bits 13:12  number of nibbles where 0 means there is more than 3 nibbles
                      01543 ; in this data chunk so 1 or more other words follow this one.    
                      01544 ; other 12 bits are 3 nibbles (i.e. 4 bits slices).
                      01545 ;****************************************************************************
                      01546 
0375                  01547 digits: ; each digit is 5 rows
0375   0EAA 2AE0      01548     dw 0x0EAA,0x2AE0 ; 0
0377   04C4 24E0      01549     dw 0x04C4,0x24E0 ; 1
0379   0E2E 28E0      01550     dw 0x0E2E,0x28E0 ; 2
037B   0E2E 22E0      01551     dw 0x0E2E,0x22E0 ; 3
037D   0AAE 2220      01552     dw 0x0AAE,0x2220 ; 4
037F   0E8E 22E0      01553     dw 0x0E8E,0x22E0 ; 5
0381   088E 2AE0      01554     dw 0x088E,0x2AE0 ; 6
0383   0E22 2220      01555     dw 0x0E22,0x2220 ; 7
0385   0EAE 2AE0      01556     dw 0x0EAE,0x2AE0 ; 8
0387   0EAE 2220      01557     dw 0x0EAE,0x2220 ; 9
                      01558 ; letters needed for 'SCORE' and 'LINES" labels
0389   0EAE 2AA0      01559     dw 0x0EAE,0x2AA0 ; A  code 10
038B   0688 2860      01560     dw 0x0688,0x2860 ; C  code 11
038D   0E8E 28E0      01561     dw 0x0E8E,0x28E0 ; E  code 12
038F   0E44 24E0      01562     dw 0x0E44,0x24E0 ; I  code 13
0391   0888 28E0      01563     dw 0x0888,0x28E0 ; L  code 14
0393   08CA 2AA0      01564     dw 0x08CA,0x2AA0 ; N  code 15
0395   04AA 2A40      01565     dw 0x04AA,0x2A40 ; O  code 16
0397   0EAE 2880      01566     dw 0x0EAE,0x2880 ; P  code 17
0399   08EA 2880      01567     dw 0x08EA,0x2880 ; R  code 18
039B   0684 22C0      01568     dw 0x0684,0x22C0 ; S  code 19
039D   0040 2400      01569     dw 0x0040,0x2400 ; :  code 20
039F   2000 2000      01570     dw 0x2000,0x2000 ; space code 21
                      01571 
                      01572 ; comments notation: Rn clockwise rotation n*90 degr.    
                      01573 ; note that vertical I as 4 rows so it needs 2 words    
03A1                  01574 tetriminos: 
03A1   388C           01575     dw 0x388C ; L R0
03A2   30E8           01576     dw 0x30E8 ; L R1
03A3   3C44           01577     dw 0x3C44 ; L R2
03A4   32E0           01578     dw 0x32E0 ; L R3
03A5   344C           01579     dw 0x344C ; J R0
03A6   38E0           01580     dw 0x38E0 ; J R1
03A7   3644           01581     dw 0x3644 ; J R2
03A8   30E2           01582     dw 0x30E2 ; J R3
03A9   3CC0           01583     dw 0x3CC0 ; O R0 
03AA   3CC0           01584     dw 0x3CC0 ; O R2 
03AB   3CC0           01585     dw 0x3CC0 ; O R2 
03AC   3CC0           01586     dw 0x3CC0 ; O R3 
03AD   36C0           01587     dw 0x36C0 ; S R0
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  11:31:51         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03AE   3462           01588     dw 0x3462 ; S R1
03AF   36C0           01589     dw 0x36C0 ; S R2
03B0   3462           01590     dw 0x3462 ; S R3
03B1   3E40           01591     dw 0x3E40 ; T R0
03B2   3262           01592     dw 0x3262 ; T R1
03B3   304E           01593     dw 0x304E ; T R2
03B4   38C8           01594     dw 0x38C8 ; T R3
03B5   3C60           01595     dw 0x3C60 ; Z R0
03B6   34C8           01596     dw 0x34C8 ; Z R1
03B7   3C60           01597     dw 0x3C60 ; Z R3
03B8   34C8           01598     dw 0x34C8 ; Z R4
                      01599 ; annoying! I tetriminos need a special treatment 
                      01600 ; because vertical I need 2 words for encoding.   
03B9   0444 1400      01601     dw 0x0444,0x1400 ; I R0  
03BB   300F 1000      01602     dw 0x300F,0x1000 ; I R1  second word is filling for alignment
03BD   0222 1200      01603     dw 0x0222,0x1200 ; I R2
03BF   20F0 1000      01604     dw 0x20F0,0x1000 ; I R3  
                      01605 
                      01606 #ifdef SOUND_SUPPORT
                      01607 ; tempered scale timer period values    
03C1                  01608 tone_pr:
03C1   000B           01609     brw
03C2   3402 34ED      01610     dt 0x02, 0xed   ; 330   (MI4)   0
03C4   34B5 34DF      01611     dt 0xb5, 0xdf   ; 349   (FA4)   1
03C6   3428 34D3      01612     dt 0x28, 0xd3   ; 370   (FA4#)  2
03C8   344C 34C7      01613     dt 0x4c, 0xc7   ; 392   (SOL4)  3
03CA   341E 34BC      01614     dt 0x1e, 0xbc   ; 415   (SOL4#) 4
03CC   348F 34B1      01615     dt 0x8f, 0xb1   ; 440   (LA4)   5
03CE   3498 34A7      01616     dt 0x98, 0xa7   ; 466   (LA4#)  6
03D0   3430 349E      01617     dt 0x30, 0x9e   ; 494   (SI4)   7
03D2   344F 3495      01618     dt 0x4f, 0x95   ; 523hz (DO5)   8
03D4   34ED 348C      01619     dt 0xed, 0x8c   ; 554   (DO5#)  9
03D6   3404 3485      01620     dt 0x04, 0x85   ; 587   (RÉ5)   10
03D8   348D 347D      01621     dt 0x8d, 0x7d   ; 622   (RÉ5#)  11
03DA   3481 3476      01622     dt 0x81, 0x76   ; 659   (MI5)   12
03DC   34DA 346F      01623     dt 0xda, 0x6f   ; 698   (FA5)   13
03DE   3493 3469      01624     dt 0x93, 0x69   ; 740   (FA5#)  14
03E0   34A6 3463      01625     dt 0xa6, 0x63   ; 784   (SOL5)  15
03E2   340F 345E      01626     dt 0x0f, 0x5e   ; 831   (SOL5#) 16
03E4   34C7 3458      01627     dt 0xc7, 0x58   ; 880   (LA5)   17
03E6   34CC 3453      01628     dt 0xcc, 0x53   ; 932   (LA5#)  18
03E8   3418 344F      01629     dt 0x18, 0x4f   ; 988   (SI5)   19
03EA   3482 3442      01630     dt 0x82, 0x42   ; 1046hz (do6)  20
03EC   3400 3400      01631     dt 0, 0         ; silence       21
                      01632 
                      01633     
                      01634 ; a russian folklore soung    
03EE                  01635 korobeiniki:
                      01636     ;nombre de notes
03EE   000B           01637     brw
03EF   3422           01638     dt 34
                      01639     ; duré, note
03F0   342D 3400      01640     dt 45, 0 
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  11:31:51         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03F2   340F 3404      01641     dt 15, 4
03F4   341E 3407      01642     dt 30, 7
03F6   340F 3403      01643     dt 15, 3
03F8   340F 3400      01644     dt 15, 0
                      01645     
03FA   342D 3405      01646     dt 45, 5
03FC   340F 3409      01647     dt 15, 9
03FE   341E 340C      01648     dt 30, 12
0400   340F 340A      01649     dt 15, 10
0402   340F 3408      01650     dt 15, 8
                      01651     
0404   342D 3407      01652     dt 45, 7
0406   340F 3408      01653     dt 15, 8
0408   341E 340A      01654     dt 30, 10
040A   341E 340C      01655     dt 30, 12
                      01656     
040C   341E 3408      01657     dt 30, 8
040E   341E 3405      01658     dt 30, 5
0410   343C 3405      01659     dt 60, 5
                      01660     
0412   342D 340D      01661     dt 45, 13
0414   340F 340F      01662     dt 15, 15
0416   341E 3411      01663     dt 30, 17
0418   340F 340F      01664     dt 15, 15
041A   340F 340D      01665     dt 15, 13
                      01666     
041C   342D 340C      01667     dt 45, 12
041E   340F 340D      01668     dt 15, 13
0420   341E 340C      01669     dt 30, 12
0422   340F 340A      01670     dt 15, 10
0424   340F 3408      01671     dt 15, 8
                      01672     
0426   342D 3407      01673     dt 45, 7
0428   340F 3408      01674     dt 15, 8
042A   341E 340A      01675     dt 30, 10
042C   341E 340C      01676     dt 30, 12
                      01677     
042E   341E 3408      01678     dt 30, 8
0430   341E 3405      01679     dt 30, 5
0432   343C 3405      01680     dt 60, 5
                      01681     
                      01682  #endif
                      01683 
0434                  01684 lbl_score: ; "SCORE" label
0434   3413 340B 3410 01685     dt 19,11,16,18,12,20,255
       3412 340C 3414 
       34FF 
                      01686     
043B                  01687 lbl_lines: ; "LINES"  label
043B   340E 340D 340F 01688     dt 14,13,15,12,19,20,255
       340C 3413 3414 
       34FF 
                      01689 
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  11:31:51         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0442                  01690 lbl_press: ; "PRESS A" label
0442   3411 3412 340C 01691     dt 17,18,12,19,19,21,10,255
       3413 3413 3415 
       340A 34FF 
                      01692 
                      01693     
                      01694  
3FE7 1EFF             01695     end
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  11:31:51         PAGE 40


SYMBOL TABLE
  LABEL                             VALUE 

ABDEN                             00000000
ABDOVF                            00000007
ADCON0                            0000009D
ADCON1                            0000009E
ADCON2                            0000009F
ADCS0                             00000004
ADCS1                             00000005
ADCS2                             00000006
ADC_PIN                           00000004
ADDEN                             00000003
ADFM                              00000007
ADFVR0                            00000000
ADFVR1                            00000001
ADGO                              00000001
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADPREF0                           00000000
ADPREF1                           00000001
ADRES                             0000009B
ADRESH                            0000009C
ADRESL                            0000009B
ANSA0                             00000000
ANSA1                             00000001
ANSA2                             00000002
ANSA4                             00000004
ANSELA                            0000018C
APFCON                            0000011D
APFCON0                           0000011D
AUDIO_PIN                         00000004
AUDIO_PWMCLKCON                   00000DAE
AUDIO_PWMCON                      00000DAB
AUDIO_PWMDCH                      00000DA4
AUDIO_PWMDCL                      00000DA3
AUDIO_PWMLDCON                    00000DAF
AUDIO_PWMPRH                      00000DA6
AUDIO_PWMPRL                      00000DA5
AUDIO_PWMTMR                      00000DA9
A_THR                             00000040
BAUDCON                           0000019F
BORCON                            00000116
BORFS                             00000006
BORRDY                            00000000
BPL                               00000006
BRG16                             00000003
BRGH                              00000002
BSR                               00000008
BSR0                              00000000
BSR1                              00000001
BSR2                              00000002
BSR3                              00000003
BSR4                              00000004
BSR_SHAD                          00000FE6
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  11:31:51         PAGE 41


SYMBOL TABLE
  LABEL                             VALUE 

BTN_A                             00000004
BTN_B                             00000005
BTN_DN                            00000001
BTN_LT                            00000002
BTN_RT                            00000003
BTN_UP                            00000000
BUFFER_SIZE                       000000C0
B_THR                             00000095
C                                 00000000
C1HYS                             00000001
C1IE                              00000005
C1IF                              00000005
C1INTN                            00000006
C1INTP                            00000007
C1NCH0                            00000000
C1NCH1                            00000001
C1NCH2                            00000002
C1OE                              00000005
C1ON                              00000007
C1OUT                             00000006
C1PCH0                            00000004
C1PCH1                            00000005
C1POL                             00000004
C1SP                              00000002
C1SYNC                            00000000
CDAFVR0                           00000002
CDAFVR1                           00000003
CFGS                              00000006
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CHS4                              00000006
CM1CON0                           00000111
CM1CON1                           00000112
CMOUT                             00000115
CREN                              00000004
CS0                               00000000
CS1                               00000001
CSRC                              00000007
CWG1CON0                          00000693
CWG1CON1                          00000694
CWG1CON2                          00000695
CWG1DBF                           00000692
CWG1DBF0                          00000000
CWG1DBF1                          00000001
CWG1DBF2                          00000002
CWG1DBF3                          00000003
CWG1DBF4                          00000004
CWG1DBF5                          00000005
CWG1DBR                           00000691
CWG1DBR0                          00000000
CWG1DBR1                          00000001
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  11:31:51         PAGE 42


SYMBOL TABLE
  LABEL                             VALUE 

CWG1DBR2                          00000002
CWG1DBR3                          00000003
CWG1DBR4                          00000004
CWG1DBR5                          00000005
CWGASEL                           00000006
CWGBSEL                           00000005
C_SHAD                            00000000
DACCON0                           00000118
DACCON1                           00000119
DACEN                             00000007
DACLPS                            00000006
DACOE                             00000005
DACPSS0                           00000002
DACPSS1                           00000003
DACR0                             00000000
DACR1                             00000001
DACR2                             00000002
DACR3                             00000003
DACR4                             00000004
DC                                00000001
DCIE                              00000001
DCIF                              00000001
DC_SHAD                           00000001
DN_THR                            000000D8
EN                                00000007
F                                 00000001
FCY                               004C4B40
FERR                              00000002
FIRST_VIDEO                       00000046
FOSC                              01312D00
FREE                              00000004
FSR0                              00000004
FSR0H                             00000005
FSR0H_SHAD                        00000FE9
FSR0L                             00000004
FSR0L_SHAD                        00000FE8
FSR0_SHAD                         00000FE8
FSR1                              00000006
FSR1H                             00000007
FSR1H_SHAD                        00000FEB
FSR1L                             00000006
FSR1L_SHAD                        00000FEA
FSR1_SHAD                         00000FEA
FVRCON                            00000117
FVREN                             00000007
FVRRDY                            00000006
F_COLL                            00000005
F_EVEN                            00000001
F_GSTOP                           00000003
F_GTMR                            00000002
F_SND                             00000004
F_VSYNC                           00000000
G1ARSEN                           00000006
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  11:31:51         PAGE 43


SYMBOL TABLE
  LABEL                             VALUE 

G1ASDLA0                          00000004
G1ASDLA1                          00000005
G1ASDLB0                          00000006
G1ASDLB1                          00000007
G1ASDSC1                          00000002
G1ASDSFLT                         00000001
G1ASE                             00000007
G1CS0                             00000000
G1EN                              00000007
G1IS0                             00000000
G1IS1                             00000001
G1IS2                             00000002
G1OEA                             00000005
G1OEB                             00000006
G1POLA                            00000003
G1POLB                            00000004
GAME_VAR                          00000000
GIE                               00000007
GO                                00000001
GO_NOT_DONE                       00000001
HFIOFL                            00000003
HFIOFR                            00000004
HFIOFS                            00000000
HORZ_DLY                          00000032
HORZ_PERIOD                       000004F5
HORZ_PULSE                        0000005E
INDF0                             00000000
INDF1                             00000001
INLVLA                            0000038C
INLVLA0                           00000000
INLVLA1                           00000001
INLVLA2                           00000002
INLVLA3                           00000003
INLVLA4                           00000004
INLVLA5                           00000005
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IOCAF                             00000393
IOCAF0                            00000000
IOCAF1                            00000001
IOCAF2                            00000002
IOCAF3                            00000003
IOCAF4                            00000004
IOCAF5                            00000005
IOCAN                             00000392
IOCAN0                            00000000
IOCAN1                            00000001
IOCAN2                            00000002
IOCAN3                            00000003
IOCAN4                            00000004
IOCAN5                            00000005
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  11:31:51         PAGE 44


SYMBOL TABLE
  LABEL                             VALUE 

IOCAP                             00000391
IOCAP0                            00000000
IOCAP1                            00000001
IOCAP2                            00000002
IOCAP3                            00000003
IOCAP4                            00000004
IOCAP5                            00000005
IOCIE                             00000003
IOCIF                             00000000
IRCF0                             00000003
IRCF1                             00000004
IRCF2                             00000005
IRCF3                             00000006
LAST_LINE                         00000106
LAST_VIDEO                        000000C5
LATA                              0000010C
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA4                             00000004
LATA5                             00000005
LDA                               00000007
LDS0                              00000000
LDS1                              00000001
LDT                               00000006
LED_PIN                           00000000
LFIOFR                            00000001
LFSR_TAPS                         000000B4
LT_THR                            000000D1
LWLO                              00000005
MC1OUT                            00000000
MFIOFR                            00000002
MODE0                             00000002
MODE1                             00000003
MPWM1EN                           00000000
MPWM1LD                           00000000
MPWM1OUT                          00000000
MPWM2EN                           00000001
MPWM2LD                           00000001
MPWM2OUT                          00000001
MPWM3EN                           00000002
MPWM3LD                           00000002
MPWM3OUT                          00000002
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RI                            00000002
NOT_RMCLR                         00000003
NOT_RWDT                          00000004
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_WPUEN                         00000007
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  11:31:51         PAGE 45


SYMBOL TABLE
  LABEL                             VALUE 

ODA0                              00000000
ODA1                              00000001
ODA2                              00000002
ODA4                              00000004
ODA5                              00000005
ODCONA                            0000028C
OE                                00000006
OERR                              00000001
OFIE                              00000003
OFIF                              00000003
OFM0                              00000005
OFM1                              00000006
OFO                               00000004
OFS0                              00000000
OFS1                              00000001
OPTION_REG                        00000095
OSCCON                            00000099
OSCSTAT                           0000009A
OSCTUNE                           00000098
OSTS                              00000005
OUT                               00000005
P1SEL                             00000000
P2SEL                             00000001
PAD_CHS                           00000003
PAD_PIN                           00000004
PCL                               00000002
PCLATH                            0000000A
PCLATH_SHAD                       00000FE7
PCON                              00000096
PEIE                              00000006
PHIE                              00000002
PHIF                              00000002
PIE1                              00000091
PIE2                              00000092
PIE3                              00000093
PIR1                              00000011
PIR2                              00000012
PIR3                              00000013
PIXEL_TXREG                       0000019A
PLLR                              00000006
PMADR                             00000191
PMADRH                            00000192
PMADRL                            00000191
PMCON1                            00000195
PMCON2                            00000196
PMDAT                             00000193
PMDATH                            00000194
PMDATL                            00000193
POL                               00000004
PORTA                             0000000C
PR2                               0000001B
PRIE                              00000000
PRIF                              00000000
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  11:31:51         PAGE 46


SYMBOL TABLE
  LABEL                             VALUE 

PS0_OPTION_REG                    00000000
PS0_PWM1CLKCON                    00000004
PS0_PWM2CLKCON                    00000004
PS0_PWM3CLKCON                    00000004
PS1_OPTION_REG                    00000001
PS1_PWM1CLKCON                    00000005
PS1_PWM2CLKCON                    00000005
PS1_PWM3CLKCON                    00000005
PS2_OPTION_REG                    00000002
PS2_PWM1CLKCON                    00000006
PS2_PWM2CLKCON                    00000006
PS2_PWM3CLKCON                    00000006
PSA                               00000003
PWM1CLKCON                        00000D9E
PWM1CON                           00000D9B
PWM1CS0                           00000000
PWM1CS1                           00000001
PWM1DC                            00000D93
PWM1DCH                           00000D94
PWM1DCH0                          00000000
PWM1DCH1                          00000001
PWM1DCH2                          00000002
PWM1DCH3                          00000003
PWM1DCH4                          00000004
PWM1DCH5                          00000005
PWM1DCH6                          00000006
PWM1DCH7                          00000007
PWM1DCIE                          00000001
PWM1DCIF                          00000001
PWM1DCL                           00000D93
PWM1DCL0                          00000000
PWM1DCL1                          00000001
PWM1DCL2                          00000002
PWM1DCL3                          00000003
PWM1DCL4                          00000004
PWM1DCL5                          00000005
PWM1DCL6                          00000006
PWM1DCL7                          00000007
PWM1EN                            00000007
PWM1EN_A                          00000000
PWM1IE                            00000004
PWM1IF                            00000004
PWM1INTCON                        00000D9C
PWM1INTE                          00000D9C
PWM1INTF                          00000D9D
PWM1INTFLG                        00000D9D
PWM1LD                            00000007
PWM1LDA_A                         00000000
PWM1LDCON                         00000D9F
PWM1LDM                           00000006
PWM1LDS0                          00000000
PWM1LDS1                          00000001
PWM1MODE0                         00000002
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  11:31:51         PAGE 47


SYMBOL TABLE
  LABEL                             VALUE 

PWM1MODE1                         00000003
PWM1OE                            00000006
PWM1OF                            00000D97
PWM1OFCON                         00000DA0
PWM1OFH                           00000D98
PWM1OFH0                          00000000
PWM1OFH1                          00000001
PWM1OFH2                          00000002
PWM1OFH3                          00000003
PWM1OFH4                          00000004
PWM1OFH5                          00000005
PWM1OFH6                          00000006
PWM1OFH7                          00000007
PWM1OFIE                          00000003
PWM1OFIF                          00000003
PWM1OFL                           00000D97
PWM1OFL0                          00000000
PWM1OFL1                          00000001
PWM1OFL2                          00000002
PWM1OFL3                          00000003
PWM1OFL4                          00000004
PWM1OFL5                          00000005
PWM1OFL6                          00000006
PWM1OFL7                          00000007
PWM1OFM0                          00000005
PWM1OFM1                          00000006
PWM1OFMC                          00000004
PWM1OFS0                          00000000
PWM1OFS1                          00000001
PWM1OUT                           00000005
PWM1OUT_A                         00000000
PWM1PH                            00000D91
PWM1PHH                           00000D92
PWM1PHH0                          00000000
PWM1PHH1                          00000001
PWM1PHH2                          00000002
PWM1PHH3                          00000003
PWM1PHH4                          00000004
PWM1PHH5                          00000005
PWM1PHH6                          00000006
PWM1PHH7                          00000007
PWM1PHIE                          00000002
PWM1PHIF                          00000002
PWM1PHL                           00000D91
PWM1PHL0                          00000000
PWM1PHL1                          00000001
PWM1PHL2                          00000002
PWM1PHL3                          00000003
PWM1PHL4                          00000004
PWM1PHL5                          00000005
PWM1PHL6                          00000006
PWM1PHL7                          00000007
PWM1POL                           00000004
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  11:31:51         PAGE 48


SYMBOL TABLE
  LABEL                             VALUE 

PWM1PR                            00000D95
PWM1PRH                           00000D96
PWM1PRH0                          00000000
PWM1PRH1                          00000001
PWM1PRH2                          00000002
PWM1PRH3                          00000003
PWM1PRH4                          00000004
PWM1PRH5                          00000005
PWM1PRH6                          00000006
PWM1PRH7                          00000007
PWM1PRIE                          00000000
PWM1PRIF                          00000000
PWM1PRL                           00000D95
PWM1PRL0                          00000000
PWM1PRL1                          00000001
PWM1PRL2                          00000002
PWM1PRL3                          00000003
PWM1PRL4                          00000004
PWM1PRL5                          00000005
PWM1PRL6                          00000006
PWM1PRL7                          00000007
PWM1PS0                           00000004
PWM1PS1                           00000005
PWM1PS2                           00000006
PWM1TMR                           00000D99
PWM1TMRH                          00000D9A
PWM1TMRH0                         00000000
PWM1TMRH1                         00000001
PWM1TMRH2                         00000002
PWM1TMRH3                         00000003
PWM1TMRH4                         00000004
PWM1TMRH5                         00000005
PWM1TMRH6                         00000006
PWM1TMRH7                         00000007
PWM1TMRL                          00000D99
PWM1TMRL0                         00000000
PWM1TMRL1                         00000001
PWM1TMRL2                         00000002
PWM1TMRL3                         00000003
PWM1TMRL4                         00000004
PWM1TMRL5                         00000005
PWM1TMRL6                         00000006
PWM1TMRL7                         00000007
PWM2CLKCON                        00000DAE
PWM2CON                           00000DAB
PWM2CS0                           00000000
PWM2CS1                           00000001
PWM2DC                            00000DA3
PWM2DCH                           00000DA4
PWM2DCH0                          00000000
PWM2DCH1                          00000001
PWM2DCH2                          00000002
PWM2DCH3                          00000003
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  11:31:51         PAGE 49


SYMBOL TABLE
  LABEL                             VALUE 

PWM2DCH4                          00000004
PWM2DCH5                          00000005
PWM2DCH6                          00000006
PWM2DCH7                          00000007
PWM2DCIE                          00000001
PWM2DCIF                          00000001
PWM2DCL                           00000DA3
PWM2DCL0                          00000000
PWM2DCL1                          00000001
PWM2DCL2                          00000002
PWM2DCL3                          00000003
PWM2DCL4                          00000004
PWM2DCL5                          00000005
PWM2DCL6                          00000006
PWM2DCL7                          00000007
PWM2EN                            00000007
PWM2EN_A                          00000001
PWM2IE                            00000005
PWM2IF                            00000005
PWM2INTCON                        00000DAC
PWM2INTE                          00000DAC
PWM2INTF                          00000DAD
PWM2INTFLG                        00000DAD
PWM2LD                            00000007
PWM2LDA_A                         00000001
PWM2LDCON                         00000DAF
PWM2LDM                           00000006
PWM2LDS0                          00000000
PWM2LDS1                          00000001
PWM2MODE0                         00000002
PWM2MODE1                         00000003
PWM2OE                            00000006
PWM2OF                            00000DA7
PWM2OFCON                         00000DB0
PWM2OFH                           00000DA8
PWM2OFH0                          00000000
PWM2OFH1                          00000001
PWM2OFH2                          00000002
PWM2OFH3                          00000003
PWM2OFH4                          00000004
PWM2OFH5                          00000005
PWM2OFH6                          00000006
PWM2OFH7                          00000007
PWM2OFIE                          00000003
PWM2OFIF                          00000003
PWM2OFL                           00000DA7
PWM2OFL0                          00000000
PWM2OFL1                          00000001
PWM2OFL2                          00000002
PWM2OFL3                          00000003
PWM2OFL4                          00000004
PWM2OFL5                          00000005
PWM2OFL6                          00000006
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  11:31:51         PAGE 50


SYMBOL TABLE
  LABEL                             VALUE 

PWM2OFL7                          00000007
PWM2OFM0                          00000005
PWM2OFM1                          00000006
PWM2OFMC                          00000004
PWM2OFS0                          00000000
PWM2OFS1                          00000001
PWM2OUT                           00000005
PWM2OUT_A                         00000001
PWM2PH                            00000DA1
PWM2PHH                           00000DA2
PWM2PHH0                          00000000
PWM2PHH1                          00000001
PWM2PHH2                          00000002
PWM2PHH3                          00000003
PWM2PHH4                          00000004
PWM2PHH5                          00000005
PWM2PHH6                          00000006
PWM2PHH7                          00000007
PWM2PHIE                          00000002
PWM2PHIF                          00000002
PWM2PHL                           00000DA1
PWM2PHL0                          00000000
PWM2PHL1                          00000001
PWM2PHL2                          00000002
PWM2PHL3                          00000003
PWM2PHL4                          00000004
PWM2PHL5                          00000005
PWM2PHL6                          00000006
PWM2PHL7                          00000007
PWM2POL                           00000004
PWM2PR                            00000DA5
PWM2PRH                           00000DA6
PWM2PRH0                          00000000
PWM2PRH1                          00000001
PWM2PRH2                          00000002
PWM2PRH3                          00000003
PWM2PRH4                          00000004
PWM2PRH5                          00000005
PWM2PRH6                          00000006
PWM2PRH7                          00000007
PWM2PRIE                          00000000
PWM2PRIF                          00000000
PWM2PRL                           00000DA5
PWM2PRL0                          00000000
PWM2PRL1                          00000001
PWM2PRL2                          00000002
PWM2PRL3                          00000003
PWM2PRL4                          00000004
PWM2PRL5                          00000005
PWM2PRL6                          00000006
PWM2PRL7                          00000007
PWM2PS0                           00000004
PWM2PS1                           00000005
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  11:31:51         PAGE 51


SYMBOL TABLE
  LABEL                             VALUE 

PWM2PS2                           00000006
PWM2TMR                           00000DA9
PWM2TMRH                          00000DAA
PWM2TMRH0                         00000000
PWM2TMRH1                         00000001
PWM2TMRH2                         00000002
PWM2TMRH3                         00000003
PWM2TMRH4                         00000004
PWM2TMRH5                         00000005
PWM2TMRH6                         00000006
PWM2TMRH7                         00000007
PWM2TMRL                          00000DA9
PWM2TMRL0                         00000000
PWM2TMRL1                         00000001
PWM2TMRL2                         00000002
PWM2TMRL3                         00000003
PWM2TMRL4                         00000004
PWM2TMRL5                         00000005
PWM2TMRL6                         00000006
PWM2TMRL7                         00000007
PWM3CLKCON                        00000DBE
PWM3CON                           00000DBB
PWM3CS0                           00000000
PWM3CS1                           00000001
PWM3DC                            00000DB3
PWM3DCH                           00000DB4
PWM3DCH0                          00000000
PWM3DCH1                          00000001
PWM3DCH2                          00000002
PWM3DCH3                          00000003
PWM3DCH4                          00000004
PWM3DCH5                          00000005
PWM3DCH6                          00000006
PWM3DCH7                          00000007
PWM3DCIE                          00000001
PWM3DCIF                          00000001
PWM3DCL                           00000DB3
PWM3DCL0                          00000000
PWM3DCL1                          00000001
PWM3DCL2                          00000002
PWM3DCL3                          00000003
PWM3DCL4                          00000004
PWM3DCL5                          00000005
PWM3DCL6                          00000006
PWM3DCL7                          00000007
PWM3EN                            00000007
PWM3EN_A                          00000002
PWM3IE                            00000006
PWM3IF                            00000006
PWM3INTCON                        00000DBC
PWM3INTE                          00000DBC
PWM3INTF                          00000DBD
PWM3INTFLG                        00000DBD
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  11:31:51         PAGE 52


SYMBOL TABLE
  LABEL                             VALUE 

PWM3LD                            00000007
PWM3LDA_A                         00000002
PWM3LDCON                         00000DBF
PWM3LDM                           00000006
PWM3LDS0                          00000000
PWM3LDS1                          00000001
PWM3MODE0                         00000002
PWM3MODE1                         00000003
PWM3OE                            00000006
PWM3OF                            00000DB7
PWM3OFCON                         00000DC0
PWM3OFH                           00000DB8
PWM3OFH0                          00000000
PWM3OFH1                          00000001
PWM3OFH2                          00000002
PWM3OFH3                          00000003
PWM3OFH4                          00000004
PWM3OFH5                          00000005
PWM3OFH6                          00000006
PWM3OFH7                          00000007
PWM3OFIE                          00000003
PWM3OFIF                          00000003
PWM3OFL                           00000DB7
PWM3OFL0                          00000000
PWM3OFL1                          00000001
PWM3OFL2                          00000002
PWM3OFL3                          00000003
PWM3OFL4                          00000004
PWM3OFL5                          00000005
PWM3OFL6                          00000006
PWM3OFL7                          00000007
PWM3OFM0                          00000005
PWM3OFM1                          00000006
PWM3OFMC                          00000004
PWM3OFS0                          00000000
PWM3OFS1                          00000001
PWM3OUT                           00000005
PWM3OUT_A                         00000002
PWM3PH                            00000DB1
PWM3PHH                           00000DB2
PWM3PHH0                          00000000
PWM3PHH1                          00000001
PWM3PHH2                          00000002
PWM3PHH3                          00000003
PWM3PHH4                          00000004
PWM3PHH5                          00000005
PWM3PHH6                          00000006
PWM3PHH7                          00000007
PWM3PHIE                          00000002
PWM3PHIF                          00000002
PWM3PHL                           00000DB1
PWM3PHL0                          00000000
PWM3PHL1                          00000001
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  11:31:51         PAGE 53


SYMBOL TABLE
  LABEL                             VALUE 

PWM3PHL2                          00000002
PWM3PHL3                          00000003
PWM3PHL4                          00000004
PWM3PHL5                          00000005
PWM3PHL6                          00000006
PWM3PHL7                          00000007
PWM3POL                           00000004
PWM3PR                            00000DB5
PWM3PRH                           00000DB6
PWM3PRH0                          00000000
PWM3PRH1                          00000001
PWM3PRH2                          00000002
PWM3PRH3                          00000003
PWM3PRH4                          00000004
PWM3PRH5                          00000005
PWM3PRH6                          00000006
PWM3PRH7                          00000007
PWM3PRIE                          00000000
PWM3PRIF                          00000000
PWM3PRL                           00000DB5
PWM3PRL0                          00000000
PWM3PRL1                          00000001
PWM3PRL2                          00000002
PWM3PRL3                          00000003
PWM3PRL4                          00000004
PWM3PRL5                          00000005
PWM3PRL6                          00000006
PWM3PRL7                          00000007
PWM3PS0                           00000004
PWM3PS1                           00000005
PWM3PS2                           00000006
PWM3TMR                           00000DB9
PWM3TMRH                          00000DBA
PWM3TMRH0                         00000000
PWM3TMRH1                         00000001
PWM3TMRH2                         00000002
PWM3TMRH3                         00000003
PWM3TMRH4                         00000004
PWM3TMRH5                         00000005
PWM3TMRH6                         00000006
PWM3TMRH7                         00000007
PWM3TMRL                          00000DB9
PWM3TMRL0                         00000000
PWM3TMRL1                         00000001
PWM3TMRL2                         00000002
PWM3TMRL3                         00000003
PWM3TMRL4                         00000004
PWM3TMRL5                         00000005
PWM3TMRL6                         00000006
PWM3TMRL7                         00000007
PWMEN                             00000D8E
PWMLD                             00000D8F
PWMOUT                            00000D90
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  11:31:51         PAGE 54


SYMBOL TABLE
  LABEL                             VALUE 

RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCREG                             00000199
RCSTA                             0000019D
RD                                00000000
ROW_EMPTY                         00000000
ROW_FULL                          0000000A
RT_THR                            000000B5
RX9                               00000006
RX9D                              00000000
RXDTSEL                           00000007
S0                                0000001F
SBOREN                            00000007
SCKP                              00000004
SCS0                              00000000
SCS1                              00000001
SENDB                             00000003
SLRA0                             00000000
SLRA1                             00000001
SLRA2                             00000002
SLRA4                             00000004
SLRA5                             00000005
SLRCONA                           0000030C
SOUND_SUPPORT                     
SP                                FSR1
SPBRG                             0000019B
SPBRGH                            0000019C
SPBRGL                            0000019B
SPEN                              00000007
SPLLEN                            00000007
SREN                              00000005
STACK_SIZE                        00000020
STATUS                            00000003
STATUS_SHAD                       00000FE4
STKOVF                            00000007
STKPTR                            00000FED
STKUNF                            00000006
SWDTEN                            00000000
SYNC                              00000004
SYNC_IE                           00000006
SYNC_IF                           00000006
SYNC_OUT                          00000002
SYNC_PIE                          00000093
SYNC_PIR                          00000013
SYNC_PWMCLKCON                    00000DBE
SYNC_PWMCON                       00000DBB
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  11:31:51         PAGE 55


SYMBOL TABLE
  LABEL                             VALUE 

SYNC_PWMDCH                       00000DB4
SYNC_PWMDCL                       00000DB3
SYNC_PWMINTE                      00000DBC
SYNC_PWMINTF                      00000DBD
SYNC_PWMLDCON                     00000DBF
SYNC_PWMOF                        00000DB7
SYNC_PWMOFCON                     00000DC0
SYNC_PWMPH                        00000DB1
SYNC_PWMPRH                       00000DB6
SYNC_PWMPRL                       00000DB5
SYNC_PWMTMR                       00000DB9
T                                 INDF1
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000018
T1GCON                            00000019
T1GGO                             00000003
T1GGO_NOT_DONE                    00000003
T1GPOL                            00000006
T1GSEL                            00000003
T1GSPM                            00000004
T1GSS0                            00000000
T1GSS1                            00000001
T1GTM                             00000005
T1GVAL                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             0000001C
T2OUTPS0                          00000003
T2OUTPS1                          00000004
T2OUTPS2                          00000005
T2OUTPS3                          00000006
TC                                00000032
TCY                               000000C8
TMR0                              00000015
TMR0CS                            00000005
TMR0IE                            00000005
TMR0IF                            00000002
TMR0SE                            00000004
TMR1                              00000016
TMR1CS0                           00000006
TMR1CS1                           00000007
TMR1GE                            00000007
TMR1GIE                           00000007
TMR1GIF                           00000007
TMR1H                             00000017
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             00000016
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  11:31:51         PAGE 56


SYMBOL TABLE
  LABEL                             VALUE 

TMR1ON                            00000000
TMR2                              0000001A
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOS                               00000FEE
TOSH                              00000FEF
TOSL                              00000FEE
TRIGSEL0                          00000004
TRIGSEL1                          00000005
TRIGSEL2                          00000006
TRIGSEL3                          00000007
TRISA                             0000008C
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRMT                              00000001
TSEN                              00000005
TSRNG                             00000004
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TUN5                              00000005
TX9                               00000006
TX9D                              00000000
TXCKSEL                           00000002
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             0000019A
TXSTA                             0000019E
TX_PIR                            00000011
UP_THR                            000000C6
VDD                               00000400
VERT_DLY                          00000032
VIDEO_BUFFER                      00002030
VIDEO_LAT                         0000010C
VIDEO_OUT                         00000001
VREGCON                           00000197
VREGPM                            00000001
W                                 00000000
WDTCON                            00000097
WDTPS0                            00000001
WDTPS1                            00000002
WDTPS2                            00000003
WDTPS3                            00000004
WDTPS4                            00000005
WELL_DEPTH                        00000016
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  11:31:51         PAGE 57


SYMBOL TABLE
  LABEL                             VALUE 

WELL_WIDTH                        0000000A
WPUA                              0000020C
WPUA0                             00000000
WPUA1                             00000001
WPUA2                             00000002
WPUA3                             00000003
WPUA4                             00000004
WPUA5                             00000005
WR                                00000001
WREG                              00000009
WREG_SHAD                         00000FE5
WREN                              00000002
WRERR                             00000003
WUE                               00000001
XSIZE                             00000030
YSIZE                             00000020
Z                                 00000002
Z_SHAD                            00000002
_.org_1_006C                      0000006C
_.org_1_006E                      0000006E
_.org_1_0071                      00000071
_.org_1_00BD                      000000BD
_.org_1_00BF                      000000BF
_.org_1_00D3                      000000D3
_.org_1_00DB                      000000DB
_.org_1_026B                      0000026B
_.org_1_0279                      00000279
_.org_1_02C8                      000002C8
_.org_1_02E9                      000002E9
_.org_1_02FD                      000002FD
_.org_1_032A                      0000032A
_BOREN_NSLEEP                     00003DFF
_BOREN_OFF                        000039FF
_BOREN_ON                         00003FFF
_BOREN_SBODEN                     00003BFF
_BORV_19                          00003FFF
_BORV_HI                          00003BFF
_BORV_LO                          00003FFF
_CLKOUTEN_OFF                     00003FFF
_CLKOUTEN_ON                      000037FF
_CONFIG1                          00008007
_CONFIG2                          00008008
_CP_OFF                           00003FFF
_CP_ON                            00003F7F
_DEVID1                           00008006
_FOSC_ECH                         00003FFF
_FOSC_ECL                         00003FFD
_FOSC_ECM                         00003FFE
_FOSC_INTOSC                      00003FFC
_IDLOC0                           00008000
_IDLOC1                           00008001
_IDLOC2                           00008002
_IDLOC3                           00008003
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  11:31:51         PAGE 58


SYMBOL TABLE
  LABEL                             VALUE 

_LPBOREN_OFF                      00003FFF
_LPBOREN_ON                       000037FF
_LVP_OFF                          00001FFF
_LVP_ON                           00003FFF
_MCLRE_OFF                        00003FBF
_MCLRE_ON                         00003FFF
_PLLEN_OFF                        00003EFF
_PLLEN_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FDF
_STVREN_OFF                       00003DFF
_STVREN_ON                        00003FFF
_WDTE_NSLEEP                      00003FF7
_WDTE_OFF                         00003FE7
_WDTE_ON                          00003FFF
_WDTE_SWDTEN                      00003FEF
_WRT_ALL                          00003FFC
_WRT_BOOT                         00003FFE
_WRT_HALF                         00003FFD
_WRT_OFF                          00003FFF
__12F1572                         00000001
_stack                            00000020
accaH                             00000009
accaL                             00000008
accbH                             0000000B
accbL                             0000000A
add_points                        0000032B
angle                             00000041
buttons                           0000000C
byte_serialize                    000000CE
case                              
clear_pixel                       00000102
clear_score                       000001F9
clear_screen                      000000E3
clr00                             000002B4
cls_loop                          000000E9
col_loop                          00000202
coll_test                         0000027F
count_done                        00000244
count_full                        0000022C
count_loop                        00000230
dec_n                             
digits                            00000375
div10                             00000056
div10_loop                        00000059
drop                              
drop00                            00000212
drop1                             000001FF
drop21                            000002C1
drop_n                            
drop_tetrim                       000002F9
droppedH                          00000047
droppedL                          00000046
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  11:31:51         PAGE 59


SYMBOL TABLE
  LABEL                             VALUE 

dup                               
fall_loop                         000002E3
flags                             00000002
game_init                         000001D4
game_loop                         000002DD
game_over                         000002B0
get_flash_word                    00000124
get_nibble                        00000138
get_pixel                         00000106
gt_255                            00000028
gtimer                            00000003
hline                             000001B8
hline_done                        000001C4
inc_n                             
init                              00000332
insert                            
isr                               00000004
isr_exit                          00000052
koro                              0000025F
korobeiniki                       000003EE
lbl_lines                         0000043B
lbl_press                         00000442
lbl_score                         00000434
lcountH                           00000001
lcountL                           00000000
lit                               
main                              00000372
mask00                            000000FA
mask01                            000000FD
move_down                         00000310
move_left                         0000030B
move_right                        0000030E
new_tminos                        00000246
next_flash_word                   00000133
next_pixel                        00000213
next_row                          00000242
nibble                            0000000D
nibble_mask                       00000147
no_zero                           000001B6
over                              
pause                             
pick                              
pop                               
print_char                        00000153
print_int                         00000199
print_int00                       0000019D
print_label                       00000182
print_last                        000001B0
print_row                         0000014B
print_tetrim                      00000160
prompt                            000002D0
prt_lbl_done                      00000197
pstack_init                       
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  11:31:51         PAGE 60


SYMBOL TABLE
  LABEL                             VALUE 

push                              
q                                 0000000A
qr00                              0000021E
qr01                              00000228
query_row                         0000021C
r                                 00000000
randH                             00000006
randL                             00000005
rcount                            00000007
read_exit                         00000096
read_flash                        0000012D
read_pad                          00000064
reserve                           
rot_left                          00000301
rot_right                         00000306
row0                              00000146
row1                              00000142
row2                              00000144
row_loop                          00000200
rst                               00000010
scoreH                            00000045
scoreL                            00000044
score_update                      0000031D
set_pixel                         000000FF
set_pixel_ptr                     000000EE
set_yptr                          000000B0
start_timer                       
t0                                0000000E
t1                                0000000F
task0                             0000003D
task1                             00000046
task2                             0000004D
tasks                             00000033
tcyDelay                          
tetrim                            00000040
tetriminos                        000003A1
tetris                            000002D9
tone                              00000099
tone_pr                           000003C1
tone_tmr                          00000004
try_a                             00000073
try_b                             00000079
try_button                        
try_dn                            00000091
try_lt                            0000008B
try_rt                            0000007F
try_up                            00000085
tx                                00000042
ty                                00000043
undo_drop_tetrim                  00000291
undo_move_left                    0000029D
undo_move_right                   0000029B
undo_rot_left                     00000297
MPASM 5.70  /HOME/JACQUES/MPLABXPROJECTS/TET   12-17-2016  11:31:51         PAGE 61


SYMBOL TABLE
  LABEL                             VALUE 

undo_rot_right                    00000293
update_display                    0000029F
video_buffer_b0                   00000050
video_buffer_b1                   000000A0
video_buffer_b2                   00000120
video_serialize                   000000BC
vline                             000001C6
vline_done                        000001D2
vsync_end                         00000020
vsync_start                       00000018
wait_end                          0000027B
wait_sound                        
wait_start                        0000025A
wait_timer                        
xor_pixel                         00000109
xor_row                           0000010F
xor_row02                         0000011E
xor_row_done                      00000122

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,   126 suppressed

